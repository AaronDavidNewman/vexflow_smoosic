{"version":3,"file":"vexflow-core-min.js","mappings":"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ACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,EACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAM,CACJ,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,OAAU,EACV,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,iBAAoB,EACpB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,GACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,GACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,OAAU,GACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,iBAAoB,GACpB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,kBACT,MAAS,IACT,GAAM,kBACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,KAAM,CACJ,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,OAAU,GACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,KACN,iBAAoB,GACpB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,OAAU,EACV,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,OAAU,IACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,iBAAoB,IACpB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,OAAU,GACV,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,iBAAoB,GACpB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,EACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,GAAM,EACN,gBAAmB,EACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,GAAM,EACN,gBAAmB,EACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,GAAM,EACN,gBAAmB,EACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,GAAM,EACN,gBAAmB,EACnB,aAAgB,MAIpB,WAAc,kBACd,WAAc,IACd,YAAe,4B,GC/1BJ,CACXhkC,KAAM,cACN6yD,OAAO,EACP7uB,QAAQ,GACR,OAAU,CACR,IAAK,CACH,MAAS,EACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,EACnB,aAAgB,KAElB,EAAK,CACH,MAAS,IACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,MAElB,EAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,EAAK,CACH,MAAS,iBACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,kBACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,iBACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,IACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,iBAAoB,GACpB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,IAAM,CACJ,MAAS,IACT,MAAS,IACT,MAAS,KACT,MAAS,KACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,kBACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,KACT,MAAS,KACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,KACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,IACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,EACT,MAAS,IACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,EACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,EACnB,aAAgB,KAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,KACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,IACT,MAAS,IACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,MAAS,GACT,MAAS,IACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,MAElB,IAAK,CACH,MAAS,kBACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,iBACT,MAAS,mBACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,IACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,IAAK,CACH,MAAS,IACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,KAElB,KAAM,CACJ,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,IACT,MAAS,KACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,IACT,MAAS,KACT,OAAU,IACV,MAAS,EACT,GAAM,IACN,gBAAmB,IACnB,aAAgB,MAElB,IAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,KACT,MAAS,KACT,GAAM,IACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,OAAU,GACV,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,iBAAoB,GACpB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,OAAU,GACV,MAAS,IACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,iBAAoB,GACpB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,IACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,IACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,KAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,GACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,KACT,OAAU,IACV,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAgB,MAElB,EAAK,CACH,MAAS,GACT,MAAS,IACT,MAAS,EACT,MAAS,KACT,GAAM,KACN,gBAAmB,GACnB,aAAg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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/runtime/load script","webpack://Vex/./node_modules/tslib/tslib.es6.js","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/fonts/loadDynamic.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/fonts/petalumascript_textmetrics.ts","webpack://Vex/./src/fonts/robotoslab_textmetrics.ts","webpack://Vex/./src/textfont.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/vex.ts","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/ensure chunk","webpack://Vex/webpack/runtime/get javascript chunk filename","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/webpack/runtime/publicPath","webpack://Vex/webpack/runtime/jsonp chunk loading","webpack://Vex/","webpack://Vex/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(this, function() {\nreturn ","var inProgress = {};\nvar dataWebpackPrefix = \"Vex:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RenderContext } from './types/common';\n\n/** `RuntimError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n  code: string;\n  constructor(code: string, message?: string) {\n    super('[RuntimeError] ' + code + ':' + message);\n    this.code = code;\n  }\n}\n\n/** Check that `x` is of type `T` and not `undefined`. */\nexport function check<T>(x?: T): T {\n  if (x === undefined) {\n    throw new RuntimeError('undefined');\n  }\n  return x;\n}\n\n/** Default log function sends all arguments to console. */\nexport function log(\n  block: string,\n  // eslint-disable-next-line\n  ...args: any[]): void {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n}\n\n/** Dump warning to console. */\nexport function warn(\n  // eslint-disable-next-line\n  ...args: any[]): void {\n  const line = args.join(' ');\n  const err = new Error();\n  window.console.log('Warning: ', line, err.stack);\n}\n\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x: number, n: number): number {\n  return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a: number, b: number): number {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = roundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n}\n\n/**\n * Draw a tiny dot marker on the specified canvas. A great debugging aid.\n * @param ctx canvas context\n * @param x dot x coordinate\n * @param y dot y coordinate\n */\nexport function drawDot(ctx: RenderContext, x: number, y: number, color = '#55'): void {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n}\n\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text: string): string {\n  return `vf-${text}`;\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author zz85\n// @author incompleteopus (modifications)\n// MIT License\n\nimport { RuntimeError } from './util';\n\n/** Fraction represents a rational number. */\nexport class Fraction {\n  numerator: number = 1;\n\n  denominator: number = 1;\n\n  // Cached objects for comparisons\n  private static __staticFractionA = new Fraction();\n\n  private static __staticFractionB = new Fraction();\n\n  private static __staticFractionTmp = new Fraction();\n\n  /**\n   * GCD: Greatest common divisor using Euclidean algorithm.\n   */\n  static GCD(a: number, b: number): number {\n    if (typeof a !== 'number' || Number.isNaN(a) || a === 0 || typeof b !== 'number' || Number.isNaN(b) || b === 0) {\n      throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple.\n   */\n  static LCM(a: number, b: number): number {\n    return (a * b) / Fraction.GCD(a, b);\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers.\n   */\n  static LCMM(\n    // eslint-disable-next-line\n    args: any): number {\n    if (args.length === 0) {\n      return 0;\n    }\n    if (args.length === 1) {\n      return args[0];\n    }\n    if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    }\n    const arg0 = args[0];\n    args.shift();\n    return Fraction.LCM(arg0, Fraction.LCMM(args));\n  }\n\n  /** Construct providing numerator and denominator. */\n  constructor(numerator?: number, denominator?: number) {\n    this.set(numerator, denominator);\n  }\n\n  /** Set numerator and denominator. */\n  set(numerator: number = 1, denominator: number = 1): this {\n    this.numerator = numerator;\n    this.denominator = denominator;\n    return this;\n  }\n\n  /** Return the value of the fraction. */\n  value(): number {\n    return this.numerator / this.denominator;\n  }\n\n  /** Simplify numerator and denominator using GCD. */\n  simplify(): this {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n\n  /** Add value of another fraction. */\n  add(param1: Fraction | number = 0, param2: number = 1): this {\n    let otherNumerator: number;\n    let otherDenominator: number;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      otherNumerator = param1;\n      otherDenominator = param2;\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n\n  /** Substract value of another fraction. */\n  subtract(param1: Fraction | number = 0, param2: number = 1): this {\n    let otherNumerator: number;\n    let otherDenominator: number;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      otherNumerator = param1;\n      otherDenominator = param2;\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n\n  /** Multiply by value of another fraction. */\n  multiply(param1: Fraction | number = 1, param2: number = 1): this {\n    let otherNumerator: number;\n    let otherDenominator: number;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      otherNumerator = param1;\n      otherDenominator = param2;\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n\n  /** Divide by value of another Fraction. */\n  divide(param1: Fraction | number = 1, param2: number = 1): this {\n    let otherNumerator: number;\n    let otherDenominator: number;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      otherNumerator = param1;\n      otherDenominator = param2;\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  /** Simplify both sides and check if they are equal. */\n  equals(compare: Fraction | number): boolean {\n    const a = Fraction.__staticFractionA.copy(compare).simplify();\n    const b = Fraction.__staticFractionB.copy(this).simplify();\n\n    return a.numerator === b.numerator && a.denominator === b.denominator;\n  }\n\n  /** Greater than operator. */\n  greaterThan(compare: Fraction | number): boolean {\n    const a = Fraction.__staticFractionB.copy(this);\n    a.subtract(compare);\n    return a.numerator > 0;\n  }\n\n  /** Greater than or equals operator. */\n  greaterThanEquals(compare: Fraction | number): boolean {\n    const a = Fraction.__staticFractionB.copy(this);\n    a.subtract(compare);\n    return a.numerator >= 0;\n  }\n\n  /** Less than operator. */\n  lessThan(compare: Fraction | number): boolean {\n    return !this.greaterThanEquals(compare);\n  }\n\n  /** Less than or equals operator. */\n  lessThanEquals(compare: Fraction | number): boolean {\n    return !this.greaterThan(compare);\n  }\n\n  /** Return a new copy with current values. */\n  clone(): Fraction {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  /** Copy value of another fraction. */\n  copy(copy: Fraction | number): this {\n    if (typeof copy === 'number') {\n      return this.set(copy || 0, 1);\n    }\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  /** Return the integer component (eg. 5/2 => 2). */\n  quotient(): number {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  /** Return the remainder component (eg. 5/2 => 1). */\n  remainder(): number {\n    return this.numerator % this.denominator;\n  }\n\n  /** Calculate absolute value. */\n  makeAbs(): this {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  /** Return a raw string representation (eg. \"5/2\"). */\n  toString(): string {\n    return `${this.numerator}/${this.denominator}`;\n  }\n\n  /** Return a simplified string respresentation. */\n  toSimplifiedString(): string {\n    return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n  }\n\n  /** Return string representation in mixed form. */\n  toMixedString(): string {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__staticFractionTmp.copy(this);\n\n    if (q < 0) {\n      f.makeAbs();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ` ${f.toSimplifiedString()}`;\n      }\n    } else if (f.numerator === 0) {\n      s = '0';\n    } else {\n      s = f.toSimplifiedString();\n    }\n\n    return s;\n  }\n\n  /** Parse a fraction string. */\n  parse(str: string): this {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = i[1] ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\n\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n  // [attribute_name][attribute_value][element_id] => Element\n  [key: string]: { [key: string]: { [key: string]: Element } };\n  constructor() {\n    this.id = {};\n    this.type = {};\n    this.class = {};\n  }\n}\n\ninterface RegistryUpdate {\n  id: string;\n  name: string;\n  value: string | undefined;\n  oldValue: string | undefined;\n}\n\nexport class Registry {\n  private static defaultRegistry?: Registry;\n\n  static getDefaultRegistry(): Registry | undefined {\n    return Registry.defaultRegistry;\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry: Registry): void {\n    Registry.defaultRegistry = registry;\n  }\n\n  static disableDefaultRegistry(): void {\n    Registry.defaultRegistry = undefined;\n  }\n\n  protected index: Index;\n\n  constructor() {\n    this.index = new Index();\n  }\n\n  clear(): this {\n    this.index = new Index();\n    return this;\n  }\n\n  setIndexValue(name: string, value: string, id: string, elem: Element): void {\n    const index = this.index;\n    if (!index[name][value]) {\n      index[name][value] = {};\n    }\n    index[name][value][id] = elem;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }: RegistryUpdate): void {\n    const elem = this.getElementById(id);\n    if (oldValue !== undefined && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value && elem) {\n      this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem: Element, id?: string): this {\n    id = id || elem.getAttribute('id');\n    if (!id) {\n      throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    this.setIndexValue('id', id, id, elem);\n    this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id: string): Element | undefined {\n    return this.index.id?.[id]?.[id]; // return undefined if the id is not found.\n  }\n\n  getElementsByAttribute(attribute: string, value: string): Element[] {\n    const index_attr = this.index[attribute];\n    if (index_attr) {\n      const index_attr_val = index_attr[value];\n      if (index_attr_val) {\n        const keys = Object.keys(index_attr_val);\n        return keys.map((k) => index_attr_val[k]);\n      }\n    }\n    return [];\n  }\n\n  getElementsByType(type: string): Element[] {\n    return this.getElementsByAttribute('type', type);\n  }\n\n  getElementsByClass(className: string): Element[] {\n    return this.getElementsByAttribute('class', className);\n  }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate(info: RegistryUpdate): this {\n    const allowedNames = ['id', 'type', 'class'];\n    if (allowedNames.includes(info.name)) {\n      this.updateIndex(info);\n    }\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\n\nimport { RuntimeError } from './util';\nimport { Registry } from './registry';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './font';\nimport { RenderContext } from './types/common';\nimport { Flow } from './flow';\n\n/** Element attributes. */\nexport interface ElementAttributes {\n  // eslint-disable-next-line\n  [name: string]: any;\n  id: string;\n  // eslint-disable-next-line\n  el?: any;\n  type: string;\n  classes: Record<string, boolean>;\n}\n\n/** Element style */\nexport interface ElementStyle {\n  shadowColor?: string;\n  shadowBlur?: number;\n  fillStyle?: string;\n  strokeStyle?: string;\n  lineWidth?: number;\n}\n\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n */\nexport abstract class Element {\n  protected static ID: number = 1000;\n  private context?: RenderContext;\n  protected rendered: boolean;\n  protected style?: ElementStyle;\n  private attrs: ElementAttributes;\n  protected boundingBox?: BoundingBox;\n  protected fontStack: Font[];\n  protected musicFont: Font;\n  protected registry?: Registry;\n\n  protected static newID(): string {\n    return `auto${Element.ID++}`;\n  }\n\n  /** Constructor. */\n  constructor({ type }: { type?: string } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: undefined,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.rendered = false;\n\n    this.fontStack = Flow.DEFAULT_FONT_STACK;\n    this.musicFont = Flow.DEFAULT_FONT_STACK[0];\n\n    // If a default registry exist, then register with it right away.\n    Registry.getDefaultRegistry()?.register(this);\n  }\n\n  /** Set music fonts stack. */\n  setFontStack(fontStack: Font[]): this {\n    this.fontStack = fontStack;\n    this.musicFont = fontStack[0];\n    return this;\n  }\n\n  /** Get music fonts stack. */\n  getFontStack(): Font[] {\n    return this.fontStack;\n  }\n\n  /** Set the draw style of a stemmable note. */\n  setStyle(style: ElementStyle): this {\n    this.style = style;\n    return this;\n  }\n\n  /** Get the draw style of a stemmable note. */\n  getStyle(): ElementStyle | undefined {\n    return this.style;\n  }\n\n  /** Apply current style to Canvas `context`. */\n  applyStyle(\n    context: RenderContext | undefined = this.context,\n    style: ElementStyle | undefined = this.getStyle()\n  ): this {\n    if (!style) return this;\n    if (!context) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  /** Restore style of `context`. */\n  restoreStyle(\n    context: RenderContext | undefined = this.context,\n    style: ElementStyle | undefined = this.getStyle()\n  ): this {\n    if (!style) return this;\n    if (!context) return this;\n    context.restore();\n    return this;\n  }\n\n  /** Draw with style of an element. */\n  drawWithStyle(): void {\n    this.checkContext();\n    this.applyStyle();\n    this.draw();\n    this.restoreStyle();\n  }\n\n  /** Draw an element. */\n  // eslint-disable-next-line\n  abstract draw(...args: any[]): void;\n\n  /** Check if it has a class label (An element can have multiple class labels).  */\n  hasClass(className: string): boolean {\n    return this.attrs.classes[className] === true;\n  }\n\n  /** Add a class label (An element can have multiple class labels).  */\n  addClass(className: string): this {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.attrs.id,\n        name: 'class',\n        value: className,\n        oldValue: undefined,\n      });\n    }\n    return this;\n  }\n\n  /** Remove a class label (An element can have multiple class labels).  */\n  removeClass(className: string): this {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.attrs.id,\n        name: 'class',\n        value: undefined,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  /** Call back from registry after the element is registered. */\n  onRegister(registry: Registry): this {\n    this.registry = registry;\n    return this;\n  }\n\n  /** Return the rendered status. */\n  isRendered(): boolean {\n    return this.rendered;\n  }\n\n  /** Set the rendered status. */\n  setRendered(rendered = true): this {\n    this.rendered = rendered;\n    return this;\n  }\n\n  /** Return the element attributes. */\n  getAttributes(): ElementAttributes {\n    return this.attrs;\n  }\n\n  /** Return an attribute. */\n  // eslint-disable-next-line\n  getAttribute(name: string): any {\n    return this.attrs[name];\n  }\n\n  /** Set an attribute. */\n  // eslint-disable-next-line\n  setAttribute(name: string, value: any): this {\n    const oldID = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id: oldID, name, value, oldValue });\n    }\n    return this;\n  }\n\n  /** Return the context. */\n  getContext(): RenderContext | undefined {\n    return this.context;\n  }\n\n  /** Set the context. */\n  setContext(context?: RenderContext): this {\n    this.context = context;\n    return this;\n  }\n\n  /** Get the boundingBox. */\n  getBoundingBox(): BoundingBox | undefined {\n    return this.boundingBox;\n  }\n\n  /** Validate and return the context. */\n  checkContext(): RenderContext {\n    if (!this.context) {\n      throw new RuntimeError('NoContext', 'No rendering context attached to instance.');\n    }\n    return this.context;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n  protected x1: number;\n  protected y1: number;\n  protected x2: number;\n  protected y2: number;\n\n  constructor(x1?: number, y1?: number, x2?: number, y2?: number) {\n    // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  /** Get calculated X1. */\n  getX1(): number {\n    return this.x1;\n  }\n\n  /** Get calculated Y1. */\n  getY1(): number {\n    return this.y1;\n  }\n\n  /** Get calculated width. */\n  width(): number {\n    return this.x2 - this.x1;\n  }\n\n  /** Get calculated height. */\n  height(): number {\n    return this.y2 - this.y1;\n  }\n\n  /** Do nothing. */\n  noOp(): void {\n    // do nothing\n  }\n\n  /** Add point to BoundingBox. */\n  addPoint(x: number | undefined, y: number | undefined): void {\n    if (x != undefined) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != undefined) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  /** Add X to BoundingBox. */\n  addX(x: number): void {\n    this.addPoint(x, undefined);\n  }\n\n  /** Add Y to BoundingBox. */\n  addY(y: number): void {\n    this.addPoint(undefined, y);\n  }\n\n  /** Add quadratic curve to BoundingBox. */\n  addQuadraticCurve(p0x: number, p0y: number, p1x: number, p1y: number, p2x: number, p2y: number): void {\n    const cp1x = p0x + (2 / 3) * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + (2 / 3) * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + (1 / 3) * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + (1 / 3) * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  /** Add bezier curve to BoundingBox. */\n  addBezierCurve(\n    p0x: number,\n    p0y: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number\n  ): void {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t: number, i: number) =>\n      Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RenderContext } from './types/common';\n\n/** Bounding boxes for interactive notation */\n\nexport class BoundingBox {\n  protected x: number;\n  protected y: number;\n  protected w: number;\n  protected h: number;\n\n  /**\n   * Create a new copy.\n   */\n  static copy(that: BoundingBox): BoundingBox {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x: number, y: number, w: number, h: number) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n\n  /** Get x position. */\n  getX(): number {\n    return this.x;\n  }\n\n  /** Get y position. */\n  getY(): number {\n    return this.y;\n  }\n\n  /** Get width. */\n  getW(): number {\n    return this.w;\n  }\n\n  /** Get height. */\n  getH(): number {\n    return this.h;\n  }\n\n  /** Set x position. */\n  setX(x: number): this {\n    this.x = x;\n    return this;\n  }\n\n  /** Set y position. */\n  setY(y: number): this {\n    this.y = y;\n    return this;\n  }\n\n  /** Set width. */\n  setW(w: number): this {\n    this.w = w;\n    return this;\n  }\n\n  /** Set height. */\n  setH(h: number): this {\n    this.h = h;\n    return this;\n  }\n\n  /** Move to position. */\n  move(x: number, y: number): this {\n    this.x += x;\n    this.y += y;\n    return this;\n  }\n\n  /** Clone. */\n  clone(): BoundingBox {\n    return BoundingBox.copy(this);\n  }\n\n  /**\n   * Merge my box with given box. Creates a bigger bounding box unless\n   * the given box is contained in this one.\n   */\n  mergeWith(boundingBox: BoundingBox, ctx?: RenderContext): this {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  /**\n   * Render the BoundingBox.\n   * @param ctx rendering context\n   * @param x horizontal shift\n   * @param y vertical shift\n   */\n  draw(ctx: RenderContext, x?: number, y?: number): void {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font, FontGlyph } from './font';\nimport { RenderContext, TypeProps } from './types/common';\nimport { Stave } from './stave';\nimport { Stem } from './stem';\nimport { Flow } from './flow';\n\nexport interface DurationCode {\n  common: TypeProps;\n  type: Record<string, TypeProps>;\n}\n\nexport interface GlyphProps {\n  code_head: string;\n  dot_shiftY: number;\n  position: string;\n  rest: boolean;\n  line_below: number;\n  line_above: number;\n  stem_up_extension: number;\n  stem_down_extension: number;\n  stem: Stem;\n  code: string;\n  code_flag_upstem: string;\n  code_flag_downstem: string;\n  flag: boolean;\n  width: number;\n  text: string;\n  tabnote_stem_down_extension: number;\n  tabnote_stem_up_extension: number;\n  beam_count: number;\n  duration_codes: Record<string, DurationCode>;\n  validTypes: Record<string, string>;\n  shift_y: number;\n\n  getWidth(a?: number): number;\n\n  getMetrics(): GlyphMetrics;\n}\nexport interface GlyphOptions {\n  fontStack: Font[];\n  category?: string;\n}\nexport interface GlyphMetrics {\n  width: number;\n  height: number;\n  x_min: number;\n  x_max: number;\n  x_shift: number;\n  y_shift: number;\n  scale: number;\n  ha: number;\n  outline: string[];\n  font: Font;\n}\n\nfunction processOutline(\n  outline: string[],\n  originX: number,\n  originY: number,\n  scaleX: number,\n  scaleY: number,\n  // eslint-disable-next-line\n  outlineFns: Record<string, (...args: any[]) => void>\n): void {\n  let command: string;\n  let x: number;\n  let y: number;\n  let i = 0;\n\n  function nextX(): number {\n    return originX + parseInt(outline[i++]) * scaleX;\n  }\n  function nextY(): number {\n    return originY + parseInt(outline[i++]) * scaleY;\n  }\n  // eslint-disable-next-line\n  function doOutline(command: string, ...args: any[]) {\n    outlineFns[command](...args);\n  }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        doOutline(command, nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        doOutline(command, nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        doOutline(command, nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      case 'z':\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  bbox: BoundingBox = new BoundingBox(0, 0, 0, 0);\n  code: string;\n  // metrics is initialised in the constructor by either setOptions or reset\n  // eslint-disable-next-line\n  metrics!: GlyphMetrics;\n  topGlyphs: Glyph[] = [];\n  botGlyphs: Glyph[] = [];\n\n  protected options: GlyphOptions;\n  protected originShift: { x: number; y: number };\n  protected x_shift: number;\n  protected y_shift: number;\n  scale: number = 1;\n  protected point: number;\n  protected stave?: Stave;\n\n  // eslint-disable-next-line\n  draw() {}\n\n  /*\n    Static methods used to implement loading and rendering glyphs.\n\n    Below categoryPath can be any metric path under 'glyphs', so stem.up would respolve\n    to glyphs.stem.up.shifX, glyphs.stem.up.shiftY, etc.\n  */\n  static lookupFontMetric({\n    font,\n    category,\n    code,\n    key,\n    defaultValue,\n  }: {\n    font: Font;\n    category: string;\n    code: string;\n    key: string;\n    defaultValue: number;\n  }): number {\n    let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n    if (value === undefined) {\n      value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n    }\n    return value;\n  }\n\n  static lookupGlyph(fontStack: Font[], code: string): { font: Font; glyph: FontGlyph } {\n    if (!fontStack) {\n      throw new RuntimeError('BAD_FONTSTACK', 'Font stack is misconfigured');\n    }\n\n    let glyph: FontGlyph;\n    let font: Font;\n    for (let i = 0; i < fontStack.length; i++) {\n      font = fontStack[i];\n      glyph = font.getGlyphs()[code];\n      if (glyph) return { glyph, font };\n    }\n\n    throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n  }\n\n  static loadMetrics(fontStack: Font[], code: string, category?: string): GlyphMetrics {\n    const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n\n    let x_shift = 0;\n    let y_shift = 0;\n    let scale = 1;\n    if (category && font) {\n      x_shift = Glyph.lookupFontMetric({ font, category, code, key: 'shiftX', defaultValue: 0 });\n      y_shift = Glyph.lookupFontMetric({ font, category, code, key: 'shiftY', defaultValue: 0 });\n      scale = Glyph.lookupFontMetric({ font, category, code, key: 'scale', defaultValue: 1 });\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline: string[];\n\n    const CACHE = true;\n    if (glyph.o) {\n      if (CACHE) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        x_shift,\n        y_shift,\n        scale,\n        ha,\n        outline,\n        font,\n        width: x_max - x_min,\n        height: ha,\n      };\n    } else {\n      throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   */\n  static renderGlyph(\n    /** The canvas context. */\n    ctx: RenderContext,\n    /** X coordinate. */\n    x_pos: number,\n    /** Y coordinate. */\n    y_pos: number,\n    /** The point size to use. */\n    point: number,\n    /** The glyph code in font.getGlyphs() */\n    val: string,\n    options?: { font?: Font; category: string }\n  ): GlyphMetrics {\n    const params = {\n      fontStack: Flow.DEFAULT_FONT_STACK,\n      ...options,\n    };\n    const metrics = Glyph.loadMetrics(params.fontStack, val, params.category);\n    if (params.category && metrics.font) {\n      point = Glyph.lookupFontMetric({\n        font: metrics.font,\n        category: params.category,\n        code: val,\n        key: 'point',\n        defaultValue: point,\n      });\n    }\n\n    const scale = (point * 72.0) / (metrics.font.getResolution() * 100.0);\n\n    Glyph.renderOutline(ctx, metrics.outline, scale * metrics.scale, x_pos + metrics.x_shift, y_pos + metrics.y_shift);\n    return metrics;\n  }\n\n  static renderOutline(ctx: RenderContext, outline: string[], scale: number, x_pos: number, y_pos: number): void {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n      // z: ctx.fill.bind(ctx), // ignored\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline: string[], scale: number, x_pos: number, y_pos: number): BoundingBox {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n      z: bboxComp.noOp.bind(bboxComp),\n    });\n\n    return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code: string, point: number, options?: { category: string }) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      fontStack: this.getFontStack(),\n    };\n\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  getCode(): string {\n    return this.code;\n  }\n\n  // eslint-disable-next-line\n  setOptions(options: any): void {\n    this.options = { ...this.options, ...options };\n    this.reset();\n  }\n\n  setPoint(point: number): this {\n    this.point = point;\n    return this;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  setXShift(x_shift: number): this {\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  setYShift(y_shift: number): this {\n    this.y_shift = y_shift;\n    return this;\n  }\n\n  reset(): void {\n    this.metrics = Glyph.loadMetrics(this.options.fontStack, this.code, this.options.category);\n    // Override point from metrics file\n    if (this.options.category) {\n      this.point = Glyph.lookupFontMetric({\n        category: this.options.category,\n        font: this.metrics.font,\n        code: this.code,\n        key: 'point',\n        defaultValue: this.point,\n      });\n    }\n\n    this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale * this.metrics.scale,\n      this.metrics.x_shift,\n      this.metrics.y_shift\n    );\n  }\n\n  getMetrics(): GlyphMetrics {\n    if (!this.metrics) {\n      throw new RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale * this.metrics.scale,\n      x_max: this.metrics.x_max * this.scale * this.metrics.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n      scale: this.scale * this.metrics.scale,\n      x_shift: this.metrics.x_shift,\n      y_shift: this.metrics.y_shift,\n      outline: this.metrics.outline,\n      font: this.metrics.font,\n      ha: this.metrics.ha,\n    };\n  }\n\n  setOriginX(x: number): void {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y: number): void {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x: number, y: number): void {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx: RenderContext, x: number, y: number): void {\n    if (!this.metrics) {\n      throw new RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale * this.metrics.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(\n      ctx,\n      outline,\n      scale,\n      x + this.originShift.x + this.metrics.x_shift,\n      y + this.originShift.y + this.metrics.y_shift\n    );\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x: number): void {\n    const context = this.checkContext();\n\n    if (!this.metrics) {\n      throw new RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale * this.metrics.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(\n      context,\n      outline,\n      scale,\n      x + this.x_shift + this.metrics.x_shift,\n      this.stave.getYForGlyphs() + this.y_shift + this.metrics.y_shift\n    );\n    this.restoreStyle();\n  }\n}\n","import { RuntimeError } from './util';\nimport { loadBravura } from '@bravura';\nimport { loadGonville } from '@gonville';\nimport { loadPetaluma } from '@petaluma';\nimport { loadCustom } from '@custom';\n\nexport interface FontData {\n  glyphs: Record<string, FontGlyph>;\n  fontFamily?: string;\n  resolution: number;\n  generatedOn?: string;\n}\n\nexport interface FontDataMetrics {\n  fontData?: FontData;\n  // eslint-disable-next-line\n  metrics?: Record<string, any>;\n}\n\nexport interface FontGlyph {\n  x_min: number;\n  x_max: number;\n  y_min?: number;\n  y_max?: number;\n  ha: number;\n  o: string;\n  leftSideBearing?: number;\n  advanceWidth?: number;\n  cached_outline?: string[];\n}\n\nclass Font {\n  protected name: string;\n  protected fontDataMetrics: FontDataMetrics;\n\n  // eslint-disable-next-line\n  constructor(name: string, metrics?: Record<string, any>, fontData?: FontData) {\n    this.name = name;\n    this.fontDataMetrics = { fontData: undefined, metrics: undefined };\n    switch (name) {\n      case 'Bravura':\n        loadBravura(this.fontDataMetrics);\n        break;\n      case 'Custom':\n        loadCustom(this.fontDataMetrics);\n        break;\n      case 'Gonville':\n        loadGonville(this.fontDataMetrics);\n        break;\n      case 'Petaluma':\n        loadPetaluma(this.fontDataMetrics);\n        break;\n      default:\n        this.fontDataMetrics.metrics = metrics;\n        this.fontDataMetrics.fontData = fontData;\n    }\n  }\n\n  getName(): string {\n    return this.name;\n  }\n\n  getResolution(): number {\n    if (!this.fontDataMetrics.fontData) throw new RuntimeError('Missing metrics or font data');\n    return this.fontDataMetrics.fontData.resolution;\n  }\n\n  // eslint-disable-next-line\n  getMetrics(): Record<string, any> {\n    if (!this.fontDataMetrics.metrics) throw new RuntimeError('Missing metrics or font data');\n    return this.fontDataMetrics.metrics;\n  }\n\n  // eslint-disable-next-line\n  lookupMetric(key: string, defaultValue?: Record<string, any> | number): any {\n    if (!this.fontDataMetrics.metrics) throw new RuntimeError('Missing metrics or font data');\n    const parts = key.split('.');\n    let val = this.fontDataMetrics.metrics;\n    // console.log('lookupMetric:', key);\n    for (let i = 0; i < parts.length; i++) {\n      if (val[parts[i]] === undefined) {\n        return defaultValue;\n      }\n      val = val[parts[i]];\n    }\n\n    // console.log('found:', key, val);\n    return val;\n  }\n\n  getFontData(): FontData {\n    if (!this.fontDataMetrics.fontData) throw new RuntimeError('Missing metrics or font data');\n    return this.fontDataMetrics.fontData;\n  }\n\n  getGlyphs(): Record<string, FontGlyph> {\n    if (!this.fontDataMetrics.fontData) throw new RuntimeError('Missing metrics or font data');\n    return this.fontDataMetrics.fontData.glyphs;\n  }\n}\n\nconst Fonts = {\n  Bravura: (): Font => {\n    return new Font('Bravura');\n  },\n  Gonville: (): Font => {\n    return new Font('Gonville');\n  },\n  Leland: (): Font => {\n    return new Font('Leland');\n  },\n  Petaluma: (): Font => {\n    return new Font('Petaluma');\n  },\n  Custom: (): Font => {\n    return new Font('Custom');\n  },\n};\n\nexport { Fonts, Font };\n","import { FontDataMetrics } from '../font';\nexport async function loadBravura(fontDataMetrics: FontDataMetrics) {\n  const _ = await import(/* webpackChunkName: \"bravura\" */ '../fonts/bravura');\n  fontDataMetrics.fontData = _.default.fontData;\n  fontDataMetrics.metrics = _.default.metrics;\n}\n\nexport async function loadCustom(fontDataMetrics: FontDataMetrics) {\n  const _ = await import(/* webpackChunkName: \"custom\" */ '../fonts/custom');\n  fontDataMetrics.fontData = _.default.fontData;\n  fontDataMetrics.metrics = _.default.metrics;\n}\n\nexport async function loadGonville(fontDataMetrics: FontDataMetrics) {\n  const _ = await import(/* webpackChunkName: \"gonville\" */ '../fonts/gonville');\n  fontDataMetrics.fontData = _.default.fontData;\n  fontDataMetrics.metrics = _.default.metrics;\n}\n\nexport async function loadPetaluma(fontDataMetrics: FontDataMetrics) {\n  const _ = await import(/* webpackChunkName: \"petaluma\" */ '../fonts/petaluma');\n  fontDataMetrics.fontData = _.default.fontData;\n  fontDataMetrics.metrics = _.default.metrics;\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { RuntimeError } from './util';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { ArticulationStruct } from './articulation';\n\nimport { Fonts } from './font';\n\n// Custom note heads\nconst customNoteHeads: Record<string, { code: string }> = {\n  /* Diamond */\n  D0: { code: 'noteheadDiamondWhole' },\n  D1: { code: 'noteheadDiamondHalf' },\n  D2: { code: 'noteheadDiamondBlack' },\n  D3: { code: 'noteheadDiamondBlack' },\n\n  /* Triangle */\n  T0: { code: 'noteheadTriangleUpWhole' },\n  T1: { code: 'noteheadTriangleUpHalf' },\n  T2: { code: 'noteheadTriangleUpBlack' },\n  T3: { code: 'noteheadTriangleUpBlack' },\n\n  /* Cross */\n  X0: { code: 'noteheadXWhole' },\n  X1: { code: 'noteheadXHalf' },\n  X2: { code: 'noteheadXBlack' },\n  X3: { code: 'noteheadCircleX' },\n\n  /* Square */\n  S1: { code: 'noteheadSquareWhite' },\n  S2: { code: 'noteheadSquareBlack' },\n\n  /* Rectangle */\n  R1: { code: 'vexNoteHeadRectWhite' }, // no smufl code\n  R2: { code: 'vexNoteHeadRectBlack' }, // no smufl code\n};\n\nconst RESOLUTION = 16384;\n\nconst durations: Record<string, number> = {\n  '1/2': RESOLUTION * 2,\n  1: RESOLUTION / 1,\n  2: RESOLUTION / 2,\n  4: RESOLUTION / 4,\n  8: RESOLUTION / 8,\n  16: RESOLUTION / 16,\n  32: RESOLUTION / 32,\n  64: RESOLUTION / 64,\n  128: RESOLUTION / 128,\n  256: RESOLUTION / 256,\n};\n\nconst accidentals: Record<string, { code: string; parenRightPaddingAdjustment: number }> = {\n  '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n  '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n  b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n  bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n  n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n  '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n  '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n  db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n  d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n  '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n  '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n  '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n  bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n  bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n  o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n  k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n  bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'vexAccidentalMicrotonal2', parenRightPaddingAdjustment: -1 },\n  ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n  afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n  accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n  accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n  accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n  accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n  accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n  accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n  accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n  accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n  accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n  accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n  accidentalNarrowReversedFlatAndFlat: {\n    code: 'accidentalNarrowReversedFlatAndFlat',\n    parenRightPaddingAdjustment: -1,\n  },\n  accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n  accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n\nexport const Tables = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: RESOLUTION,\n\n  /**\n   * Customize this to choose a different music font.\n   * For example: Vex.Flow.DEFAULT_FONT_STACK = [Fonts.Petaluma(), Fonts.Custom()];\n   */\n  DEFAULT_FONT_STACK: [Fonts.Bravura(), Fonts.Gonville(), Fonts.Custom()],\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n  STAVE_LINE_DISTANCE: 10,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n\n  clefProperties: (clef: string): { line_shift: number } => {\n    const values: Record<string, { line_shift: number }> = {\n      treble: { line_shift: 0 },\n      bass: { line_shift: 6 },\n      tenor: { line_shift: 4 },\n      alto: { line_shift: 3 },\n      soprano: { line_shift: 1 },\n      percussion: { line_shift: 0 },\n      'mezzo-soprano': { line_shift: 2 },\n      'baritone-c': { line_shift: 5 },\n      'baritone-f': { line_shift: 5 },\n      subbass: { line_shift: 7 },\n      french: { line_shift: -1 },\n    };\n    if (!clef) throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n\n    const props = values[clef];\n    if (!props) throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n\n    return props;\n  },\n\n  /*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\n  keyProperties(\n    key: string,\n    clef?: string,\n    // eslint-disable-next-line\n  params?: any): any {\n    const noteValues: Record<\n      string,\n      {\n        index: number;\n        int_val?: number;\n        accidental?: string;\n        rest?: boolean;\n        octave?: number;\n        code?: string;\n        shift_right?: number;\n      }\n    > = {\n      C: { index: 0, int_val: 0 },\n      CN: { index: 0, int_val: 0, accidental: 'n' },\n      'C#': { index: 0, int_val: 1, accidental: '#' },\n      'C##': { index: 0, int_val: 2, accidental: '##' },\n      CB: { index: 0, int_val: 11, accidental: 'b' },\n      CBB: { index: 0, int_val: 10, accidental: 'bb' },\n      D: { index: 1, int_val: 2 },\n      DN: { index: 1, int_val: 2, accidental: 'n' },\n      'D#': { index: 1, int_val: 3, accidental: '#' },\n      'D##': { index: 1, int_val: 4, accidental: '##' },\n      DB: { index: 1, int_val: 1, accidental: 'b' },\n      DBB: { index: 1, int_val: 0, accidental: 'bb' },\n      E: { index: 2, int_val: 4 },\n      EN: { index: 2, int_val: 4, accidental: 'n' },\n      'E#': { index: 2, int_val: 5, accidental: '#' },\n      'E##': { index: 2, int_val: 6, accidental: '##' },\n      EB: { index: 2, int_val: 3, accidental: 'b' },\n      EBB: { index: 2, int_val: 2, accidental: 'bb' },\n      F: { index: 3, int_val: 5 },\n      FN: { index: 3, int_val: 5, accidental: 'n' },\n      'F#': { index: 3, int_val: 6, accidental: '#' },\n      'F##': { index: 3, int_val: 7, accidental: '##' },\n      FB: { index: 3, int_val: 4, accidental: 'b' },\n      FBB: { index: 3, int_val: 3, accidental: 'bb' },\n      G: { index: 4, int_val: 7 },\n      GN: { index: 4, int_val: 7, accidental: 'n' },\n      'G#': { index: 4, int_val: 8, accidental: '#' },\n      'G##': { index: 4, int_val: 9, accidental: '##' },\n      GB: { index: 4, int_val: 6, accidental: 'b' },\n      GBB: { index: 4, int_val: 5, accidental: 'bb' },\n      A: { index: 5, int_val: 9 },\n      AN: { index: 5, int_val: 9, accidental: 'n' },\n      'A#': { index: 5, int_val: 10, accidental: '#' },\n      'A##': { index: 5, int_val: 11, accidental: '##' },\n      AB: { index: 5, int_val: 8, accidental: 'b' },\n      ABB: { index: 5, int_val: 7, accidental: 'bb' },\n      B: { index: 6, int_val: 11 },\n      BN: { index: 6, int_val: 11, accidental: 'n' },\n      'B#': { index: 6, int_val: 12, accidental: '#' },\n      'B##': { index: 6, int_val: 13, accidental: '##' },\n      BB: { index: 6, int_val: 10, accidental: 'b' },\n      BBB: { index: 6, int_val: 9, accidental: 'bb' },\n      R: { index: 6, rest: true }, // Rest\n      X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n      },\n    };\n\n    if (clef === undefined) {\n      clef = 'treble';\n    }\n\n    let options = { octave_shift: 0 };\n\n    if (typeof params === 'object') {\n      options = { ...options, ...params };\n    }\n\n    const pieces = key.split('/');\n\n    if (pieces.length < 2) {\n      throw new RuntimeError('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n    }\n\n    const k = pieces[0].toUpperCase();\n    const value = noteValues[k];\n    if (!value) throw new RuntimeError('BadArguments', 'Invalid key name: ' + k);\n    if (value.octave) pieces[1] = value.octave.toString();\n\n    let octave = parseInt(pieces[1], 10);\n\n    // Octave_shift is the shift to compensate for clef 8va/8vb.\n    octave += -1 * options.octave_shift;\n\n    const base_index = octave * 7 - 4 * 7;\n    let line = (base_index + value.index) / 2;\n    line += Tables.clefProperties(clef).line_shift;\n\n    let stroke = 0;\n\n    if (line <= 0 && (line * 2) % 2 === 0) stroke = 1; // stroke up\n    if (line >= 6 && (line * 2) % 2 === 0) stroke = -1; // stroke down\n\n    // Integer value for note arithmetic.\n    const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n\n    /* Check if the user specified a glyph. */\n    const code = value.code;\n    const shift_right = value.shift_right;\n    let extraProps = {};\n    if (pieces.length > 2 && pieces[2]) {\n      const glyph_name = pieces[2].toUpperCase();\n      extraProps = customNoteHeads[glyph_name] || {};\n    }\n\n    return {\n      key: k,\n      octave,\n      line,\n      int_value,\n      accidental: value.accidental,\n      code,\n      stroke,\n      shift_right,\n      displaced: false,\n      ...extraProps,\n    };\n  },\n\n  integerToNote(integer?: number): string {\n    const table: Record<number, string> = {\n      0: 'C',\n      1: 'C#',\n      2: 'D',\n      3: 'D#',\n      4: 'E',\n      5: 'F',\n      6: 'F#',\n      7: 'G',\n      8: 'G#',\n      9: 'A',\n      10: 'A#',\n      11: 'B',\n    };\n\n    if (typeof integer === 'undefined') {\n      throw new RuntimeError('BadArguments', 'Undefined integer for integerToNote');\n    }\n\n    if (integer < -2) {\n      throw new RuntimeError('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n    }\n\n    const noteValue = table[integer];\n    if (!noteValue) {\n      throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n    }\n\n    return noteValue;\n  },\n\n  tabToGlyph(fret: string, scale = 1.0): { text: string; code?: string; getWidth: () => number; shift_y: number } {\n    let glyph = undefined;\n    let width = 0;\n    let shift_y = 0;\n\n    if (fret.toString().toUpperCase() === 'X') {\n      const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n      glyph = 'accidentalDoubleSharp';\n      if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n        throw new RuntimeError('InvalidMetrics', 'Width and height required');\n      width = glyphMetrics.width;\n      shift_y = -glyphMetrics.height / 2;\n    } else {\n      width = Tables.textWidth(fret.toString());\n    }\n\n    return {\n      text: fret,\n      code: glyph,\n      getWidth: () => width * scale,\n      shift_y,\n    };\n  },\n\n  textWidth(text: string): number {\n    return 7 * text.toString().length;\n  },\n\n  articulationCodes(artic: string): ArticulationStruct {\n    const articulations: Record<string, ArticulationStruct> = {\n      'a.': { code: 'augmentationDot', between_lines: true }, // Staccato\n      av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n      }, // Staccatissimo\n      'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n      }, // Accent\n      'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n      }, // Tenuto\n      'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n      }, // Marcato\n      'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false }, // Left hand pizzicato\n      ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n      }, // Snap pizzicato\n      ah: { code: 'stringsHarmonic', between_lines: false }, // Natural harmonic or open note\n      'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false }, // Fermata\n      'a@a': { code: 'fermataAbove', between_lines: false }, // Fermata above staff\n      'a@u': { code: 'fermataBelow', between_lines: false }, // Fermata below staff\n      'a|': { code: 'stringsUpBow', between_lines: false }, // Bow up - up stroke\n      am: { code: 'stringsDownBow', between_lines: false }, // Bow down - down stroke\n      'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n    };\n    return articulations[artic];\n  },\n\n  accidentalMap: accidentals,\n\n  accidentalCodes(acc: string): { code: string; parenRightPaddingAdjustment: number } {\n    return accidentals[acc];\n  },\n\n  accidentalColumnsTable: {\n    1: {\n      a: [1],\n      b: [1],\n    },\n    2: {\n      a: [1, 2],\n    },\n    3: {\n      a: [1, 3, 2],\n      b: [1, 2, 1],\n      second_on_bottom: [1, 2, 3],\n    },\n    4: {\n      a: [1, 3, 4, 2],\n      b: [1, 2, 3, 1],\n      spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n      a: [1, 3, 5, 4, 2],\n      b: [1, 2, 4, 3, 1],\n      spaced_out_pentachord: [1, 2, 3, 2, 1],\n      very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n      a: [1, 3, 5, 6, 4, 2],\n      b: [1, 2, 4, 5, 3, 1],\n      spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n      very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n  } as Record<number, { [name: string]: number[] }>,\n\n  ornamentCodes(acc: string): { code: string } {\n    const ornaments: Record<string, { code: string }> = {\n      mordent: { code: 'ornamentShortTrill' },\n      mordent_inverted: { code: 'ornamentMordent' },\n      turn: { code: 'ornamentTurn' },\n      turn_inverted: { code: 'ornamentTurnSlash' },\n      tr: { code: 'ornamentTrill' },\n      upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n      downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n      prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n      pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n      upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n      downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n      lineprall: { code: 'ornamentPrecompAppoggTrill' },\n      prallprall: { code: 'ornamentTremblement' },\n      scoop: { code: 'brassScoop' },\n      doit: { code: 'brassDoitMedium' },\n      fall: { code: 'brassFallLipShort' },\n      doitLong: { code: 'brassLiftMedium' },\n      fallLong: { code: 'brassFallRoughMedium' },\n      bend: { code: 'brassBend' },\n      plungerClosed: { code: 'brassMuteClosed' },\n      plungerOpen: { code: 'brassMuteOpen' },\n      flip: { code: 'brassFlip' },\n      jazzTurn: { code: 'brassJazzTurn' },\n      smear: { code: 'brassSmear' },\n    };\n    return ornaments[acc];\n  },\n\n  keySignature(spec: string): { type: string; line: number }[] {\n    const keySpecs: Record<string, { acc?: string; num: number }> = {\n      C: { num: 0 },\n      Am: { num: 0 },\n      F: { acc: 'b', num: 1 },\n      Dm: { acc: 'b', num: 1 },\n      Bb: { acc: 'b', num: 2 },\n      Gm: { acc: 'b', num: 2 },\n      Eb: { acc: 'b', num: 3 },\n      Cm: { acc: 'b', num: 3 },\n      Ab: { acc: 'b', num: 4 },\n      Fm: { acc: 'b', num: 4 },\n      Db: { acc: 'b', num: 5 },\n      Bbm: { acc: 'b', num: 5 },\n      Gb: { acc: 'b', num: 6 },\n      Ebm: { acc: 'b', num: 6 },\n      Cb: { acc: 'b', num: 7 },\n      Abm: { acc: 'b', num: 7 },\n      G: { acc: '#', num: 1 },\n      Em: { acc: '#', num: 1 },\n      D: { acc: '#', num: 2 },\n      Bm: { acc: '#', num: 2 },\n      A: { acc: '#', num: 3 },\n      'F#m': { acc: '#', num: 3 },\n      E: { acc: '#', num: 4 },\n      'C#m': { acc: '#', num: 4 },\n      B: { acc: '#', num: 5 },\n      'G#m': { acc: '#', num: 5 },\n      'F#': { acc: '#', num: 6 },\n      'D#m': { acc: '#', num: 6 },\n      'C#': { acc: '#', num: 7 },\n      'A#m': { acc: '#', num: 7 },\n    };\n    const keySpec = keySpecs[spec];\n\n    if (!keySpec) {\n      throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n    }\n\n    if (!keySpec.acc) {\n      return [];\n    }\n\n    const accidentalList: Record<string, number[]> = {\n      b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n      '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n    };\n\n    const notes = accidentalList[keySpec.acc];\n\n    const acc_list = [];\n    for (let i = 0; i < keySpec.num; ++i) {\n      const line = notes[i];\n      acc_list.push({ type: keySpec.acc, line });\n    }\n\n    return acc_list;\n  },\n\n  unicode: {\n    // Unicode accidentals\n    sharp: String.fromCharCode(parseInt('266F', 16)),\n    flat: String.fromCharCode(parseInt('266D', 16)),\n    natural: String.fromCharCode(parseInt('266E', 16)),\n    // Major Chord\n    triangle: String.fromCharCode(parseInt('25B3', 16)),\n    // half-diminished\n    'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n    // Diminished\n    degrees: String.fromCharCode(parseInt('00B0', 16)),\n    circle: String.fromCharCode(parseInt('25CB', 16)),\n  },\n\n  // Used to convert duration aliases to the number based duration.\n  // If the input isn't an alias, simply return the input.\n  //\n  // example: 'q' -> '4', '8' -> '8'\n  sanitizeDuration(duration: string): string {\n    const durationAliases: Record<string, string> = {\n      w: '1',\n      h: '2',\n      q: '4',\n\n      // This is the default duration used to render bars (BarNote). Bars no longer\n      // consume ticks, so this should be a no-op.\n      //\n      // TODO(0xfe): This needs to be cleaned up.\n      b: '256',\n    };\n    const alias = durationAliases[duration];\n    if (alias !== undefined) {\n      duration = alias;\n    }\n\n    if (durations[duration] === undefined) {\n      throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n    }\n\n    return duration;\n  },\n\n  // Convert the `duration` to an fraction\n  durationToFraction(duration: string): Fraction {\n    return new Fraction().parse(Tables.sanitizeDuration(duration));\n  },\n\n  // Convert the `duration` to an number\n  durationToNumber(duration: string): number {\n    return Tables.durationToFraction(duration).value();\n  },\n\n  // Convert the `duration` to total ticks\n  durationToTicks(duration: string): number {\n    duration = Tables.sanitizeDuration(duration);\n\n    const ticks = durations[duration];\n    if (ticks === undefined) {\n      throw new RuntimeError('InvalidDuration');\n    }\n\n    return ticks;\n  },\n\n  // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n  getGlyphProps(\n    duration: string,\n    type?: string\n  ): // eslint-disable-next-line\n  any {\n    // eslint-disable-next-line\n    const duration_codes: Record<string, any> = {\n      '1/2': {\n        common: {\n          stem: false,\n          stem_offset: 0,\n          flag: false,\n          stem_up_extension: -Tables.STEM_HEIGHT,\n          stem_down_extension: -Tables.STEM_HEIGHT,\n          tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n          tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Breve note\n            code_head: 'noteheadDoubleWhole',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDoubleWhole', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Breve note harmonic\n            code_head: 'unpitchedPercussionClef1',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('unpitchedPercussionClef1', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Breve note muted -\n            code_head: 'vexNoteHeadMutedBreve',\n            stem_offset: 0,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('vexNoteHeadMutedBreve', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Breve rest\n            code_head: 'restDoubleWhole',\n            rest: true,\n            position: 'B/5',\n            dot_shiftY: 0.5,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('restDoubleWhole', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Breve note slash -\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n      1: {\n        common: {\n          stem: false,\n          stem_offset: 0,\n          flag: false,\n          stem_up_extension: -Tables.STEM_HEIGHT,\n          stem_down_extension: -Tables.STEM_HEIGHT,\n          tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n          tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Whole note\n            code_head: 'noteheadWhole',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadWhole', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Whole note harmonic\n            code_head: 'noteheadDiamondWhole',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDiamondWhole', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Whole note muted\n            code_head: 'noteheadXWhole',\n            stem_offset: -3,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadXWhole', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Whole rest\n            code_head: 'restWhole',\n            rest: true,\n            position: 'D/5',\n            dot_shiftY: 0.5,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('restWhole', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Whole note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n      2: {\n        common: {\n          stem: true,\n          stem_offset: 0,\n          flag: false,\n          stem_up_extension: 0,\n          stem_down_extension: 0,\n          tabnote_stem_up_extension: 0,\n          tabnote_stem_down_extension: 0,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Half note\n            code_head: 'noteheadHalf',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadHalf', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Half note harmonic\n            code_head: 'noteheadDiamondHalf',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDiamondHalf', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Half note muted\n            code_head: 'noteheadXHalf',\n            stem_offset: -3,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadXHalf', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Half rest\n            code_head: 'restHalf',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('restHalf', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Half note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n      4: {\n        common: {\n          stem: true,\n          stem_offset: 0,\n          flag: false,\n          stem_up_extension: 0,\n          stem_down_extension: 0,\n          tabnote_stem_up_extension: 0,\n          tabnote_stem_down_extension: 0,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Quarter note\n            code_head: 'noteheadBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadBlack', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Quarter harmonic\n            code_head: 'noteheadDiamondBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDiamondBlack', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Quarter muted\n            code_head: 'noteheadXBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadXBlack', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Quarter rest\n            code_head: 'restQuarter',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.5,\n            line_below: 1.5,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('restQuarter', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Quarter slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n      8: {\n        common: {\n          stem: true,\n          stem_offset: 0,\n          flag: true,\n          beam_count: 1,\n          code_flag_upstem: 'flag8thUp',\n          code_flag_downstem: 'flag8thDown',\n          stem_up_extension: 0,\n          stem_down_extension: 0,\n          tabnote_stem_up_extension: 0,\n          tabnote_stem_down_extension: 0,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Eighth note\n            code_head: 'noteheadBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadBlack', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Eighth note harmonic\n            code_head: 'noteheadDiamondBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDiamondBlack', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Eighth note muted\n            code_head: 'noteheadXBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadXBlack', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Eighth rest\n            code_head: 'rest8th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 1.0,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('rest8th', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Eight slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n      16: {\n        common: {\n          beam_count: 2,\n          stem: true,\n          stem_offset: 0,\n          flag: true,\n          code_flag_upstem: 'flag16thUp',\n          code_flag_downstem: 'flag16thDown',\n          stem_up_extension: 0,\n          stem_down_extension: 0,\n          tabnote_stem_up_extension: 0,\n          tabnote_stem_down_extension: 0,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Sixteenth note\n            code_head: 'noteheadBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadBlack', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Sixteenth note harmonic\n            code_head: 'noteheadDiamondBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDiamondBlack', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Sixteenth note muted\n            code_head: 'noteheadXBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadXBlack', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Sixteenth rest\n            code_head: 'rest16th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 2.0,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('rest16th', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Sixteenth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n      32: {\n        common: {\n          beam_count: 3,\n          stem: true,\n          stem_offset: 0,\n          flag: true,\n          code_flag_upstem: 'flag32ndUp',\n          code_flag_downstem: 'flag32ndDown',\n          stem_up_extension: 9,\n          stem_down_extension: 9,\n          tabnote_stem_up_extension: 8,\n          tabnote_stem_down_extension: 5,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Thirty-second note\n            code_head: 'noteheadBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadBlack', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Thirty-second harmonic\n            code_head: 'noteheadDiamondBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDiamondBlack', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Thirty-second muted\n            code_head: 'noteheadXBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadXBlack', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Thirty-second rest\n            code_head: 'rest32nd',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 2.0,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('rest32nd', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Thirty-second slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n      64: {\n        common: {\n          beam_count: 4,\n          stem: true,\n          stem_offset: 0,\n          flag: true,\n          code_flag_upstem: 'flag64thUp',\n          code_flag_downstem: 'flag64thDown',\n          stem_up_extension: 13,\n          stem_down_extension: 13,\n          tabnote_stem_up_extension: 12,\n          tabnote_stem_down_extension: 9,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Sixty-fourth note\n            code_head: 'noteheadBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadBlack', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Sixty-fourth harmonic\n            code_head: 'noteheadDiamondBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDiamondBlack', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Sixty-fourth muted\n            code_head: 'noteheadXBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadXBlack', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Sixty-fourth rest\n            code_head: 'rest64th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 3.0,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('rest64th', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Sixty-fourth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n      128: {\n        common: {\n          beam_count: 5,\n          stem: true,\n          stem_offset: 0,\n          flag: true,\n          code_flag_upstem: 'flag128thUp',\n          code_flag_downstem: 'flag128thDown',\n          stem_up_extension: 22,\n          stem_down_extension: 22,\n          tabnote_stem_up_extension: 21,\n          tabnote_stem_down_extension: 18,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0,\n        },\n        type: {\n          n: {\n            // Hundred-twenty-eight note\n            code_head: 'noteheadBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadBlack', scale).getMetrics().width;\n            },\n          },\n          h: {\n            // Hundred-twenty-eight harmonic\n            code_head: 'noteheadDiamondBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadDiamondBlack', scale).getMetrics().width;\n            },\n          },\n          m: {\n            // Hundred-twenty-eight muted\n            code_head: 'noteheadXBlack',\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('noteheadXBlack', scale).getMetrics().width;\n            },\n          },\n          r: {\n            // Hundred-twenty-eight rest\n            code_head: 'rest128th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: 1.5,\n            line_above: 3.0,\n            line_below: 3.0,\n            getWidth(scale = Tables.DEFAULT_NOTATION_FONT_SCALE): number | undefined {\n              return new Glyph('rest128th', scale).getMetrics().width;\n            },\n          },\n          s: {\n            // Hundred-twenty-eight rest\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n          },\n        },\n      },\n    };\n\n    duration = Tables.sanitizeDuration(duration);\n    type = type || 'n'; // default type is a regular note\n\n    // Lookup duration for default glyph head code\n    const code = duration_codes[duration];\n    if (code === undefined) {\n      return;\n    }\n\n    // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n    let glyphTypeProperties = code.type[type];\n\n    // If this isn't a standard type, then lookup the custom note head map.\n    if (glyphTypeProperties === undefined) {\n      // Try and get it from the custom list of note heads\n      const customGlyphTypeProperties = customNoteHeads[type.toUpperCase()];\n\n      // If not, then return with nothing\n      if (customGlyphTypeProperties === undefined) {\n        return;\n      }\n\n      // Otherwise set it as the code_head value\n      glyphTypeProperties = {\n        code_head: customGlyphTypeProperties.code,\n        ...customGlyphTypeProperties,\n      };\n    }\n\n    // Merge duration props for 'duration' with the note head properties.\n    return { ...code.common, ...glyphTypeProperties };\n  },\n\n  validTypes: {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n  } as Record<string, Record<string, string>>,\n  // Some defaults\n  TIME4_4: {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n  },\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT Licnse\n\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n\nexport interface NoteAccidental {\n  note: number;\n  accidental: AccidentalValue;\n}\n\nexport interface NoteParts {\n  root: string;\n  accidental: string;\n}\n\nexport interface KeyParts {\n  root: string;\n  accidental: string;\n  type: string;\n}\n\nexport type KeyValue = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11;\n\nexport type RootValue = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type AccidentalValue = -2 | -1 | 0 | 1 | 2;\n\nexport interface Key {\n  root_index: RootValue;\n  int_val: KeyValue;\n}\n\n/** Music implements some standard music theory routines. */\nexport class Music {\n  /** Number of an canonical notes (12). */\n  static get NUM_TONES(): number {\n    return this.canonical_notes.length;\n  }\n\n  /** Names of root notes ('c', 'd',...) */\n  static get roots(): string[] {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  /** Values of the root notes.*/\n  static get root_values(): KeyValue[] {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  /** Indices of the root notes.*/\n  static get root_indices(): Record<string, RootValue> {\n    return {\n      c: 0,\n      d: 1,\n      e: 2,\n      f: 3,\n      g: 4,\n      a: 5,\n      b: 6,\n    };\n  }\n\n  /** Names of canonical notes ('c', 'c#', 'd',...). */\n  static get canonical_notes(): string[] {\n    return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n  }\n\n  /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n  static get diatonic_intervals(): string[] {\n    return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n  }\n\n  /** NoteAccidental associated to diatonic intervals. */\n  static get diatonic_accidentals(): Record<string, NoteAccidental> {\n    return {\n      unison: { note: 0, accidental: 0 },\n      m2: { note: 1, accidental: -1 },\n      M2: { note: 1, accidental: 0 },\n      m3: { note: 2, accidental: -1 },\n      M3: { note: 2, accidental: 0 },\n      p4: { note: 3, accidental: 0 },\n      dim5: { note: 4, accidental: -1 },\n      p5: { note: 4, accidental: 0 },\n      m6: { note: 5, accidental: -1 },\n      M6: { note: 5, accidental: 0 },\n      b7: { note: 6, accidental: -1 },\n      M7: { note: 6, accidental: 0 },\n      octave: { note: 7, accidental: 0 },\n    };\n  }\n\n  /** Semitones shift associated to intervals .*/\n  static get intervals(): Record<string, number> {\n    return {\n      u: 0,\n      unison: 0,\n      m2: 1,\n      b2: 1,\n      min2: 1,\n      S: 1,\n      H: 1,\n      2: 2,\n      M2: 2,\n      maj2: 2,\n      T: 2,\n      W: 2,\n      m3: 3,\n      b3: 3,\n      min3: 3,\n      M3: 4,\n      3: 4,\n      maj3: 4,\n      4: 5,\n      p4: 5,\n      '#4': 6,\n      b5: 6,\n      aug4: 6,\n      dim5: 6,\n      5: 7,\n      p5: 7,\n      '#5': 8,\n      b6: 8,\n      aug5: 8,\n      6: 9,\n      M6: 9,\n      maj6: 9,\n      b7: 10,\n      m7: 10,\n      min7: 10,\n      dom7: 10,\n      M7: 11,\n      maj7: 11,\n      8: 12,\n      octave: 12,\n    };\n  }\n\n  /** Semitones shifts associated with scales. */\n  static get scales(): Record<string, number[]> {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n      ionian: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      phyrgian: [1, 2, 2, 2, 1, 2, 2],\n      lydian: [2, 2, 2, 1, 2, 2, 1],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      aeolian: [2, 1, 2, 2, 1, 2, 2],\n      locrian: [1, 2, 2, 1, 2, 2, 2],\n    };\n  }\n\n  /** Scales associated with m (minor) and M (major). */\n  static get scaleTypes(): Record<string, number[]> {\n    return {\n      M: Music.scales.major,\n      m: Music.scales.minor,\n    };\n  }\n\n  /** Accidentals abreviations. */\n  static get accidentals(): string[] {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  protected isValidNoteValue(note: number): boolean {\n    return note >= 0 && note < Music.canonical_notes.length;\n  }\n\n  protected isValidIntervalValue(interval: number): boolean {\n    return interval >= 0 && interval < Music.diatonic_intervals.length;\n  }\n\n  /** Return root and accidental associated to a note. */\n  getNoteParts(noteString: string): NoteParts {\n    if (!noteString || noteString.length < 1) {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match !== null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  /** Return root, accidental and type associated to a key. */\n  getKeyParts(keyString: string): KeyParts {\n    if (!keyString || keyString.length < 1) {\n      throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match !== null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  /** Note value associated to a note name. */\n  getNoteValue(noteString: string): number {\n    const value = Tables.keyProperties(`${noteString.toUpperCase()}/0`);\n    if (value === undefined || value.int_value === undefined) {\n      throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n    }\n    return value.int_value;\n  }\n\n  /** Interval value associated to an interval name. */\n  getIntervalValue(intervalString: string): number {\n    const value = Music.intervals[intervalString];\n    if (value === undefined) {\n      throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n    }\n    return value;\n  }\n\n  /** Canonical note name associated to a value. */\n  getCanonicalNoteName(noteValue: number): string {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n    return Music.canonical_notes[noteValue];\n  }\n\n  /** Interval name associated to a value. */\n  getCanonicalIntervalName(intervalValue: number): string {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /**\n   * Given a note, interval, and interval direction, produce the relative note.\n   */\n  getRelativeNoteValue(noteValue: number, intervalValue: number, direction: number = 1): number {\n    if (direction !== 1 && direction !== -1) {\n      throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  /**\n   * Given a root and note value, produce the relative note name.\n   */\n  getRelativeNoteName(root: string, noteValue: number): string {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /**\n   * Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key: number, intervals: number[]): number[] {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /**\n   * Return the interval of a note, given a diatonic scale.\n   * e.g., given the scale C, and the note E, returns M3.\n   */\n  getIntervalBetween(note1: number, note2: number, direction: number = 1): number {\n    if (direction !== 1 && direction !== -1) {\n      throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1 ? note2 - note1 : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  /**\n   * Create a scale map that represents the pitch state for a\n   * `keySignature`. For example, passing a `G` to `keySignature` would\n   * return a scale map with every note naturalized except for `F` which\n   * has an `F#` state.\n   */\n  createScaleMap(keySignature: string): Record<string, string> {\n    const keySigParts = this.getKeyParts(keySignature);\n    if (!keySigParts.type) throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {} as Record<string, string>;\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { ModifierContext } from './modifiercontext';\nimport { Note } from './note';\n\nexport enum ModifierPosition {\n  CENTER = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  ABOVE = 3,\n  BELOW = 4,\n}\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n  // Modifiers are attached to a note and an index. An index is a specific head in a chord.\n  protected note?: Note;\n  protected index?: number;\n\n  protected width: number;\n  protected text_line: number;\n  protected position: ModifierPosition;\n  protected y_shift: number;\n  protected x_shift: number;\n\n  private spacingFromNextModifier: number;\n  private modifier_context?: ModifierContext;\n\n  /** Modifiers category string. */\n  static get CATEGORY(): string {\n    return 'none';\n  }\n\n  /** Modifiers can be positioned almost anywhere, relative to a note. */\n  static get Position(): typeof ModifierPosition {\n    return ModifierPosition;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      center: Modifier.Position.CENTER,\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  /** Called when position changes. */\n  protected reset(): void {\n    // do nothing\n  }\n\n  /**\n   * Every modifier has a category. The `ModifierContext` uses this to determine\n   * the type and order of the modifiers.\n   */\n  getCategory(): string {\n    return Modifier.CATEGORY;\n  }\n\n  /** Get modifier widths. */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /** Set modifier widths. */\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n  getNote(): Note {\n    if (!this.note) throw new RuntimeError('NoNote', 'Modifier has no note.');\n    return this.note;\n  }\n\n  /** Check and get attached note (`StaveNote`, `TabNote`, etc.) */\n  checkAttachedNote(): Note {\n    if (!this.note || this.index === undefined) {\n      throw new RuntimeError('NoAttachedNote', `Can't draw ${this.getCategory()} without a note and index.`);\n    }\n    return this.note;\n  }\n\n  /**\n   * Set attached note.\n   * @param note (`StaveNote`, `TabNote`, etc.)\n   */\n  setNote(note: Note): this {\n    this.note = note;\n    return this;\n  }\n\n  /** Get note index, which is a specific note in a chord. */\n  getIndex(): number | undefined {\n    return this.index;\n  }\n\n  /** Check and get note index, which is a specific note in a chord. */\n  checkIndex(): number {\n    if (this.index === undefined) {\n      throw new RuntimeError('NoIndex', 'Modifier has an invalid index.');\n    }\n    return this.index;\n  }\n\n  /** Set note index, which is a specific note in a chord. */\n  setIndex(index: number): this {\n    this.index = index;\n    return this;\n  }\n\n  /** Get `ModifierContext`. */\n  getModifierContext(): ModifierContext | undefined {\n    return this.modifier_context;\n  }\n\n  /** Check and get `ModifierContext`. */\n  checkModifierContext(): ModifierContext {\n    if (!this.modifier_context) throw new RuntimeError('NoModifierContext', 'Modifier Context Required');\n    return this.modifier_context;\n  }\n\n  /** Every modifier must be part of a `ModifierContext`. */\n  setModifierContext(c: ModifierContext): this {\n    this.modifier_context = c;\n    return this;\n  }\n\n  /** Get position. */\n  getPosition(): number {\n    return this.position;\n  }\n\n  /**\n   * Set position.\n   * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n   */\n  setPosition(position: string | number): this {\n    this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n    this.reset();\n    return this;\n  }\n\n  /** Set the `text_line` for the modifier. */\n  setTextLine(line: number): this {\n    this.text_line = line;\n    return this;\n  }\n\n  /** Shift modifier down `y` pixels. Negative values shift up. */\n  setYShift(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  /** Set spacing from next modifier. */\n  setSpacingFromNextModifier(x: number): void {\n    this.spacingFromNextModifier = x;\n  }\n\n  /** Get spacing from next modifier. */\n  getSpacingFromNextModifier(): number {\n    return this.spacingFromNextModifier;\n  }\n\n  /**\n   * Shift modifier `x` pixels in the direction of the modifier. Negative values\n   * shift reverse.\n   */\n  setXShift(x: number): this {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n    return this;\n  }\n\n  /** Get shitf modifier `x` */\n  getXShift(): number {\n    return this.x_shift;\n  }\n\n  /** Render the modifier onto the canvas. */\n  draw(): void {\n    this.checkContext();\n    throw new RuntimeError('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n\n  // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n  alignSubNotesWithNote(subNotes: Note[], note: Note): void {\n    // Shift over the tick contexts of each note\n    const tickContext = note.getTickContext();\n    const metrics = tickContext.getMetrics();\n    const stave = note.getStave();\n    const subNoteXOffset =\n      tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n\n    subNotes.forEach((subNote) => {\n      const subTickContext = subNote.getTickContext();\n      if (stave) subNote.setStave(stave);\n      subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { RuntimeError, log } from './util';\nimport { Element } from './element';\nimport { Flow } from './flow';\nimport { BoundingBox } from './boundingbox';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Stem.DEBUG) log('Vex.Flow.Stem', args);\n}\n\nexport interface StemOptions {\n  stem_down_y_base_offset?: number;\n  stem_up_y_base_offset?: number;\n  stem_down_y_offset?: number;\n  stem_up_y_offset?: number;\n  stemletHeight?: number;\n  isStemlet?: boolean;\n  hide?: boolean;\n  stem_direction?: number;\n  stem_extension?: number;\n  y_bottom?: number;\n  y_top?: number;\n  x_end?: number;\n  x_begin?: number;\n}\n\nexport class Stem extends Element {\n  static DEBUG: boolean;\n\n  protected hide: boolean;\n  protected isStemlet: boolean;\n  protected stemletHeight: number;\n  protected x_begin: number;\n  protected x_end: number;\n  protected y_top: number;\n  protected stem_up_y_offset: number = 0;\n  protected y_bottom: number;\n  protected stem_down_y_offset: number = 0;\n  protected stem_up_y_base_offset: number = 0;\n  protected stem_down_y_base_offset: number = 0;\n  protected stem_direction: number;\n  protected stem_extension: number;\n  protected renderHeightAdjustment: number;\n\n  static get CATEGORY(): string {\n    return 'stem';\n  }\n\n  // Stem directions\n  static get UP(): number {\n    return 1;\n  }\n\n  static get DOWN(): number {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH(): number {\n    return Flow.STEM_WIDTH;\n  }\n\n  static get HEIGHT(): number {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options?: StemOptions) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options?.x_begin || 0;\n    this.x_end = options?.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options?.y_top || 0;\n    this.y_bottom = options?.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options?.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options?.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options?.hide || false;\n\n    this.isStemlet = options?.isStemlet || false;\n    this.stemletHeight = options?.stemletHeight || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n    this.setOptions(options);\n  }\n\n  setOptions(options?: StemOptions): void {\n    // Changing where the stem meets the head\n    this.stem_up_y_offset = options?.stem_up_y_offset || 0;\n    this.stem_down_y_offset = options?.stem_down_y_offset || 0;\n    this.stem_up_y_base_offset = options?.stem_up_y_base_offset || 0;\n    this.stem_down_y_base_offset = options?.stem_down_y_base_offset || 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin: number, x_end: number): this {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction: number): void {\n    this.stem_direction = direction;\n  }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext: number): void {\n    this.stem_extension = ext;\n  }\n\n  getExtension(): number {\n    return this.stem_extension;\n  }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top: number, y_bottom: number): void {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory(): string {\n    return Stem.CATEGORY;\n  }\n\n  // Gets the entire height for the stem\n  getHeight(): number {\n    const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n    const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n    return unsigned_height * this.stem_direction;\n  }\n\n  getBoundingBox(): BoundingBox {\n    throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents(): Record<string, number> {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  setVisibility(isVisible: boolean): this {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet: boolean, stemletHeight: number): this {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  adjustHeightForFlag(): void {\n    this.renderHeightAdjustment = this.musicFont.lookupMetric('stem.heightAdjustmentForFlag', -3);\n  }\n\n  adjustHeightForBeam(): void {\n    this.renderHeightAdjustment = -Stem.WIDTH / 2;\n  }\n\n  // Render the stem onto the canvas\n  draw(): void {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    let y_base_offset: number = 0;\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n      y_base_offset = this.stem_down_y_base_offset;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n      y_base_offset = this.stem_up_y_base_offset;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n    ctx.stroke();\n    this.restoreStyle(ctx);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { RuntimeError, check } from './util';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Note } from './note';\nimport { StemmableNote } from './stemmablenote';\n\nexport interface TupletOptions {\n  beats_occupied?: number;\n  bracketed?: boolean;\n  location?: number;\n  notes_occupied?: number;\n  num_notes?: number;\n  ratioed?: boolean;\n  y_offset?: number;\n}\n\nexport class Tuplet extends Element {\n  notes: Note[];\n\n  protected options: TupletOptions;\n  protected num_notes: number;\n  protected point: number;\n\n  protected bracketed: boolean;\n  protected y_pos: number;\n  protected x_pos: number;\n  protected width: number;\n  protected location: number;\n  protected notes_occupied: number;\n  protected ratioed: boolean;\n  protected numerator_glyphs: Glyph[] = [];\n  protected denom_glyphs: Glyph[] = [];\n\n  static get LOCATION_TOP(): number {\n    return 1;\n  }\n  static get LOCATION_BOTTOM(): number {\n    return -1;\n  }\n  static get NESTING_OFFSET(): number {\n    return 15;\n  }\n\n  constructor(notes: Note[], options?: TupletOptions) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = { ...options };\n    this.notes = notes;\n    this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n    if (this.options.bracketed != undefined) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed = notes.some((note) => !note.hasBeam());\n    }\n\n    this.ratioed =\n      this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n    this.point = this.musicFont.lookupMetric('digits.tupletPoint');\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach(): void {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach(): void {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed: boolean): this {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed: boolean): this {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location: number): this {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new RuntimeError('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes(): Note[] {\n    return this.notes;\n  }\n\n  getNoteCount(): number {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning(): void {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    // eslint-disable-next-line\n    if (console && console.warn) {\n      // eslint-disable-next-line\n      console.warn(msg);\n    } else if (console) {\n      // eslint-disable-next-line\n      console.log(msg);\n    }\n  }\n\n  getBeatsOccupied(): number {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats: number): void {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied(): number {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes: number): void {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs(): void {\n    this.numerator_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n      n = parseInt((n / 10).toString(), 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n      n = parseInt((n / 10).toString(), 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount(): number {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note: Note, location: number) {\n      return note.tupletStack.filter((tuplet) => tuplet.location === location).length;\n    }\n\n    this.notes.forEach((note) => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition(): number {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.checkStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y =\n          this.notes[i].getStemDirection() === Stem.UP\n            ? this.notes[i].getStemExtents().topY - 10\n            : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.checkStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y =\n          this.notes[i].getStemDirection() === Stem.UP\n            ? this.notes[i].getStemExtents().baseY + 20\n            : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0] as StemmableNote;\n    const last_note = this.notes[this.notes.length - 1] as StemmableNote;\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width: number, glyph: Glyph) => width + check<number>(glyph.getMetrics().width);\n\n    // calculate total width of tuplet notation\n    let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + this.width / 2;\n    const notation_start_x = notation_center_x - width / 2;\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n        ctx.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0),\n          1,\n          this.location * 10\n        );\n        ctx.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    const shiftY = this.musicFont.lookupMetric('digits.shiftY', 0);\n\n    let x_offset = 0;\n    this.numerator_glyphs.forEach((glyph) => {\n      glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n      x_offset += check<number>(glyph.getMetrics().width);\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      ctx.beginPath();\n      ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      ctx.closePath();\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      ctx.closePath();\n      ctx.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach((glyph) => {\n        glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n        x_offset += check<number>(glyph.getMetrics().width);\n      });\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { Flow } from './flow';\nimport { Fraction } from './fraction';\nimport { TickContext } from './tickcontext';\nimport { ModifierContext } from './modifiercontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Modifier } from './modifier';\n\n/** Formatter metrics interface */\nexport interface FormatterMetrics {\n  duration: string;\n  freedom: {\n    left: number;\n    right: number;\n  };\n  iterations: number;\n  space: {\n    used: number;\n    mean: number;\n    deviation: number;\n  };\n}\n\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport abstract class Tickable extends Element {\n  protected ignore_ticks: boolean;\n  tupletStack: Tuplet[];\n  protected tuplet?: Tuplet;\n  protected ticks: Fraction;\n  protected center_x_shift: number;\n  protected voice?: Voice;\n  protected width: number;\n  protected x_shift: number;\n  protected preFormatted: boolean;\n  protected postFormatted: boolean;\n  protected modifierContext?: ModifierContext;\n  protected tickContext?: TickContext;\n  protected modifiers: Modifier[];\n  protected tickMultiplier: Fraction;\n  protected formatterMetrics: FormatterMetrics;\n  protected intrinsicTicks: number;\n  protected align_center: boolean;\n\n  /** Constructor */\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1); // Fractional value of ticks\n    this.intrinsicTicks = 0; // Floating point value of ticks\n    this.tickMultiplier = new Fraction(1, 1);\n\n    // Formatter metrics\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  /** Reset the Tickable, this function will be overloaded. */\n  reset(): this {\n    return this;\n  }\n\n  /** Return the ticks. */\n  getTicks(): Fraction {\n    return this.ticks;\n  }\n\n  /** Check if it ignores the ticks. */\n  shouldIgnoreTicks(): boolean {\n    return this.ignore_ticks;\n  }\n\n  /** Ignore the ticks. */\n  setIgnoreTicks(flag: boolean): void {\n    this.ignore_ticks = flag;\n  }\n\n  /** Set width of note. Used by the formatter for positioning. */\n  setWidth(width: number): void {\n    this.width = width;\n  }\n\n  /** Get width of note. Used by the formatter for positioning. */\n  getWidth(): number {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  /** Displace note by `x` pixels. Used by the formatter. */\n  setXShift(x: number): this {\n    this.x_shift = x;\n    return this;\n  }\n\n  /** Get the `x` displaced pixels of the note. */\n  getXShift(): number {\n    return this.x_shift;\n  }\n\n  /** Get `x` position of this tick context. */\n  getX(): number {\n    if (!this.tickContext) {\n      throw new RuntimeError('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  /** Return the formatterMetrics. */\n  getFormatterMetrics(): FormatterMetrics {\n    return this.formatterMetrics;\n  }\n\n  /** Return the center `x` shift. */\n  getCenterXShift(): number {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n\n  /** Set the center `x` shift. */\n  setCenterXShift(centerXShift: number): this {\n    this.center_x_shift = centerXShift;\n    return this;\n  }\n\n  // Check if tickable is center aligned. */\n  isCenterAligned(): boolean {\n    return this.align_center;\n  }\n\n  // Set/unset center alignment. */\n  setCenterAlignment(align_center: boolean): this {\n    this.align_center = align_center;\n    return this;\n  }\n\n  /**\n   * Return the associated voice. Every tickable must be associated with a voice.\n   * This allows formatters and preFormatter to associate them with the right modifierContexts.\n   */\n  getVoice(): Voice {\n    if (!this.voice) throw new RuntimeError('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n\n  /** Set the associated voice. */\n  setVoice(voice: Voice): void {\n    this.voice = voice;\n  }\n\n  /** Get the tuplet. */\n  getTuplet(): Tuplet | undefined {\n    return this.tuplet;\n  }\n\n  /*\n   * Reset the specific Tuplet if this is not provided, all tuplets are reset.\n   * Remove any prior tuplets from the tick calculation and\n   * reset the intrinsic tick value.\n   */\n  resetTuplet(tuplet?: Tuplet): this {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop() as Tuplet;\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  /** Attach to new tuplet. */\n  setTuplet(tuplet: Tuplet): this {\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** Optional, if tickable has modifiers, set modifierContext. */\n  addToModifierContext(mc: ModifierContext): void {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** Optional, if tickable has modifiers, associate a Modifier. */\n  addModifier(mod: Modifier): this {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n\n  /** Get the list of associated modifiers. */\n  getModifiers(): Modifier[] {\n    return this.modifiers;\n  }\n\n  /** Set the Tick Contxt. */\n  setTickContext(tc: TickContext): void {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n\n  /** Preformat the Tickable. */\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n\n  /** Postformat the Tickable. */\n  postFormat(): this {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n\n  /** Return the intrinsic ticks. */\n  getIntrinsicTicks(): number {\n    return this.intrinsicTicks;\n  }\n\n  /** Set the intrinsic ticks. */\n  setIntrinsicTicks(intrinsicTicks: number): void {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n\n  /** Get the tick multiplier. */\n  getTickMultiplier(): Fraction {\n    return this.tickMultiplier;\n  }\n\n  /** Apply a tick multiplier. */\n  applyTickMultiplier(numerator: number, denominator: number): void {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n\n  /** Set the duration. */\n  setDuration(duration: Fraction): void {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError, drawDot } from './util';\nimport { Flow } from './flow';\nimport { Tickable } from './tickable';\nimport { Stroke } from './strokes';\nimport { Stave } from './stave';\nimport { Voice } from './voice';\nimport { TickContext } from './tickcontext';\nimport { ModifierContext } from './modifiercontext';\nimport { Modifier } from './modifier';\nimport { KeyProps, RenderContext } from './types/common';\nimport { GlyphProps } from './glyph';\nimport { Fraction } from './fraction';\nimport { Beam } from './beam';\n\nexport interface NoteMetrics {\n  /** The total width of the note (including modifiers). */\n  width: number;\n  glyphWidth?: number;\n  /** The width of the note head only. */\n  notePx: number;\n  /** Start `X` for left modifiers. */\n  modLeftPx: number;\n  /** Start `X` for right modifiers. */\n  modRightPx: number;\n  /** Extra space on left of note. */\n  leftDisplacedHeadPx: number;\n  glyphPx: number;\n  /** Extra space on right of note. */\n  rightDisplacedHeadPx: number;\n}\n\nexport interface NoteDuration {\n  duration: string;\n  dots: number;\n  type: string;\n}\n\nexport interface NoteRenderOptions {\n  draw_stem_through_stave?: boolean;\n  draw_dots?: boolean;\n  draw_stem?: boolean;\n  y_shift: number;\n  extend_left?: number;\n  extend_right?: number;\n  glyph_font_scale: number;\n  annotation_spacing: number;\n  glyph_font_size?: number;\n  scale: number;\n  font: string;\n  stroke_px: number;\n}\n\nexport interface ParsedNote {\n  duration: string;\n  type: string;\n  customTypes: string[];\n  dots: number;\n  ticks: number;\n}\n\nexport interface NoteStruct {\n  line?: number;\n  /** The number of dots, which affects the duration. */\n  dots?: number;\n  keys?: string[];\n  /** The note type (e.g., `r` for rest, `s` for slash notes, etc.). */\n  type?: string;\n  align_center?: boolean;\n  duration_override?: Fraction;\n  /** The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.). */\n  duration: string;\n}\n\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport abstract class Note extends Tickable {\n  keys: string[];\n  keyProps: KeyProps[];\n\n  protected stave?: Stave;\n  render_options: NoteRenderOptions;\n  protected duration: string;\n  protected dots: number;\n  protected leftDisplacedHeadPx: number;\n  protected rightDisplacedHeadPx: number;\n  protected noteType: string;\n  protected customGlyphs: GlyphProps[];\n  protected ys: number[];\n  // eslint-disable-next-line\n  protected glyph?: any;\n  protected customTypes: string[];\n  protected playNote?: Note;\n  protected beam?: Beam;\n\n  static get CATEGORY(): string {\n    return 'note';\n  }\n\n  /** Debug helper. Displays various note metrics for the given note. */\n  static plotMetrics(ctx: RenderContext, note: Note, yPos: number): void {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n    const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.notePx;\n    const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n    const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n    const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = yPos + 7;\n    function stroke(x1: number, x2: number, color: string, yy: number = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  protected static parseDuration(durationString: string): NoteDuration | undefined {\n    const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n    const result = regexp.exec(durationString);\n    if (!result) {\n      return undefined;\n    }\n\n    const duration = result[1];\n    const dots = result[2].length;\n    const type = result[3] || 'n';\n\n    return { duration, dots, type };\n  }\n\n  protected static parseNoteStruct(noteStruct: NoteStruct): ParsedNote | undefined {\n    const durationString = noteStruct.duration;\n    const customTypes: string[] = [];\n\n    // Preserve backwards-compatibility\n    const durationProps = Note.parseDuration(durationString);\n    if (!durationProps) {\n      return undefined;\n    }\n\n    // If specified type is invalid, return undefined\n    let type = noteStruct.type;\n    if (type && !Flow.validTypes[type]) {\n      return undefined;\n    }\n\n    // If no type specified, check duration or custom types\n    if (!type) {\n      type = durationProps.type || 'n';\n\n      // If we have keys, try and check if we've got a custom glyph\n      if (noteStruct.keys !== undefined) {\n        noteStruct.keys.forEach((k, i) => {\n          const result = k.split('/');\n          // We have a custom glyph specified after the note eg. /X2\n          customTypes[i] = (result && result.length === 3 ? result[2] : type) as string;\n        });\n      }\n    }\n\n    // Calculate the tick duration of the note\n    let ticks = Flow.durationToTicks(durationProps.duration);\n    if (!ticks) {\n      return undefined;\n    }\n\n    // Are there any dots?\n    const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n    if (typeof dots !== 'number') {\n      return undefined;\n    }\n\n    // Add ticks as necessary depending on the numbr of dots\n    let currentTicks = ticks;\n    for (let i = 0; i < dots; i++) {\n      if (currentTicks <= 1) return undefined;\n\n      currentTicks = currentTicks / 2;\n      ticks += currentTicks;\n    }\n\n    return {\n      duration: durationProps.duration,\n      type,\n      customTypes,\n      dots,\n      ticks,\n    };\n  }\n\n  /**\n   * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n   * positioning and layout.\n   * To create a new note you need to provide a `noteStruct`.\n   */\n  constructor(noteStruct: NoteStruct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!noteStruct) {\n      throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n    }\n\n    /** Parses `noteStruct` and get note properties. */\n    const initStruct = Note.parseNoteStruct(noteStruct);\n    if (!initStruct) {\n      throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n    }\n\n    // Set note properties from parameters.\n    this.keys = noteStruct.keys || [];\n    // per-pitch properties\n    this.keyProps = [];\n\n    this.duration = initStruct.duration;\n    this.dots = initStruct.dots;\n    this.noteType = initStruct.type;\n    this.customTypes = initStruct.customTypes;\n\n    if (noteStruct.duration_override) {\n      // Custom duration\n      this.setDuration(noteStruct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initStruct.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.getGlyphProps(this.duration, this.noteType);\n    this.customGlyphs = this.customTypes.map((t) => Flow.getGlyphProps(this.duration, t));\n\n    // Note to play for audio players.\n    this.playNote = undefined;\n\n    // Positioning contexts used by the Formatter.\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0; // Width in pixels calculated after preFormat\n    this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n    this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n    this.x_shift = 0; // X shift from tick context X\n    this.preFormatted = false; // Is this note preFormatted?\n    this.ys = []; // list of y coordinates for each note\n    // we need to hold on to these for ties and beams.\n\n    if (noteStruct.align_center) {\n      this.setCenterAlignment(noteStruct.align_center);\n    }\n\n    // The render surface.\n    this.render_options = {\n      annotation_spacing: 5,\n      glyph_font_scale: 1,\n      stroke_px: 1,\n      scale: 1,\n      font: '',\n      y_shift: 0,\n    };\n  }\n\n  /**\n   * Get the play note, which is arbitrary data that can be used by an\n   * audio player.\n   */\n  getPlayNote(): Note | undefined {\n    return this.playNote;\n  }\n\n  /**\n   * Set the play note, which is arbitrary data that can be used by an\n   * audio player.\n   */\n  setPlayNote(note: Note): this {\n    this.playNote = note;\n    return this;\n  }\n\n  /**\n   * Don't play notes by default, call them rests. This is also used by things like\n   * beams and dots for positioning.\n   */\n  isRest(): boolean {\n    return false;\n  }\n\n  /** Add stroke. */\n  addStroke(index: number, stroke: Stroke): this {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  /** Get the target stave. */\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  /** Check and get the target stave. */\n  checkStave(): Stave {\n    if (!this.stave) {\n      throw new RuntimeError('NoStave', 'No stave attached to instance');\n    }\n    return this.stave;\n  }\n\n  /** Set the target stave. */\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.setContext(this.stave.getContext());\n    return this;\n  }\n\n  /**\n   * `Note` is not really a modifier, but is used in\n   * a `ModifierContext`.\n   */\n  getCategory(): string {\n    return Note.CATEGORY;\n  }\n\n  /** Get spacing to the left of the notes. */\n  getLeftDisplacedHeadPx(): number {\n    return this.leftDisplacedHeadPx;\n  }\n\n  /** Get spacing to the right of the notes. */\n  getRightDisplacedHeadPx(): number {\n    return this.rightDisplacedHeadPx;\n  }\n\n  /** Set spacing to the left of the notes. */\n  setLeftDisplacedHeadPx(x: number): this {\n    this.leftDisplacedHeadPx = x;\n    return this;\n  }\n\n  /** Set spacing to the right of the notes. */\n  setRightDisplacedHeadPx(x: number): this {\n    this.rightDisplacedHeadPx = x;\n    return this;\n  }\n\n  /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n  shouldIgnoreTicks(): boolean {\n    return this.ignore_ticks;\n  }\n\n  /** Get the stave line number for the note. */\n  // eslint-disable-next-line\n  getLineNumber(isTopNote?: boolean): number {\n    return 0;\n  }\n\n  /** Get the stave line number for rest. */\n  getLineForRest(): number {\n    return 0;\n  }\n\n  /** Get the glyph associated with this note. */\n  // eslint-disable-next-line\n  getGlyph(): any {\n    return this.glyph;\n  }\n\n  /** Get the glyph width. */\n  getGlyphWidth(): number {\n    // TODO: FIXME (multiple potential values for this.glyph)\n    if (this.glyph) {\n      if (this.glyph.getMetrics) {\n        return this.glyph.getMetrics().width;\n      } else if (this.glyph.getWidth) {\n        return this.glyph.getWidth(this.render_options.glyph_font_scale);\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Set Y positions for this note. Each Y value is associated with\n   * an individual pitch/key within the note/chord.\n   */\n  setYs(ys: number[]): this {\n    this.ys = ys;\n    return this;\n  }\n\n  /**\n   * Get Y positions for this note. Each Y value is associated with\n   * an individual pitch/key within the note/chord.\n   */\n  getYs(): number[] {\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  /**\n   * Get the Y position of the space above the stave onto which text can\n   * be rendered.\n   */\n  getYForTopText(text_line: number): number {\n    return this.checkStave().getYForTopText(text_line);\n  }\n\n  /** Return the voice that this note belongs in. */\n  getVoice(): Voice {\n    if (!this.voice) throw new RuntimeError('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  /** Attache this note to `voice`. */\n  setVoice(voice: Voice): this {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  /** Get the `TickContext` for this note. */\n  getTickContext(): TickContext {\n    if (!this.tickContext) throw new RuntimeError('NoTickContext', 'Note has no tick context.');\n    return this.tickContext;\n  }\n\n  /** Set the `TickContext` for this note. */\n  setTickContext(tc: TickContext): this {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  /** Accessor to duration. */\n  getDuration(): string {\n    return this.duration;\n  }\n\n  /** Accessor to isDotted. */\n  isDotted(): boolean {\n    return this.dots > 0;\n  }\n\n  /** Accessor to hasStem. */\n  hasStem(): boolean {\n    return false;\n  }\n\n  /** Accessor to note type. */\n  getNoteType(): string {\n    return this.noteType;\n  }\n\n  /** Get the beam. */\n  getBeam(): Beam | undefined {\n    return this.beam;\n  }\n\n  /** Check and get the beam. */\n  checkBeam(): Beam {\n    if (!this.beam) {\n      throw new RuntimeError('NoBeam', 'No beam attached to instance');\n    }\n    return this.beam;\n  }\n\n  /** Check it has a beam. */\n  hasBeam(): boolean {\n    return this.beam != undefined;\n  }\n\n  /** Set the beam. */\n  setBeam(beam: Beam): this {\n    this.beam = beam;\n    return this;\n  }\n\n  /** Attach this note to a modifier context. */\n  setModifierContext(mc?: ModifierContext): this {\n    this.modifierContext = mc;\n    return this;\n  }\n\n  /** Attach a modifier to this note. */\n  addModifier(a: number | Modifier, b: number | Modifier = 0): this {\n    let index: number;\n    let modifier: Modifier;\n\n    if (typeof a === 'object' && typeof b === 'number') {\n      index = b;\n      modifier = a;\n    } else {\n      throw new RuntimeError(\n        'WrongParams',\n        'Call signature to addModifier not supported, use addModifier(modifier, index) instead.'\n      );\n    }\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  /** Get the coordinates for where modifiers begin. */\n  // eslint-disable-next-line\n  getModifierStartXY(position?: number, index?: number, options?: any): { x: number; y: number } {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  /** Get the metrics for this note. */\n  getMetrics(): NoteMetrics {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    const modLeftPx = this.modifierContext ? this.modifierContext.state.left_shift : 0;\n    const modRightPx = this.modifierContext ? this.modifierContext.state.right_shift : 0;\n    const width = this.getWidth();\n    const glyphWidth = this.getGlyphWidth();\n    const notePx =\n      width -\n      modLeftPx - // subtract left modifiers\n      modRightPx - // subtract right modifiers\n      this.leftDisplacedHeadPx - // subtract left displaced head\n      this.rightDisplacedHeadPx; // subtract right displaced head\n\n    return {\n      // ----------\n      // NOTE: If you change this, remember to update MockTickable in the tests/ directory.\n      // --------------\n      width,\n      glyphWidth,\n      notePx,\n\n      // Modifier spacing.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n      rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n      glyphPx: 0,\n    };\n  }\n\n  /**\n   * Get the absolute `X` position of this note's tick context. This\n   * excludes x_shift, so you'll need to factor it in if you're\n   * looking for the post-formatted x-position.\n   */\n  getAbsoluteX(): number {\n    if (!this.tickContext) {\n      throw new RuntimeError('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.musicFont.lookupMetric('stave.padding');\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n\n  /** Set preformatted status. */\n  setPreFormatted(value: boolean): void {\n    this.preFormatted = value;\n  }\n\n  /** Get the direction of the stem. */\n  getStemDirection(): number {\n    throw new RuntimeError('NoStem', 'No stem attached to this note.');\n  }\n\n  /** Get the top and bottom `y` values of the stem. */\n  getStemExtents(): Record<string, number> {\n    throw new RuntimeError('NoStem', 'No stem attached to this note.');\n  }\n\n  /** Get the `x` coordinate to the right of the note. */\n  getTieRightX(): number {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += -this.width / 2 + this.width + 2;\n\n    return tieStartX;\n  }\n\n  /** Get the `x` coordinate to the left of the note. */\n  getTieLeftX(): number {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= this.width / 2 + 2;\n\n    return tieEndX;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { RuntimeError } from './util';\nimport { Flow } from './flow';\nimport { Stem, StemOptions } from './stem';\nimport { Glyph } from './glyph';\nimport { Note, NoteStruct } from './note';\nimport { GlyphProps } from './glyph';\n\nexport abstract class StemmableNote extends Note {\n  stem_direction?: number;\n  stem?: Stem;\n\n  protected flag?: Glyph;\n  protected stem_extension_override?: number;\n\n  constructor(note_struct: NoteStruct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n  }\n\n  // Get and set the note's `Stem`\n  getStem(): Stem | undefined {\n    return this.stem;\n  }\n\n  checkStem(): Stem {\n    if (!this.stem) {\n      throw new RuntimeError('NoStem', 'No stem attached to instance');\n    }\n    return this.stem;\n  }\n\n  setStem(stem: Stem): this {\n    this.stem = stem;\n    return this;\n  }\n\n  // Builds and sets a new stem\n  buildStem(): this {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag(category = 'flag'): void {\n    const { glyph } = this;\n\n    if (this.hasFlag()) {\n      const flagCode = this.getStemDirection() === Stem.DOWN ? glyph.code_flag_downstem : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n    }\n  }\n\n  // Get the custom glyph associated with the outer note head on the base of the stem.\n  getBaseCustomNoteHeadGlyph(): GlyphProps {\n    if (this.getStemDirection() === Stem.DOWN) {\n      return this.customGlyphs[this.customGlyphs.length - 1];\n    } else {\n      return this.customGlyphs[0];\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength(): number {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount(): number {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinimumLength(): number {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == undefined) length = 35;\n        break;\n      case '16':\n        length = this.beam == undefined ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == undefined ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == undefined ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == undefined ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection(): number {\n    if (!this.stem_direction) throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    return this.stem_direction;\n  }\n\n  setStemDirection(direction?: number): this {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n\n      // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n      // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n      const glyph = this.getBaseCustomNoteHeadGlyph() || this.getGlyph();\n\n      // Get the font-specific customizations for the note heads.\n      const offsets = this.musicFont.lookupMetric(`stem.noteHead.${glyph.code_head}`, {\n        offsetYBaseStemUp: 0,\n        offsetYTopStemUp: 0,\n        offsetYBaseStemDown: 0,\n        offsetYTopStemDown: 0,\n      });\n\n      // Configure the stem to use these offsets.\n      this.stem.setOptions({\n        stem_up_y_offset: offsets.offsetYTopStemUp, // glyph.stem_up_y_offset,\n        stem_down_y_offset: offsets.offsetYTopStemDown, // glyph.stem_down_y_offset,\n        stem_up_y_base_offset: offsets.offsetYBaseStemUp, // glyph.stem_up_y_base_offset,\n        stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n      });\n    }\n\n    // Reset and reformat everything.\n    this.reset();\n    if (this.hasFlag()) {\n      this.buildFlag();\n    }\n    this.beam = undefined;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX(): number {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX(): number {\n    return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension(): number {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != undefined) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === Stem.UP ? glyph.stem_up_extension : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height: number): this {\n    this.stem_extension_override = height - Stem.HEIGHT;\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents(): Record<string, number> {\n    if (!this.stem) throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    return this.stem.getExtents();\n  }\n\n  /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n  getYForTopText(textLine: number): number {\n    const stave = this.checkStave();\n    if (this.hasStem()) {\n      const extents = this.getStemExtents();\n      if (!extents) throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n\n      return Math.min(\n        stave.getYForTopText(textLine),\n        extents.topY - this.render_options.annotation_spacing * (textLine + 1)\n      );\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  }\n\n  /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n  getYForBottomText(textLine: number): number {\n    const stave = this.checkStave();\n    if (this.hasStem()) {\n      const extents = this.getStemExtents();\n      if (!extents) throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n\n      return Math.max(\n        stave.getYForTopText(textLine),\n        extents.baseY + this.render_options.annotation_spacing * textLine\n      );\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag(): boolean {\n    return Flow.getGlyphProps(this.duration).flag && !this.beam;\n  }\n\n  /** Post formats the note. */\n  postFormat(): this {\n    this.beam?.postFormat();\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  /** Renders the stem onto the canvas. */\n  drawStem(stemOptions: StemOptions): void {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stemOptions));\n    this.stem?.setContext(this.getContext()).draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError, log } from './util';\nimport { Flow } from './flow';\nimport { Note, NoteStruct } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph, GlyphProps } from './glyph';\nimport { RenderContext } from './types/common';\nimport { BoundingBox } from './boundingbox';\nimport { Stave } from './stave';\nimport { ElementStyle } from './element';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (NoteHead.DEBUG) log('Vex.Flow.NoteHead', args);\n}\n\nexport interface NoteHeadStruct extends NoteStruct {\n  glyph_font_scale?: number;\n  slashed?: boolean;\n  style?: ElementStyle;\n  stem_down_x_offset?: number;\n  stem_up_x_offset?: number;\n  custom_glyph_code?: string;\n  x_shift?: number;\n  line?: number;\n  stem_direction?: number;\n  displaced?: boolean;\n  //  duration: string;\n  note_type: string;\n  y?: number;\n  x?: number;\n  index?: number;\n}\n\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(\n  ctx: RenderContext,\n  duration: string,\n  x: number,\n  y: number,\n  stem_direction: number,\n  staveSpace: number\n) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n  /** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\n  static DEBUG: boolean;\n\n  glyph_code: string;\n\n  protected custom_glyph: boolean = false;\n  protected stem_up_x_offset: number = 0;\n  protected stem_down_x_offset: number = 0;\n  protected note_type: string;\n  protected displaced: boolean;\n  protected stem_direction: number;\n\n  protected x: number;\n  protected y: number;\n  protected line: number;\n  protected index?: number;\n  protected slashed: boolean;\n\n  static get CATEGORY(): string {\n    return 'notehead';\n  }\n\n  constructor(head_options: NoteHeadStruct) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line || 0;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.getGlyphProps(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`\n      );\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift || 0;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n      this.stem_up_x_offset = head_options.stem_up_x_offset || 0;\n      this.stem_down_x_offset = head_options.stem_down_x_offset || 0;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed || false;\n\n    this.render_options = {\n      ...this.render_options,\n      ...{\n        // font size for note heads\n        glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n        // number of stroke px to the left and right of head\n        stroke_px: 3,\n      },\n    };\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory(): string {\n    return NoteHead.CATEGORY;\n  }\n\n  /** Get the width of the notehead. */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /** Determine if the notehead is displaced. */\n  isDisplaced(): boolean {\n    return this.displaced === true;\n  }\n\n  /** Get the glyph data. */\n  getGlyph(): GlyphProps {\n    return this.glyph;\n  }\n\n  /** Set the X coordinate. */\n  setX(x: number): this {\n    this.x = x;\n    return this;\n  }\n\n  /** Get the Y coordinate. */\n  getY(): number {\n    return this.y;\n  }\n\n  /** Set the Y coordinate. */\n  setY(y: number): this {\n    this.y = y;\n    return this;\n  }\n\n  /** Get the stave line the notehead is placed on. */\n  getLine(): number {\n    return this.line;\n  }\n\n  /** Set the stave line the notehead is placed on. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Get the canvas `x` coordinate position of the notehead. */\n  getAbsoluteX(): number {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = Stem.WIDTH / 2;\n    const fontShift = this.musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n    const displacedFontShift = this.musicFont.lookupMetric('noteHead.displaced.shiftX', 0) * this.stem_direction;\n\n    return (\n      x +\n      fontShift +\n      (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0)\n    );\n  }\n\n  /** Get the `BoundingBox` for the `NoteHead`. */\n  getBoundingBox(): BoundingBox {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n    const spacing = this.checkStave().getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  /** Set notehead to a provided `stave`. */\n  setStave(stave: Stave): this {\n    const line = this.getLine();\n\n    this.stave = stave;\n    if (this.stave) {\n      this.setY(this.stave.getYForNote(line));\n      this.setContext(this.stave.getContext());\n    }\n    return this;\n  }\n\n  /** Pre-render formatting. */\n  preFormat(): this {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  /** Draw the notehead. */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let head_x = this.getAbsoluteX();\n    if (this.custom_glyph) {\n      // head_x += this.x_shift;\n      head_x += this.stem_direction === Stem.UP ? this.stem_up_x_offset : this.stem_down_x_offset;\n    }\n\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    if (this.style) {\n      this.applyStyle(ctx);\n    }\n\n    const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n    if (this.note_type === 's') {\n      const staveSpace = this.checkStave().getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n        font: this.musicFont,\n        category: this.custom_glyph ? `noteHead.custom.${categorySuffix}` : `noteHead.standard.${categorySuffix}`,\n      });\n    }\n\n    if (this.style) {\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { RuntimeError, log, midLine, warn } from './util';\nimport { Flow } from './flow';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { StemOptions } from './stem';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\nimport { KeyProps } from './types/common';\nimport { Beam } from './beam';\nimport { ModifierContext } from './modifiercontext';\nimport { ElementStyle } from './element';\nimport { Stave } from './stave';\nimport { Note, NoteStruct } from './note';\nimport { ModifierContextState } from './modifiercontext';\n\nexport interface StaveNoteHeadBounds {\n  y_top: number;\n  y_bottom: number;\n  displaced_x?: number;\n  non_displaced_x?: number;\n  highest_line: number;\n  lowest_line: number;\n  highest_displaced_line?: number;\n  lowest_displaced_line?: number;\n  highest_non_displaced_line: number;\n  lowest_non_displaced_line: number;\n}\n\nexport interface StaveNoteFormatSettings {\n  line: number;\n  maxLine: number;\n  minLine: number;\n  isrest: boolean;\n  stemDirection?: number;\n  stemMax: number;\n  stemMin: number;\n  voice_shift: number;\n  is_displaced: boolean;\n  note: StaveNote;\n}\n\nexport interface StaveNoteStruct extends NoteStruct {\n  stem_down_x_offset?: number;\n  stem_up_x_offset?: number;\n  stroke_px?: number;\n  glyph_font_scale?: number;\n  stem_direction?: number;\n  auto_stem: boolean;\n  octave_shift?: number;\n  clef: string;\n}\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(\n  ...args: // eslint-disable-next-line\n  any[]\n) {\n  if (StaveNote.DEBUG) log('Vex.Flow.StaveNote', args);\n}\n\nconst isInnerNoteIndex = (note: StaveNote, index: number) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest: StaveNoteFormatSettings, note: StaveNoteFormatSettings, dir: number) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest: StaveNoteFormatSettings, noteU: StaveNoteFormatSettings, noteL: StaveNoteFormatSettings) {\n  const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static DEBUG: boolean;\n\n  minLine: number = 0;\n  maxLine: number = 0;\n\n  protected readonly clef: string;\n  protected readonly octave_shift?: number;\n\n  protected displaced: boolean;\n  protected dot_shiftY: number;\n  protected use_default_head_x: boolean;\n  protected note_heads: NoteHead[];\n  protected ledgerLineStyle: ElementStyle;\n  protected flagStyle?: ElementStyle;\n\n  static get CATEGORY(): string {\n    return 'stavenotes';\n  }\n  static get STEM_UP(): number {\n    return Stem.UP;\n  }\n  static get STEM_DOWN(): number {\n    return Stem.DOWN;\n  }\n  static get DEFAULT_LEDGER_LINE_OFFSET(): number {\n    return 3;\n  }\n  static get minNoteheadPadding() {\n    const musicFont = Flow.DEFAULT_FONT_STACK[0];\n    return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n  }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes: StaveNote[], state: ModifierContextState): boolean {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      StaveNote.formatByY(notes, state);\n      return true;\n    }\n\n    const notesList: StaveNoteFormatSettings[] = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinimumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1 ? props[props.length - 1].line + stemMax : props[props.length - 1].line;\n\n        minL = stemDirection === 1 ? props[0].line : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection: stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : undefined;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection && noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    if (!noteM) throw new RuntimeError('InvalidState', 'noteM not defined.');\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n          // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3; // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n        // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if (\n      (!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n      (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)\n    ) {\n      xShift = voiceXShift + 3; // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes: StaveNote[], state: ModifierContextState): void {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != undefined;\n    }\n\n    if (!hasStave) {\n      throw new RuntimeError(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topStave = topNote.checkStave();\n      const topNoteBottomY = topStave.getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomStave = bottomNote.checkStave();\n      const bottomNoteTopY = bottomStave.getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding =\n        bottomNoteTopY != undefined && topNoteBottomY != undefined ? bottomNoteTopY - topNoteBottomY < 0 : false;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes: Note[]): boolean {\n    if (!notes) return false;\n\n    notes.forEach((note) => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct: StaveNoteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n    // Ledger Lines default width 2.0\n    this.ledgerLineStyle = { lineWidth: 2.0 };\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n\n    // Pull note rendering properties\n    this.glyph = Flow.getGlyphProps(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n    this.ledgerLineStyle = {};\n\n    this.render_options = {\n      ...this.render_options,\n      ...{\n        // font size for note heads and rests\n        glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n        // number of stroke px to the left and right of head\n        stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n      },\n    };\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset(): this {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this.note_heads.map((noteHead) => noteHead.getStyle());\n    this.buildNoteHeads();\n    this.note_heads.forEach((noteHead, index) => {\n      const noteHeadStyle = noteHeadStyles[index];\n      if (noteHeadStyle) noteHead.setStyle(noteHeadStyle);\n    });\n\n    const stave = this.stave;\n    if (stave) {\n      this.note_heads.forEach((head) => head.setStave(stave));\n    }\n    this.calcNoteDisplacements();\n    return this;\n  }\n\n  setBeam(beam: Beam): this {\n    this.beam = beam;\n    this.calcNoteDisplacements();\n    return this;\n  }\n\n  getCategory(): string {\n    return StaveNote.CATEGORY;\n  }\n\n  // Builds a `Stem` for the note\n  buildStem(): this {\n    this.setStem(new Stem({ hide: !!this.isRest() }));\n    return this;\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads(): void {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = undefined;\n    let lineDiff = undefined;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start: number;\n    let end: number;\n    let step: number;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === undefined) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        stem_up_x_offset: noteProps.stem_up_x_offset,\n        stem_down_x_offset: noteProps.stem_down_x_offset,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem(): void {\n    this.setStemDirection(this.calculateOptimalStemDirection());\n  }\n\n  calculateOptimalStemDirection(): number {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    return stemDirection;\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps(): void {\n    let lastLine: number | undefined;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine == undefined) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = undefined;\n    this.keyProps.forEach((key) => {\n      if (lastLine && key.line < lastLine) {\n        warn('Unsorted keys in note will be sorted. ' + 'See https://github.com/0xfe/vexflow/issues/104 for details.');\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox(): BoundingBox {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n\n    let minY: number = 0;\n    let maxY: number = 0;\n    const halfLineSpacing = (this.getStave()?.getSpacingBetweenLines() ?? 0) / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - this.glyph.line_above * lineSpacing;\n        maxY = y + this.glyph.line_below * lineSpacing;\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.getStemDirection();\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = 0;\n      maxY = 0;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note's line number instead\n  getLineNumber(isTopNote?: boolean): number {\n    if (!this.keyProps.length) {\n      throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest(): boolean {\n    return this.glyph.rest;\n  }\n\n  // Determine if the current note is a chord\n  isChord(): boolean {\n    return !this.isRest() && this.keys.length > 1;\n  }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem(): boolean {\n    return this.glyph.stem;\n  }\n\n  hasFlag(): boolean {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX(): number {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine: number): number {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.checkStave().getYForTopText(textLine),\n      extents.topY - this.render_options.annotation_spacing * (textLine + 1)\n    );\n  }\n  getYForBottomText(textLine: number): number {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.checkStave().getYForTopText(textLine),\n      extents.baseY + this.render_options.annotation_spacing * textLine\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map((notehead) => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys(): string[] {\n    return this.keys;\n  }\n\n  // Get the properties for all the keys in the note\n  getKeyProps(): KeyProps[] {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced(): boolean {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced: boolean): this {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX(): number {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getRightShift();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX(): number {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest(): number {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = midLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(\n    position: number,\n    index: number,\n    options: { forceFlagRight?: boolean } = {}\n  ): { x: number; y: number } {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // FIXME: Left modifier padding, move to font file\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // FIXME: Right modifier padding, move to font file\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (\n        this.stem_direction === Stem.UP &&\n        this.hasFlag() &&\n        (options.forceFlagRight || isInnerNoteIndex(this, index))\n      ) {\n        x += this?.flag?.getMetrics().width ?? 0;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style: ElementStyle): this {\n    super.setStyle(style);\n    this.note_heads.forEach((notehead) => notehead.setStyle(style));\n    this.stem?.setStyle(style);\n    return this;\n  }\n\n  setStemStyle(style: ElementStyle): this {\n    const stem = this.getStem();\n    stem?.setStyle(style);\n    return this;\n  }\n  getStemStyle(): ElementStyle | undefined {\n    return this.stem?.getStyle();\n  }\n\n  setLedgerLineStyle(style: ElementStyle): void {\n    this.ledgerLineStyle = style;\n  }\n\n  getLedgerLineStyle(): ElementStyle {\n    return this.ledgerLineStyle;\n  }\n\n  setFlagStyle(style: ElementStyle): void {\n    this.flagStyle = style;\n  }\n  getFlagStyle(): ElementStyle | undefined {\n    return this.flagStyle;\n  }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index: number, style: ElementStyle): this {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index: number, line: number): this {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index: number): number {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext: ModifierContext): this {\n    this.modifierContext = mContext;\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addMember(this.modifiers[i]);\n    }\n    this.modifierContext.addMember(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(a: number | Modifier, b: number | Modifier): this {\n    let index: number;\n    let modifier: Modifier;\n\n    if (typeof a === 'object' && typeof b === 'number') {\n      index = b;\n      modifier = a;\n    } else if (typeof a === 'number' && typeof b === 'object') {\n      // eslint-disable-next-line\n      console.warn('deprecated call signature to addModifier, use addModifier(modifier, index) instead');\n      index = a;\n      modifier = b;\n    } else {\n      throw new RuntimeError(\n        'WrongParams',\n        'Call signature to addModifier not supported, use addModifier(modifier, index) instead.'\n      );\n    }\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index: number, accidental: Modifier): this {\n    return this.addModifier(accidental, index);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index: number, articulation: Modifier): this {\n    return this.addModifier(articulation, index);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index: number, annotation: Modifier): this {\n    return this.addModifier(annotation, index);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index: number): this {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(dot, index);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll(): this {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals(): Modifier[] {\n    if (!this.modifierContext)\n      throw new RuntimeError('NoModifierContext', 'No modifier context attached to this note.');\n    return this.modifierContext.getMembers('accidentals') as Modifier[];\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots(): Modifier[] {\n    if (!this.modifierContext)\n      throw new RuntimeError('NoModifierContext', 'No modifier context attached to this note.');\n    return this.modifierContext.getMembers('dots') as Modifier[];\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth(): number {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcNoteDisplacements(): void {\n    this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setRightDisplacedHeadPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat(): void {\n    let noteHeadPadding = 0;\n    if (this.preFormatted) return;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      // If there are no modifiers on this note, make sure there is adequate padding\n      // between the notes.\n      if (this.modifierContext.getWidth() === 0) {\n        noteHeadPadding = StaveNote.minNoteheadPadding;\n      }\n    }\n    const glyphWidth = this.getGlyphWidth();\n    let noteWidth: number;\n\n    const flagWidth: number = this.flag?.getMetrics()?.width ?? 0;\n    if (this.shouldDrawFlag() && this.stem_direction === Stem.DOWN) {\n      noteWidth = Math.max(flagWidth + Flow.STEM_WIDTH, glyphWidth);\n    } else if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n      noteWidth = flagWidth + glyphWidth + Flow.STEM_WIDTH;\n    } else {\n      noteWidth = glyphWidth;\n    }\n    const width = noteWidth + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|false} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|false} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {noteHeadBounds}\n   */\n  getNoteHeadBounds(): StaveNoteHeadBounds {\n    // Top and bottom Y values for stem.\n    let yTop: number = +Infinity;\n    let yBottom: number = -Infinity;\n    let nonDisplacedX: number | undefined;\n    let displacedX: number | undefined;\n\n    let highestLine = this.checkStave().getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine: number | undefined;\n    let lowestDisplacedLine: number | undefined;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this.note_heads.forEach((notehead) => {\n      const line: number = notehead.getLine();\n      const y = notehead.getY();\n\n      yTop = Math.min(y, yTop);\n      yBottom = Math.max(y, yBottom);\n\n      if (displacedX === undefined && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = Math.max(line, highestLine);\n      lowestLine = Math.min(line, lowestLine);\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n        lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX(): number {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX(): number {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines(): void {\n    const stave = this.checkStave();\n    const {\n      glyph,\n      render_options: { stroke_px },\n    } = this;\n    const ctx = this.checkContext();\n    const width = glyph.getWidth() + stroke_px * 2;\n    const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - Stem.WIDTH / 2;\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    const min_x = Math.min(displaced_x ?? 0, non_displaced_x ?? 0);\n\n    const drawLedgerLine = (y: number, normal: boolean, displaced: boolean) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = (non_displaced_x ?? 0) - stroke_px;\n      else x = (displaced_x ?? 0) - stroke_px;\n      const ledgerWidth = normal && displaced ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = { ...(stave.getStyle() || {}), ...(this.getLedgerLineStyle() || {}) };\n    if (typeof style.lineWidth === 'undefined') {\n      style.lineWidth = Flow.STAVE_LINE_THICKNESS * 2;\n    } else {\n      style.lineWidth *= 2;\n    }\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n      const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n      const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers(): void {\n    const ctx = this.checkContext();\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const index = modifier.checkIndex();\n      const notehead = this.note_heads[index];\n      const noteheadStyle = notehead.getStyle();\n      notehead.applyStyle(ctx, noteheadStyle);\n      modifier.setContext(ctx);\n      modifier.drawWithStyle();\n      notehead.restoreStyle(ctx, noteheadStyle);\n    }\n    ctx.closeGroup();\n  }\n\n  shouldDrawFlag(): boolean {\n    const hasStem = this.stem !== undefined;\n    const hasFlag = this.glyph.flag as boolean; // specified in tables.js\n    const hasNoBeam = this.beam === undefined;\n    return hasStem && hasFlag && hasNoBeam;\n  }\n\n  // Draw the flag for the note\n  drawFlag(): void {\n    const ctx = this.checkContext();\n    if (!ctx) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (this.shouldDrawFlag()) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      // eslint-disable-next-line\n      const noteStemHeight = this.stem!.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n      // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n      // Alternatively, we could shorten the stem.\n      const flagY =\n        this.getStemDirection() === Stem.DOWN\n          ? // Down stems are below the note head and have flags on the right.\n            y_top - noteStemHeight + 2\n          : // Up stems are above the note head and have flags on the right.\n            y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', undefined, { pointerBBox: true });\n      this.applyStyle(ctx, this.getFlagStyle());\n      this.flag?.render(ctx, flagX, flagY);\n      this.restoreStyle(ctx, this.getFlagStyle());\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads(): void {\n    const ctx = this.checkContext();\n    this.note_heads.forEach((notehead) => {\n      ctx.openGroup('notehead', undefined, { pointerBBox: true });\n      notehead.setContext(ctx).draw();\n      ctx.closeGroup();\n    });\n  }\n\n  drawStem(stemOptions?: StemOptions): void {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    const ctx = this.checkContext();\n\n    if (stemOptions) {\n      this.setStem(new Stem(stemOptions));\n    }\n\n    // If we will render a flag, we shorten the stem so that the tip\n    // does not poke through the flag.\n    if (this.shouldDrawFlag() && this.stem) {\n      this.stem.adjustHeightForFlag();\n    }\n\n    ctx.openGroup('stem', undefined, { pointerBBox: true });\n    this.stem?.setContext(ctx).draw();\n    ctx.closeGroup();\n  }\n\n  /**\n   * Override stemmablenote stem extension to adjust for distance from middle line.\n   */\n  getStemExtension(): number {\n    const super_stem_extension = super.getStemExtension();\n    if (!this.glyph.stem) {\n      return super_stem_extension;\n    }\n\n    const stem_direction = this.getStemDirection();\n    if (stem_direction !== this.calculateOptimalStemDirection()) {\n      return super_stem_extension; // no adjustment for manually set stem direction.\n    }\n    let mid_line_distance;\n    const MIDDLE_LINE = 3;\n    if (stem_direction === Stem.UP) {\n      // Note that the use of maxLine here instead of minLine might\n      // seem counterintuitive, but in the case of (say) treble clef\n      // chord(F2, E4) stem up, we do not want to extend the stem because\n      // of F2, when a normal octave-length stem above E4 is fine.\n      //\n      // maxLine and minLine are set in calculateOptimalStemDirection() so\n      // will be known.\n      mid_line_distance = MIDDLE_LINE - this.maxLine;\n    } else {\n      mid_line_distance = this.minLine - MIDDLE_LINE;\n    }\n\n    // how many lines more than an octave is the relevant notehead?\n    const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n    if (lines_over_octave_from_mid_line <= 0) {\n      return super_stem_extension;\n    }\n    const stave = this.getStave();\n    let spacing_between_lines = 10;\n    if (stave != undefined) {\n      spacing_between_lines = stave.getSpacingBetweenLines();\n    }\n    return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw(): void {\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const ctx = this.checkContext();\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach((notehead) => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem?.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    this.setAttribute('el', ctx.openGroup('stavenote', this.getAttribute('id')));\n    this.drawLedgerLines();\n    ctx.openGroup('note', undefined, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    ctx.closeGroup();\n    this.drawModifiers();\n    ctx.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { RuntimeError } from './util';\nimport { StaveNote, StaveNoteStruct } from './stavenote';\nimport { Stem } from './stem';\nimport { Flow } from './flow';\n\nexport interface GraceNoteStruct extends StaveNoteStruct {\n  slash: boolean;\n}\nexport class GraceNote extends StaveNote {\n  protected slash: boolean;\n  protected slur: boolean;\n\n  static get CATEGORY(): string {\n    return 'gracenotes';\n  }\n\n  static get LEDGER_LINE_OFFSET(): number {\n    return 2;\n  }\n\n  static get SCALE(): number {\n    return 0.66;\n  }\n\n  constructor(note_struct: GraceNoteStruct) {\n    super({\n      ...{\n        glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n        stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n      },\n      ...note_struct,\n    });\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension(): number {\n    if (this.stem_extension_override) {\n      return this.stem_extension_override;\n    }\n\n    const glyph = this.getGlyph();\n    if (glyph) {\n      let ret = super.getStemExtension();\n      if (glyph.stem) {\n        const staveNoteScale = this.getStaveNoteScale();\n        ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n      }\n      return ret;\n    }\n\n    return 0;\n  }\n\n  getCategory(): string {\n    return GraceNote.CATEGORY;\n  }\n\n  // FIXME: move this to more basic class.\n  getStaveNoteScale(): number {\n    return this.render_options.glyph_font_scale / Flow.DEFAULT_NOTATION_FONT_SCALE;\n  }\n\n  draw(): void {\n    super.draw();\n    this.setRendered();\n    const stem = this.stem;\n    if (this.slash && stem) {\n      const staveNoteScale = this.getStaveNoteScale();\n\n      // some magic numbers are based on the staveNoteScale 0.66.\n      const offsetScale = staveNoteScale / 0.66;\n      let slashBBox = undefined;\n      const beam = this.beam;\n      if (beam) {\n        // FIXME: should render slash after beam?\n        if (!beam.postFormatted) {\n          beam.postFormat();\n        }\n\n        slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n          stem: 6 * offsetScale,\n          beam: 5 * offsetScale,\n        });\n      } else {\n        const stem_direction = this.getStemDirection();\n        const noteHeadBounds = this.getNoteHeadBounds();\n        const noteStemHeight = stem.getHeight();\n        let x = this.getAbsoluteX();\n        let y =\n          stem_direction === Stem.DOWN\n            ? noteHeadBounds.y_top - noteStemHeight\n            : noteHeadBounds.y_bottom - noteStemHeight;\n\n        const defaultStemExtention =\n          stem_direction === Stem.DOWN ? this.glyph.stem_down_extension : this.glyph.stem_up_extension;\n\n        let defaultOffsetY = Flow.STEM_HEIGHT;\n        defaultOffsetY -= defaultOffsetY / 2.8;\n        defaultOffsetY += defaultStemExtention;\n        y += defaultOffsetY * staveNoteScale * stem_direction;\n\n        const offsets =\n          stem_direction === Stem.UP\n            ? {\n                x1: 1,\n                y1: 0,\n                x2: 13,\n                y2: -9,\n              }\n            : {\n                x1: -4,\n                y1: 1,\n                x2: 13,\n                y2: 9,\n              };\n\n        x += offsets.x1 * offsetScale;\n        y += offsets.y1 * offsetScale;\n        slashBBox = {\n          x1: x,\n          y1: y,\n          x2: x + offsets.x2 * offsetScale,\n          y2: y + offsets.y2 * offsetScale,\n        };\n      }\n\n      // FIXME: avoide staff lines, leadger lines or others.\n\n      const ctx = this.checkContext();\n      ctx.save();\n      ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n      ctx.beginPath();\n      ctx.moveTo(slashBBox.x1, slashBBox.y1);\n      ctx.lineTo(slashBBox.x2, slashBBox.y2);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  calcBeamedNotesSlashBBox(\n    slashStemOffset: number,\n    slashBeamOffset: number,\n    protrusions: { beam: number; stem: number }\n  ): Record<string, number> {\n    const beam = this.beam;\n    if (!beam) throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n\n    const beam_slope = beam.slope;\n    const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n    const scaleX = isBeamEndNote ? -1 : 1;\n    const beam_angle = Math.atan(beam_slope * scaleX);\n\n    // slash line intersecting point on beam.\n    const iPointOnBeam = {\n      dx: Math.cos(beam_angle) * slashBeamOffset,\n      dy: Math.sin(beam_angle) * slashBeamOffset,\n    };\n\n    slashStemOffset *= this.getStemDirection();\n    const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n    const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n    const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n    const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n    const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n\n    const stemX = this.getStemX();\n    const stem0X = beam.notes[0].getStemX();\n    const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n\n    const ret = {\n      x1: stemX - protrusion_stem_dx,\n      y1: stemY + slashStemOffset - protrusion_stem_dy,\n      x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n      y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n    };\n    return ret;\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\n\nimport { RuntimeError } from './util';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { StaveNote } from './stavenote';\nimport { TabNote } from './tabnote';\nimport { ModifierContextState } from './modifiercontext';\nimport { GraceNote } from './gracenote';\n\nexport class Dot extends Modifier {\n  protected radius: number;\n  protected dot_shiftY: number;\n\n  static get CATEGORY(): string {\n    return 'dots';\n  }\n\n  // Arrange dots inside a ModifierContext.\n  static format(dots: Dot[], state: ModifierContextState): boolean {\n    const right_shift = state.right_shift;\n    const dot_spacing = 1;\n\n    if (!dots || dots.length === 0) return false;\n\n    const dot_list = [];\n    const max_shift_map: Record<string, number> = {};\n    for (let i = 0; i < dots.length; ++i) {\n      const dot = dots[i];\n      const note = dot.getNote();\n\n      let props;\n      let shift;\n\n      // If it's a StaveNote\n      if (note instanceof StaveNote) {\n        const index = dot.checkIndex();\n        props = note.getKeyProps()[index];\n        shift = note.getRightDisplacedHeadPx();\n      } else if (note instanceof TabNote) {\n        // Else it's a TabNote\n        props = { line: 0.5 }; // Shim key props for dot placement\n        shift = 0;\n      } else {\n        throw new RuntimeError('Internal', 'Unexpected instance.');\n      }\n\n      const note_id = note.getAttribute('id');\n      dot_list.push({ line: props.line, note, note_id, dot });\n      max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n    }\n\n    // Sort dots by line number.\n    dot_list.sort((a, b) => b.line - a.line);\n\n    let dot_shift = right_shift;\n    let x_width = 0;\n    let last_line = null;\n    let last_note = null;\n    let prev_dotted_space = null;\n    let half_shiftY = 0;\n\n    for (let i = 0; i < dot_list.length; ++i) {\n      const { dot, note, note_id, line } = dot_list[i];\n\n      // Reset the position of the dot every line.\n      if (line !== last_line || note !== last_note) {\n        dot_shift = max_shift_map[note_id];\n      }\n\n      if (!note.isRest() && line !== last_line) {\n        if (Math.abs(line % 1) === 0.5) {\n          // note is on a space, so no dot shift\n          half_shiftY = 0;\n        } else {\n          // note is on a line, so shift dot to space above the line\n          half_shiftY = 0.5;\n          if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n            // previous note on a space, so shift dot to space below the line\n            half_shiftY = -0.5;\n          } else if (line + half_shiftY === prev_dotted_space) {\n            // previous space is dotted, so shift dot to space below the line\n            half_shiftY = -0.5;\n          }\n        }\n      }\n\n      // convert half_shiftY to a multiplier for dots.draw()\n      if (note.isRest()) {\n        dot.dot_shiftY += -half_shiftY;\n      } else {\n        dot.dot_shiftY = -half_shiftY;\n      }\n      prev_dotted_space = line + half_shiftY;\n\n      dot.setXShift(dot_shift);\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\n      x_width = dot_shift > x_width ? dot_shift : x_width;\n      last_line = line;\n      last_note = note;\n    }\n\n    // Update state.\n    state.right_shift += x_width;\n    return true;\n  }\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.setAttribute('type', 'Dot');\n\n    this.position = Modifier.Position.RIGHT;\n\n    this.radius = 2;\n    this.setWidth(5);\n    this.dot_shiftY = 0;\n  }\n\n  getCategory(): string {\n    return Dot.CATEGORY;\n  }\n\n  setNote(note: Note): this {\n    this.note = note;\n    if (note.getCategory() === GraceNote.CATEGORY) {\n      this.radius *= 0.5;\n      this.setWidth(3);\n    }\n    return this;\n  }\n\n  setDotShiftY(y: number): this {\n    this.dot_shiftY = y;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const stave = note.checkStave();\n    const lineSpace = stave.getOptions().spacing_between_lines_px;\n\n    const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n\n    // Set the starting y coordinate to the base of the stem for TabNotes\n    if (note.getCategory() === TabNote.CATEGORY) {\n      start.y = note.getStemExtents().baseY;\n    }\n\n    const x = start.x + this.x_shift + this.width - this.radius;\n    const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n\n    ctx.beginPath();\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n    ctx.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { RuntimeError } from './util';\nimport { Flow } from './flow';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph, GlyphProps } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNoteStruct } from './stavenote';\nimport { ModifierContext } from './modifiercontext';\n\nexport interface TabNoteStruct extends StaveNoteStruct {\n  positions: { str: string; fret: string }[];\n}\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines: number, strings_used: number[]) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y: number, unused_strings: number[][], stave: Stave, stem_direction: number) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines: number[][] = [];\n\n  unused_strings.forEach((strings) => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString = strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys: number[] = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  protected ghost: boolean;\n  protected glyphs: GlyphProps[] = [];\n  protected positions: { str: string; fret: string }[];\n\n  static get CATEGORY(): string {\n    return 'tabnotes';\n  }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct: TabNoteStruct, draw_stem?: boolean) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    this.render_options = {\n      ...this.render_options,\n      ...{\n        // font size for note heads and rests\n        glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n        // Flag to draw a stem\n        draw_stem,\n        // Flag to draw dot modifiers\n        draw_dots: draw_stem,\n        // Flag to extend the main stem through the stave and fret positions\n        draw_stem_through_stave: false,\n        // vertical shift from stave line\n        y_shift: 0,\n        // normal glyph scale\n        scale: 1.0,\n        // default tablature font\n        font: '10pt Arial',\n      },\n    };\n\n    this.glyph = Flow.getGlyphProps(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset(): this {\n    if (this.stave) this.setStave(this.stave);\n    return this;\n  }\n\n  // The ModifierContext category\n  getCategory(): string {\n    return TabNote.CATEGORY;\n  }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost: boolean): this {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem(): boolean {\n    if (this.render_options.draw_stem) return true;\n    return false;\n  }\n\n  // Get the default stem extension for the note\n  getStemExtension(): number {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1 ? glyph.tabnote_stem_up_extension : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot(): this {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth(): void {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph as GlyphProps);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n    const ctx = stave.getContext();\n    this.setContext(ctx);\n\n    // Calculate the fret number width based on font used\n    if (ctx) {\n      this.width = 0;\n      for (let i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font as string);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions(): { str: string; fret: string }[] {\n    return this.positions;\n  }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc: ModifierContext): this {\n    this.modifierContext = mc;\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addMember(this.modifiers[i]);\n    }\n    this.modifierContext.addMember(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position: number, index: number): { x: number; y: number } {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2; // FIXME: modifier padding, move to font file\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // FIXME: modifier padding, move to font file\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest(): number {\n    return Number(this.positions[0].str);\n  }\n\n  // Pre-render formatting\n  preFormat(): void {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX(): number {\n    return this.getCenterGlyphX();\n  }\n\n  // Get the y position for the stem\n  getStemY(): number {\n    const num_lines = this.checkStave().getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.checkStave().getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents(): Record<string, number> {\n    return this.checkStem().getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag(): void {\n    const {\n      beam,\n      glyph,\n      stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n    const context = this.checkContext();\n\n    const shouldDrawFlag = beam == undefined && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - this.checkStem().getHeight();\n\n      const flag_code =\n        stem_direction === Stem.DOWN\n          ? glyph.code_flag_downstem // Down stems have flags on the left.\n          : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers(): void {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === Dot.CATEGORY && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.getContext());\n      modifier.drawWithStyle();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough(): void {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.checkContext();\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.checkStave().getNumLines();\n      const strings_used = this.positions.map((position) => Number(position.str));\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(stem_y, unused_strings, this.checkStave(), this.getStemDirection());\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach((bounds) => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions(): void {\n    const ctx = this.checkContext();\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + note_glyph_width / 2 - glyph.getWidth() / 2;\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw(): void {\n    const ctx = this.checkContext();\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == undefined && this.render_options.draw_stem;\n\n    ctx.openGroup('tabnote', undefined, { pointerBBox: true });\n    this.drawPositions();\n    this.drawStemThrough();\n\n    if (this.stem && render_stem) {\n      const stem_x = this.getStemX();\n      this.stem.setNoteHeadXBounds(stem_x, stem_x);\n      ctx.openGroup('stem', undefined, { pointerBBox: true });\n      this.stem.setContext(ctx).draw();\n      ctx.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n    ctx.closeGroup();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError } from './util';\nimport { Flow } from './flow';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\nimport { Note } from './note';\nimport { StemmableNote } from './stemmablenote';\nimport { Voice } from './voice';\nimport { RenderContext } from './types/common';\nimport { TabNote } from './tabnote';\nimport { StaveNote } from './stavenote';\n\nfunction calculateStemDirection(notes: StemmableNote[]) {\n  let lineSum = 0;\n  notes.forEach((note) => {\n    if (note.keyProps) {\n      note.keyProps.forEach((keyProp) => {\n        lineSum += keyProp.line - 3;\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote: StemmableNote, lastNote: StemmableNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nconst BEAM_LEFT = 'L';\nconst BEAM_RIGHT = 'R';\nconst BEAM_BOTH = 'B';\n\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n  render_options: {\n    flat_beam_offset?: number;\n    flat_beams: boolean;\n    secondary_break_ticks?: number;\n    show_stemlets: boolean;\n    beam_width: number;\n    max_slope: number;\n    min_slope: number;\n    slope_iterations: number;\n    slope_cost: number;\n    stemlet_extension: number;\n    partial_beam_length: number;\n    min_flat_beam_offset: number;\n  };\n  notes: StemmableNote[];\n  postFormatted: boolean;\n  slope: number = 0;\n\n  private readonly stem_direction: number;\n  private readonly ticks: number;\n\n  private y_shift: number = 0;\n  private break_on_indices: number[];\n  private beam_count: number;\n  private unbeamable?: boolean;\n  /**\n   * Get the default beam groups for a provided time signature.\n   * Attempt to guess if the time signature is not found in table.\n   * Currently this is fairly naive.\n   */\n  static getDefaultBeamGroups(time_sig: string): Fraction[] {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults: { [key: string]: [string] } = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups: string[] = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map((group) => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  /**\n   * A helper function to automatically build basic beams for a voice. For more\n   * complex auto-beaming use `Beam.generateBeams()`.\n   * @param voice the voice to generate the beams for\n   * @param stem_direction a stem direction to apply to the entire voice\n   * @param groups an array of `Fraction` representing beat groupings for the beam\n   */\n  static applyAndGetBeams(voice: Voice, stem_direction?: number, groups?: Fraction[]): Beam[] {\n    return Beam.generateBeams(voice.getTickables() as StemmableNote[], {\n      groups,\n      stem_direction,\n    });\n  }\n\n  /**\n   * A helper function to autimatically build beams for a voice with\n   * configuration options.\n   *\n   * Example configuration object:\n   *\n   * ```\n   * config = {\n   *   groups: [new Vex.Flow.Fraction(2, 8)],\n   *   stem_direction: -1,\n   *   beam_rests: true,\n   *   beam_middle_only: true,\n   *   show_stemlets: false\n   * };\n   * ```\n   * @param notes an array of notes to create the beams for\n   * @param config the configuration object\n   * @param config.stem_direction set to apply the same direction to all notes\n   * @param config.beam_rests set to `true` to include rests in the beams\n   * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n   * @param config.show_stemlets set to `true` to draw stemlets for rests\n   * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n   * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n   *\n   */\n  static generateBeams(\n    notes: StemmableNote[],\n    config: {\n      flat_beam_offset?: number;\n      flat_beams?: boolean;\n      secondary_breaks?: string;\n      show_stemlets?: boolean;\n      maintain_stem_directions?: boolean;\n      beam_middle_only?: boolean;\n      beam_rests?: boolean;\n      groups?: Fraction[];\n      stem_direction?: number;\n    }\n  ): Beam[] {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map((group) => {\n      if (!group.multiply) {\n        throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes: StemmableNote[] = notes;\n    let currentTickGroup = 0;\n    let noteGroups: StemmableNote[][] = [];\n    let currentGroup: StemmableNote[] = [];\n\n    function getTotalTicks(vf_notes: Note[]) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup: StemmableNote[] = [];\n      // number of ticks in current group\n      let currentGroupTotalTicks = new Fraction(0, 1);\n      unprocessedNotes.forEach((unprocessedNote) => {\n        nextGroup = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.getDuration()) < 8;\n        if (unbeamable && unprocessedNote.getTuplet()) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            const note = currentGroup.pop();\n            if (note) nextGroup.push(note);\n          }\n          noteGroups.push(currentGroup);\n\n          // We have overflown, so we're going to next tick group. As we might have\n          // overflown by more than 1 group, we need to go forward as many times as\n          // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n          // in current groups as we go forward.\n          do {\n            currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n            nextTickGroup();\n          } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n          currentGroup = nextGroup;\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroupTotalTicks = new Fraction(0, 1);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes beam\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n    function getBeamGroups() {\n      return noteGroups.filter((group) => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach((note) => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups: StemmableNote[][] = [];\n      noteGroups.forEach((group) => {\n        let tempGroup: StemmableNote[] = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest =\n            config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach((group) => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group: StemmableNote[]) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group: StemmableNote[], direction: number) {\n      group.forEach((note) => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets: Tuplet[] = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach((group) => {\n        let tuplet: Tuplet;\n        group.forEach((note) => {\n          const noteTuplet = note.getTuplet();\n          if (noteTuplet && tuplet !== noteTuplet) {\n            tuplet = noteTuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams: Beam[] = [];\n    beamedNoteGroups.forEach((group) => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach((tuplet) => {\n      // Set the tuplet location based on the stem direction\n      const direction =\n        (tuplet.notes[0] as StemmableNote).stem_direction === Stem.DOWN ? Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (!note.hasBeam()) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes: StemmableNote[], auto_stem: boolean = false) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes.length === 0) {\n      throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === StaveNote.CATEGORY) {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === TabNote.CATEGORY) {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  /** Get the notes in this beam. */\n  getNotes(): StemmableNote[] {\n    return this.notes;\n  }\n\n  /** Get the max number of beams in the set of notes. */\n  getBeamCount(): number {\n    const beamCounts = this.notes.map((note) => note.getGlyph().beam_count);\n\n    const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n\n    return maxBeamCount;\n  }\n\n  /** Set which note `indices` to break the secondary beam at. */\n  breakSecondaryAt(indices: number[]): this {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  /** Return the y coordinate for linear function. */\n  getSlopeY(x: number, first_x_px: number, first_y_px: number, slope: number): number {\n    return first_y_px + (x - first_x_px) * slope;\n  }\n\n  /** Calculate the best possible slope for the provided notes. */\n  calculateSlope(): void {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY =\n          this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else {\n          // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  /** Calculate a slope and y-shift for flat beams. */\n  calculateFlatSlope(): void {\n    const {\n      notes,\n      stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0; // Store the highest or lowest note here\n    let extremeBeamCount = 0; // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n    const newOffset = extremeY + extremeTest * -stem_direction;\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  /** Return the Beam y offset. */\n  getBeamYToDraw(): number {\n    const firstNote = this.notes[0];\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n    return beamY;\n  }\n\n  /**\n   * Create new stems for the notes in the beam, so that each stem\n   * extends into the beams.\n   */\n  applyStemExtensions(): void {\n    const {\n      notes,\n      slope,\n      y_shift,\n      stem_direction,\n      beam_count,\n      render_options: { show_stemlets, stemlet_extension, beam_width },\n    } = this;\n\n    const firstNote = notes[0];\n    const firstStemTipY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stem = note.getStem();\n      if (stem) {\n        const stemX = note.getStemX();\n        const { topY: stemTipY } = note.getStemExtents();\n        const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n        const preBeamExtension = stem.getExtension();\n        const beamExtension = stem_direction === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n\n        stem.setExtension(preBeamExtension + beamExtension);\n        stem.adjustHeightForBeam();\n\n        if (note.isRest() && show_stemlets) {\n          const beamWidth = beam_width;\n          const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n          stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n        }\n      } else {\n        throw new RuntimeError('NoStem', 'stem undefined.');\n      }\n    }\n  }\n\n  /** Return upper level beam direction. */\n  lookupBeamDirection(duration: string, prev_tick: number, tick: number, next_tick: number): string {\n    if (duration === '4') {\n      return BEAM_LEFT;\n    }\n\n    const lookup_duration = `${Flow.durationToNumber(duration) / 2}`;\n    const prev_note_gets_beam = prev_tick < Flow.durationToTicks(lookup_duration);\n    const next_note_gets_beam = next_tick < Flow.durationToTicks(lookup_duration);\n    const note_gets_beam = tick < Flow.durationToTicks(lookup_duration);\n\n    if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_BOTH;\n    } else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n      return BEAM_LEFT;\n    } else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_RIGHT;\n    }\n\n    return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick);\n  }\n\n  /** Get the x coordinates for the beam lines of specific `duration`. */\n  getBeamLines(duration: string): { start: number; end?: number }[] {\n    const tick_of_duration = Flow.durationToTicks(duration);\n    let beam_started = false;\n\n    type BeamInfo = { start: number; end?: number };\n    const beam_lines: BeamInfo[] = [];\n    let current_beam: BeamInfo | undefined = undefined;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.getTicks().value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n\n      const stem_x = note.getStemX() - Stem.WIDTH / 2;\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const prev_note = this.notes[i - 1];\n      const next_note = this.notes[i + 1];\n      const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n      const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n      const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: undefined };\n          beam_started = true;\n\n          if (beam_alone) {\n            // previous and next beam exists and does not get a beam but current gets it.\n            const prev_tick = prev_note.getIntrinsicTicks();\n            const next_tick = next_note.getIntrinsicTicks();\n            const tick = note.getIntrinsicTicks();\n            const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick);\n\n            if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n              current_beam.end = current_beam.start - partial_beam_length;\n            } else {\n              current_beam.end = current_beam.start + partial_beam_length;\n            }\n          } else if (!next_note_gets_beam) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === undefined) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  /** Render the stems for each note. */\n  protected drawStems(ctx: RenderContext): void {\n    this.notes.forEach((note) => {\n      const stem = note.getStem();\n      if (stem) {\n        stem.setContext(ctx).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  protected drawBeamLines(ctx: RenderContext): void {\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n    let beamY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        if (lastBeamX) {\n          const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n          ctx.beginPath();\n          ctx.moveTo(startBeamX, startBeamY);\n          ctx.lineTo(startBeamX, startBeamY + beamThickness);\n          ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n          ctx.lineTo(lastBeamX + 1, lastBeamY);\n          ctx.closePath();\n          ctx.fill();\n        } else {\n          throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n        }\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  /** Pre-format the beam. */\n  preFormat(): this {\n    return this;\n  }\n\n  /**\n   * Post-format the beam. This can only be called after\n   * the notes in the beam have both `x` and `y` values. ie: they've\n   * been formatted and have staves.\n   */\n  postFormat(): void {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === TabNote.CATEGORY || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  /** Render the beam to the canvas context */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems(ctx);\n    this.applyStyle();\n    this.drawBeamLines(ctx);\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError, check } from './util';\nimport { Element } from './element';\nimport { Flow } from './flow';\nimport { Fraction } from './fraction';\nimport { Stave } from './stave';\nimport { Note } from './note';\nimport { BoundingBox } from './boundingbox';\nimport { Tickable } from './tickable';\nimport { RenderContext } from './types/common';\n\nexport interface VoiceTime {\n  num_beats: number;\n  beat_value: number;\n  resolution: number;\n}\n\nexport enum VoiceMode {\n  STRICT = 1,\n  SOFT = 2,\n  FULL = 3,\n}\n\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n  protected resolutionMultiplier: number;\n  protected smallestTickCount: Fraction;\n  protected stave?: Stave;\n  protected mode: VoiceMode;\n  protected expTicksUsed?: number;\n  protected preFormatted?: boolean;\n  protected options: { softmaxFactor: number };\n\n  protected readonly totalTicks: Fraction;\n  protected readonly ticksUsed: Fraction;\n  protected readonly largestTickWidth: number;\n  protected readonly tickables: Note[];\n  protected readonly time: VoiceTime;\n\n  /**\n   * Modes allow the addition of ticks in three different ways:\n   * - STRICT: This is the default. Ticks must fill the voice.\n   * - SOFT: Ticks can be added without restrictions.\n   * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n   */\n  static get Mode(): typeof VoiceMode {\n    return VoiceMode;\n  }\n\n  constructor(time: VoiceTime | string, options?: { softmaxFactor: number }) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    this.options = {\n      softmaxFactor: 100,\n      ...options,\n    };\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof time === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: parseInt(match[1]),\n          beat_value: parseInt(match[2]),\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = {\n      ...{\n        num_beats: 4,\n        beat_value: 4,\n        resolution: Flow.RESOLUTION,\n      },\n      ...(time as VoiceTime),\n    };\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n  }\n\n  /** Get the total ticks in the voice. */\n  getTotalTicks(): Fraction {\n    return this.totalTicks;\n  }\n\n  /** Get the total ticks used in the voice by all the tickables. */\n  getTicksUsed(): Fraction {\n    return this.ticksUsed;\n  }\n\n  /** Get the largest width of all the tickables. */\n  getLargestTickWidth(): number {\n    return this.largestTickWidth;\n  }\n\n  /** Get the tick count for the shortest tickable */\n  getSmallestTickCount(): Fraction {\n    return this.smallestTickCount;\n  }\n\n  /** Get the tickables in the voice. */\n  getTickables(): Note[] {\n    return this.tickables;\n  }\n\n  /** Get the voice mode. */\n  getMode(): number {\n    return this.mode;\n  }\n\n  /**\n   * Set the voice mode.\n   * @param mode value from `Voice.Mode`\n   */\n  setMode(mode: number): this {\n    this.mode = mode;\n    return this;\n  }\n\n  /** Get the resolution multiplier for the voice. */\n  getResolutionMultiplier(): number {\n    return this.resolutionMultiplier;\n  }\n\n  /** Get the actual tick resolution for the voice. */\n  getActualResolution(): number {\n    return this.resolutionMultiplier * this.time.resolution;\n  }\n\n  /** Set the voice's stave. */\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    this.boundingBox = undefined; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  /** Get the bounding box for the voice. */\n  getBoundingBox(): BoundingBox | undefined {\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      boundingBox = undefined;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(check<Stave>(this.stave));\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  /** Set the voice mode to strict or soft. */\n  setStrict(strict: boolean): this {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  /** Determine if the voice is complete according to the voice mode. */\n  isComplete(): boolean {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * We use softmax to layout the tickables proportional to the exponent of\n   * their duration. The softmax factor is used to determine the 'linearness' of\n   * the layout.\n   *\n   * The softmax of all the tickables in this voice should sum to 1.\n   */\n  setSoftmaxFactor(factor: number): this {\n    this.options.softmaxFactor = factor;\n    return this;\n  }\n\n  /**\n   * Calculate the sum of the exponents of all the ticks in this voice to use\n   * as the denominator of softmax.\n   */\n  protected reCalculateExpTicksUsed(): number {\n    const totalTicks = this.ticksUsed.value();\n    const exp = (tickable: Tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n    this.expTicksUsed = this.tickables.map(exp).reduce((a, b) => a + b);\n    return this.expTicksUsed;\n  }\n\n  /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n  softmax(tickValue: number): number {\n    if (!this.expTicksUsed) {\n      this.expTicksUsed = this.reCalculateExpTicksUsed();\n    }\n\n    const totalTicks = this.ticksUsed.value();\n    const exp = (v: number) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n    const sm = exp(tickValue) / this.expTicksUsed;\n    return sm;\n  }\n\n  /** Add a tickable to the voice. */\n  addTickable(tickable: Note): this {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n      this.expTicksUsed = 0; // reset\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.ticksUsed.subtract(ticks);\n        throw new RuntimeError('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  /** Add an array of tickables to the voice. */\n  addTickables(tickables: Note[]): this {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  /** Preformat the voice by applying the voice's stave to each note. */\n  preFormat(): this {\n    if (this.preFormatted) return this;\n    const stave = check<Stave>(this.stave);\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  /**\n   * Render the voice onto the canvas `context` and an optional `stave`.\n   * If `stave` is omitted, it is expected that the notes have staves\n   * already set.\n   */\n  draw(context: RenderContext = this.checkContext(), stave: Stave | undefined = this.stave): void {\n    this.setRendered();\n    let boundingBox = undefined;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new RuntimeError('MissingStave', 'The voice cannot draw tickables without staves.');\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.drawWithStyle();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { Flow } from './flow';\nimport { Glyph } from './glyph';\nimport { FontInfo, RenderContext } from './types/common';\nimport { Stave } from './stave';\n\nfunction drawBoldDoubleLine(ctx: RenderContext, type: number, topX: number, topY: number, botY: number) {\n  if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n  protected thickness: number;\n  protected width: number;\n  protected font: FontInfo;\n  protected texts: {\n    content: string;\n    options: {\n      shift_x: number;\n      shift_y: number;\n    };\n  }[];\n\n  protected type: number;\n  protected x_shift: number;\n  protected top_stave: Stave;\n  protected bottom_stave: Stave;\n\n  /**\n   * SINGLE_LEFT and SINGLE are the same value for compatibility\n   * with older versions of vexflow which didn't have right sided\n   * stave connectors.\n   */\n  static readonly type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n  };\n\n  /**\n   * Connector type:\n   * * \"singleRight\"\n   * * \"singleLeft\"\n   * * \"single\"\n   * * \"double\"\n   * * \"brace\"\n   * * \"bracket\"\n   * * \"boldDoubleLeft\"\n   * * \"boldDoubleRight\"\n   * * \"thinDouble\"\n   * * \"none\"\n   */\n  static readonly typeString: Record<string, number> = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n  };\n\n  constructor(top_stave: Stave, bottom_stave: Stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  /**\n   * Set type.\n   * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n   */\n  setType(type: number | string): this {\n    type = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  /** Set optional associated Text. */\n  setText(\n    text: string,\n    options?: {\n      shift_x: number;\n      shift_y: number;\n    }\n  ): this {\n    this.texts.push({\n      content: text,\n      options: { ...{ shift_x: 0, shift_y: 0 }, ...options },\n    });\n    return this;\n  }\n\n  /** Set text font. */\n  setFont(font: FontInfo): void {\n    this.font = { ...this.font, ...font };\n  }\n\n  /** Set connector x shift. */\n  setXShift(x_shift: number): this {\n    if (typeof x_shift !== 'number') {\n      throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  /** Render connector and associated text. */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector =\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE;\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.getWidth();\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= this.width + 2;\n        topY -= this.thickness;\n        attachment_height += 0.5;\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - 0.9 * width;\n        const cpy1 = y1 + 0.2 * attachment_height;\n        const cpx2 = x1 + 1.1 * width;\n        const cpy2 = y2 - 0.135 * attachment_height;\n        const cpx3 = cpx2;\n        const cpy3 = y2 + 0.135 * attachment_height;\n        const cpx4 = cpx1;\n        const cpy4 = y3 - 0.2 * attachment_height;\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + 0.4 * width;\n        const cpy6 = y2 + 0.135 * attachment_height;\n        const cpx7 = cpx6;\n        const cpy7 = y2 - 0.135 * attachment_height;\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      }\n      case StaveConnector.type.BRACKET:\n        topY -= 6;\n        botY += 6;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n        Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n        topX -= this.width + 2;\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        attachment_height -= this.thickness;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.setLineWidth(2);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\n\nimport { RuntimeError } from './util';\nimport { Modifier } from './modifier';\nimport { FontInfo } from './types/common';\nimport { StaveNote } from './stavenote';\nimport { Builder } from './easyscore';\nimport { ModifierContextState } from './modifiercontext';\n\n/**\n * @constructor\n */\nexport class FretHandFinger extends Modifier {\n  protected finger: string;\n  protected x_offset: number;\n  protected y_offset: number;\n  protected font: FontInfo;\n\n  static get CATEGORY(): string {\n    return 'frethandfinger';\n  }\n\n  // Arrange fingerings inside a ModifierContext.\n  static format(nums: FretHandFinger[], state: ModifierContextState): boolean {\n    const { left_shift, right_shift } = state;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shiftLeft = 0;\n    let shiftRight = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote() as StaveNote;\n      const pos = num.getPosition();\n      const index = num.checkIndex();\n      const props = note.getKeyProps()[index];\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          if (left_shift === 0) {\n            shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n          }\n          if (right_shift === 0) {\n            shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n          }\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({\n        note,\n        num,\n        pos,\n        line: props.line,\n        shiftL: shiftLeft,\n        shiftR: shiftRight,\n      });\n    }\n\n    // Sort fingernumbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let numShiftL = 0;\n    let numShiftR = 0;\n    let xWidthL = 0;\n    let xWidthR = 0;\n    let lastLine = null;\n    let lastNote = null;\n\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n\n      // Reset the position of the string number every line.\n      if (line !== lastLine || note !== lastNote) {\n        numShiftL = left_shift + shiftL;\n        numShiftR = right_shift + shiftR;\n      }\n\n      const numWidth = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift + numShiftL);\n        num_shift = left_shift + numWidth; // spacing\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(numShiftR);\n        num_shift = shiftRight + numWidth; // spacing\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n      }\n      lastLine = line;\n      lastNote = note;\n    }\n\n    state.left_shift += xWidthL;\n    state.right_shift += xWidthR;\n\n    return true;\n  }\n\n  static easyScoreHook({ fingerings }: { fingerings?: string } = {}, note: StaveNote, builder: Builder): void {\n    if (!fingerings) return;\n\n    fingerings\n      .split(',')\n      .map((fingeringString: string) => {\n        const split = fingeringString.trim().split('.');\n        const params: { number: string; position?: string } = { number: split[0] };\n        if (split[1]) params.position = split[1];\n        return builder.getFactory().Fingering(params);\n      })\n      .map((fingering: Modifier, index: number) => note.addModifier(fingering, index));\n  }\n\n  constructor(finger: string) {\n    super();\n    this.setAttribute('type', 'FretHandFinger');\n\n    this.finger = finger;\n    this.width = 7;\n    this.position = Modifier.Position.LEFT; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory(): string {\n    return FretHandFinger.CATEGORY;\n  }\n\n  setFretHandFinger(finger: string): this {\n    this.finger = finger;\n    return this;\n  }\n\n  getFretHandFinger(): string {\n    return this.finger;\n  }\n\n  setOffsetX(x: number): this {\n    this.x_offset = x;\n    return this;\n  }\n\n  setOffsetY(y: number): this {\n    this.y_offset = y;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(this.position, this.index);\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n        dot_x -= 4;\n        dot_y -= 12;\n        break;\n      case Modifier.Position.BELOW:\n        dot_x -= 2;\n        dot_y += 10;\n        break;\n      case Modifier.Position.LEFT:\n        dot_x -= this.width;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += 1;\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n    }\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    ctx.fillText('' + this.finger, dot_x, dot_y);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Flow } from './flow';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { RenderContext } from './types/common';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY(): string {\n    return 'notesubgroup';\n  }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups: NoteSubGroup[], state: ModifierContextState): boolean {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  protected subNotes: Note[];\n  protected preFormatted: boolean;\n  protected formatter: Formatter;\n  protected voice: Voice;\n\n  constructor(subNotes: Note[]) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach((subNote) => {\n      subNote.setIgnoreTicks(false);\n    });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n  }\n\n  getCategory(): string {\n    return NoteSubGroup.CATEGORY;\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  draw(): void {\n    const ctx: RenderContext = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n    this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n    this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\n\nimport { RuntimeError } from './util';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { FontInfo } from './types/common';\nimport { TabNote } from './tabnote';\nimport { ModifierContextState } from './modifiercontext';\n\nexport class Stroke extends Modifier {\n  protected options: {\n    all_voices: boolean;\n  };\n  protected all_voices: boolean;\n  protected type: number;\n\n  protected note_end?: Note;\n  protected render_options: {\n    font_scale: number;\n    stroke_px: number;\n    stroke_spacing: number;\n  };\n  protected font: FontInfo;\n\n  static get CATEGORY(): string {\n    return 'strokes';\n  }\n\n  static readonly Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3, // Arpeggiated chord\n    ROLL_UP: 4, // Arpeggiated chord\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n  };\n\n  // Arrange strokes inside `ModifierContext`\n  static format(strokes: Stroke[], state: ModifierContextState): boolean {\n    const left_shift = state.left_shift;\n    const stroke_spacing = 0;\n\n    if (!strokes || strokes.length === 0) return false;\n\n    const strokeList = strokes.map((stroke) => {\n      const note = stroke.getNote();\n      const index = stroke.checkIndex();\n      if (note instanceof StaveNote) {\n        const { line } = note.getKeyProps()[index];\n        const shift = note.getLeftDisplacedHeadPx();\n        return { line, shift, stroke };\n      } else if (note instanceof TabNote) {\n        const { str: string } = note.getPositions()[index];\n        return { line: string, shift: 0, stroke };\n      } else {\n        throw new RuntimeError('Internal', 'Unexpexted');\n      }\n    });\n\n    const strokeShift = left_shift;\n\n    // There can only be one stroke .. if more than one, they overlay each other\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n      stroke.setXShift(strokeShift + shift);\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n    }, 0);\n\n    state.left_shift += xShift;\n\n    return true;\n  }\n\n  constructor(type: number, options: { all_voices: boolean }) {\n    super();\n    this.setAttribute('type', 'Stroke');\n\n    this.options = { ...options };\n\n    // multi voice - span stroke across all voices if true\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\n\n    // multi voice - end note of stroke, set in draw()\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      font_scale: 38,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'serif',\n      size: 10,\n      weight: 'bold italic',\n    };\n\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n\n  getCategory(): string {\n    return Stroke.CATEGORY;\n  }\n\n  getPosition(): number {\n    return this.position;\n  }\n\n  addEndNote(note: Note): this {\n    this.note_end = note;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(this.position, this.index);\n    let ys = note.getYs();\n    let topY = start.y;\n    let botY = start.y;\n    const x = start.x - 5;\n    const line_space = note.checkStave().getOptions().spacing_between_lines_px;\n\n    const notes = this.checkModifierContext().getMembers(note.getCategory());\n    for (let i = 0; i < notes.length; i++) {\n      const note = notes[i];\n      if (note instanceof Note) {\n        ys = note.getYs();\n        for (let n = 0; n < ys.length; n++) {\n          if (this.note === notes[i] || this.all_voices) {\n            topY = Math.min(topY, ys[n]);\n            botY = Math.max(botY, ys[n]);\n          }\n        }\n      }\n    }\n\n    let arrow = '';\n    let arrow_shift_x = 0;\n    let arrow_y = 0;\n    let text_shift_x = 0;\n    let text_y = 0;\n\n    switch (this.type) {\n      case Stroke.Type.BRUSH_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        arrow_y = topY - line_space / 2 + 10;\n        botY += line_space / 2;\n        break;\n      case Stroke.Type.BRUSH_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = 0.5;\n        arrow_y = botY + line_space / 2;\n        topY -= line_space / 2;\n        break;\n      case Stroke.Type.ROLL_DOWN:\n      case Stroke.Type.RASQUEDO_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\n        if (note instanceof StaveNote) {\n          topY += 1.5 * line_space;\n          if ((botY - topY) % 2 !== 0) {\n            botY += 0.5 * line_space;\n          } else {\n            botY += line_space;\n          }\n          arrow_y = topY - line_space;\n          text_y = botY + line_space + 2;\n        } else {\n          topY += 1.5 * line_space;\n          botY += line_space;\n          arrow_y = topY - 0.75 * line_space;\n          text_y = botY + 0.25 * line_space;\n        }\n        break;\n      case Stroke.Type.ROLL_UP:\n      case Stroke.Type.RASQUEDO_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = -4;\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\n        if (note instanceof StaveNote) {\n          arrow_y = line_space / 2;\n          topY += 0.5 * line_space;\n          if ((botY - topY) % 2 === 0) {\n            botY += line_space / 2;\n          }\n          arrow_y = botY + 0.5 * line_space;\n          text_y = topY - 1.25 * line_space;\n        } else {\n          topY += 0.25 * line_space;\n          botY += 0.5 * line_space;\n          arrow_y = botY + 0.25 * line_space;\n          text_y = topY - line_space;\n        }\n        break;\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n        topY += 0.5 * line_space;\n        botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n        break;\n      default:\n        throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n    }\n\n    let strokeLine = 'straight';\n    // Draw the stroke\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n      ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n    } else {\n      strokeLine = 'wiggly';\n      if (note instanceof StaveNote) {\n        for (let i = topY; i <= botY; i += line_space) {\n          Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n        }\n      } else {\n        let i;\n        for (i = topY; i <= botY; i += 10) {\n          Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n        }\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n          text_y = i + 0.25 * line_space;\n        }\n      }\n    }\n\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n      return; // skip drawing arrow heads or text\n    }\n\n    // Draw the arrow head\n    Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n      category: `stroke.${arrow}.${strokeLine}`,\n    });\n\n    // Draw the rasquedo \"R\"\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText('R', x + text_shift_x, text_y);\n      ctx.restore();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RenderContext } from './types/common';\nimport { warn } from './util';\n\n/**\n * A rendering context for the Canvas backend (CanvasRenderingContext2D).\n */\nexport class CanvasContext implements RenderContext {\n  vexFlowCanvasContext: CanvasRenderingContext2D;\n  canvas: HTMLCanvasElement | { width: number; height: number };\n  background_fillStyle?: string;\n\n  static get WIDTH(): number {\n    return 600;\n  }\n  static get HEIGHT(): number {\n    return 400;\n  }\n  static get CANVAS_BROWSER_SIZE_LIMIT(): number {\n    return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n  }\n\n  static SanitizeCanvasDims(width: number, height: number): [number, number] {\n    if (Math.max(width, height) > this.CANVAS_BROWSER_SIZE_LIMIT) {\n      warn('Canvas dimensions exceed browser limit. Cropping to ' + this.CANVAS_BROWSER_SIZE_LIMIT);\n      if (width > this.CANVAS_BROWSER_SIZE_LIMIT) {\n        width = this.CANVAS_BROWSER_SIZE_LIMIT;\n        // note: Math.min return 0 for undefined, NaN for null. Would change inputs.\n      }\n      if (height > this.CANVAS_BROWSER_SIZE_LIMIT) {\n        height = this.CANVAS_BROWSER_SIZE_LIMIT;\n      }\n    }\n    return [width, height];\n  }\n\n  /**\n   * This constructor is only called if Renderer.USE_CANVAS_PROXY is true.\n   * In most instances, we do not need to create a CanvasContext object.\n   * See Renderer.bolsterCanvasContext().\n   * @param context\n   */\n  constructor(context: CanvasRenderingContext2D) {\n    // Use a name that is unlikely to clash with a canvas context property.\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear(): void {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // eslint-disable-next-line\n  openGroup(cls: string, id?: string, attrs?: { pointerBBox: boolean }): any {\n    // Containers not implemented.\n  }\n\n  closeGroup(): void {\n    // Containers not implemented.\n  }\n\n  // eslint-disable-next-line\n  add(child: any): void {\n    // Containers not implemented.\n  }\n\n  setFont(family: string, size: number, weight: string): this {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font: string): this {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style: string): this {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  // TODO: What is this method supposed to do?\n  // The SVGContext version doesn't do much...\n  // It only fills the area behind some tab number annotations.\n  setBackgroundFillStyle(style: string): this {\n    /*\n    // Should it fill the entire canvas rect? For example:\n    const oldFillStyle = this.vexFlowCanvasContext.fillStyle;\n    this.vexFlowCanvasContext.fillStyle = style;\n    this.vexFlowCanvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.vexFlowCanvasContext.fillStyle = oldFillStyle;\n    */\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style: string): this {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(color: string): this {\n    this.vexFlowCanvasContext.shadowColor = color;\n    return this;\n  }\n\n  setShadowBlur(blur: number): this {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width: number): this {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(capType: CanvasLineCap): this {\n    this.vexFlowCanvasContext.lineCap = capType;\n    return this;\n  }\n\n  // setLineDash is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see Renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash: number[]): this {\n    // eslint-disable-next-line\n    (this.vexFlowCanvasContext as any).lineDash = dash;\n    return this;\n  }\n\n  // Only called if Renderer.USE_CANVAS_PROXY is true.\n  scale(x: number, y: number): this {\n    this.vexFlowCanvasContext.scale(x, y);\n    return this;\n  }\n\n  // renderer.js calls ctx.scale() instead, so this method is never used.\n  // eslint-disable-next-line\n  resize(width: number, height: number): this {\n    // Do nothing for now.\n    // CanvasRenderingContext2D does not have a resize function.\n    return this;\n  }\n\n  rect(x: number, y: number, width: number, height: number): this {\n    this.vexFlowCanvasContext.rect(x, y, width, height);\n    return this;\n  }\n\n  fillRect(x: number, y: number, width: number, height: number): this {\n    this.vexFlowCanvasContext.fillRect(x, y, width, height);\n    return this;\n  }\n\n  clearRect(x: number, y: number, width: number, height: number): this {\n    this.vexFlowCanvasContext.clearRect(x, y, width, height);\n    return this;\n  }\n\n  beginPath(): this {\n    this.vexFlowCanvasContext.beginPath();\n    return this;\n  }\n\n  moveTo(x: number, y: number): this {\n    this.vexFlowCanvasContext.moveTo(x, y);\n    return this;\n  }\n\n  lineTo(x: number, y: number): this {\n    this.vexFlowCanvasContext.lineTo(x, y);\n    return this;\n  }\n\n  bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): this {\n    this.vexFlowCanvasContext.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    return this;\n  }\n\n  quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): this {\n    this.vexFlowCanvasContext.quadraticCurveTo(cpx, cpy, x, y);\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas arc method.\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean): this {\n    this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n    return this;\n  }\n\n  glow(): this {\n    // Do nothing for now.\n    // CanvasRenderingContext2D does not have a glow function.\n    return this;\n  }\n\n  fill(): this {\n    this.vexFlowCanvasContext.fill();\n    return this;\n  }\n\n  stroke(): this {\n    this.vexFlowCanvasContext.stroke();\n    return this;\n  }\n\n  closePath(): this {\n    this.vexFlowCanvasContext.closePath();\n    return this;\n  }\n\n  measureText(text: string): TextMetrics {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text: string, x: number, y: number): this {\n    this.vexFlowCanvasContext.fillText(text, x, y);\n    return this;\n  }\n\n  save(): this {\n    this.vexFlowCanvasContext.save();\n    return this;\n  }\n\n  restore(): this {\n    this.vexFlowCanvasContext.restore();\n    return this;\n  }\n\n  /** Maintain compatibility with the CanvasRenderingContext2D API. */\n  set font(value: string) {\n    this.vexFlowCanvasContext.font = value;\n  }\n\n  /** Maintain compatibility with the CanvasRenderingContext2D API. */\n  set fillStyle(style: string) {\n    this.vexFlowCanvasContext.fillStyle = style;\n  }\n\n  /** Maintain compatibility with the CanvasRenderingContext2D API. */\n  set strokeStyle(style: string) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\n\nimport { RuntimeError, prefix } from './util';\nimport { RenderContext } from './types/common';\n\n// eslint-disable-next-line\ntype Attributes = { [key: string]: any };\n\nconst attrNamesToIgnoreMap: { [nodeName: string]: Attributes } = {\n  path: {\n    x: true,\n    y: true,\n    width: true,\n    height: true,\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  },\n  rect: {\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  },\n  text: {\n    width: true,\n    height: true,\n  },\n};\n\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\ninterface State {\n  state: Attributes;\n  attributes: Attributes;\n  shadow_attributes: Attributes;\n  lineWidth: number;\n}\n\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext implements RenderContext {\n  element: HTMLElement; // the parent DOM object\n  svg: SVGSVGElement;\n  width: number = 0;\n  height: number = 0;\n  path: string;\n  pen: { x: number; y: number };\n  lineWidth: number;\n  attributes: Attributes;\n  background_attributes: Attributes;\n  shadow_attributes: Attributes;\n  state: Attributes;\n  state_stack: State[];\n  parent: SVGGElement;\n  groups: SVGGElement[];\n  fontSize: number = 0;\n  ie!: boolean; // true if the browser is Internet Explorer.\n\n  constructor(element: HTMLElement) {\n    this.element = element;\n\n    const svg = this.create('svg') as SVGSVGElement;\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: NaN, y: NaN };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    const defaultAttributes = {\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      fill: 'black',\n      stroke: 'black',\n      ...defaultAttributes,\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      fill: 'white',\n      stroke: 'white',\n      ...defaultAttributes,\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType: string): SVGElement {\n    return document.createElementNS(SVG_NS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls: string, id?: string, attrs?: { pointerBBox: boolean }): SVGGElement {\n    const group: SVGGElement = this.create('g') as SVGGElement;\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', prefix(cls));\n    if (id) group.setAttribute('id', prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup(): void {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem: SVGElement): void {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout. See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill(): void {\n    if (typeof navigator !== 'undefined') {\n      this.ie =\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent);\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family: string, size: number, weight: string): this {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n      // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n      // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n      // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = typeof weight === 'undefined' || weight === '' ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    this.attributes = { ...this.attributes, ...fontAttributes };\n    this.state = { ...this.state, ...fontAttributes };\n\n    return this;\n  }\n\n  setRawFont(font: string): this {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    const family = fontArray[1];\n    const size = fontArray[0];\n\n    this.attributes['font-family'] = family;\n    this.state['font-family'] = family;\n\n    this.attributes['font-size'] = size;\n    this.state['font-size'] = size;\n\n    // Saves fontSize for IE polyfill.\n    // Use the Number() function to parse the array returned by String.prototype.match()!\n    this.fontSize = Number(size.match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style: string): this {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style: string): this {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style: string): this {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(color: string): this {\n    this.shadow_attributes.color = color;\n    return this;\n  }\n\n  /**\n   * @param blur A non-negative float specifying the level of shadow blur, where 0\n   *             represents no blur and larger numbers represent increasingly more blur.\n   * @returns this\n   */\n  setShadowBlur(blur: number): this {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  /**\n   * @param width\n   * @returns this\n   */\n  setLineWidth(width: number): this {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n    return this;\n  }\n\n  /**\n   * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n   * @returns this\n   *\n   * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n   */\n  setLineDash(lineDash: number[]): this {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      this.attributes['stroke-dasharray'] = lineDash.join(',');\n      return this;\n    } else {\n      throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  /**\n   * @param capType\n   * @returns this\n   */\n  setLineCap(capType: CanvasLineCap): this {\n    this.attributes['stroke-linecap'] = capType;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- separate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width.toString();\n\n    this.svg.style.width = width.toString();\n    this.svg.style.height = height.toString();\n\n    const attributes = {\n      width,\n      height,\n    };\n\n    this.applyAttributes(this.svg, attributes);\n    this.scale(this.state.scale.x, this.state.scale.y);\n    return this;\n  }\n\n  scale(x: number, y: number): this {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  /**\n   * 1 arg: string in the \"x y w h\" format\n   * 4 args: x:number, y:number, w:number, h:number\n   */\n  setViewBox(viewBox_or_minX: string | number, minY?: number, width?: number, height?: number): void {\n    if (typeof viewBox_or_minX === 'string') {\n      this.svg.setAttribute('viewBox', viewBox_or_minX);\n    } else {\n      const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element: SVGElement, attributes: Attributes): SVGElement {\n    const attrNamesToIgnore = attrNamesToIgnoreMap[element.nodeName];\n    Object.keys(attributes).forEach((propertyName) => {\n      if (attrNamesToIgnore && attrNamesToIgnore[propertyName]) {\n        return;\n      }\n      element.setAttributeNS(null, propertyName, attributes[propertyName]);\n    });\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear(): void {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n  rect(x: number, y: number, width: number, height: number, attributes?: Attributes): this {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle: SVGRectElement = this.create('rect') as SVGRectElement;\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    attributes = { ...attributes, x, y, width, height };\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x: number, y: number, width: number, height: number): this {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x: number, y: number, width: number, height: number): this {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a separate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath(): this {\n    this.path = '';\n    this.pen.x = NaN;\n    this.pen.y = NaN;\n    return this;\n  }\n\n  moveTo(x: number, y: number): this {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x: number, y: number): this {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): this {\n    this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): this {\n    this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas arc method.\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean): this {\n    function normalizeAngle(angle: number) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    // Swap the start and end angles if necessary.\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x: number, y: number, radius: number, startAngle: number, endAngle: number, antiClockwise: boolean): void {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += `M${x1} ${y1} A${radius} ${radius} 0 ${largeArcFlag} ${sweepFlag} ${x2} ${y2}`;\n\n    if (!isNaN(this.pen.x) && !isNaN(this.pen.y)) {\n      this.path += 'M' + this.pen.x + ' ' + this.pen.y;\n    }\n  }\n\n  closePath(): this {\n    this.path += 'Z';\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow(): this {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes: Attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(((sa.width * 0.4) / num_paths) * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes: Attributes): this {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = { ...this.attributes, stroke: 'none' };\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke(): this {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes: Attributes = {\n      ...this.attributes,\n      fill: 'none',\n      'stroke-width': this.lineWidth,\n      d: this.path,\n    };\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text: string): SVGRect {\n    const txt = this.create('text') as SVGTextElement;\n    if (typeof txt.getBBox !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 } as SVGRect;\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox: SVGRect = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox: DOMRect): SVGRect {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = m * fontSize + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box as SVGRect;\n  }\n\n  fillText(text: string, x: number, y: number): this {\n    if (!text || text.length <= 0) {\n      return this;\n    }\n    const attributes: Attributes = {\n      ...this.attributes,\n      stroke: 'none',\n      x,\n      y,\n    };\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n    return this;\n  }\n\n  save(): this {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n        scale: this.state.scale,\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n      lineWidth: this.lineWidth,\n    });\n    return this;\n  }\n\n  restore(): this {\n    // TODO(0xfe): State needs to be deep-restored.\n    const savedState = this.state_stack.pop();\n    if (savedState) {\n      const state = savedState;\n      this.state['font-family'] = state.state['font-family'];\n      this.state['font-weight'] = state.state['font-weight'];\n      this.state['font-style'] = state.state['font-style'];\n      this.state['font-size'] = state.state['font-size'];\n      this.state.scale = state.state.scale;\n\n      this.attributes['font-family'] = state.attributes['font-family'];\n      this.attributes['font-weight'] = state.attributes['font-weight'];\n      this.attributes['font-style'] = state.attributes['font-style'];\n      this.attributes['font-size'] = state.attributes['font-size'];\n\n      this.attributes.fill = state.attributes.fill;\n      this.attributes.stroke = state.attributes.stroke;\n      this.attributes['stroke-width'] = state.attributes['stroke-width'];\n      this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n      this.shadow_attributes.width = state.shadow_attributes.width;\n      this.shadow_attributes.color = state.shadow_attributes.color;\n\n      this.lineWidth = state.lineWidth;\n    }\n    return this;\n  }\n\n  /** Maintain compatibility with the CanvasRenderingContext2D API. */\n  set font(value: string) {\n    this.setRawFont(value);\n  }\n\n  /** Maintain compatibility with the CanvasRenderingContext2D API. */\n  set fillStyle(style: string) {\n    this.setFillStyle(style);\n  }\n\n  /** Maintain compatibility with the CanvasRenderingContext2D API. */\n  set strokeStyle(style: string) {\n    this.setStrokeStyle(style);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { RenderContext } from './types/common';\nimport { RuntimeError } from './util';\n\n// A ContextBuilder is either Renderer.getSVGContext or Renderer.getCanvasContext.\nexport type ContextBuilder = typeof Renderer.getSVGContext | typeof Renderer.getCanvasContext;\n\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n  protected elementId?: string | HTMLElement;\n  protected element: HTMLCanvasElement;\n  protected backend: number;\n\n  protected ctx: RenderContext;\n  // eslint-disable-next-line\n  protected paper: any;\n\n  static readonly Backends = {\n    CANVAS: 1,\n    SVG: 2,\n  };\n\n  // End of line types\n  static readonly LineEndType = {\n    NONE: 1, // No leg\n    UP: 2, // Upward leg\n    DOWN: 3, // Downward leg\n  };\n\n  /**\n   * Set this to true if you're using VexFlow inside a runtime\n   * that does not allow modifying canvas objects. There is a small\n   * performance degradation due to the extra indirection.\n   */\n  static readonly USE_CANVAS_PROXY = false;\n\n  static lastContext: RenderContext | undefined = undefined;\n\n  static buildContext(\n    elementId: string | HTMLElement,\n    backend: number,\n    width: number,\n    height: number,\n    background?: string\n  ): RenderContext {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) {\n      renderer.resize(width, height);\n    }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId: string, width: number, height: number, background?: string): RenderContext {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getSVGContext(elementId: string, width: number, height: number, background?: string): RenderContext {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  // eslint-disable-next-line\n  static bolsterCanvasContext(ctx: any): RenderContext {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    // Modify the CanvasRenderingContext2D to include the following methods, if they do not already exist.\n    // TODO: Is a Proxy object appropriate here?\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\n    const methodNames = [\n      'clear',\n      'setFont',\n      'setRawFont',\n      'setFillStyle',\n      'setBackgroundFillStyle',\n      'setStrokeStyle',\n      'setShadowColor',\n      'setShadowBlur',\n      'setLineWidth',\n      'setLineCap',\n      'openGroup',\n      'closeGroup',\n      'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach((methodName) => {\n      if (!(methodName in ctx)) {\n        // eslint-disable-next-line\n        ctx[methodName] = (CanvasContext.prototype as any)[methodName];\n      }\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(\n    context: RenderContext,\n    fromX: number,\n    fromY: number,\n    toX: number,\n    toY: number,\n    dashPattern: number[]\n  ): void {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + Math.cos(angle) * dashLength;\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + Math.sin(angle) * dashLength;\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId: string | HTMLElement, backend: number) {\n    this.elementId = elementId;\n    if (this.elementId === undefined) {\n      throw new RuntimeError('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId as string) as HTMLCanvasElement;\n    if (!this.element) this.element = elementId as HTMLCanvasElement;\n\n    // Verify backend and create context\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new RuntimeError('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new RuntimeError('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width: number, height: number): this {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new RuntimeError('BadElement', `Can't get canvas context from element: ${this.elementId}`);\n      }\n      [width, height] = CanvasContext.SanitizeCanvasDims(width, height);\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext(): RenderContext {\n    return this.ctx;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\n\nimport { RuntimeError } from './util';\nimport { Modifier } from './modifier';\nimport { Renderer } from './renderer';\nimport { StaveNote } from './stavenote';\nimport { FontInfo } from './types/common';\nimport { Note } from './note';\nimport { ModifierContextState } from './modifiercontext';\nimport { StemmableNote } from './stemmablenote';\n\nexport class StringNumber extends Modifier {\n  protected radius: number;\n\n  protected last_note?: Note;\n  protected string_number: string;\n  protected x_offset: number;\n  protected y_offset: number;\n  protected dashed: boolean;\n  protected leg: number;\n  protected font: FontInfo;\n\n  static get CATEGORY(): string {\n    return 'stringnumber';\n  }\n\n  // ## Static Methods\n  // Arrange string numbers inside a `ModifierContext`\n  static format(nums: StringNumber[], state: ModifierContextState): boolean {\n    const left_shift = state.left_shift;\n    const right_shift = state.right_shift;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shift_left = 0;\n    let shift_right = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote();\n      const pos = num.getPosition();\n\n      if (!(note instanceof StaveNote)) {\n        throw new RuntimeError('NoStaveNote');\n      }\n\n      const index = num.checkIndex();\n      const props = note.getKeyProps()[index];\n\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          if (left_shift === 0) {\n            shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n          }\n          if (right_shift === 0) {\n            shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n          }\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({\n        pos,\n        note,\n        num,\n        line: props.line,\n        shiftL: shift_left,\n        shiftR: shift_right,\n      });\n    }\n\n    // Sort string numbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let num_shiftR = 0;\n    let x_widthL = 0;\n    let x_widthR = 0;\n    let last_line = null;\n    let last_note = null;\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const note = nums_list[i].note;\n      const pos = nums_list[i].pos;\n      const num = nums_list[i].num;\n      const line = nums_list[i].line;\n      const shiftR = nums_list[i].shiftR;\n\n      // Reset the position of the string number every line.\n      if (line !== last_line || note !== last_note) {\n        num_shiftR = right_shift + shiftR;\n      }\n\n      const num_width = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift);\n        num_shift = shift_left + num_width; // spacing\n        x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift += num_width; // spacing\n        x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  }\n\n  constructor(number: string) {\n    super();\n    this.setAttribute('type', 'StringNumber');\n\n    this.string_number = number;\n    this.setWidth(20); // ???\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.dashed = true; // true - draw dashed extension  false - no extension\n    this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n    this.radius = 8;\n    this.font = {\n      family: 'sans-serif',\n      size: 10,\n      weight: 'bold',\n    };\n  }\n\n  getCategory(): string {\n    return StringNumber.CATEGORY;\n  }\n\n  setLineEndType(leg: number): this {\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n      this.leg = leg;\n    }\n    return this;\n  }\n\n  setStringNumber(number: string): this {\n    this.string_number = number;\n    return this;\n  }\n\n  setOffsetX(x: number): this {\n    this.x_offset = x;\n    return this;\n  }\n\n  setOffsetY(y: number): this {\n    this.y_offset = y;\n    return this;\n  }\n\n  setLastNote(note: Note): this {\n    this.last_note = note;\n    return this;\n  }\n\n  setDashed(dashed: boolean): this {\n    this.dashed = dashed;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const line_space = note.checkStave().getOptions().spacing_between_lines_px;\n\n    const start = note.getModifierStartXY(this.position, this.index);\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let dot_y = start.y + this.y_shift + this.y_offset;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n      case Modifier.Position.BELOW: {\n        const stem_ext = note.getStemExtents();\n        let top = stem_ext.topY;\n        let bottom = stem_ext.baseY + 2;\n\n        if (note.getStemDirection() === StaveNote.STEM_DOWN) {\n          top = stem_ext.baseY;\n          bottom = stem_ext.topY - 2;\n        }\n\n        if (this.position === Modifier.Position.ABOVE) {\n          dot_y = note.hasStem() ? top - line_space * 1.75 : start.y - line_space * 1.75;\n        } else {\n          dot_y = note.hasStem() ? bottom + line_space * 1.5 : start.y + line_space * 1.75;\n        }\n\n        dot_y += this.y_shift + this.y_offset;\n\n        break;\n      }\n      case Modifier.Position.LEFT:\n        dot_x -= this.radius / 2 + 5;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += this.radius / 2 + 6;\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n    ctx.setLineWidth(1.5);\n    ctx.stroke();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\n    if (this.last_note instanceof StemmableNote) {\n      const end = this.last_note.getStemX() - note.getX() + 5;\n      ctx.setStrokeStyle('#000000');\n      ctx.setLineCap('round');\n      ctx.setLineWidth(0.6);\n      if (this.dashed) {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n      } else {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n      }\n\n      let len;\n      let pattern;\n      switch (this.leg) {\n        case Renderer.LineEndType.UP:\n          len = -10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        case Renderer.LineEndType.DOWN:\n          len = 10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        default:\n          break;\n      }\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\n\nimport { RuntimeError, log, check } from './util';\nimport { Flow } from './flow';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Note } from './note';\nimport { StaveNote } from './stavenote';\nimport { ModifierContextState } from './modifiercontext';\nimport { Builder } from './easyscore';\nimport { TabNote } from './tabnote';\nimport { GraceNote } from './gracenote';\n\nexport interface ArticulationStruct {\n  code?: string;\n  aboveCode?: string;\n  belowCode?: string;\n  between_lines: boolean;\n}\n\nfunction L(\n  // eslint-disable-next-line\n  ...args: any[]) {\n  if (Articulation.DEBUG) log('Vex.Flow.Articulation', args);\n}\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nfunction roundToNearestHalf(mathFn: (a: number) => number, value: number): number {\n  return mathFn(value / 0.5) * 0.5;\n}\n\n// This includes both staff and ledger lines\nfunction isWithinLines(line: number, position: number): boolean {\n  return position === ABOVE ? line <= 5 : line >= 1;\n}\n\nfunction getRoundingFunction(line: number, position: number): (a: number) => number {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n}\n\nfunction snapLineToStaff(canSitBetweenLines: boolean, line: number, position: number, offsetDirection: number): number {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n  } else {\n    return snappedLine;\n  }\n}\n\nfunction isStaveNote(note: Note): boolean {\n  const noteCategory = note.getCategory();\n  return noteCategory === StaveNote.CATEGORY || noteCategory === GraceNote.CATEGORY;\n}\n\nfunction getTopY(note: Note, textLine: number): number {\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === TabNote.CATEGORY) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return note.checkStave().getYForTopText(textLine);\n      }\n    } else {\n      return note.checkStave().getYForTopText(textLine);\n    }\n  } else {\n    throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n  }\n}\n\nfunction getBottomY(note: Note, textLine: number): number {\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === TabNote.CATEGORY) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return note.checkStave().getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return note.checkStave().getYForBottomText(textLine);\n    }\n  } else {\n    throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n  }\n}\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nfunction getInitialOffset(note: Note, position: number): number {\n  const isOnStemTip =\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN);\n\n  if (isStaveNote(note)) {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n}\n\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.js` for usage examples.\n */\nexport class Articulation extends Modifier {\n  /** Articulation code provided to the constructor. */\n  readonly type: string;\n  protected static readonly INITIAL_OFFSET: number = -0.5;\n\n  protected render_options: { font_scale: number };\n  // articulation defined calling reset in constructor\n  protected articulation!: ArticulationStruct;\n  // glyph defined calling reset in constructor\n  protected glyph!: Glyph;\n  /** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\n  static DEBUG: boolean;\n\n  /** Articulations category string. */\n  static get CATEGORY(): string {\n    return 'articulations';\n  }\n\n  /**\n   * FIXME:\n   * Most of the complex formatting logic (ie: snapping to space) is\n   * actually done in .render(). But that logic belongs in this method.\n   *\n   * Unfortunately, this isn't possible because, by this point, stem lengths\n   * have not yet been finalized. Finalized stem lengths are required to determine the\n   * initial position of any stem-side articulation.\n   *\n   * This indicates that all objects should have their stave set before being\n   * formatted. It can't be an optional if you want accurate vertical positioning.\n   * Consistently positioned articulations that play nice with other modifiers\n   * won't be possible until we stop relying on render-time formatting.\n   *\n   * Ideally, when this function has completed, the vertical articulation positions\n   * should be ready to render without further adjustment. But the current state\n   * is far from this ideal.\n   */\n  static format(articulations: Articulation[], state: ModifierContextState): boolean {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = (artic: Articulation) => artic.getPosition() === ABOVE;\n    const isBelow = (artic: Articulation) => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation: Articulation, line: number, position: number) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        check<number>(articulation.glyph.getMetrics().height) / 10 + margin\n      );\n\n    articulations.filter(isAbove).forEach((articulation) => {\n      articulation.setTextLine(state.top_text_line);\n      state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n    });\n\n    articulations.filter(isBelow).forEach((articulation) => {\n      articulation.setTextLine(state.text_line);\n      state.text_line += getIncrement(articulation, state.text_line, BELOW);\n    });\n\n    const width = articulations\n      .map((articulation) => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }: { articulations: string }, note: StaveNote, builder: Builder): void {\n    if (!articulations) return;\n\n    const articNameToCode: Record<string, string> = {\n      staccato: 'a.',\n      tenuto: 'a-',\n      accent: 'a>',\n    };\n\n    articulations\n      .split(',')\n      .map((articString) => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic: { type: string; position?: number } = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map((artic) => note.addModifier(artic, 0));\n  }\n\n  /**\n   * Create a new articulation.\n   * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts`\n   */\n  constructor(type: string) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.reset();\n  }\n\n  protected reset(): void {\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new RuntimeError('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    const code =\n      (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) || this.articulation.code;\n    this.glyph = new Glyph(code ?? '', this.render_options.font_scale);\n\n    this.setWidth(check<number>(this.glyph.getMetrics().width));\n  }\n\n  /** Get element category string. */\n  getCategory(): string {\n    return Articulation.CATEGORY;\n  }\n\n  /** Render articulation in position next to note. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const index = this.checkIndex();\n    const { position, glyph, text_line: textLine } = this;\n    const canSitBetweenLines = this.articulation.between_lines;\n\n    const stave = note.checkStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === TabNote.CATEGORY;\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    const padding = this.musicFont.lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n\n    let y = (\n      {\n        [ABOVE]: () => {\n          glyph.setOrigin(0.5, 1);\n          const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n          return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n        },\n        [BELOW]: () => {\n          glyph.setOrigin(0.5, 0);\n          const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n          return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n        },\n      } as Record<number, () => number>\n    )[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab\n        ? (note as TabNote).getPositions()[index].str\n        : (note as StaveNote).getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + Number(noteLine);\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { RuntimeError } from './util';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\nimport { NoteMetrics, Note } from './note';\n\nexport interface TickContextMetrics extends NoteMetrics {\n  totalLeftPx: number;\n  totalRightPx: number;\n}\n\nexport interface TickContextOptions {\n  tickID: number;\n}\n\n/**\n * Tickcontext formats abstract tickable objects, such as notes, chords,\n * tabs, etc.\n */\nexport class TickContext extends Tickable {\n  protected readonly tickID: number;\n  protected readonly tickables: Note[];\n  protected readonly tickablesByVoice: Record<string, Note>;\n  protected currentTick: Fraction;\n  protected maxTicks: Fraction;\n  protected padding: number;\n  protected xBase: number;\n  protected x: number;\n  protected xOffset: number;\n  protected notePx: number;\n  protected glyphPx: number;\n  protected leftDisplacedHeadPx: number;\n  protected rightDisplacedHeadPx: number;\n  protected modLeftPx: number;\n  protected modRightPx: number;\n  protected totalLeftPx: number;\n  protected totalRightPx: number;\n  protected maxTickable?: Note;\n  protected minTicks?: Fraction;\n  protected minTickable?: Note;\n  tContexts: TickContext[];\n\n  // eslint-disable-next-line\n  draw() {}\n\n  static getNextContext(tContext: TickContext): TickContext | undefined {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    if (index + 1 < contexts.length) return contexts[index + 1];\n  }\n\n  constructor(options?: TickContextOptions) {\n    super();\n    this.tickID = options && options.tickID ? options.tickID : 0;\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n\n    this.maxTicks = new Fraction(0, 1);\n    this.maxTickable = undefined; // Biggest tickable\n    this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n    this.minTickable = undefined;\n\n    this.padding = 1; // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.xBase = 0; // base x position without xOffset\n    this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n    this.tickables = []; // Notes, tabs, chords, lyrics.\n    this.tickablesByVoice = {}; // Tickables indeced by voice number\n\n    // Formatting metrics\n    this.notePx = 0; // width of widest note in this context\n    this.glyphPx = 0; // width of glyph (note head)\n    this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n    this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n    this.modLeftPx = 0; // Left modifier pixels\n    this.modRightPx = 0; // Right modifier pixels\n    this.totalLeftPx = 0; // Total left pixels\n    this.totalRightPx = 0; // Total right pixels\n    this.tContexts = []; // Parent array of tick contexts\n  }\n\n  getTickID(): number {\n    return this.tickID;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  setX(x: number): this {\n    this.x = x;\n    this.xBase = x;\n    this.xOffset = 0;\n    return this;\n  }\n\n  getXBase(): number {\n    return this.xBase;\n  } // use of xBase and xOffset is optional, avoids offset creep\n\n  setXBase(xBase: number): void {\n    this.xBase = xBase;\n    this.x = xBase + this.xOffset;\n  }\n\n  getXOffset(): number {\n    return this.xOffset;\n  }\n\n  setXOffset(xOffset: number): void {\n    this.xOffset = xOffset;\n    this.x = this.xBase + xOffset;\n  }\n\n  getWidth(): number {\n    return this.width + this.padding * 2;\n  }\n\n  setPadding(padding: number): this {\n    this.padding = padding;\n    return this;\n  }\n\n  getMaxTicks(): Fraction {\n    return this.maxTicks;\n  }\n\n  getMinTicks(): Fraction | undefined {\n    return this.minTicks;\n  }\n\n  getMaxTickable(): Note | undefined {\n    return this.maxTickable;\n  }\n\n  getMinTickable(): Note | undefined {\n    return this.minTickable;\n  }\n\n  getTickables(): Note[] {\n    return this.tickables;\n  }\n\n  getTickablesForVoice(voiceIndex: number): Note {\n    return this.tickablesByVoice[voiceIndex];\n  }\n\n  getTickablesByVoice(): Record<string, Note> {\n    return this.tickablesByVoice;\n  }\n\n  getCenterAlignedTickables(): Note[] {\n    return this.tickables.filter((tickable) => tickable.isCenterAligned());\n  }\n\n  /** Gets widths context, note and left/right modifiers for formatting. */\n  getMetrics(): TickContextMetrics {\n    const {\n      width,\n      glyphPx,\n      notePx,\n      leftDisplacedHeadPx,\n      rightDisplacedHeadPx,\n      modLeftPx,\n      modRightPx,\n      totalLeftPx,\n      totalRightPx,\n    } = this;\n    return {\n      width, // Width of largest tickable in context\n      glyphPx, // Width of largest glyph (note head)\n      notePx, // Width of notehead + stem\n      leftDisplacedHeadPx, // Left modifiers\n      rightDisplacedHeadPx, // Right modifiers\n      modLeftPx,\n      modRightPx,\n      totalLeftPx,\n      totalRightPx,\n    };\n  }\n\n  getCurrentTick(): Fraction {\n    return this.currentTick;\n  }\n\n  setCurrentTick(tick: Fraction): void {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  addTickable(tickable: Note, voiceIndex?: number): this {\n    if (!tickable) {\n      throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n        this.maxTickable = tickable;\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n        this.minTickable = tickable;\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n        this.minTickable = tickable;\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.tickablesByVoice[voiceIndex || 0] = tickable;\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat(): this {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max displaced head pixels from all tickables in the context\n      this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n      this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.notePx);\n\n      // Maintain the widest note head\n      this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n\n      // Total modifier shift\n      this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n      this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n\n      // Total shift\n      this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n      this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat(): this {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\n\nimport { RuntimeError, log } from './util';\nimport { Flow } from './flow';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\nimport { StemmableNote } from './stemmablenote';\nimport { ModifierContextState } from './modifiercontext';\nimport { TabNote } from './tabnote';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Ornament.DEBUG) log('Vex.Flow.Ornament', args);\n}\n\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n  /** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\n  static DEBUG: boolean;\n\n  protected ornament: {\n    code: string;\n  };\n  protected stemUpYOffset: number;\n  protected ornamentAlignWithNoteHead: string[] | boolean;\n  protected type: string;\n\n  protected delayed: boolean;\n  protected reportedWidth: number;\n  protected adjustForStemDirection: boolean;\n  protected render_options: {\n    accidentalUpperPadding: number;\n    accidentalLowerPadding: number;\n    font_scale: number;\n  };\n  protected glyph: Glyph;\n  protected accidentalUpper?: Glyph;\n  protected accidentalLower?: Glyph;\n  protected delayXShift?: number;\n\n  /** Ornaments category string. */\n  static get CATEGORY(): string {\n    return 'ornaments';\n  }\n\n  /** Arrange ornaments inside `ModifierContext` */\n  static format(ornaments: Ornament[], state: ModifierContextState): boolean {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0; // width is used by ornaments, which are always centered on the note head\n    let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n    let left_shift = state.left_shift;\n    let yOffset = 0;\n\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n        ornament.x_shift += right_shift + 2;\n      }\n      if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n        ornament.x_shift -= left_shift + 2;\n      }\n      if (ornament.reportedWidth && ornament.x_shift < 0) {\n        left_shift += ornament.reportedWidth;\n      } else if (ornament.reportedWidth && ornament.x_shift > 0) {\n        right_shift += ornament.reportedWidth;\n      } else {\n        width = Math.max(ornament.getWidth(), width);\n      }\n      // articulations above/below the line can be stacked.\n      if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n        // Unfortunately we don't know the stem direction.  So we base it\n        // on the line number, but also allow it to be overridden.\n        if (!ornament.note) {\n          throw new RuntimeError('NoAttachedNote');\n        }\n        if (ornament.note.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n          state.top_text_line += increment;\n          ornament.y_shift += yOffset;\n          yOffset -= ornament.glyph.bbox.getH();\n        } else {\n          state.text_line += increment;\n          ornament.y_shift += yOffset;\n          yOffset += ornament.glyph.bbox.getH();\n        }\n      } else {\n        if (ornament.getPosition() === Modifier.Position.ABOVE) {\n          ornament.setTextLine(state.top_text_line);\n          state.top_text_line += increment;\n        } else {\n          ornament.setTextLine(state.text_line);\n          state.text_line += increment;\n        }\n      }\n    }\n\n    // Note: 'legit' ornaments don't consider other modifiers when calculating their\n    // X position, but jazz ornaments sometimes need to.\n    state.left_shift = left_shift + width / 2;\n    state.right_shift = right_shift + width / 2;\n    return true;\n  }\n\n  /**\n   * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n   * these are generally on the top of the staff.\n   */\n  static get ornamentNoteTransition(): string[] {\n    return ['flip', 'jazzTurn', 'smear'];\n  }\n\n  /**\n   * ornamentAttack indicates something that happens in the attach, placed before the note and\n   * any accidentals\n   */\n  static get ornamentAttack(): string[] {\n    return ['scoop'];\n  }\n\n  /**\n   * The ornament is aligned based on the note head, but without regard to whether the\n   * stem goes up or down.\n   */\n  static get ornamentAlignWithNoteHead(): string[] {\n    return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n  }\n\n  /**\n   * An ornament that happens on the release of the note, generally placed after the\n   * note and overlapping the next beat/measure..\n   */\n  static get ornamentRelease(): string[] {\n    return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n  }\n\n  /** ornamentArticulation goes above/below the note based on space availablity */\n  static get ornamentArticulation(): string[] {\n    return ['bend', 'plungerClosed', 'plungerOpen'];\n  }\n\n  /**\n   * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n   * added, get their metrics here.\n   */\n  // eslint-disable-next-line\n  getMetrics(): any {\n    return this.getFontStack()[0].getMetrics().glyphs.jazzOrnaments[this.ornament.code];\n  }\n\n  /**\n   * Create a new ornament of type `type`, which is an entry in\n   * `Vex.Flow.ornamentCodes` in `tables.ts`.\n   */\n  constructor(type: string) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.type = type;\n    this.delayed = false;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n\n    // new ornaments have their origin at the origin, and have more specific\n    // metrics.  Legacy ornaments do some\n    // x scaling, and have hard-coded metrics\n    const metrics = this.getMetrics();\n\n    // some jazz ornaments are above or below depending on stem direction.\n    this.adjustForStemDirection = false;\n\n    // some jazz ornaments like falls are supposed to overlap with future bars\n    // and so we report a different width than they actually take up.\n    this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n\n    this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n\n    this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n\n    if (!this.ornament) {\n      throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.x_shift = metrics ? metrics.xOffset : 0;\n    this.y_shift = metrics ? metrics.yOffset : 0;\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n      category: `ornament.${this.ornament.code}`,\n    });\n\n    // Is this a jazz ornament that goes between this note and the next note.\n    if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n      this.delayed = true;\n    }\n\n    // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n    // happen if I don't set it.\n    if (!metrics) {\n      this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n    }\n  }\n\n  /** Get element category string. */\n  getCategory(): string {\n    return Ornament.CATEGORY;\n  }\n\n  /** Set whether the ornament is to be delayed. */\n  setDelayed(delayed: boolean): this {\n    this.delayed = delayed;\n    return this;\n  }\n\n  /** Set the upper accidental for the ornament. */\n  setUpperAccidental(accid: string): this {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  /** Set the lower accidental for the ornament. */\n  setLowerAccidental(accid: string): this {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  /** Render ornament in position next to note. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote() as StemmableNote;\n    this.setRendered();\n\n    const stemDir = note.getStemDirection();\n    const stave = note.checkStave();\n\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    ctx.openGroup(classString, this.getAttribute('id'));\n\n    // Get stem extents\n    const stemExtents = note.checkStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (note.getCategory() === TabNote.CATEGORY) {\n      if (note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else {\n        // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n\n    // If the ornament is aligned with the note head, don't consider the stave y\n    // but use the 'natural' modifier y\n    let glyphY = this.ornamentAlignWithNoteHead\n      ? start.y\n      : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      let delayXShift = 0;\n      const startX = glyphX - (stave.getX() - 10);\n      if (this.delayXShift !== undefined) {\n        delayXShift = this.delayXShift;\n      } else {\n        delayXShift += this.glyph.getMetrics().width / 2;\n        const nextContext = TickContext.getNextContext(note.getTickContext());\n        if (nextContext) {\n          delayXShift += (nextContext.getX() - startX) * 0.5;\n        } else {\n          delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n        }\n        this.delayXShift = delayXShift;\n      }\n      glyphX += delayXShift;\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n      glyphY += this.stemUpYOffset;\n    }\n    if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n      glyphY = note.checkStave().getBoundingBox().getY() + 40;\n    }\n\n    this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n\n    if (this.accidentalUpper) {\n      glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n    ctx.closeGroup();\n  }\n}\n","export const PetalumaScriptTextMetrics = {\n  name: 'petalumaScript',\n  smufl: false,\n  spacing:50,\n  \"glyphs\": {\n    \" \": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": 0,\n      \"y_max\": 500,\n      \"ha\": 500,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 250\n    },\"0\": {\n      \"x_min\": 33,\n      \"x_max\": 534,\n      \"y_min\": -13,\n      \"y_max\": 751,\n      \"ha\": 764,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 570\n    },\n    \"1\": {\n      \"x_min\": 48,\n      \"x_max\": 235,\n      \"y_min\": -17,\n      \"y_max\": 734,\n      \"ha\": 751,\n      \"leftSideBearing\": 48,\n      \"advanceWidth\": 286\n    },\n    \"2\": {\n      \"x_min\": 56,\n      \"x_max\": 571,\n      \"y_min\": -19,\n      \"y_max\": 741,\n      \"ha\": 760,\n      \"leftSideBearing\": 56,\n      \"advanceWidth\": 626\n    },\n    \"3\": {\n      \"x_min\": 50,\n      \"x_max\": 528,\n      \"y_min\": -7,\n      \"y_max\": 731,\n      \"ha\": 738,\n      \"leftSideBearing\": 50,\n      \"advanceWidth\": 589\n    },\n    \"4\": {\n      \"x_min\": 38,\n      \"x_max\": 564,\n      \"y_min\": -13,\n      \"y_max\": 743,\n      \"ha\": 756,\n      \"leftSideBearing\": 38,\n      \"advanceWidth\": 614\n    },\n    \"5\": {\n      \"x_min\": 42,\n      \"x_max\": 601,\n      \"y_min\": -34,\n      \"y_max\": 743,\n      \"ha\": 777,\n      \"leftSideBearing\": 42,\n      \"advanceWidth\": 648\n    },\n    \"6\": {\n      \"x_min\": 47,\n      \"x_max\": 606,\n      \"y_min\": -16,\n      \"y_max\": 743,\n      \"ha\": 759,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 667\n    },\n    \"7\": {\n      \"x_min\": 47,\n      \"x_max\": 567,\n      \"y_min\": 5,\n      \"y_max\": 739,\n      \"ha\": 734,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 615\n    },\n    \"8\": {\n      \"x_min\": 40,\n      \"x_max\": 541,\n      \"y_min\": -15,\n      \"y_max\": 752,\n      \"ha\": 767,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 585\n    },\n    \"9\": {\n      \"x_min\": 40,\n      \"x_max\": 537,\n      \"y_min\": -52,\n      \"y_max\": 736,\n      \"ha\": 788,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 592\n    },\n    \"!\": {\n      \"x_min\": 49,\n      \"x_max\": 180,\n      \"y_min\": -7,\n      \"y_max\": 761,\n      \"ha\": 768,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 230\n    },\n    \"\\\"\": {\n      \"x_min\": 39,\n      \"x_max\": 304,\n      \"y_min\": 596,\n      \"y_max\": 804,\n      \"ha\": 208,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 353\n    },\n    \"#\": {\n      \"x_min\": 33,\n      \"x_max\": 599,\n      \"y_min\": -8,\n      \"y_max\": 765,\n      \"ha\": 773,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 648\n    },\n    \"$\": {\n      \"x_min\": 53,\n      \"x_max\": 495,\n      \"y_min\": -111,\n      \"y_max\": 823,\n      \"ha\": 934,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 560\n    },\n    \"%\": {\n      \"x_min\": 35,\n      \"x_max\": 656,\n      \"y_min\": -128,\n      \"y_max\": 808,\n      \"ha\": 936,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 711\n    },\n    \"&\": {\n      \"x_min\": 53,\n      \"x_max\": 441,\n      \"y_min\": -3,\n      \"y_max\": 753,\n      \"ha\": 756,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 500\n    },\n    \"'\": {\n      \"x_min\": 43,\n      \"x_max\": 161,\n      \"y_min\": 590,\n      \"y_max\": 811,\n      \"ha\": 221,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 217\n    },\n    \"(\": {\n      \"x_min\": 41,\n      \"x_max\": 311,\n      \"y_min\": -36,\n      \"y_max\": 845,\n      \"ha\": 881,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 308\n    },\n    \")\": {\n      \"x_min\": -8,\n      \"x_max\": 257,\n      \"y_min\": -21,\n      \"y_max\": 852,\n      \"ha\": 873,\n      \"leftSideBearing\": -8,\n      \"advanceWidth\": 280\n    },\n    \"*\": {\n      \"x_min\": 59,\n      \"x_max\": 539,\n      \"y_min\": 175,\n      \"y_max\": 589,\n      \"ha\": 414,\n      \"leftSideBearing\": 59,\n      \"advanceWidth\": 601\n    },\n    \"+\": {\n      \"x_min\": 33,\n      \"x_max\": 361,\n      \"y_min\": 180,\n      \"y_max\": 587,\n      \"ha\": 407,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 400\n    },\n    \",\": {\n      \"x_min\": 15,\n      \"x_max\": 176,\n      \"y_min\": -129,\n      \"y_max\": 92,\n      \"ha\": 221,\n      \"leftSideBearing\": 15,\n      \"advanceWidth\": 205\n    },\n    \"-\": {\n      \"x_min\": 40,\n      \"x_max\": 380,\n      \"y_min\": 317,\n      \"y_max\": 452,\n      \"ha\": 135,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 422\n    },\n    \".\": {\n      \"x_min\": 48,\n      \"x_max\": 185,\n      \"y_min\": -56,\n      \"y_max\": 84,\n      \"ha\": 140,\n      \"leftSideBearing\": 48,\n      \"advanceWidth\": 227\n    },\n    \"/\": {\n      \"x_min\": -58,\n      \"x_max\": 654,\n      \"y_min\": -122,\n      \"y_max\": 844,\n      \"ha\": 966,\n      \"leftSideBearing\": -58,\n      \"advanceWidth\": 626\n    },\n    \":\": {\n      \"x_min\": 65,\n      \"x_max\": 225,\n      \"y_min\": 97,\n      \"y_max\": 536,\n      \"ha\": 439,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 302\n    },\n    \";\": {\n      \"x_min\": 13,\n      \"x_max\": 295,\n      \"y_min\": -139,\n      \"y_max\": 536,\n      \"ha\": 675,\n      \"leftSideBearing\": 13,\n      \"advanceWidth\": 334\n    },\n    \"<\": {\n      \"x_min\": 28,\n      \"x_max\": 438,\n      \"y_min\": -1,\n      \"y_max\": 607,\n      \"ha\": 608,\n      \"leftSideBearing\": 28,\n      \"advanceWidth\": 475\n    },\n    \"=\": {\n      \"x_min\": 40,\n      \"x_max\": 383,\n      \"y_min\": 199.9598640852289,\n      \"y_max\": 541,\n      \"ha\": 341.0401359147711,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 422\n    },\n    \">\": {\n      \"x_min\": 35,\n      \"x_max\": 421,\n      \"y_min\": 28,\n      \"y_max\": 632,\n      \"ha\": 604,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 466\n    },\n    \"?\": {\n      \"x_min\": 45,\n      \"x_max\": 548,\n      \"y_min\": -17,\n      \"y_max\": 767,\n      \"ha\": 784,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 592\n    },\n    \"@\": {\n      \"x_min\": 51,\n      \"x_max\": 730,\n      \"y_min\": -78,\n      \"y_max\": 753,\n      \"ha\": 831,\n      \"leftSideBearing\": 51,\n      \"advanceWidth\": 781\n    },\n    \"A\": {\n      \"x_min\": 37,\n      \"x_max\": 554,\n      \"y_min\": -4,\n      \"y_max\": 746,\n      \"ha\": 750,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 617\n    },\n    \"B\": {\n      \"x_min\": 37,\n      \"x_max\": 532,\n      \"y_min\": 3,\n      \"y_max\": 783,\n      \"ha\": 780,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 579\n    },\n    \"C\": {\n      \"x_min\": 37,\n      \"x_max\": 583,\n      \"y_min\": -3,\n      \"y_max\": 775,\n      \"ha\": 778,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 623\n    },\n    \"D\": {\n      \"x_min\": 50,\n      \"x_max\": 530,\n      \"y_min\": -15,\n      \"y_max\": 749,\n      \"ha\": 764,\n      \"leftSideBearing\": 50,\n      \"advanceWidth\": 579\n    },\n    \"E\": {\n      \"x_min\": 45,\n      \"x_max\": 531,\n      \"y_min\": -1,\n      \"y_max\": 743,\n      \"ha\": 744,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 585\n    },\n    \"F\": {\n      \"x_min\": 45,\n      \"x_max\": 459,\n      \"y_min\": 23,\n      \"y_max\": 727,\n      \"ha\": 704,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 510\n    },\n    \"G\": {\n      \"x_min\": 31,\n      \"x_max\": 577,\n      \"y_min\": -8,\n      \"y_max\": 733,\n      \"ha\": 741,\n      \"leftSideBearing\": 31,\n      \"advanceWidth\": 611\n    },\n    \"H\": {\n      \"x_min\": 37,\n      \"x_max\": 493,\n      \"y_min\": -22,\n      \"y_max\": 758,\n      \"ha\": 780,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 535\n    },\n    \"I\": {\n      \"x_min\": 47,\n      \"x_max\": 501,\n      \"y_min\": -3,\n      \"y_max\": 731,\n      \"ha\": 734,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 541\n    },\n    \"J\": {\n      \"x_min\": 33,\n      \"x_max\": 531,\n      \"y_min\": -23,\n      \"y_max\": 725,\n      \"ha\": 748,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 573\n    },\n    \"K\": {\n      \"x_min\": 43,\n      \"x_max\": 505,\n      \"y_min\": -10,\n      \"y_max\": 740,\n      \"ha\": 750,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 560\n    },\n    \"L\": {\n      \"x_min\": 49,\n      \"x_max\": 457,\n      \"y_min\": -2,\n      \"y_max\": 746,\n      \"ha\": 748,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 510\n    },\n    \"M\": {\n      \"x_min\": 35,\n      \"x_max\": 699,\n      \"y_min\": 1,\n      \"y_max\": 744,\n      \"ha\": 743,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 743\n    },\n    \"N\": {\n      \"x_min\": 34,\n      \"x_max\": 533,\n      \"y_min\": -17,\n      \"y_max\": 761,\n      \"ha\": 778,\n      \"leftSideBearing\": 34,\n      \"advanceWidth\": 579\n    },\n    \"O\": {\n      \"x_min\": 41,\n      \"x_max\": 608,\n      \"y_min\": -5,\n      \"y_max\": 735,\n      \"ha\": 740,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 667\n    },\n    \"P\": {\n      \"x_min\": 53,\n      \"x_max\": 451,\n      \"y_min\": -18,\n      \"y_max\": 735,\n      \"ha\": 753,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 497\n    },\n    \"Q\": {\n      \"x_min\": 40,\n      \"x_max\": 599,\n      \"y_min\": -67,\n      \"y_max\": 744,\n      \"ha\": 811,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 648\n    },\n    \"R\": {\n      \"x_min\": 39,\n      \"x_max\": 487,\n      \"y_min\": 16,\n      \"y_max\": 735,\n      \"ha\": 719,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 535\n    },\n    \"S\": {\n      \"x_min\": 35,\n      \"x_max\": 552,\n      \"y_min\": -47,\n      \"y_max\": 708,\n      \"ha\": 755,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 604\n    },\n    \"T\": {\n      \"x_min\": 26,\n      \"x_max\": 656,\n      \"y_min\": -13,\n      \"y_max\": 718,\n      \"ha\": 731,\n      \"leftSideBearing\": 26,\n      \"advanceWidth\": 705\n    },\n    \"U\": {\n      \"x_min\": 41,\n      \"x_max\": 518,\n      \"y_min\": -20,\n      \"y_max\": 748,\n      \"ha\": 768,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 567\n    },\n    \"V\": {\n      \"x_min\": 47,\n      \"x_max\": 509,\n      \"y_min\": -26,\n      \"y_max\": 744,\n      \"ha\": 770,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 567\n    },\n    \"W\": {\n      \"x_min\": 44,\n      \"x_max\": 789,\n      \"y_min\": -35,\n      \"y_max\": 720,\n      \"ha\": 755,\n      \"leftSideBearing\": 44,\n      \"advanceWidth\": 833\n    },\n    \"X\": {\n      \"x_min\": 63,\n      \"x_max\": 635,\n      \"y_min\": -10,\n      \"y_max\": 745,\n      \"ha\": 755,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 680\n    },\n    \"Y\": {\n      \"x_min\": 43,\n      \"x_max\": 503,\n      \"y_min\": -21,\n      \"y_max\": 734,\n      \"ha\": 755,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 541\n    },\n    \"Z\": {\n      \"x_min\": 42,\n      \"x_max\": 584,\n      \"y_min\": -10,\n      \"y_max\": 739,\n      \"ha\": 749,\n      \"leftSideBearing\": 42,\n      \"advanceWidth\": 629\n    },\n    \"[\": {\n      \"x_min\": 46,\n      \"x_max\": 346,\n      \"y_min\": -150,\n      \"y_max\": 884,\n      \"ha\": 1034,\n      \"leftSideBearing\": 46,\n      \"advanceWidth\": 291\n    },\n    \"\\\\\": {\n      \"x_min\": 20,\n      \"x_max\": 616,\n      \"y_min\": -100,\n      \"y_max\": 797,\n      \"ha\": 897,\n      \"leftSideBearing\": 20,\n      \"advanceWidth\": 645\n    },\n    \"]\": {\n      \"x_min\": -76,\n      \"x_max\": 226,\n      \"y_min\": -150,\n      \"y_max\": 881,\n      \"ha\": 1031,\n      \"leftSideBearing\": -76,\n      \"advanceWidth\": 297\n    },\n    \"^\": {\n      \"x_min\": 43,\n      \"x_max\": 437,\n      \"y_min\": 517,\n      \"y_max\": 812,\n      \"ha\": 295,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 478\n    },\n    \"_\": {\n      \"x_min\": 29,\n      \"x_max\": 563,\n      \"y_min\": -110,\n      \"y_max\": -1,\n      \"ha\": 109,\n      \"leftSideBearing\": 29,\n      \"advanceWidth\": 598\n    },\n    \"`\": {\n      \"x_min\": 54,\n      \"x_max\": 321,\n      \"y_min\": 540,\n      \"y_max\": 747,\n      \"ha\": 207,\n      \"leftSideBearing\": 54,\n      \"advanceWidth\": 368\n    },\n    \"a\": {\n      \"x_min\": 20,\n      \"x_max\": 447,\n      \"y_min\": -17,\n      \"y_max\": 495,\n      \"ha\": 512,\n      \"leftSideBearing\": 20,\n      \"advanceWidth\": 494\n    },\n    \"b\": {\n      \"x_min\": 37,\n      \"x_max\": 466,\n      \"y_min\": -27,\n      \"y_max\": 770,\n      \"ha\": 797,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 510\n    },\n    \"c\": {\n      \"x_min\": 35,\n      \"x_max\": 456,\n      \"y_min\": -9,\n      \"y_max\": 507,\n      \"ha\": 516,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 460\n    },\n    \"d\": {\n      \"x_min\": 45,\n      \"x_max\": 520,\n      \"y_min\": -15,\n      \"y_max\": 764,\n      \"ha\": 779,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 560\n    },\n    \"e\": {\n      \"x_min\": 33,\n      \"x_max\": 370,\n      \"y_min\": -5,\n      \"y_max\": 501,\n      \"ha\": 506,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 397\n    },\n    \"f\": {\n      \"x_min\": 35,\n      \"x_max\": 411,\n      \"y_min\": -13,\n      \"y_max\": 695,\n      \"ha\": 708,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 453\n    },\n    \"g\": {\n      \"x_min\": 33,\n      \"x_max\": 551,\n      \"y_min\": -257,\n      \"y_max\": 505,\n      \"ha\": 762,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 611\n    },\n    \"h\": {\n      \"x_min\": 32,\n      \"x_max\": 458,\n      \"y_min\": -29,\n      \"y_max\": 743,\n      \"ha\": 772,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 491\n    },\n    \"i\": {\n      \"x_min\": 45,\n      \"x_max\": 167,\n      \"y_min\": -13,\n      \"y_max\": 631,\n      \"ha\": 644,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 220\n    },\n    \"j\": {\n      \"x_min\": -127,\n      \"x_max\": 261,\n      \"y_min\": -231,\n      \"y_max\": 601,\n      \"ha\": 832,\n      \"leftSideBearing\": -127,\n      \"advanceWidth\": 308\n    },\n    \"k\": {\n      \"x_min\": 39,\n      \"x_max\": 443,\n      \"y_min\": -3,\n      \"y_max\": 700,\n      \"ha\": 703,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 497\n    },\n    \"l\": {\n      \"x_min\": 58,\n      \"x_max\": 168,\n      \"y_min\": -8,\n      \"y_max\": 686,\n      \"ha\": 694,\n      \"leftSideBearing\": 58,\n      \"advanceWidth\": 227\n    },\n    \"m\": {\n      \"x_min\": 39,\n      \"x_max\": 688,\n      \"y_min\": -14,\n      \"y_max\": 501,\n      \"ha\": 515,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 718\n    },\n    \"n\": {\n      \"x_min\": 45,\n      \"x_max\": 491,\n      \"y_min\": -32,\n      \"y_max\": 512,\n      \"ha\": 544,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 541\n    },\n    \"o\": {\n      \"x_min\": 41,\n      \"x_max\": 424,\n      \"y_min\": -12,\n      \"y_max\": 493,\n      \"ha\": 505,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 447\n    },\n    \"p\": {\n      \"x_min\": 25,\n      \"x_max\": 529,\n      \"y_min\": -260,\n      \"y_max\": 500,\n      \"ha\": 760,\n      \"leftSideBearing\": 25,\n      \"advanceWidth\": 573\n    },\n    \"q\": {\n      \"x_min\": 53,\n      \"x_max\": 603,\n      \"y_min\": -235,\n      \"y_max\": 514,\n      \"ha\": 749,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 623\n    },\n    \"r\": {\n      \"x_min\": 32,\n      \"x_max\": 407,\n      \"y_min\": -7,\n      \"y_max\": 492,\n      \"ha\": 499,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 460\n    },\n    \"s\": {\n      \"x_min\": 49,\n      \"x_max\": 416,\n      \"y_min\": -12,\n      \"y_max\": 519,\n      \"ha\": 531,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 460\n    },\n    \"t\": {\n      \"x_min\": 32,\n      \"x_max\": 442,\n      \"y_min\": -5,\n      \"y_max\": 684,\n      \"ha\": 689,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 469\n    },\n    \"u\": {\n      \"x_min\": 41,\n      \"x_max\": 487,\n      \"y_min\": -5,\n      \"y_max\": 507,\n      \"ha\": 512,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 510\n    },\n    \"v\": {\n      \"x_min\": 16,\n      \"x_max\": 441,\n      \"y_min\": -20,\n      \"y_max\": 542,\n      \"ha\": 562,\n      \"leftSideBearing\": 16,\n      \"advanceWidth\": 456\n    },\n    \"w\": {\n      \"x_min\": 39,\n      \"x_max\": 639,\n      \"y_min\": -22,\n      \"y_max\": 505,\n      \"ha\": 527,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 661\n    },\n    \"x\": {\n      \"x_min\": 15,\n      \"x_max\": 505,\n      \"y_min\": -39,\n      \"y_max\": 539,\n      \"ha\": 578,\n      \"leftSideBearing\": 15,\n      \"advanceWidth\": 541\n    },\n    \"y\": {\n      \"x_min\": -98,\n      \"x_max\": 501,\n      \"y_min\": -242,\n      \"y_max\": 511,\n      \"ha\": 753,\n      \"leftSideBearing\": -98,\n      \"advanceWidth\": 548\n    },\n    \"z\": {\n      \"x_min\": 27,\n      \"x_max\": 479,\n      \"y_min\": -3,\n      \"y_max\": 494,\n      \"ha\": 497,\n      \"leftSideBearing\": 27,\n      \"advanceWidth\": 494\n    },\n    \"{\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"|\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"}\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"~\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    }\n\n  },\n  \"fontFamily\": \"Petaluma Script\",\n  \"resolution\": 1000,\n  \"generatedOn\": \"2020-06-14T18:33:25.407Z\"\n};\n","export const RobotoSlabTextMetrics = {\n  name: 'Roboto Slab',\n  smufl: false,\n  spacing:50,\n  \"glyphs\": {\n    \" \": {\n      \"x_min\": 0,\n      \"x_max\": 509,\n      \"y_min\": 0,\n      \"y_max\": 2000,\n      \"ha\": 2000,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 509\n    },\n    \"0\": {\n      \"x_min\": 121,\n      \"x_max\": 1048,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 121,\n      \"advanceWidth\": 1168\n    },\n    \"1\": {\n      \"x_min\": 117,\n      \"x_max\": 767,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 117,\n      \"advanceWidth\": 844\n    },\n    \"2\": {\n      \"x_min\": 75.8474576645637,\n      \"x_max\": 1040,\n      \"y_min\": 0,\n      \"y_max\": 1477,\n      \"ha\": 1477,\n      \"leftSideBearing\": 75,\n      \"advanceWidth\": 1131\n    },\n    \"3\": {\n      \"x_min\": 74.85365853658536,\n      \"x_max\": 994,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1106\n    },\n    \"4\": {\n      \"x_min\": 63,\n      \"x_max\": 1114,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 1187\n    },\n    \"5\": {\n      \"x_min\": 96.8448275474953,\n      \"x_max\": 982,\n      \"y_min\": -21,\n      \"y_max\": 1456,\n      \"ha\": 1477,\n      \"leftSideBearing\": 96,\n      \"advanceWidth\": 1081\n    },\n    \"6\": {\n      \"x_min\": 121,\n      \"x_max\": 1067,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 121,\n      \"advanceWidth\": 1144\n    },\n    \"7\": {\n      \"x_min\": 76,\n      \"x_max\": 1060,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": -30,\n      \"advanceWidth\": 1128\n    },\n    \"8\": {\n      \"x_min\": 92,\n      \"x_max\": 1039,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 92,\n      \"advanceWidth\": 1131\n    },\n    \"9\": {\n      \"x_min\": 84,\n      \"x_max\": 1026,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 84,\n      \"advanceWidth\": 1154\n    },\n    \"!\": {\n      \"x_min\": 143,\n      \"x_max\": 340,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 143,\n      \"advanceWidth\": 483\n    },\n    \"\\\"\": {\n      \"x_min\": 166,\n      \"x_max\": 634,\n      \"y_min\": 1055,\n      \"y_max\": 1560,\n      \"ha\": 505,\n      \"leftSideBearing\": 166,\n      \"advanceWidth\": 770\n    },\n    \"#\": {\n      \"x_min\": 63,\n      \"x_max\": 1179,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 1246\n    },\n    \"$\": {\n      \"x_min\": 81.92156915727656,\n      \"x_max\": 1012,\n      \"y_min\": -208,\n      \"y_max\": 1693,\n      \"ha\": 1901,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1110\n    },\n    \"%\": {\n      \"x_min\": 77,\n      \"x_max\": 1384,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 77,\n      \"advanceWidth\": 1460\n    },\n    \"&\": {\n      \"x_min\": 74,\n      \"x_max\": 1242,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1289\n    },\n    \"'\": {\n      \"x_min\": 166,\n      \"x_max\": 324,\n      \"y_min\": 1055,\n      \"y_max\": 1560,\n      \"ha\": 505,\n      \"leftSideBearing\": 166,\n      \"advanceWidth\": 460\n    },\n    \"(\": {\n      \"x_min\": 114,\n      \"x_max\": 650,\n      \"y_min\": -463,\n      \"y_max\": 1636,\n      \"ha\": 2099,\n      \"leftSideBearing\": 114,\n      \"advanceWidth\": 662\n    },\n    \")\": {\n      \"x_min\": 11,\n      \"x_max\": 547,\n      \"y_min\": -463,\n      \"y_max\": 1636,\n      \"ha\": 2099,\n      \"leftSideBearing\": 11,\n      \"advanceWidth\": 654\n    },\n    \"*\": {\n      \"x_min\": 66,\n      \"x_max\": 893,\n      \"y_min\": 607,\n      \"y_max\": 1456,\n      \"ha\": 849,\n      \"leftSideBearing\": 66,\n      \"advanceWidth\": 958\n    },\n    \"+\": {\n      \"x_min\": 73,\n      \"x_max\": 1071,\n      \"y_min\": 146,\n      \"y_max\": 1206,\n      \"ha\": 1060,\n      \"leftSideBearing\": 73,\n      \"advanceWidth\": 1145\n    },\n    \",\": {\n      \"x_min\": 23,\n      \"x_max\": 315,\n      \"y_min\": -311,\n      \"y_max\": 221,\n      \"ha\": 532,\n      \"leftSideBearing\": 23,\n      \"advanceWidth\": 404\n    },\n    \"-\": {\n      \"x_min\": 154,\n      \"x_max\": 643,\n      \"y_min\": 538,\n      \"y_max\": 692,\n      \"ha\": 154,\n      \"leftSideBearing\": 154,\n      \"advanceWidth\": 797\n    },\n    \".\": {\n      \"x_min\": 145,\n      \"x_max\": 342,\n      \"y_min\": 0,\n      \"y_max\": 202,\n      \"ha\": 202,\n      \"leftSideBearing\": 145,\n      \"advanceWidth\": 493\n    },\n    \"/\": {\n      \"x_min\": 0,\n      \"x_max\": 774,\n      \"y_min\": -125,\n      \"y_max\": 1456,\n      \"ha\": 1581,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 824\n    },\n    \":\": {\n      \"x_min\": 145,\n      \"x_max\": 342,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 145,\n      \"advanceWidth\": 419\n    },\n    \";\": {\n      \"x_min\": 53,\n      \"x_max\": 345,\n      \"y_min\": -311,\n      \"y_max\": 1082,\n      \"ha\": 1393,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 424\n    },\n    \"<\": {\n      \"x_min\": 76,\n      \"x_max\": 892,\n      \"y_min\": 107,\n      \"y_max\": 1013,\n      \"ha\": 906,\n      \"leftSideBearing\": 76,\n      \"advanceWidth\": 1017\n    },\n    \"=\": {\n      \"x_min\": 147,\n      \"x_max\": 981,\n      \"y_min\": 407,\n      \"y_max\": 987,\n      \"ha\": 580,\n      \"leftSideBearing\": 147,\n      \"advanceWidth\": 1127\n    },\n    \">\": {\n      \"x_min\": 125,\n      \"x_max\": 980,\n      \"y_min\": 87,\n      \"y_max\": 993,\n      \"ha\": 906,\n      \"leftSideBearing\": 125,\n      \"advanceWidth\": 1060\n    },\n    \"?\": {\n      \"x_min\": 65.92660602419838,\n      \"x_max\": 890,\n      \"y_min\": 0,\n      \"y_max\": 1477,\n      \"ha\": 1477,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 953\n    },\n    \"@\": {\n      \"x_min\": 84.3592218305664,\n      \"x_max\": 1705.2346925277395,\n      \"y_min\": -453,\n      \"y_max\": 1431,\n      \"ha\": 1884,\n      \"leftSideBearing\": 84,\n      \"advanceWidth\": 1821\n    },\n    \"A\": {\n      \"x_min\": 70,\n      \"x_max\": 1463,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 70,\n      \"advanceWidth\": 1533\n    },\n    \"B\": {\n      \"x_min\": 81,\n      \"x_max\": 1253,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1322\n    },\n    \"C\": {\n      \"x_min\": 80,\n      \"x_max\": 1174,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 80,\n      \"advanceWidth\": 1290\n    },\n    \"D\": {\n      \"x_min\": 81,\n      \"x_max\": 1291,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1356\n    },\n    \"E\": {\n      \"x_min\": 81,\n      \"x_max\": 1190,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1306\n    },\n    \"F\": {\n      \"x_min\": 81,\n      \"x_max\": 1176,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1256\n    },\n    \"G\": {\n      \"x_min\": 80,\n      \"x_max\": 1226,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 80,\n      \"advanceWidth\": 1346\n    },\n    \"H\": {\n      \"x_min\": 81,\n      \"x_max\": 1497,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1578\n    },\n    \"I\": {\n      \"x_min\": 81,\n      \"x_max\": 604,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 685\n    },\n    \"J\": {\n      \"x_min\": 60,\n      \"x_max\": 1100,\n      \"y_min\": -21,\n      \"y_max\": 1456,\n      \"ha\": 1477,\n      \"leftSideBearing\": 60,\n      \"advanceWidth\": 1169\n    },\n    \"K\": {\n      \"x_min\": 81,\n      \"x_max\": 1427,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1501\n    },\n    \"L\": {\n      \"x_min\": 81,\n      \"x_max\": 1130,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1210\n    },\n    \"M\": {\n      \"x_min\": 94,\n      \"x_max\": 1888,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 94,\n      \"advanceWidth\": 1982\n    },\n    \"N\": {\n      \"x_min\": 83,\n      \"x_max\": 1509,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 83,\n      \"advanceWidth\": 1592\n    },\n    \"O\": {\n      \"x_min\": 70,\n      \"x_max\": 1281,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 70,\n      \"advanceWidth\": 1351\n    },\n    \"P\": {\n      \"x_min\": 81,\n      \"x_max\": 1242,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1297\n    },\n    \"Q\": {\n      \"x_min\": 70,\n      \"x_max\": 1348,\n      \"y_min\": -245,\n      \"y_max\": 1477,\n      \"ha\": 1722,\n      \"leftSideBearing\": 70,\n      \"advanceWidth\": 1376\n    },\n    \"R\": {\n      \"x_min\": 81,\n      \"x_max\": 1285,\n      \"y_min\": 0,\n      \"y_max\": 1455,\n      \"ha\": 1455,\n      \"leftSideBearing\": 81,\n      \"advanceWidth\": 1385\n    },\n    \"S\": {\n      \"x_min\": 115,\n      \"x_max\": 1116,\n      \"y_min\": -21,\n      \"y_max\": 1477,\n      \"ha\": 1498,\n      \"leftSideBearing\": 115,\n      \"advanceWidth\": 1206\n    },\n    \"T\": {\n      \"x_min\": 96,\n      \"x_max\": 1306,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 96,\n      \"advanceWidth\": 1406\n    },\n    \"U\": {\n      \"x_min\": 70,\n      \"x_max\": 1452,\n      \"y_min\": -21,\n      \"y_max\": 1456,\n      \"ha\": 1477,\n      \"leftSideBearing\": 70,\n      \"advanceWidth\": 1522\n    },\n    \"V\": {\n      \"x_min\": 65,\n      \"x_max\": 1443,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 1508\n    },\n    \"W\": {\n      \"x_min\": 72,\n      \"x_max\": 2057,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 72,\n      \"advanceWidth\": 2129\n    },\n    \"X\": {\n      \"x_min\": 80,\n      \"x_max\": 1449,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 80,\n      \"advanceWidth\": 1529\n    },\n    \"Y\": {\n      \"x_min\": 65,\n      \"x_max\": 1396,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 1461\n    },\n    \"Z\": {\n      \"x_min\": 90,\n      \"x_max\": 1107,\n      \"y_min\": 0,\n      \"y_max\": 1456,\n      \"ha\": 1456,\n      \"leftSideBearing\": 90,\n      \"advanceWidth\": 1197\n    },\n    \"[\": {\n      \"x_min\": 157,\n      \"x_max\": 541,\n      \"y_min\": -312,\n      \"y_max\": 1664,\n      \"ha\": 1976,\n      \"leftSideBearing\": 157,\n      \"advanceWidth\": 573\n    },\n    \"\\\\\": {\n      \"x_min\": 36,\n      \"x_max\": 830,\n      \"y_min\": -125,\n      \"y_max\": 1456,\n      \"ha\": 1581,\n      \"leftSideBearing\": 36,\n      \"advanceWidth\": 841\n    },\n    \"]\": {\n      \"x_min\": 23,\n      \"x_max\": 408,\n      \"y_min\": -312,\n      \"y_max\": 1664,\n      \"ha\": 1976,\n      \"leftSideBearing\": 23,\n      \"advanceWidth\": 552\n    },\n    \"^\": {\n      \"x_min\": 71,\n      \"x_max\": 802,\n      \"y_min\": 729,\n      \"y_max\": 1456,\n      \"ha\": 727,\n      \"leftSideBearing\": 71,\n      \"advanceWidth\": 864\n    },\n    \"_\": {\n      \"x_min\": 119,\n      \"x_max\": 1041,\n      \"y_min\": -154,\n      \"y_max\": 0,\n      \"ha\": 154,\n      \"leftSideBearing\": 119,\n      \"advanceWidth\": 1168\n    },\n    \"`\": {\n      \"x_min\": 40,\n      \"x_max\": 456,\n      \"y_min\": 1288,\n      \"y_max\": 1560,\n      \"ha\": 272,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 496\n    },\n    \"a\": {\n      \"x_min\": 79,\n      \"x_max\": 1053,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 79,\n      \"advanceWidth\": 1132\n    },\n    \"b\": {\n      \"x_min\": -16,\n      \"x_max\": 1071,\n      \"y_min\": -21,\n      \"y_max\": 1560,\n      \"ha\": 1581,\n      \"leftSideBearing\": -16,\n      \"advanceWidth\": 1145\n    },\n    \"c\": {\n      \"x_min\": 78,\n      \"x_max\": 988,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1067\n    },\n    \"d\": {\n      \"x_min\": 78,\n      \"x_max\": 1156,\n      \"y_min\": -21,\n      \"y_max\": 1560,\n      \"ha\": 1581,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1218\n    },\n    \"e\": {\n      \"x_min\": 74,\n      \"x_max\": 980,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1059\n    },\n    \"f\": {\n      \"x_min\": 64,\n      \"x_max\": 731,\n      \"y_min\": 0,\n      \"y_max\": 1581,\n      \"ha\": 1581,\n      \"leftSideBearing\": 64,\n      \"advanceWidth\": 725\n    },\n    \"g\": {\n      \"x_min\": 78,\n      \"x_max\": 1133,\n      \"y_min\": -437,\n      \"y_max\": 1102,\n      \"ha\": 1539,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1157\n    },\n    \"h\": {\n      \"x_min\": 49,\n      \"x_max\": 1255,\n      \"y_min\": 0,\n      \"y_max\": 1560,\n      \"ha\": 1560,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 1315\n    },\n    \"i\": {\n      \"x_min\": 67,\n      \"x_max\": 590,\n      \"y_min\": 0,\n      \"y_max\": 1560,\n      \"ha\": 1560,\n      \"leftSideBearing\": 67,\n      \"advanceWidth\": 652\n    },\n    \"j\": {\n      \"x_min\": -56,\n      \"x_max\": 381,\n      \"y_min\": -437,\n      \"y_max\": 1560,\n      \"ha\": 1997,\n      \"leftSideBearing\": -56,\n      \"advanceWidth\": 525\n    },\n    \"k\": {\n      \"x_min\": 64,\n      \"x_max\": 1248,\n      \"y_min\": 0,\n      \"y_max\": 1560,\n      \"ha\": 1560,\n      \"leftSideBearing\": 64,\n      \"advanceWidth\": 1287\n    },\n    \"l\": {\n      \"x_min\": 64,\n      \"x_max\": 587,\n      \"y_min\": 0,\n      \"y_max\": 1560,\n      \"ha\": 1560,\n      \"leftSideBearing\": 64,\n      \"advanceWidth\": 653\n    },\n    \"m\": {\n      \"x_min\": 74,\n      \"x_max\": 1905,\n      \"y_min\": 0,\n      \"y_max\": 1102,\n      \"ha\": 1102,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1977\n    },\n    \"n\": {\n      \"x_min\": 74,\n      \"x_max\": 1278,\n      \"y_min\": 0,\n      \"y_max\": 1102,\n      \"ha\": 1102,\n      \"leftSideBearing\": 74,\n      \"advanceWidth\": 1343\n    },\n    \"o\": {\n      \"x_min\": 78,\n      \"x_max\": 1046,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1124\n    },\n    \"p\": {\n      \"x_min\": 34,\n      \"x_max\": 1119,\n      \"y_min\": -416,\n      \"y_max\": 1102,\n      \"ha\": 1518,\n      \"leftSideBearing\": 34,\n      \"advanceWidth\": 1197\n    },\n    \"q\": {\n      \"x_min\": 78,\n      \"x_max\": 1135,\n      \"y_min\": -416,\n      \"y_max\": 1102,\n      \"ha\": 1518,\n      \"leftSideBearing\": 78,\n      \"advanceWidth\": 1139\n    },\n    \"r\": {\n      \"x_min\": 72,\n      \"x_max\": 808,\n      \"y_min\": 0,\n      \"y_max\": 1102,\n      \"ha\": 1102,\n      \"leftSideBearing\": 72,\n      \"advanceWidth\": 854\n    },\n    \"s\": {\n      \"x_min\": 104,\n      \"x_max\": 933,\n      \"y_min\": -21,\n      \"y_max\": 1102,\n      \"ha\": 1123,\n      \"leftSideBearing\": 104,\n      \"advanceWidth\": 1022\n    },\n    \"t\": {\n      \"x_min\": 24,\n      \"x_max\": 678,\n      \"y_min\": -17,\n      \"y_max\": 1343,\n      \"ha\": 1360,\n      \"leftSideBearing\": 24,\n      \"advanceWidth\": 730\n    },\n    \"u\": {\n      \"x_min\": 52,\n      \"x_max\": 1181,\n      \"y_min\": -21,\n      \"y_max\": 1082,\n      \"ha\": 1103,\n      \"leftSideBearing\": 52,\n      \"advanceWidth\": 1245\n    },\n    \"v\": {\n      \"x_min\": 26,\n      \"x_max\": 1176,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 26,\n      \"advanceWidth\": 1206\n    },\n    \"w\": {\n      \"x_min\": 52,\n      \"x_max\": 1777,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 52,\n      \"advanceWidth\": 1823\n    },\n    \"x\": {\n      \"x_min\": 42,\n      \"x_max\": 1163,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 42,\n      \"advanceWidth\": 1203\n    },\n    \"y\": {\n      \"x_min\": 24,\n      \"x_max\": 1172,\n      \"y_min\": -437,\n      \"y_max\": 1082,\n      \"ha\": 1519,\n      \"leftSideBearing\": 24,\n      \"advanceWidth\": 1192\n    },\n    \"z\": {\n      \"x_min\": 88,\n      \"x_max\": 960,\n      \"y_min\": 0,\n      \"y_max\": 1082,\n      \"ha\": 1082,\n      \"leftSideBearing\": 88,\n      \"advanceWidth\": 1032\n    },\n    \"{\": {\n      \"x_min\": 63,\n      \"x_max\": 671,\n      \"y_min\": -364,\n      \"y_max\": 1597,\n      \"ha\": 1961,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 701\n    },\n    \"|\": {\n      \"x_min\": 150,\n      \"x_max\": 307,\n      \"y_min\": -270,\n      \"y_max\": 1456,\n      \"ha\": 1726,\n      \"leftSideBearing\": 150,\n      \"advanceWidth\": 451\n    },\n    \"}\": {\n      \"x_min\": 27,\n      \"x_max\": 635,\n      \"y_min\": -364,\n      \"y_max\": 1597,\n      \"ha\": 1961,\n      \"leftSideBearing\": 27,\n      \"advanceWidth\": 701\n    },\n    \"~\": {\n      \"x_min\": 121,\n      \"x_max\": 1257,\n      \"y_min\": 401,\n      \"y_max\": 803,\n      \"ha\": 402,\n      \"leftSideBearing\": 121,\n      \"advanceWidth\": 1386\n    }\n  },\n  \"fontFamily\": \"Roboto Slab\",\n  \"resolution\": 2048,\n  \"generatedOn\": \"2020-06-15T19:12:58.120Z\"\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file handles a registry of text font metric information, so all\n// VEX modules can take advantage of font metrics in a uniform way.\n//\n\nimport { RuntimeError, log } from './util';\nimport { PetalumaScriptTextMetrics } from './fonts/petalumascript_textmetrics';\nimport { RobotoSlabTextMetrics } from './fonts/robotoslab_textmetrics';\nimport { FontInfo } from './types/common';\n\nexport interface TextFontMetrics {\n  x_min: number;\n  x_max: number;\n  y_min: number;\n  y_max: number;\n  ha: number;\n  leftSideBearing: number;\n  advanceWidth: number;\n}\n\nexport interface TextFontRegistry {\n  [name: string]: unknown;\n  name?: string;\n  resolution?: number;\n  glyphs?: Record<string, TextFontMetrics>;\n  family: string;\n  serifs: boolean;\n  monospaced?: boolean;\n  italic: boolean;\n  bold: boolean;\n  maxSizeGlyph?: string;\n  superscriptOffset?: number;\n  subscriptOffset?: number;\n  description: string;\n}\n\n// To enable logging for this class. Set `Vex.Flow.TextFont.DEBUG` to `true`.\nfunction L(\n  // eslint-disable-next-line\n  ...args: any[]) {\n  if (TextFont.DEBUG) log('Vex.Flow.TextFont', args);\n}\n\nexport class TextFont {\n  protected static debug: boolean;\n  resolution: number = 1000;\n  protected name?: string;\n  protected glyphs: Record<string, TextFontMetrics> = {};\n  protected family: string = '';\n  protected serifs?: boolean;\n  protected monospaced?: boolean;\n  protected italic?: boolean;\n  protected bold?: boolean;\n  protected superscriptOffset?: number;\n  protected subscriptOffset?: number;\n  protected description?: string;\n  protected maxSizeGlyph: string;\n  protected weight: string;\n  protected style: string;\n  protected fontCacheKey: string = '';\n\n  protected static registryInstance: TextFontRegistry[];\n  protected static textWidthCacheInstance?: Record<string, Record<string, number>>;\n\n  protected size: number;\n  protected attrs: { type: string };\n\n  static get CATEGORY(): string {\n    return 'textFont';\n  }\n\n  static get DEBUG(): boolean {\n    return TextFont.debug;\n  }\n\n  static set DEBUG(val: boolean) {\n    TextFont.debug = val;\n  }\n\n  // ### fontRegistry\n  // Getter of an array of available fonts.  Applications may register their\n  // own fonts and the metrics for those fonts will be available to the\n  // application.\n  static get fontRegistry(): TextFontRegistry[] {\n    if (!TextFont.registryInstance) {\n      TextFont.registryInstance = [];\n      TextFont.registryInstance.push({\n        name: 'Roboto Slab',\n        resolution: RobotoSlabTextMetrics.resolution,\n        glyphs: RobotoSlabTextMetrics.glyphs,\n        family: RobotoSlabTextMetrics.fontFamily,\n        serifs: true,\n        monospaced: false,\n        italic: false,\n        bold: false,\n        maxSizeGlyph: 'H',\n        superscriptOffset: 0.66,\n        subscriptOffset: 0.66,\n        description: 'Default serif text font to pair with Bravura/Gonville engraving font',\n      });\n      TextFont.registryInstance.push({\n        name: 'petalumaScript',\n        resolution: PetalumaScriptTextMetrics.resolution,\n        glyphs: PetalumaScriptTextMetrics.glyphs,\n        family: PetalumaScriptTextMetrics.fontFamily,\n        serifs: false,\n        monospaced: false,\n        italic: false,\n        bold: false,\n        maxSizeGlyph: 'H',\n        superscriptOffset: 0.66,\n        subscriptOffset: 0.66,\n        description: 'Default sans-serif text font to pair with Petaluma engraving font',\n      });\n    }\n    return TextFont.registryInstance;\n  }\n\n  // ### getFontFamilies\n  // Web font files are generally distributed per weight and style (bold, italic).\n  // return the family with the attributes that are available for that font.\n  // We assume descriptions are the same for different weights/styles.\n  static getFontFamilies(): TextFontRegistry[] {\n    const hash: Record<string, TextFontRegistry> = {};\n    const returnedFonts: TextFontRegistry[] = [];\n    TextFont.fontRegistry.forEach((font) => {\n      if (!hash[font.family]) {\n        hash[font.family] = {\n          family: font.family,\n          description: font.description,\n          bold: font.bold,\n          serifs: font.serifs,\n          italic: font.italic,\n        };\n      } else {\n        ['bold', 'italic', 'monospaced', 'serifs'].forEach((attr) => {\n          if (font[attr]) {\n            hash[font.family][attr] = true;\n          }\n        });\n      }\n    });\n    const keys = Object.keys(hash);\n    keys.forEach((key) => {\n      returnedFonts.push(hash[key]);\n    });\n    return returnedFonts;\n  }\n\n  // ### fontWeightToBold\n  // return true if the font weight indicates we desire a 'bold'\n  // used in getTextFontFromVexFontData\n  static fontWeightToBold(fw?: string): boolean {\n    if (!fw) {\n      return false;\n    }\n    if (isNaN(parseInt(fw, 10))) {\n      return fw.toLowerCase() === 'bold';\n    }\n    // very subjective...\n    return parseInt(fw, 10) >= 600;\n  }\n\n  // ### fontStyleToItalic\n  // return true if the font style indicates we desire 'italic' style\n  // used in getTextFontFromVexFontData\n  static fontStyleToItalic(fs?: string): boolean {\n    return typeof fs === 'string' && fs.toLowerCase() === 'italic';\n  }\n\n  // ### textWidthCache\n  // Static cache of widths hashed on font/string.\n  static get textWidthCache(): Record<string, Record<string, number>> {\n    if (typeof TextFont.textWidthCacheInstance === 'undefined') {\n      TextFont.textWidthCacheInstance = {};\n    }\n    return TextFont.textWidthCacheInstance;\n  }\n\n  // ### getTextFontFromVexFontData\n  // Find the font that most closely matches the parameters from the given font data.\n  // Primarily we look for font family, also bold and italic attributes.  This\n  // method will always return a fallback font if there are no matches.\n  static getTextFontFromVexFontData(fd: FontInfo): TextFont {\n    let i = 0;\n    let selectedFont = undefined;\n    const fallback = TextFont.fontRegistry[0];\n    let candidates: TextFontRegistry[] = [];\n    const families = fd.family.split(',');\n    for (i = 0; i < families.length; ++i) {\n      const famliy = families[i];\n      candidates = TextFont.fontRegistry.filter((font) => font.family === famliy);\n      if (candidates.length) {\n        break;\n      }\n    }\n    if (candidates.length === 0) {\n      selectedFont = new TextFont(fallback);\n    } else if (candidates.length === 1) {\n      selectedFont = new TextFont(candidates[0]);\n    } else {\n      const bold = TextFont.fontWeightToBold(fd.weight);\n      const italic = TextFont.fontStyleToItalic(fd.style);\n      const perfect = candidates.find((font) => font.bold === bold && font.italic === italic);\n      if (perfect) {\n        selectedFont = new TextFont(perfect);\n      } else {\n        const ok = candidates.find((font) => font.italic === italic || font.bold === bold);\n        if (ok) {\n          selectedFont = new TextFont(ok);\n        } else {\n          selectedFont = new TextFont(candidates[0]);\n        }\n      }\n    }\n    if (typeof fd.size === 'number' && fd.size > 0) {\n      selectedFont.setFontSize(fd.size);\n    }\n    return selectedFont;\n  }\n\n  static getFontDataByName(fontName: string): TextFontRegistry | undefined {\n    return TextFont.fontRegistry.find((fd) => fd.name === fontName);\n  }\n\n  // ### registerFont\n  // Applications may register their own fonts and the metrics, and those metrics\n  // will be available to the application for formatting.  See fontRegistry\n  // for format of font metrics.  Metrics can be generated from any font file\n  // using font_fontgen.js in the tools/smufl directory.\n  static registerFont(fontData: TextFontRegistry, overwrite?: boolean): void {\n    // Get via external reference to make sure initial object is created\n    const reg = TextFont.fontRegistry;\n    const exists = reg.find((td) => fontData.name === td.name);\n    if (exists && overwrite) {\n      TextFont.registryInstance = TextFont.fontRegistry.filter((fd) => fd.name !== exists.name);\n    }\n    if (!exists) {\n      L('registering font ' + fontData.name);\n      TextFont.registryInstance.push(fontData);\n    }\n  }\n\n  // ## Prototype Methods\n  //\n  // create a font instance.\n  // The preferred method for returning an instance of this class is via\n  // getTextFontFromVexFontData\n  constructor(params: TextFontRegistry) {\n    this.size = 14;\n    this.maxSizeGlyph = 'H';\n    this.weight = '';\n    this.style = '';\n    this.attrs = { type: 'TextFont' };\n    if (!params.name) {\n      throw new RuntimeError('BadArgument', 'Font constructor must specify a name');\n    }\n    const fontData = params.glyphs ? params : TextFont.getFontDataByName(params.name);\n    if (!fontData) {\n      if (params.glyphs && params.resolution) {\n        TextFont.registerFont(params);\n      } else {\n        throw new RuntimeError('BadArgument', 'Unknown font, must have glyph metrics and resolution');\n      }\n    } else {\n      this.updateParams(fontData);\n    }\n    this.updateParams(params);\n\n    this.updateCacheKey();\n  }\n\n  updateParams(params: TextFontRegistry): void {\n    if (params.name) this.name = params.name;\n    if (params.resolution) this.resolution = params.resolution;\n    if (params.glyphs) this.glyphs = params.glyphs;\n    this.family = params.family;\n    this.serifs = params.serifs;\n    if (params.monospaced) this.monospaced = params.monospaced;\n    this.italic = params.italic;\n    this.bold = params.bold;\n    if (params.maxSizeGlyph) this.maxSizeGlyph = params.maxSizeGlyph;\n    if (params.superscriptOffset) this.superscriptOffset = params.superscriptOffset;\n    if (params.subscriptOffset) this.subscriptOffset = params.subscriptOffset;\n  }\n\n  // Create a hash with the current font data, so we can cache computed widths\n  updateCacheKey(): void {\n    this.fontCacheKey = `${this.family}-${this.size}-${this.weight}-${this.style}`;\n  }\n\n  getMetricForCharacter(c: string): TextFontMetrics {\n    if (this.glyphs[c]) {\n      return this.glyphs[c];\n    }\n    return this.glyphs[this.maxSizeGlyph];\n  }\n\n  get maxHeight(): number {\n    const glyph = this.getMetricForCharacter(this.maxSizeGlyph);\n    return (glyph.ha / this.resolution) * this.pointsToPixels;\n  }\n\n  getWidthForCharacter(c: string): number {\n    const metric = this.getMetricForCharacter(c);\n    if (!metric) {\n      return 0.65 * this.pointsToPixels;\n    }\n    return (metric.advanceWidth / this.resolution) * this.pointsToPixels;\n  }\n\n  getWidthForString(s: string): number {\n    // Store width in 2-level cache, so I don't have to recompute for\n    // same string/font\n    if (typeof TextFont.textWidthCache[this.fontCacheKey] === 'undefined') {\n      TextFont.textWidthCache[this.fontCacheKey] = {};\n    }\n    let width = 0;\n    if (!TextFont.textWidthCache[this.fontCacheKey][s]) {\n      for (let j = 0; j < s.length; ++j) {\n        width += this.getWidthForCharacter(s[j]);\n      }\n      TextFont.textWidthCache[this.fontCacheKey][s] = width;\n    }\n    return TextFont.textWidthCache[this.fontCacheKey][s];\n  }\n\n  // ### pointsToPixels\n  // The font size is specified in points, convert to 'pixels' in the svg space\n  get pointsToPixels(): number {\n    return this.size / 72 / (1 / 96);\n  }\n\n  setFontSize(size: number): this {\n    this.size = size;\n    // font size mangled into cache key, so use the correct one.\n    this.updateCacheKey();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { log } from './util';\nimport { Flow } from './flow';\nimport { Modifier } from './modifier';\nimport { TextFont } from './textfont';\nimport { FontInfo } from './types/common';\nimport { StemmableNote } from './stemmablenote';\nimport { ModifierContextState } from './modifiercontext';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Annotation.DEBUG) log('Vex.Flow.Annotation', args);\n}\n\nenum Justify {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n  CENTER_STEM = 4,\n}\n\nenum VerticalJustify {\n  TOP = 1,\n  CENTER = 2,\n  BOTTOM = 3,\n  CENTER_STEM = 4,\n}\n\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n  /** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\n  static DEBUG: boolean;\n\n  protected justification: Justify;\n  protected vert_justification: VerticalJustify;\n  protected text: string;\n  protected font: FontInfo;\n\n  /** Articulations category string. */\n  static get CATEGORY(): string {\n    return 'annotations';\n  }\n\n  /** Text annotations can be positioned and justified relative to the note. */\n  static Justify = Justify;\n\n  static JustifyString: Record<string, number> = {\n    left: Annotation.Justify.LEFT,\n    right: Annotation.Justify.RIGHT,\n    center: Annotation.Justify.CENTER,\n    centerStem: Annotation.Justify.CENTER_STEM,\n  };\n\n  static VerticalJustify = VerticalJustify;\n\n  static VerticalJustifyString: Record<string, number> = {\n    above: Annotation.VerticalJustify.TOP,\n    top: Annotation.VerticalJustify.TOP,\n    below: Annotation.VerticalJustify.BOTTOM,\n    bottom: Annotation.VerticalJustify.BOTTOM,\n    center: Annotation.VerticalJustify.CENTER,\n    centerStem: Annotation.VerticalJustify.CENTER_STEM,\n  };\n\n  /** Arrange annotations within a `ModifierContext` */\n  static format(annotations: Annotation[], state: ModifierContextState): boolean {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      let testWidth = 0;\n      const annotation = annotations[i];\n      const textFont = TextFont.getTextFontFromVexFontData({\n        family: annotation.font.family,\n        size: annotation.font.size,\n        weight: 'normal',\n      });\n      // Calculate if the vertical extent will exceed a single line and adjust accordingly.\n      const numLines = Math.floor(textFont.maxHeight / Flow.STAVE_LINE_DISTANCE) + 1;\n      // Get the string width from the font metrics\n      testWidth = textFont.getWidthForString(annotation.text);\n      width = Math.max(width, testWidth);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line += numLines;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line += numLines;\n      }\n    }\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  /**\n   * Annotations inherit from `Modifier` and is positioned correctly when\n   * in a `ModifierContext`.\n   * Create a new `Annotation` with the string `text`.\n   */\n  constructor(text: string) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  /** Get element category string. */\n  getCategory(): string {\n    return Annotation.CATEGORY;\n  }\n\n  /** Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`. */\n  setFont(family: string, size: number, weight: string): this {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  /**\n   * Set vertical position of text (above or below stave).\n   * @param just value in `Annotation.VerticalJustify`.\n   */\n  setVerticalJustification(just: string | VerticalJustify): this {\n    this.vert_justification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n    return this;\n  }\n\n  /**\n   * Get horizontal justification.\n   */\n  getJustification(): Justify {\n    return this.justification;\n  }\n\n  /**\n   * Set horizontal justification.\n   * @param justification value in `Annotation.Justify`.\n   */\n  setJustification(just: string | Justify): this {\n    this.justification = typeof just === 'string' ? Annotation.JustifyString[just] : just;\n    return this;\n  }\n\n  /** Render text beside the note. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n\n    // We're changing context parameters. Save current state.\n    ctx.save();\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    ctx.openGroup(classString, this.getAttribute('id'));\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = ctx.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } /* CENTER_STEM */ else {\n      x = (note as StemmableNote).getStemX() - text_width / 2;\n    }\n\n    let stem_ext: Record<string, number> = {};\n    let spacing = 0;\n    const has_stem = note.hasStem();\n    const stave = note.checkStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = (note as StemmableNote).checkStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n        y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n      }\n    } /* CENTER_STEM */ else {\n      const extents = note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    ctx.fillText(this.text, x, y);\n    ctx.closeGroup();\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements chord symbols as modifiers that can be attached to\n// notes.  Chord symbols can contain multiple 'blocks' which can contain\n// text or glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.js` for usage examples.\n\nimport { log } from './util';\nimport { Flow } from './flow';\nimport { Glyph } from './glyph';\nimport { TextFont } from './textfont';\nimport { Modifier } from './modifier';\nimport { FontInfo } from './types/common';\nimport { StemmableNote } from './stemmablenote';\n\nexport interface ChordSymbolBlock {\n  vAlign: boolean;\n  symbolModifier: number;\n  text: string;\n  yShift: number;\n  xShift: number;\n  width: number;\n  glyph: Glyph;\n  symbolType: number;\n}\n\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]): void {\n  if (ChordSymbol.DEBUG) log('Vex.Flow.ChordSymbol', args);\n}\n\nexport class ChordSymbol extends Modifier {\n  static DEBUG: boolean = false;\n  protected static noFormat: boolean;\n\n  protected symbolBlocks: ChordSymbolBlock[];\n\n  protected horizontal: number;\n  protected vertical: number;\n  protected useKerning: boolean;\n  protected reportWidth: boolean;\n  protected font: FontInfo;\n  protected textFont: TextFont;\n\n  static get CATEGORY(): string {\n    return 'chordSymbol';\n  }\n\n  // Chord symbols can be positioned and justified relative to the note.\n  static readonly horizontalJustify = {\n    LEFT: 1,\n    CENTER: 2,\n    RIGHT: 3,\n    CENTER_STEM: 4,\n  };\n\n  static readonly horizontalJustifyString: Record<string, number> = {\n    left: ChordSymbol.horizontalJustify.LEFT,\n    right: ChordSymbol.horizontalJustify.RIGHT,\n    center: ChordSymbol.horizontalJustify.CENTER,\n    centerStem: ChordSymbol.horizontalJustify.CENTER_STEM,\n  };\n\n  static readonly verticalJustify = {\n    TOP: 1,\n    BOTTOM: 2,\n  };\n\n  static get superSubRatio(): number {\n    return ChordSymbol.chordSymbolMetrics.global.superSubRatio;\n  }\n\n  // ### NOTEXTFORMAT\n  // used to globally turn off text formatting, if the built-in formatting does not\n  // work for your font..\n  static get NOTEXTFORMAT(): boolean {\n    return typeof ChordSymbol.noFormat === 'undefined' ? false : ChordSymbol.noFormat;\n  }\n\n  static set NOTEXTFORMAT(val: boolean) {\n    ChordSymbol.noFormat = val;\n  }\n\n  static readonly verticalJustifyString: Record<string, number> = {\n    top: ChordSymbol.verticalJustify.TOP,\n    above: ChordSymbol.verticalJustify.TOP,\n    below: ChordSymbol.verticalJustify.BOTTOM,\n    bottom: ChordSymbol.verticalJustify.BOTTOM,\n  };\n\n  // eslint-disable-next-line\n  static getMetricForGlyph(glyphCode: string): any {\n    if (ChordSymbol.chordSymbolMetrics[glyphCode]) {\n      return ChordSymbol.chordSymbolMetrics[glyphCode];\n    }\n    return undefined;\n  }\n\n  getYOffsetForText(text: string): number {\n    let acc = 0;\n    let ix = 0;\n    const resolution = this.textFont.resolution;\n    for (ix = 0; ix < text.length; ++ix) {\n      const metric = this.textFont.getMetricForCharacter(text[ix]);\n\n      if (metric) {\n        acc = metric.y_max < acc ? metric.y_max : acc;\n      }\n    }\n\n    return ix > 0 ? -1 * (acc / resolution) : 0;\n  }\n\n  static get engravingFontResolution(): number {\n    return Flow.DEFAULT_FONT_STACK[0].getResolution();\n  }\n\n  static get spacingBetweenBlocks(): number {\n    return ChordSymbol.chordSymbolMetrics.global.spacing / ChordSymbol.engravingFontResolution;\n  }\n\n  getWidthForCharacter(c: string): number {\n    return this.textFont.getMetricForCharacter(c).advanceWidth / this.textFont.resolution;\n  }\n\n  static getWidthForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0.65; // probably should do something here.\n    }\n    return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n  }\n\n  static getYShiftForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0;\n    }\n    return metric.yOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static getXShiftForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0;\n    }\n    return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n  }\n\n  static get superscriptOffset(): number {\n    return ChordSymbol.chordSymbolMetrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static get subscriptOffset(): number {\n    return ChordSymbol.chordSymbolMetrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static get kerningOffset(): number {\n    return ChordSymbol.chordSymbolMetrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  // Glyph data\n  static readonly glyphs: Record<string, { code: string }> = {\n    diminished: {\n      code: 'csymDiminished',\n    },\n    dim: {\n      code: 'csymDiminished',\n    },\n    halfDiminished: {\n      code: 'csymHalfDiminished',\n    },\n    '+': {\n      code: 'csymAugmented',\n    },\n    augmented: {\n      code: 'csymAugmented',\n    },\n    majorSeventh: {\n      code: 'csymMajorSeventh',\n    },\n    minor: {\n      code: 'csymMinor',\n    },\n    '-': {\n      code: 'csymMinor',\n    },\n    '(': {\n      code: 'csymParensLeftTall',\n    },\n    leftParen: {\n      code: 'csymParensLeftTall',\n    },\n    ')': {\n      code: 'csymParensRightTall',\n    },\n    rightParen: {\n      code: 'csymParensRightTall',\n    },\n    leftBracket: {\n      code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n      code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n      code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n      code: 'csymParensRightVeryTall',\n    },\n    '/': {\n      code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n      code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n      code: 'accidentalSharp',\n    },\n    b: {\n      code: 'accidentalFlat',\n    },\n  };\n\n  static readonly symbolTypes = {\n    GLYPH: 1,\n    TEXT: 2,\n    LINE: 3,\n  };\n\n  static readonly symbolModifiers = {\n    NONE: 1,\n    SUBSCRIPT: 2,\n    SUPERSCRIPT: 3,\n  };\n\n  // eslint-disable-next-line\n  static get chordSymbolMetrics(): any {\n    return Flow.DEFAULT_FONT_STACK[0].getMetrics().glyphs.chordSymbol;\n  }\n\n  static get lowerKerningText(): string[] {\n    return Flow.DEFAULT_FONT_STACK[0].getMetrics().glyphs.chordSymbol.global.lowerKerningText;\n  }\n\n  static get upperKerningText(): string[] {\n    return Flow.DEFAULT_FONT_STACK[0].getMetrics().glyphs.chordSymbol.global.upperKerningText;\n  }\n\n  // ### format\n  // try to estimate the width of the whole chord symbol, based on the\n  // sum of the widths of the individual blocks.  Also estimate how many\n  // lines above/below the staff we need`\n  // eslint-disable-next-line\n  static format(instances: any, state: any): boolean {\n    if (!instances || instances.length === 0) return false;\n\n    let width = 0;\n    let nonSuperWidth = 0;\n    const reportedWidths = [];\n\n    for (let i = 0; i < instances.length; ++i) {\n      const instance = instances[i];\n      const fontAdj = instance.font.size / 20;\n      const glyphAdj = fontAdj * 2;\n      let lineSpaces = 1;\n      let vAlign = false;\n\n      for (let j = 0; j < instance.symbolBlocks.length; ++j) {\n        const symbol = instance.symbolBlocks[j];\n        const sup = instance.isSuperscript(symbol);\n        const sub = instance.isSubscript(symbol);\n        const subAdj = sup || sub ? ChordSymbol.superSubRatio : 1;\n        const adj = symbol.symbolType === ChordSymbol.symbolTypes.GLYPH ? glyphAdj * subAdj : fontAdj * subAdj;\n\n        // If there are super/subscripts, they extend beyond the line so\n        // assume they take up 2 lines\n        if (sup || sub) {\n          lineSpaces = 2;\n        }\n\n        // If there is a symbol-specific offset, add it but consider font\n        // size since font and glyphs will be interspersed\n        if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH) {\n          symbol.yShift += ChordSymbol.getYShiftForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n          symbol.xShift += ChordSymbol.getXShiftForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n          symbol.glyph.scale = symbol.glyph.scale * adj;\n          symbol.width = ChordSymbol.getWidthForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n        } else if (symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n          symbol.width = symbol.width * instance.textFont.pointsToPixels * subAdj;\n          symbol.yShift += instance.getYOffsetForText(symbol.text) * adj;\n        }\n\n        if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH && symbol.glyph.code === ChordSymbol.glyphs.over.code) {\n          lineSpaces = 2;\n        }\n        symbol.width += ChordSymbol.spacingBetweenBlocks * instance.pointsToPixels * subAdj;\n\n        // If a subscript immediately  follows a superscript block, try to\n        // overlay them.\n        if (sup && j > 0) {\n          const prev = instance.symbolBlocks[j - 1];\n          if (!instance.isSuperscript(prev)) {\n            nonSuperWidth = width;\n          }\n        }\n        if (sub && nonSuperWidth > 0) {\n          vAlign = true;\n          // slide the symbol over so it lines up with superscript\n          symbol.xShift = symbol.xShift + (nonSuperWidth - width);\n          width = nonSuperWidth;\n          nonSuperWidth = 0;\n          // If we have vertically lined up, turn kerning off.\n          instance.setEnableKerning(false);\n        }\n        if (!sup && !sub) {\n          nonSuperWidth = 0;\n        }\n        symbol.vAlign = vAlign;\n        width += symbol.width;\n      }\n\n      // make kerning adjustments after computing super/subscripts\n      instance.updateKerningAdjustments();\n      instance.updateOverBarAdjustments();\n\n      if (instance.getVertical() === ChordSymbol.verticalJustify.TOP) {\n        instance.setTextLine(state.top_text_line);\n        state.top_text_line += lineSpaces;\n      } else {\n        instance.setTextLine(state.text_line + 1);\n        state.text_line += lineSpaces + 1;\n      }\n      if (instance.getReportWidth()) {\n        reportedWidths.push(width);\n      } else {\n        reportedWidths.push(0);\n      }\n    }\n\n    width = reportedWidths.reduce((a, b) => a + b);\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // chordSymbol is a modifier that creates a chord symbol above/below a chord\n  // This is the modifier version, meaning it is attached to an existing note.\n  constructor() {\n    super();\n    this.setAttribute('type', 'ChordSymbol');\n    this.symbolBlocks = [];\n    this.horizontal = ChordSymbol.horizontalJustify.LEFT;\n    this.vertical = ChordSymbol.verticalJustify.TOP;\n    this.useKerning = true;\n    this.reportWidth = true;\n\n    let fontFamily = 'Arial';\n    if (this.musicFont.getName() === 'Petaluma') {\n      fontFamily = 'petalumaScript,Arial';\n    } else {\n      fontFamily = 'Roboto Slab,Times';\n    }\n    this.font = {\n      family: fontFamily,\n      size: 12,\n      weight: '',\n    };\n    this.textFont = TextFont.getTextFontFromVexFontData(this.font);\n  }\n\n  // ### pointsToPixels\n  // The font size is specified in points, convert to 'pixels' in the svg space\n  get pointsToPixels(): number {\n    return this.textFont.pointsToPixels;\n  }\n\n  get superscriptOffset(): number {\n    return ChordSymbol.superscriptOffset * this.pointsToPixels;\n  }\n\n  get subscriptOffset(): number {\n    return ChordSymbol.subscriptOffset * this.pointsToPixels;\n  }\n\n  setReportWidth(value: boolean): this {\n    this.reportWidth = value;\n    return this;\n  }\n\n  getReportWidth(): boolean {\n    return this.reportWidth;\n  }\n\n  updateOverBarAdjustments(): void {\n    let symIx = 0;\n    const barIx = this.symbolBlocks.findIndex(\n      (symbol) =>\n        symbol.symbolType === ChordSymbol.symbolTypes.GLYPH && symbol.glyph.code === 'csymDiagonalArrangementSlash'\n    );\n\n    if (barIx < 0) {\n      return;\n    }\n    const bar = this.symbolBlocks[barIx];\n    const xoff = bar.width / 4;\n    const yoff = 0.25 * this.pointsToPixels;\n    for (symIx === 0; symIx < barIx; ++symIx) {\n      const symbol = this.symbolBlocks[symIx];\n      symbol.xShift = symbol.xShift + xoff;\n      symbol.yShift = symbol.yShift - yoff;\n    }\n\n    for (symIx = barIx + 1; symIx < this.symbolBlocks.length; ++symIx) {\n      const symbol = this.symbolBlocks[symIx];\n      symbol.xShift = symbol.xShift - xoff;\n      symbol.yShift = symbol.yShift + yoff;\n    }\n  }\n\n  updateKerningAdjustments(): void {\n    let accum = 0;\n    for (let j = 0; j < this.symbolBlocks.length; ++j) {\n      const symbol = this.symbolBlocks[j];\n      accum += this.getKerningAdjustment(j);\n      symbol.xShift += accum;\n    }\n  }\n\n  // ### getKerningAdjustment\n  // Do some very basic kerning so that letter chords like 'A' don't have\n  // the extensions hanging off to the right.\n  getKerningAdjustment(j: number): number {\n    if (!this.useKerning) {\n      return 0;\n    }\n    const symbol = this.symbolBlocks[j];\n    const kernConst = ChordSymbol.kerningOffset * this.pointsToPixels;\n    const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n    let rv = 0;\n\n    // Move things into the '/' over bar\n    if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH && symbol.glyph.code === ChordSymbol.glyphs.over.code) {\n      rv += symbol.glyph.metrics.x_shift;\n    }\n\n    if (\n      prevSymbol !== undefined &&\n      prevSymbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n      prevSymbol.glyph.code === ChordSymbol.glyphs.over.code\n    ) {\n      rv += prevSymbol.glyph.metrics.x_shift;\n    }\n\n    // For superscripts that follow a letter without much top part, move it to the\n    // left slightly\n    let preKernUpper = false;\n    let preKernLower = false;\n    if (prevSymbol != null && prevSymbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n      preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n      preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n    }\n\n    // TODO: adjustkern for  for font size.\n    // Where should this constant live?\n    if (preKernUpper && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUPERSCRIPT) {\n      rv += kernConst;\n    }\n\n    if (preKernLower && symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n      if (symbol.text[0] >= 'a' && symbol.text[0] <= 'z') {\n        rv += kernConst / 2;\n      }\n      if (ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol?.text[prevSymbol.text.length - 1])) {\n        rv += kernConst / 2;\n      }\n    }\n    return rv;\n  }\n\n  // ### getSymbolBlock\n  // ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n  // Each block can have its own vertical orientation\n  // eslint-disable-next-line\n  getSymbolBlock(parameters: any): any {\n    parameters = parameters == undefined ? {} : parameters;\n    const symbolType = parameters.symbolType ? parameters.symbolType : ChordSymbol.symbolTypes.TEXT;\n    const text = parameters.text ? parameters.text : '';\n    const symbolModifier = parameters.symbolModifier ? parameters.symbolModifier : ChordSymbol.symbolModifiers.NONE;\n    const xShift = 0;\n    const yShift = 0;\n    const vAlign = 0;\n\n    const rv = {\n      text,\n      symbolType,\n      symbolModifier,\n      xShift,\n      yShift,\n      vAlign,\n      width: 0,\n      glyph: undefined as Glyph | undefined,\n    };\n\n    rv.width = 0;\n    // Note: all symbol widths are resolution and font-independent.  We convert to\n    // pixel values when we know what the font is.\n    if (symbolType === ChordSymbol.symbolTypes.GLYPH && typeof parameters.glyph === 'string') {\n      const glyphArgs = ChordSymbol.glyphs[parameters.glyph];\n      const glyphPoints = 20;\n      rv.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n      // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n      // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n      // rv.width = rv.glyph.getMetrics().width;\n      // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n    } else if (symbolType === ChordSymbol.symbolTypes.TEXT) {\n      let twidth = 0;\n      for (let i = 0; i < rv.text.length; ++i) {\n        twidth += this.getWidthForCharacter(rv.text[i]);\n      }\n      rv.width = twidth;\n    } else if (symbolType === ChordSymbol.symbolTypes.LINE) {\n      rv.width = parameters.width;\n    }\n\n    return rv;\n  }\n\n  // ### addSymbolBlock\n  // Add a symbol to this chord, could be text, glyph or line.\n  // eslint-disable-next-line\n  addSymbolBlock(parameters: any): this {\n    this.symbolBlocks.push(this.getSymbolBlock(parameters));\n    return this;\n  }\n\n  // ### Convenience functions follow that let you create different types of\n  // chord symbol parts easily\n  // ### addText\n  // Add a text block\n  // eslint-disable-next-line\n  addText(text: string, parameters: any): this {\n    parameters = parameters == null ? {} : parameters;\n    parameters.text = text;\n    parameters.symbolType = ChordSymbol.symbolTypes.TEXT;\n    return this.addSymbolBlock(parameters);\n  }\n\n  // ### addTextSuperscript\n  // add a text block with superscript modifier\n  addTextSuperscript(text: string): this {\n    const symbolType = ChordSymbol.symbolTypes.TEXT;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUPERSCRIPT;\n    return this.addSymbolBlock({ text, symbolType, symbolModifier });\n  }\n\n  // ### addTextSubscript\n  // add a text block with subscript modifier\n  addTextSubscript(text: string): this {\n    const symbolType = ChordSymbol.symbolTypes.TEXT;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUBSCRIPT;\n    return this.addSymbolBlock({ text, symbolType, symbolModifier });\n  }\n\n  // ### addGlyphSuperscript\n  // add a glyph block with superscript modifier\n  addGlyphSuperscript(glyph: Glyph): this {\n    const symbolType = ChordSymbol.symbolTypes.GLYPH;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUPERSCRIPT;\n    return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n  }\n\n  // eslint-disable-next-line\n  addGlyph(glyph: string, parameters: any): this {\n    parameters = parameters == null ? {} : parameters;\n    parameters.glyph = glyph;\n    parameters.symbolType = ChordSymbol.symbolTypes.GLYPH;\n    return this.addSymbolBlock(parameters);\n  }\n\n  // ### addGlyphOrText\n  // Add a glyph for each character in 'text'.  If the glyph is not\n  // available, use text from the font.  E.g.:\n  // `addGlyphOrText(\"(+5#11)\")`\n  // will use text for the '5' and '11', and glyphs for everything else.\n  // eslint-disable-next-line\n  addGlyphOrText(text: string[], parameters: any): this {\n    parameters = parameters == null ? {} : parameters;\n    let str = '';\n    for (let i = 0; i < text.length; ++i) {\n      if (ChordSymbol.glyphs[text[i]]) {\n        if (str.length > 0) {\n          this.addText(str, parameters);\n          str = '';\n        }\n        this.addGlyph(text[i], parameters);\n      } else {\n        str += text[i];\n      }\n    }\n    if (str.length > 0) {\n      this.addText(str, parameters);\n    }\n    return this;\n  }\n\n  // ### Add a line of the given width, used as a continuation of the previous\n  // symbol in analysis, or lyrics, etc.\n  // eslint-disable-next-line\n  addLine(width: number, parameters: any): this {\n    parameters = parameters == null ? {} : parameters;\n    parameters.symbolType = ChordSymbol.symbolTypes.LINE;\n    parameters.width = width;\n    return this.addSymbolBlock(parameters);\n  }\n\n  getCategory(): string {\n    return ChordSymbol.CATEGORY;\n  }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family: string, size: number, weight: string): this {\n    this.font = { family, size, weight };\n    this.textFont = TextFont.getTextFontFromVexFontData(this.font);\n    return this;\n  }\n\n  setFontSize(size: number): this {\n    this.font.size = size;\n    this.textFont.setFontSize(size);\n    return this;\n  }\n\n  setEnableKerning(val: boolean): this {\n    this.useKerning = val;\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `ChordSymbol.vertical`.\n  setVertical(just: string | number): this {\n    this.vertical = typeof just === 'string' ? ChordSymbol.verticalJustifyString[just] : just;\n    return this;\n  }\n\n  getVertical(): number {\n    return this.vertical;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `ChordSymbol.Justify`.\n  setHorizontal(just: string | number): this {\n    this.horizontal = typeof just === 'string' ? ChordSymbol.horizontalJustifyString[just] : just;\n    return this;\n  }\n\n  getWidth(): number {\n    let rv = 0;\n    this.symbolBlocks.forEach((symbol) => {\n      rv += symbol.vAlign ? 0 : symbol.width;\n    });\n    return rv;\n  }\n\n  isSuperscript(symbol: ChordSymbolBlock): boolean {\n    return symbol.symbolModifier !== undefined && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUPERSCRIPT;\n  }\n\n  isSubscript(symbol: ChordSymbolBlock): boolean {\n    return symbol.symbolModifier !== undefined && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUBSCRIPT;\n  }\n\n  // Render text and glyphs above/below the note\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote() as StemmableNote;\n    this.setRendered();\n\n    // We're changing context parameters. Save current state.\n    ctx.save();\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    ctx.openGroup(classString, this.getAttribute('id'));\n\n    const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    let y: number;\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    const has_stem = note.hasStem();\n    const stave = note.checkStave();\n\n    if (this.vertical === ChordSymbol.verticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_ext = note.checkStem().getExtents();\n        const spacing = stave.getSpacingBetweenLines();\n        const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n        y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n      }\n    } else {\n      // (this.vertical === ChordSymbol.verticalJustify.TOP)\n      y = Math.min(stave.getYForTopText(this.text_line), note.getYs()[0] - 10);\n      if (has_stem) {\n        const stem_ext = note.checkStem().getExtents();\n        const spacing = stave.getSpacingBetweenLines();\n        y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n      }\n    }\n\n    let x = start.x;\n    if (this.horizontal === ChordSymbol.horizontalJustify.LEFT) {\n      x = start.x;\n    } else if (this.horizontal === ChordSymbol.horizontalJustify.RIGHT) {\n      x = start.x + this.getWidth();\n    } else if (this.horizontal === ChordSymbol.horizontalJustify.CENTER) {\n      x = start.x - this.getWidth() / 2;\n    } /* CENTER_STEM */ else {\n      x = note.getStemX() - this.getWidth() / 2;\n    }\n    L('Rendering ChordSymbol: ', this.textFont, x, y);\n\n    this.symbolBlocks.forEach((symbol) => {\n      const sp = this.isSuperscript(symbol);\n      const sub = this.isSubscript(symbol);\n      let curY = y;\n      L('shift was ', symbol.xShift, symbol.yShift);\n      L('curY pre sub ', curY);\n      if (sp) {\n        curY += this.superscriptOffset;\n      }\n      if (sub) {\n        curY += this.subscriptOffset;\n      }\n      L('curY sup/sub ', curY);\n\n      if (symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n        if (sp || sub) {\n          ctx.save();\n          ctx.setFont(this.font.family, this.font.size * ChordSymbol.superSubRatio, this.font.weight);\n        }\n        // We estimate the text width, fill it in with the empirical value so the\n        // formatting is even.\n        /* const textDim = ctx.measureText(symbol.text);\n        symbol.width = textDim.width; */\n        L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n\n        ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n        if (sp || sub) {\n          ctx.restore();\n        }\n      } else if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH) {\n        curY += symbol.yShift;\n        L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n        symbol.glyph.render(ctx, x + symbol.xShift, curY);\n      } else if (symbol.symbolType === ChordSymbol.symbolTypes.LINE) {\n        L('Rendering Line : ', symbol.width, x, curY);\n        ctx.beginPath();\n        ctx.setLineWidth(1); // ?\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + symbol.width, curY);\n        ctx.stroke();\n      }\n\n      x += symbol.width;\n      if (symbol.vAlign) {\n        x += symbol.xShift;\n      }\n    });\n    ctx.closeGroup();\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError } from './util';\nimport { Flow } from './flow';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\n\nexport interface BendPhrase {\n  x?: number;\n  type: number;\n  text: string;\n  width?: number;\n  draw_width?: number;\n}\n\nexport interface BendRenderOptions {\n  line_width: number;\n  release_width: number;\n  bend_width: number;\n  line_style: string;\n}\n\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n  protected text: string;\n  protected release: boolean;\n  protected phrase: BendPhrase[];\n  protected font: string;\n  protected render_options: BendRenderOptions;\n\n  static get CATEGORY(): string {\n    return 'bends';\n  }\n\n  static get UP(): number {\n    return 0;\n  }\n\n  static get DOWN(): number {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends: Bend[], state: ModifierContextState): boolean {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  /**\n   * Constructor.\n   * Example of a phrase:\n   *    [{\n   *     type: UP,\n   *     text: \"whole\"\n   *     width: 8;\n   *   },\n   *   {\n   *     type: DOWN,\n   *     text: \"whole\"\n   *     width: 8;\n   *   },\n   *   {\n   *     type: UP,\n   *     text: \"half\"\n   *     width: 8;\n   *   },\n   *   {\n   *     type: UP,\n   *     text: \"whole\"\n   *     width: 8;\n   *   },\n   *   {\n   *     type: DOWN,\n   *     text: \"1 1/2\"\n   *     width: 8;\n   *   }]\n   * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   * @param release if true, render a release. (DEPRECATED)\n   * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n   */\n  constructor(text: string, release: boolean, phrase: BendPhrase[]) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  /** Get element category string. */\n  getCategory(): string {\n    return Bend.CATEGORY;\n  }\n\n  /** Set horizontal shift in pixels. */\n  setXShift(value: number): this {\n    this.x_shift = value;\n    this.updateWidth();\n    return this;\n  }\n\n  /** Set text's font. */\n  setFont(font: string): this {\n    this.font = font;\n    return this;\n  }\n\n  /** Get text provided in the constructor. */\n  getText(): string {\n    return this.text;\n  }\n\n  /** Recalculate width. */\n  protected updateWidth(): this {\n    // eslint-disable-next-line\n    const that = this;\n\n    function measure_text(text: string) {\n      let text_width;\n      const ctxThat = that.getContext();\n      if (ctxThat) {\n        text_width = ctxThat.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (bend.width != undefined) {\n        total_width += bend.width;\n      } else {\n        const additional_width =\n          bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Math.max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n\n  /** Draw the bend on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const stave = note.checkStave();\n    const bend_height = stave.getYForTopText(this.text_line) + 3;\n    const annotation_y = stave.getYForTopText(this.text_line) - 1;\n    // eslint-disable-next-line\n    const that = this;\n\n    function renderBend(x: number, y: number, width: number, height: number) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x: number, y: number, width: number, height: number) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(x + width, height, x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x: number, y: number, direction?: number) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x: number, text: string) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - ctx.measureText(text).width / 2;\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = undefined;\n    let last_bend_draw_width = 0;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (!bend.draw_width) bend.draw_width = 0;\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (!last_bend) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend_draw_width = bend.draw_width;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    if (!last_bend || last_bend.x == undefined) {\n      throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT Licnse\n\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\nimport { RenderContext } from './types/common';\nimport { ModifierContext, ModifierContextState } from './modifiercontext';\n\nexport interface VibratoRenderOptions {\n  wave_height: number;\n  wave_girth: number;\n  vibrato_width: number;\n  harsh: boolean;\n  wave_width: number;\n}\n\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n  protected render_options: VibratoRenderOptions;\n\n  /** Get element CATEGORY string. */\n  static get CATEGORY(): string {\n    return 'vibratos';\n  }\n\n  /** Arrange vibratos inside a `ModifierContext`. */\n  static format(vibratos: Vibrato[], state: ModifierContextState, context: ModifierContext): boolean {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getMembers(Bend.CATEGORY) as Modifier[];\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n\n  /** Get element category string. */\n  getCategory(): string {\n    return Vibrato.CATEGORY;\n  }\n\n  /** Set harsh vibrato. */\n  setHarsh(harsh: boolean): this {\n    this.render_options.harsh = harsh;\n    return this;\n  }\n\n  /** Set vibrato width in pixels. */\n  setVibratoWidth(width: number): this {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  /** Draw the vibrato on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  /**\n   * Static rendering method that can be called from\n   * other classes (e.g. VibratoBracket).\n   */\n  static renderVibrato(ctx: RenderContext, x: number, y: number, opts: VibratoRenderOptions): void {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - wave_height / 2);\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + wave_height / 2);\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { RuntimeError, log } from './util';\nimport { StaveNote } from './stavenote';\nimport { GlyphNote } from './glyphnote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { ChordSymbol } from './chordsymbol';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { Modifier } from './modifier';\nimport { TabNote } from './tabnote';\nimport { Note } from './note';\n\nexport interface ModifierContextState {\n  right_shift: number;\n  left_shift: number;\n  text_line: number;\n  top_text_line: number;\n}\n\nexport interface ModifierContextMetrics {\n  width: number;\n  spacing: number;\n}\n\nexport type ModifierContextMember = Modifier | StaveNote | TabNote;\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(\n  // eslint-disable-next-line\n  ...args: any[]) {\n  if (ModifierContext.DEBUG) log('Vex.Flow.ModifierContext', args);\n}\n\nexport class ModifierContext {\n  static DEBUG: boolean;\n\n  state: ModifierContextState;\n\n  protected postFormatted: boolean;\n  protected spacing: number;\n  protected members: Record<string, ModifierContextMember[]>;\n\n  protected preFormatted: boolean;\n  protected width: number;\n  protected formatted?: boolean;\n  // eslint-disable-next-line\n  protected PREFORMAT: any[];\n  // eslint-disable-next-line\n  protected POSTFORMAT: any[];\n\n  constructor() {\n    // Current members\n    this.members = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new members to this array. The ordering is significant -- lower\n    // members are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      Stroke,\n      GraceNoteGroup,\n      NoteSubGroup,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      ChordSymbol,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(member: ModifierContextMember): this {\n    L('addModifier is deprecated, use addMember instead.');\n    return this.addMember(member);\n  }\n\n  addMember(member: ModifierContextMember): this {\n    const type = member.getCategory();\n    if (!this.members[type]) this.members[type] = [];\n    this.members[type].push(member);\n    member.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type: string): ModifierContextMember[] {\n    L('getModifiers is deprecated, use getMembers instead.');\n    return this.getMembers(type);\n  }\n\n  getMembers(type: string): ModifierContextMember[] {\n    return this.members[type];\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getLeftShift(): number {\n    return this.state.left_shift;\n  }\n\n  getRightShift(): number {\n    return this.state.right_shift;\n  }\n\n  getState(): ModifierContextState {\n    return this.state;\n  }\n\n  getMetrics(): ModifierContextMetrics {\n    if (!this.formatted) {\n      throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n    };\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((member) => {\n      L('Preformatting ModifierContext: ', member.CATEGORY);\n      member.format(this.getMembers(member.CATEGORY), this.state, this);\n    });\n\n    // Update width of this member context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat(): void {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((member) => {\n      L('Postformatting ModifierContext: ', member.CATEGORY);\n      member.postFormat(this.getMembers(member.CATEGORY) as Note[]);\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\n\nexport interface LayoutMetrics {\n  xMin: number;\n  xMax: number;\n  paddingLeft: number;\n  paddingRight: number;\n}\n\nexport enum StaveModifierPosition {\n  CENTER = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  ABOVE = 3,\n  BELOW = 4,\n  BEGIN = 5,\n  END = 6,\n}\n\nexport class StaveModifier extends Element {\n  protected width: number = 0;\n  protected x: number = 0;\n\n  protected padding: number;\n  protected position: StaveModifierPosition;\n  protected stave?: Stave;\n  protected layoutMetrics?: LayoutMetrics;\n  static get Position(): typeof StaveModifierPosition {\n    return StaveModifierPosition;\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n  }\n\n  getPosition(): number {\n    return this.position;\n  }\n\n  setPosition(position: number): this {\n    this.position = position;\n    return this;\n  }\n\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  checkStave(): Stave {\n    if (!this.stave) {\n      throw new RuntimeError('NoStave', 'No stave attached to instance');\n    }\n    return this.stave;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  setX(x: number): this {\n    this.x = x;\n    return this;\n  }\n\n  getCategory(): string {\n    return '';\n  }\n\n  placeGlyphOnLine(glyph: Glyph, stave: Stave, line?: number, customShift = 0): void {\n    glyph.setYShift(stave.getYForLine(line ?? 0) - stave.getYForGlyphs() + customShift);\n  }\n\n  getPadding(index: number): number {\n    return index !== undefined && index < 2 ? 0 : this.padding;\n  }\n\n  setPadding(padding: number): this {\n    this.padding = padding;\n    return this;\n  }\n\n  setLayoutMetrics(layoutMetrics: LayoutMetrics): this {\n    this.layoutMetrics = layoutMetrics;\n    return this;\n  }\n\n  getLayoutMetrics(): LayoutMetrics | undefined {\n    return this.layoutMetrics;\n  }\n\n  draw(\n    // eslint-disable-next-line\n    element?: Element, x_shift?: number): void {\n    // do nothing\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './flow';\nimport { LayoutMetrics, StaveModifier } from './stavemodifier';\nimport { Stave } from './stave';\n\nexport enum BarlineType {\n  SINGLE = 1,\n  DOUBLE = 2,\n  END = 3,\n  REPEAT_BEGIN = 4,\n  REPEAT_END = 5,\n  REPEAT_BOTH = 6,\n  NONE = 7,\n}\n\nexport class Barline extends StaveModifier {\n  protected widths: Record<string, number>;\n  protected paddings: Record<string, number>;\n  protected layoutMetricsMap: Record<number, LayoutMetrics>;\n\n  protected thickness: number;\n  protected type!: BarlineType;\n\n  static get CATEGORY(): string {\n    return 'barlines';\n  }\n\n  static get type(): typeof BarlineType {\n    return BarlineType;\n  }\n\n  static get typeString(): Record<string, BarlineType> {\n    return {\n      single: BarlineType.SINGLE,\n      double: BarlineType.DOUBLE,\n      end: BarlineType.END,\n      repeatBegin: BarlineType.REPEAT_BEGIN,\n      repeatEnd: BarlineType.REPEAT_END,\n      repeatBoth: BarlineType.REPEAT_BOTH,\n      none: BarlineType.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type: BarlineType | string) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = BarlineType;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.layoutMetricsMap = {};\n    this.layoutMetricsMap[TYPE.SINGLE] = {\n      xMin: 0,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.DOUBLE] = {\n      xMin: -3,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.END] = {\n      xMin: -5,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_END] = {\n      xMin: -10,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n      xMin: -2,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n      xMin: -10,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.NONE] = {\n      xMin: 0,\n      xMax: 0,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n\n  getCategory(): string {\n    return Barline.CATEGORY;\n  }\n\n  getType(): number {\n    return this.type;\n  }\n\n  setType(type: string | number): this {\n    this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave: Stave): void {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case BarlineType.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case BarlineType.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case BarlineType.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case BarlineType.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case BarlineType.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case BarlineType.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave: Stave, x: number, double_bar?: boolean): void {\n    const staveCtx = stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    staveCtx.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave: Stave, x: number): void {\n    const staveCtx = stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n    staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave: Stave, x: number, begin: boolean): void {\n    const staveCtx = stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n    staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = x + x_shift + dot_radius / 2;\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n    let dot_y = topY + y_offset + dot_radius / 2;\n\n    // draw the top repeat dot\n    staveCtx.beginPath();\n    staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    staveCtx.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    staveCtx.beginPath();\n    staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    staveCtx.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\nimport { FontInfo } from './types/common';\nimport { Stave } from './stave';\n\nexport class Repetition extends StaveModifier {\n  protected symbol_type: number;\n\n  protected x_shift: number;\n  protected y_shift: number;\n  protected font: FontInfo;\n\n  static get CATEGORY(): string {\n    return 'repetitions';\n  }\n  static readonly type = {\n    NONE: 1, // no coda or segno\n    CODA_LEFT: 2, // coda at beginning of stave\n    CODA_RIGHT: 3, // coda at end of stave\n    SEGNO_LEFT: 4, // segno at beginning of stave\n    SEGNO_RIGHT: 5, // segno at end of stave\n    DC: 6, // D.C. at end of stave\n    DC_AL_CODA: 7, // D.C. al coda at end of stave\n    DC_AL_FINE: 8, // D.C. al Fine end of stave\n    DS: 9, // D.S. at end of stave\n    DS_AL_CODA: 10, // D.S. al coda at end of stave\n    DS_AL_FINE: 11, // D.S. al Fine at end of stave\n    FINE: 12, // Fine at end of stave\n  };\n\n  constructor(type: number, x: number, y_shift: number) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold',\n      style: 'italic',\n    };\n  }\n\n  getCategory(): string {\n    return Repetition.CATEGORY;\n  }\n\n  setShiftX(x: number): this {\n    this.x_shift = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  draw(stave: Stave, x: number): this {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.getWidth());\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.getWidth());\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave: Stave, x: number): this {\n    const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n    Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + 25, 40, 'coda', { category: 'coda' });\n    return this;\n  }\n\n  drawSignoFixed(stave: Stave, x: number): this {\n    const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n    Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + 25, 30, 'segno', { category: 'segno' });\n    return this;\n  }\n\n  drawSymbolText(stave: Stave, x: number, text: string, draw_coda: boolean): this {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n      // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.getOptions().vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else if (this.symbol_type === Repetition.type.DS) {\n      const modifierWidth = stave.getNoteStartX() - this.x;\n      text_x = this.x + x + this.x_shift + stave.getWidth() - 5 - modifierWidth - ctx.measureText(text).width;\n      // TODO this is weird. setting the x position should probably be refactored, parameters aren't clear here.\n    } else {\n      // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.getWidth() - 5 + this.x_shift;\n      text_x = symbol_x - +ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', { category: 'coda' });\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { Stave } from './stave';\nimport { StaveModifier } from './stavemodifier';\nimport { FontInfo } from './types/common';\n\nexport class StaveSection extends StaveModifier {\n  protected section: string;\n  protected shift_x: number;\n  protected shift_y: number;\n  protected font: FontInfo;\n\n  static get CATEGORY(): string {\n    return 'stavesection';\n  }\n\n  constructor(section: string, x: number, shift_y: number) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory(): string {\n    return StaveSection.CATEGORY;\n  }\n\n  setStaveSection(section: string): this {\n    this.section = section;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  draw(stave: Stave, shift_x: number): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setLineWidth(2);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6; // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n    //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.setLineWidth(2);\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './flow';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\nimport { FontInfo } from './types/common';\nimport { Stave } from './stave';\n\nexport interface StaveTempoOptions {\n  bpm: number;\n  dots: number;\n  duration: string;\n  name: string;\n}\n\nexport class StaveTempo extends StaveModifier {\n  protected font: FontInfo;\n  protected render_options: {\n    glyph_font_scale: number;\n  };\n\n  protected tempo: StaveTempoOptions;\n  protected shift_x: number;\n  protected shift_y: number;\n\n  static get CATEGORY(): string {\n    return 'stavetempo';\n  }\n\n  constructor(tempo: StaveTempoOptions, x: number, shift_y: number) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = StaveModifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30, // font size for note\n    };\n  }\n\n  getCategory(): string {\n    return StaveTempo.CATEGORY;\n  }\n\n  setTempo(tempo: StaveTempoOptions): this {\n    this.tempo = tempo;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  draw(stave: Stave, shift_x: number): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.getGlyphProps(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem, {\n            category: 'flag.staveTempo',\n          });\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError } from './util';\nimport { Note, NoteStruct } from './note';\nimport { Glyph } from './glyph';\nimport { FontInfo } from './types/common';\n\nexport enum Justification {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n}\n\nexport interface TextNoteStruct extends NoteStruct {\n  ignore_ticks?: boolean;\n  smooth?: boolean;\n  glyph?: string;\n  font?: FontInfo;\n  subscript?: string;\n  superscript?: string;\n  text: string;\n}\n\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n  protected text: string;\n  protected superscript?: string;\n  protected subscript?: string;\n  protected smooth: boolean;\n\n  protected font: FontInfo;\n  protected justification: Justification;\n  protected line: number;\n\n  static get Justification(): typeof Justification {\n    return Justification;\n  }\n\n  /** Glyph data. */\n  static get GLYPHS(): Record<string, { code: string }> {\n    return {\n      segno: {\n        code: 'segno',\n      },\n      tr: {\n        code: 'ornamentTrill',\n      },\n      mordent: {\n        code: 'ornamentMordent',\n      },\n      mordent_upper: {\n        code: 'ornamentShortTrill',\n      },\n      mordent_lower: {\n        code: 'ornamentMordent',\n      },\n      f: {\n        code: 'dynamicForte',\n      },\n      p: {\n        code: 'dynamicPiano',\n      },\n      m: {\n        code: 'dynamicMezzo',\n      },\n      s: {\n        code: 'dynamicSforzando',\n      },\n      z: {\n        code: 'dynamicZ',\n      },\n      coda: {\n        code: 'coda',\n      },\n      pedal_open: {\n        code: 'keyboardPedalPed',\n      },\n      pedal_close: {\n        code: 'keyboardPedalUp',\n      },\n      caesura_straight: {\n        code: 'caesura',\n      },\n      caesura_curved: {\n        code: 'caesuraCurved',\n      },\n      breath: {\n        code: 'breathMarkComma',\n      },\n      tick: {\n        code: 'breathMarkTick',\n      },\n      turn: {\n        code: 'ornamentTurn',\n      },\n      turn_inverted: {\n        code: 'ornamentTurnSlash',\n      },\n    };\n  }\n\n  constructor(options: TextNoteStruct) {\n    super(options);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = options.text;\n    this.superscript = options.superscript;\n    this.subscript = options.subscript;\n    this.glyph = undefined;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n      ...options.font,\n    };\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (options.glyph) {\n      const struct = TextNote.GLYPHS[options.glyph];\n      if (!struct) throw new RuntimeError('Invalid glyph type: ' + options.glyph);\n\n      this.glyph = new Glyph(struct.code, 40, { category: 'textNote' });\n      this.setWidth(this.glyph.getMetrics().width);\n    }\n\n    this.line = options.line || 0;\n    this.smooth = options.smooth || false;\n    this.ignore_ticks = options.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  /** Set the horizontal justification of the TextNote. */\n  setJustification(just: Justification): this {\n    this.justification = just;\n    return this;\n  }\n\n  /** Set the Stave line on which the note should be placed. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Pre-render formatting. */\n  preFormat(): void {\n    const ctx = this.checkContext();\n    if (!this.tickContext) throw new RuntimeError('NoTickContext', \"Can't preformat without a TickContext.\");\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        this.setWidth(ctx.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.leftDisplacedHeadPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.leftDisplacedHeadPx = this.width;\n    }\n\n    // We reposition to the center of the note head\n    this.rightDisplacedHeadPx = this.tickContext.getMetrics().glyphPx / 2;\n    this.setPreFormatted(true);\n  }\n\n  /** Renders the TextNote. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const stave = this.checkStave();\n    if (!this.tickContext) throw new RuntimeError('NoTickContext', \"Can't draw without a TickContext.\");\n\n    this.setRendered();\n\n    // Reposition to center of note head\n    let x = this.getAbsoluteX() + this.tickContext.getMetrics().glyphPx / 2;\n\n    // Align based on tick-context width.\n    const width = this.getWidth();\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= width;\n    }\n\n    let y;\n    if (this.glyph) {\n      y = stave.getYForLine(this.line + -3);\n      this.glyph.render(ctx, x, y);\n    } else {\n      y = stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      let height = ctx.measureText(this.text).height;\n      // CanvasRenderingContext2D.measureText() does not have a height field.\n      if (typeof height === 'undefined') {\n        // TODO: Consolidate calls to ctx.measureText('M').\n        height = ctx.measureText('M').width;\n      }\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - height / 2.2);\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + height / 2.2 - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { RuntimeError } from './util';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\nimport { FontInfo } from './types/common';\nimport { Stave } from './stave';\n\nexport class StaveText extends StaveModifier {\n  protected options: {\n    shift_x: number;\n    shift_y: number;\n    justification: number;\n  };\n  protected font: FontInfo;\n\n  protected text: string;\n  protected shift_x?: number;\n  protected shift_y?: number;\n\n  static get CATEGORY(): string {\n    return 'stavetext';\n  }\n\n  constructor(\n    text: string,\n    position: number,\n    options: {\n      shift_x: number;\n      shift_y: number;\n      justification: number;\n    }\n  ) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    this.options = { ...this.options, ...options };\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory(): string {\n    return StaveText.CATEGORY;\n  }\n\n  setStaveText(text: string): this {\n    this.text = text;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  setFont(font: FontInfo): this {\n    this.font = { ...this.font, ...font };\n    return this;\n  }\n\n  setText(text: string): this {\n    this.text = text;\n    return this;\n  }\n\n  draw(stave: Stave): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setLineWidth(2);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\n\nimport { RuntimeError, log } from './util';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\n\nexport interface ClefType {\n  point: number;\n  code: string;\n  line?: number;\n}\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Clef.DEBUG) log('Vex.Flow.Clef', args);\n}\n\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n  /** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\n  static DEBUG: boolean;\n\n  annotation?: {\n    code: string;\n    line: number;\n    x_shift: number;\n    point: number;\n  };\n\n  /**\n   * The attribute `clef` must be a key from\n   * `Clef.types`\n   */\n  clef: ClefType = Clef.types['treble'];\n\n  protected glyph?: Glyph;\n  protected attachment?: Glyph;\n  protected size?: string;\n  protected type?: string;\n\n  /** Clefs category string. */\n  static get CATEGORY(): string {\n    return 'clefs';\n  }\n\n  /**\n   * Every clef name is associated with a glyph code from the font file\n   * and a default stave line number.\n   */\n  static get types(): Record<string, ClefType> {\n    return {\n      treble: {\n        code: 'gClef',\n        line: 3,\n        point: 0,\n      },\n      bass: {\n        code: 'fClef',\n        line: 1,\n        point: 0,\n      },\n      alto: {\n        code: 'cClef',\n        line: 2,\n        point: 0,\n      },\n      tenor: {\n        code: 'cClef',\n        line: 1,\n        point: 0,\n      },\n      percussion: {\n        code: 'restMaxima',\n        line: 2,\n        point: 0,\n      },\n      soprano: {\n        code: 'cClef',\n        line: 4,\n        point: 0,\n      },\n      'mezzo-soprano': {\n        code: 'cClef',\n        line: 3,\n        point: 0,\n      },\n      'baritone-c': {\n        code: 'cClef',\n        line: 0,\n        point: 0,\n      },\n      'baritone-f': {\n        code: 'fClef',\n        line: 2,\n        point: 0,\n      },\n      subbass: {\n        code: 'fClef',\n        line: 0,\n        point: 0,\n      },\n      french: {\n        code: 'gClef',\n        line: 4,\n        point: 0,\n      },\n      tab: {\n        code: '6stringTabClef',\n        point: 0,\n      },\n    };\n  }\n\n  /** Create a new clef. */\n  constructor(type: string, size?: string, annotation?: string) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.musicFont.lookupMetric(`clef.${this.size}.width`));\n    L('Creating clef:', type);\n  }\n\n  /** Get element category string. */\n  getCategory(): string {\n    return Clef.CATEGORY;\n  }\n\n  /** Set clef type, size and annotation. */\n  setType(type: string, size?: string, annotation?: string): this {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = this.musicFont.lookupMetric(`clef.${this.size}.point`, 0);\n    this.glyph = new Glyph(this.clef.code, this.clef.point, {\n      category: `clef.${this.clef.code}.${this.size}`,\n    });\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const code = this.musicFont.lookupMetric(`clef.annotations.${annotation}.smuflCode`);\n      const point = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.point`);\n      const line = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.line`);\n      const x_shift = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.shiftX`);\n\n      this.annotation = { code, point, line, x_shift };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  /** Get clef width. */\n  getWidth(): number {\n    if (this.type === 'tab' && !this.stave) {\n      throw new RuntimeError('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  /** Set associated stave. */\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    if (this.type !== 'tab') return this;\n    if (!this.glyph) throw new RuntimeError('ClefError', \"Can't set stave without glyph.\");\n\n    const numLines = this.stave.getOptions().num_lines;\n    const point = this.musicFont.lookupMetric(`clef.lineCount.${numLines}.point`);\n    const shiftY = this.musicFont.lookupMetric(`clef.lineCount.${numLines}.shiftY`);\n    this.glyph.setPoint(point);\n    this.glyph.setYShift(shiftY);\n\n    return this;\n  }\n\n  /** Render clef. */\n  draw(): void {\n    if (!this.x) throw new RuntimeError('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new RuntimeError('ClefError', \"Can't draw clef without stave.\");\n    if (!this.glyph) throw new RuntimeError('ClefError', \"Can't draw clef without glyph.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.getContext());\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined && this.attachment !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.getContext());\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { check, RuntimeError } from './util';\nimport { Flow } from './flow';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\n\nexport class KeySignature extends StaveModifier {\n  protected glyphFontScale: number;\n\n  protected glyphs: Glyph[];\n  protected xPositions: number[];\n  protected paddingForced: boolean;\n  protected formatted?: boolean;\n  protected cancelKeySpec?: string;\n  protected accList: { type: string; line: number }[] = [];\n  protected keySpec?: string;\n  protected alterKeySpec?: string;\n\n  static get CATEGORY(): string {\n    return 'keysignatures';\n  }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static accidentalSpacing: Record<string, { above: number; below: number }> = {\n    '#': {\n      above: 6,\n      below: 4,\n    },\n    b: {\n      above: 4,\n      below: 7,\n    },\n    n: {\n      above: 4,\n      below: 1,\n    },\n    '##': {\n      above: 6,\n      below: 4,\n    },\n    bb: {\n      above: 4,\n      below: 7,\n    },\n    db: {\n      above: 4,\n      below: 7,\n    },\n    d: {\n      above: 4,\n      below: 7,\n    },\n    bbs: {\n      above: 4,\n      below: 7,\n    },\n    '++': {\n      above: 6,\n      below: 4,\n    },\n    '+': {\n      above: 6,\n      below: 4,\n    },\n    '+-': {\n      above: 6,\n      below: 4,\n    },\n    '++-': {\n      above: 6,\n      below: 4,\n    },\n    bs: {\n      above: 4,\n      below: 10,\n    },\n    bss: {\n      above: 4,\n      below: 10,\n    },\n  };\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec: string, cancelKeySpec: string, alterKeySpec?: string) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory(): string {\n    return KeySignature.CATEGORY;\n  }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc: { type: string; line: number }, nextAcc: { type: string; line: number }): void {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec: string): this {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec: string): { type: string; accList: { type: string; line: number }[] } | undefined {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types =\n      this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return undefined;\n\n    // Get the line position for each natural\n    const cancelled: { type: string; line: number }[] = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n\n    return {\n      accList: cancelled,\n      type: cancel_accList[0].type,\n    };\n  }\n\n  // Deprecated\n  addToStave(stave: Stave): this {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef: string, type?: string, accList = this.accList): void {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index: number): number {\n    if (!this.formatted) this.format();\n\n    return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n  }\n\n  getWidth(): number {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec: string, cancelKeySpec: string, alterKeySpec?: string): this {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec: string): this {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec: string): void {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format(): void {\n    const stave = this.checkStave();\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(check<string>(this.keySpec));\n    const accList = this.accList;\n    const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n    let cancelAccList;\n    if (this.cancelKeySpec) {\n      cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      const clef =\n        (this.position === StaveModifier.Position.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n      if (cancelAccList) {\n        this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n      }\n      this.convertAccLines(clef, firstAccidentalType, accList);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw(): void {\n    if (!this.x) {\n      throw new RuntimeError('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new RuntimeError('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.checkContext());\n      glyph.renderToStave(x);\n    }\n  }\n}\n","import { check } from './util';\nimport { Glyph, GlyphMetrics } from './glyph';\nimport { TimeSignature } from './timesignature';\nimport { Stave } from './stave';\n\nexport class TimeSignatureGlyph extends Glyph {\n  timeSignature: TimeSignature;\n  topStartX: number;\n  botStartX: number;\n  width: number;\n  xMin: number;\n\n  constructor(\n    timeSignature: TimeSignature,\n    topDigits: string[],\n    botDigits: string[],\n    code: string,\n    point: number,\n    options?: { category: string }\n  ) {\n    super(code, point, options);\n    this.timeSignature = timeSignature;\n    this.topGlyphs = [];\n    this.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('timeSig' + num, this.timeSignature.point);\n\n      this.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width ?? 0;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('timeSig' + num, this.timeSignature.point);\n\n      this.botGlyphs.push(botGlyph);\n      botWidth += check<number>(botGlyph.getMetrics().width);\n    }\n\n    this.width = Math.max(topWidth, botWidth);\n    this.xMin = this.getMetrics().x_min;\n    this.topStartX = (this.width - topWidth) / 2.0;\n    this.botStartX = (this.width - botWidth) / 2.0;\n    this.reset();\n  }\n\n  getMetrics(): GlyphMetrics {\n    return {\n      x_min: this.xMin,\n      x_max: this.xMin + this.width,\n      width: this.width,\n    } as GlyphMetrics;\n  }\n\n  renderToStave(x: number): void {\n    const stave = check<Stave>(this.stave);\n    let start_x = x + this.topStartX;\n    for (let i = 0; i < this.topGlyphs.length; ++i) {\n      const glyph = this.topGlyphs[i];\n      Glyph.renderOutline(\n        this.checkContext(),\n        glyph.getMetrics().outline,\n        this.scale,\n        start_x + this.x_shift,\n        stave.getYForLine(this.timeSignature.topLine)\n      );\n      start_x += check<number>(glyph.getMetrics().width);\n    }\n\n    start_x = x + this.botStartX;\n    for (let i = 0; i < this.botGlyphs.length; ++i) {\n      const glyph = this.botGlyphs[i];\n      this.timeSignature.placeGlyphOnLine(glyph, stave, 0);\n      Glyph.renderOutline(\n        this.checkContext(),\n        glyph.getMetrics().outline,\n        this.scale,\n        start_x + glyph.getMetrics().x_shift,\n        stave.getYForLine(this.timeSignature.bottomLine)\n      );\n      start_x += check<number>(glyph.getMetrics().width);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { RuntimeError, check } from './util';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { TimeSignatureGlyph } from './timesigglyph';\n\nexport interface TimeSignatureInfo {\n  glyph: Glyph;\n  line?: number;\n  num: boolean;\n}\n\nconst assertIsValidFraction = (timeSpec: string) => {\n  const numbers = timeSpec.split('/').filter((number) => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new RuntimeError(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach((number) => {\n    if (isNaN(Number(number))) {\n      throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`);\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  point: number;\n  bottomLine: number;\n  topLine: number;\n\n  protected info: TimeSignatureInfo;\n  protected validate_args: boolean;\n\n  static get CATEGORY(): string {\n    return 'timesignatures';\n  }\n\n  static get glyphs(): Record<string, { code: string; point: number; line: number }> {\n    return {\n      C: {\n        code: 'timeSigCommon',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'timeSigCutCommon',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec: string = '4/4', customPadding = 15, validate_args = true) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n    this.validate_args = validate_args;\n\n    const padding = customPadding;\n\n    this.point = this.musicFont.lookupMetric('digits.point');\n    const fontLineShift = this.musicFont.lookupMetric('digits.shiftLine', 0);\n    this.topLine = 2 + fontLineShift;\n    this.bottomLine = 4 + fontLineShift;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.info = this.parseTimeSpec(timeSpec);\n    this.setWidth(check<number>(this.info.glyph.getMetrics().width));\n    this.setPadding(padding);\n  }\n\n  getCategory(): string {\n    return TimeSignature.CATEGORY;\n  }\n\n  parseTimeSpec(timeSpec: string): TimeSignatureInfo {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    if (this.validate_args) {\n      assertIsValidFraction(timeSpec);\n    }\n\n    const [topDigits, botDigits] = timeSpec.split('/').map((number) => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits: string[], botDigits: string[]): Glyph {\n    const glyph = new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    return glyph;\n  }\n\n  getInfo(): TimeSignatureInfo {\n    return this.info;\n  }\n\n  setTimeSig(timeSpec: string): this {\n    this.info = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw(): void {\n    if (!this.x) {\n      throw new RuntimeError('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new RuntimeError('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.info.glyph.setStave(this.stave);\n    this.info.glyph.setContext(this.stave.getContext());\n    this.placeGlyphOnLine(this.info.glyph, this.stave, this.info.line);\n    this.info.glyph.renderToStave(this.x);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { Stave } from './stave';\nimport { StaveModifier } from './stavemodifier';\nimport { FontInfo } from './types/common';\n\nexport enum VoltaType {\n  NONE = 1,\n  BEGIN = 2,\n  MID = 3,\n  END = 4,\n  BEGIN_END = 5,\n}\n\nexport class Volta extends StaveModifier {\n  protected volta: number;\n  protected number: string;\n\n  protected font: FontInfo;\n  protected y_shift: number;\n  static get CATEGORY(): string {\n    return 'voltas';\n  }\n\n  static get type(): typeof VoltaType {\n    return VoltaType;\n  }\n\n  constructor(type: number, number: string, x: number, y_shift: number) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory(): string {\n    return Volta.CATEGORY;\n  }\n\n  setShiftY(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  draw(stave: Stave, x: number): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.getWidth() - x; // don't include x (offset) for width\n    const top_y = stave.getYForTopText(stave.getOptions().num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.getOptions().spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { RuntimeError } from './util';\nimport { Element, ElementStyle } from './element';\nimport { Flow } from './flow';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\nimport { Bounds, FontInfo } from './types/common';\nimport { StaveTempoOptions } from './stavetempo';\n\nexport interface StaveLineConfig {\n  visible: boolean;\n}\n\nexport interface StaveOptions {\n  // [name: string]: any;\n  spacing: number;\n  thickness: number;\n  x_shift: number;\n  y_shift: number;\n  position_end?: number;\n  invert?: boolean;\n  cps?: { x: number; y: number }[];\n  bottom_text_position: number;\n  line_config: StaveLineConfig[];\n  space_below_staff_ln: number;\n  glyph_spacing_px: number;\n  space_above_staff_ln: number;\n  vertical_bar_width: number;\n  fill_style: string;\n  left_bar: boolean;\n  right_bar: boolean;\n  spacing_between_lines_px: number;\n  top_text_position: number;\n  num_lines: number;\n}\n\nexport class Stave extends Element {\n  protected x: number;\n  protected start_x: number;\n  protected clef: string;\n  protected options: StaveOptions;\n  protected endClef?: string;\n  protected width: number;\n  // Initialised in resetLines called in constructor\n  protected height: number = 0;\n  protected y: number;\n\n  protected formatted: boolean;\n  protected end_x: number;\n  protected measure: number;\n  protected font: FontInfo;\n  protected bounds: Bounds;\n  protected readonly modifiers: StaveModifier[];\n\n  protected defaultLedgerLineStyle: ElementStyle;\n\n  // This is the sum of the padding that normally goes on left + right of a stave during\n  // drawing.  Used to size staves correctly with content width\n  static get defaultPadding() {\n    const musicFont = Flow.DEFAULT_FONT_STACK[0];\n    return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n  }\n  // Right padding, used by system if startX is already determined.\n  static get rightPadding(): number {\n    const musicFont = Flow.DEFAULT_FONT_STACK[0];\n    return musicFont.lookupMetric('stave.endPaddingMax');\n  }\n\n  constructor(x: number, y: number, width: number, options: Partial<StaveOptions>) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.endClef = undefined;\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      vertical_bar_width: 10, // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true, // draw vertical bar on left\n      right_bar: true, // draw vertical bar on right\n      spacing_between_lines_px: Flow.STAVE_LINE_DISTANCE, // in pixels\n      space_above_staff_ln: 4, // in staff lines\n      space_below_staff_ln: 4, // in staff lines\n      top_text_position: 1, // in staff lines\n      bottom_text_position: 4, // in staff lines\n      line_config: [],\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    this.options = { ...this.options, ...options };\n    this.defaultLedgerLineStyle = {};\n\n    this.resetLines();\n\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n  }\n\n  /** Set default style for ledger lines. */\n  setDefaultLedgerLineStyle(style: ElementStyle): void {\n    this.defaultLedgerLineStyle = style;\n  }\n\n  /** Get default style for ledger lines. */\n  getDefaultLedgerLineStyle(): ElementStyle {\n    return { ...this.getStyle(), ...this.defaultLedgerLineStyle };\n  }\n  space(spacing: number): number {\n    return this.options.spacing_between_lines_px * spacing;\n  }\n\n  resetLines(): void {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions(): StaveOptions {\n    return this.options;\n  }\n\n  setNoteStartX(x: number): this {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    const begBarline = this.modifiers[0];\n    begBarline.setX(this.start_x - begBarline.getWidth());\n    return this;\n  }\n\n  getNoteStartX(): number {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX(): number {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n\n  getTieStartX(): number {\n    return this.start_x;\n  }\n\n  getTieEndX(): number {\n    return this.x + this.width;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getNumLines(): number {\n    return this.options.num_lines;\n  }\n\n  setNumLines(lines: string): this {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n\n  setY(y: number): this {\n    this.y = y;\n    return this;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getTopLineTopY(): number {\n    return this.getYForLine(0) - Flow.STAVE_LINE_THICKNESS / 2;\n  }\n\n  getBottomLineBottomY(): number {\n    return this.getYForLine(this.getNumLines() - 1) + Flow.STAVE_LINE_THICKNESS / 2;\n  }\n\n  setX(x: number): this {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      mod.setX(mod.getX() + shift);\n    }\n    return this;\n  }\n\n  setWidth(width: number): this {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getStyle(): ElementStyle {\n    return {\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: Flow.STAVE_LINE_THICKNESS,\n      ...(this.style || {}),\n    };\n  }\n\n  setMeasure(measure: number): this {\n    this.measure = measure;\n    return this;\n  }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0): number {\n    if (typeof index !== 'number') {\n      throw new RuntimeError('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n    if (this.modifiers[index].getPosition() === StaveModifier.Position.RIGHT) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0] as Barline;\n    if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type: number, y: number): this {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type: number, y: number): this {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type: number, number_t: string, y: number): this {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section: string, y: number): this {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo: StaveTempoOptions, y: number): this {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(\n    text: string,\n    position: number,\n    options: {\n      shift_x: number;\n      shift_y: number;\n      justification: number;\n    }\n  ): this {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  getSpacingBetweenLines(): number {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY(): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n\n    return score_bottom;\n  }\n\n  getBottomLineY(): number {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line: number): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + line * spacing + headroom * spacing;\n\n    return y;\n  }\n\n  getLineForY(y: number): number {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return (y - this.y) / spacing - headroom;\n  }\n\n  getYForTopText(line: number = 0): number {\n    return this.getYForLine(-line - this.options.top_text_position);\n  }\n\n  getYForBottomText(line: number = 0): number {\n    return this.getYForLine(this.options.bottom_text_position + line);\n  }\n\n  getYForNote(line: number): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + headroom * spacing + 5 * spacing - line * spacing;\n\n    return y;\n  }\n\n  getYForGlyphs(): number {\n    return this.getYForLine(3);\n  }\n\n  // This method adds a stave modifier to the stave. Note that the first two\n  // modifiers (BarLines) are automatically added upon construction.\n  addModifier(modifier: StaveModifier, position?: number): this {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier: StaveModifier): this {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type: number): this {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      (this.modifiers[0] as Barline).setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type: number): this {\n    // Repeat end not valid at end of stave\n    if (type !== BarlineType.REPEAT_BEGIN) {\n      (this.modifiers[1] as Barline).setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec: string, size: string, annotation: string, position?: number): this {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    if (position === StaveModifier.Position.END) {\n      this.endClef = clefSpec;\n    } else {\n      this.clef = clefSpec;\n    }\n\n    const clefs = this.getModifiers(position, Clef.CATEGORY) as Clef[];\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  getClef(): string {\n    return this.clef;\n  }\n\n  setEndClef(clefSpec: string, size: string, annotation: string): this {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  getEndClef(): string | undefined {\n    return this.endClef;\n  }\n\n  setKeySignature(keySpec: string, cancelKeySpec: string, position?: number): this {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY) as KeySignature[];\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec: string, cancelKeySpec: string): this {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec: string, customPadding: number, position?: number): this {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY) as TimeSignature[];\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec: string, customPadding: number): this {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec: string, cancelKeySpec: string, position?: number): this {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n    return this;\n  }\n\n  addClef(clef: string, size?: string, annotation?: string, position?: number): this {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    } else if (position === StaveModifier.Position.END) {\n      this.endClef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef: string, size: string, annotation: string): this {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec: string, customPadding?: number, position?: number): this {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec: string, customPadding: number): this {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph(): this {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position?: number, category?: string): StaveModifier[] {\n    if (position === undefined && category === undefined) return this.modifiers;\n\n    return this.modifiers.filter(\n      (modifier) =>\n        (position === undefined || position === modifier.getPosition()) &&\n        (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items: StaveModifier[], order: Record<string, number>): void {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format(): void {\n    const begBarline = this.modifiers[0] as Barline;\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0,\n      clefs: 1,\n      keysignatures: 2,\n      timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0,\n      keysignatures: 1,\n      barlines: 2,\n      clefs: 3,\n    });\n\n    if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    const widths = {\n      left: 0,\n      right: 0,\n      paddingRight: 0,\n      paddingLeft: 0,\n    };\n\n    let lastBarlineIdx = 0;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      lastBarlineIdx = modifier.getCategory() === Barline.CATEGORY ? i : lastBarlineIdx;\n\n      widths.right = 0;\n      widths.left = 0;\n      widths.paddingRight = 0;\n      widths.paddingLeft = 0;\n      const layoutMetrics = modifier.getLayoutMetrics();\n\n      if (layoutMetrics) {\n        if (i !== 0) {\n          widths.right = layoutMetrics.xMax || 0;\n          widths.paddingRight = layoutMetrics.paddingRight || 0;\n        }\n        widths.left = -layoutMetrics.xMin || 0;\n        widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n\n        if (i === endModifiers.length - 1) {\n          widths.paddingLeft = 0;\n        }\n      } else {\n        widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n        if (i !== 0) {\n          widths.right = modifier.getWidth();\n        }\n        if (i === 0) {\n          widths.left = modifier.getWidth();\n        }\n      }\n      x -= widths.paddingRight;\n      x -= widths.right;\n\n      modifier.setX(x);\n\n      x -= widths.left;\n      x -= widths.paddingLeft;\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw(): this {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.applyStyle();\n      if (this.options.line_config[line].visible) {\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + width, y);\n        ctx.stroke();\n      }\n      this.restoreStyle();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].applyStyle(ctx);\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n        this.modifiers[i].restoreStyle(ctx);\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = ctx.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      ctx.fillText('' + this.measure, this.x - text_width / 2, y);\n      ctx.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x: number, isDouble: boolean): void {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x: number, isDouble: boolean): void {\n    const ctx = this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      ctx.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    ctx.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x: number): void {\n    this.drawVerticalBarFixed(this.x + x);\n  }\n\n  drawVerticalBarFixed(x: number): void {\n    const ctx = this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    ctx.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines(): StaveLineConfig[] {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number: number, line_config: StaveLineConfig): this {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new RuntimeError(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n    }\n\n    if (typeof line_config.visible !== 'boolean') {\n      throw new RuntimeError(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration: StaveLineConfig[]): this {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new RuntimeError(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    // eslint-disable-next-line\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      this.options.line_config[line_config] = {\n        ...this.options.line_config[line_config],\n        ...lines_configuration[line_config],\n      };\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError, midLine, log, check } from './util';\nimport { Beam } from './beam';\nimport { Flow } from './flow';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\nimport { RenderContext } from './types/common';\nimport { Stave } from './stave';\nimport { StemmableNote } from './stemmablenote';\nimport { Tickable } from './tickable';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { BoundingBox } from './boundingbox';\nimport { StaveNote } from './stavenote';\n\ninterface Distance {\n  maxNegativeShiftPx: number;\n  expectedDistance: number;\n  fromTickable?: Tickable;\n  errorPx?: number;\n  fromTickablePx?: number;\n}\n\nexport interface FormatterOptions {\n  softmaxFactor?: number;\n  globalSoftmax?: boolean;\n  maxIterations: number;\n}\n\nexport interface FormatOptions {\n  align_rests?: boolean;\n  padding?: number;\n  stave?: Stave;\n  context?: RenderContext;\n  auto_beam?: boolean;\n}\n\nexport interface AlignmentContexts<T> {\n  list: number[];\n  map: Record<number, T>;\n  array: T[];\n  resolutionMultiplier: number;\n}\n\ntype addToContextFn<T> = (tickable: Note, context: T, voiceIndex: number) => void;\ntype makeContextFn<T> = (tick?: { tickID: number }) => T;\n\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts<T>(\n  voices: Voice[],\n  makeContext: makeContextFn<T>,\n  addToContext: addToContextFn<T>\n): AlignmentContexts<T> {\n  const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n\n  // Initialize tick maps.\n  const tickToContextMap: Record<number, T> = {};\n  const tickList: number[] = [];\n  const contexts: T[] = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach((voice, voiceIndex) => {\n    // Use resolution multiplier as denominator so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach((tickable) => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = makeContext({ tickID: integerTicks });\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n        // Maintain a list of unique integerTicks.\n        tickList.push(integerTicks);\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: tickList.sort((a, b) => a - b),\n    resolutionMultiplier,\n  };\n}\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Formatter.DEBUG) log('Vex.Flow.Formatter', args);\n}\n\n/** Helper function to locate the next non-rest note(s). */\nfunction lookAhead(notes: Note[], restLine: number, i: number, compare: boolean) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = midLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n  // To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\n  static DEBUG: boolean;\n  protected hasMinTotalWidth: boolean;\n  protected minTotalWidth: number;\n  protected contextGaps: {\n    total: number;\n    gaps: { x1: number; x2: number }[];\n  };\n  protected justifyWidth: number;\n  protected totalCost: number;\n  protected totalShift: number;\n  protected tickContexts?: AlignmentContexts<TickContext>;\n  protected formatterOptions: FormatterOptions;\n  protected modifierContexts?: AlignmentContexts<ModifierContext>;\n  protected voices: Voice[];\n  protected lossHistory: number[];\n  protected durationStats: Record<string, { mean: number; count: number }>;\n\n  /**\n   * Helper function to layout \"notes\" one after the other without\n   * regard for proportions. Useful for tests and debugging.\n   */\n  static SimpleFormat(notes: Note[], x = 0, { paddingBetween = 10 } = {}): void {\n    notes.reduce((accumulator, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const metrics = tick.getMetrics();\n      tick.setX(accumulator + metrics.totalLeftPx);\n\n      return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n    }, x);\n  }\n\n  /** Helper function to plot formatter debug info. */\n  static plotDebugging(\n    ctx: RenderContext,\n    formatter: Formatter,\n    xPos: number,\n    y1: number,\n    y2: number,\n    options?: { stavePadding: number }\n  ): void {\n    options = {\n      stavePadding: Flow.DEFAULT_FONT_STACK[0].lookupMetric('stave.padding'),\n      ...options,\n    };\n\n    const x = xPos + options.stavePadding;\n    const contextGaps = formatter.contextGaps;\n\n    function stroke(x1: number, x2: number, color: string) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach((gap) => {\n      stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n      ctx.setFillStyle('green');\n      ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n    });\n\n    ctx.setFillStyle('red');\n    ctx.fillText(\n      `Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(\n        2\n      )} Gap: ${contextGaps.total.toFixed(2)}`,\n      x - 20,\n      y2 + 27\n    );\n    ctx.restore();\n  }\n\n  /**\n   * Helper function to format and draw a single voice. Returns a bounding\n   * box for the notation.\n   * @param ctx  the rendering context\n   * @param stave the stave to which to draw (`Stave` or `TabStave`)\n   * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n   * @param params one of below:\n   *    * Setting `autobeam` only `(context, stave, notes, true)` or\n   *      `(ctx, stave, notes, {autobeam: true})`\n   *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n   *    * Setting both a struct is needed `(context, stave, notes, {\n   *      autobeam: true, align_rests: true})`\n   *    * `autobeam` automatically generates beams for the notes.\n   *    * `align_rests` aligns rests with nearby notes.\n   */\n  static FormatAndDraw(\n    ctx: RenderContext,\n    stave: Stave,\n    notes: StemmableNote[],\n    params?: FormatOptions | boolean\n  ): BoundingBox | undefined {\n    let options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      options = { ...options, ...params };\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice]) // , { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach((beam) => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  /**\n   * Helper function to format and draw aligned tab and stave notes in two\n   * separate staves.\n   * @param ctx the rendering context\n   * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n   * @param stave a `Stave` instance on which to render `Note`s.\n   * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n   * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n   * @param autobeam automatically generate beams.\n   * @param params a configuration object:\n   *    * `autobeam` automatically generates beams for the notes.\n   *    * `align_rests` aligns rests with nearby notes.\n   */\n  static FormatAndDrawTab(\n    ctx: RenderContext,\n    tabstave: TabStave,\n    stave: Stave,\n    tabnotes: TabNote[],\n    notes: Note[],\n    autobeam: boolean,\n    params: FormatOptions\n  ): void {\n    let opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      opts = { ...opts, ...params };\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n\n    // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach((beam) => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  /**\n   * Auto position rests based on previous/next note positions.\n   * @param notes an array of notes.\n   * @param alignAllNotes if set to false, only aligns non-beamed notes.\n   * @param alignTuplets if set to false, ignores tuplets.\n   */\n  static AlignRestsToNotes(notes: Note[], alignAllNotes: boolean, alignTuplets?: boolean): void {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.getTuplet() && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.getBeam()) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            const prevNote = notes[index - 1];\n            if (prevNote && prevNote.isRest()) {\n              restLine = prevNote.keyProps[0].line;\n              props.line = restLine;\n            } else {\n              restLine = prevNote.getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n  }\n\n  static estimateJustifiedMinWidth(voices: Voice[], formatterOptions?: FormatterOptions): number {\n    const formatter = new Formatter(formatterOptions);\n    voices.forEach((voice) => {\n      formatter.joinVoices([voice]);\n    });\n    return formatter.preCalculateMinTotalWidth(voices);\n  }\n\n  constructor(formatterOptions: Partial<FormatterOptions> = {}) {\n    this.formatterOptions = {\n      globalSoftmax: false,\n      maxIterations: 5,\n      ...formatterOptions,\n    };\n    this.justifyWidth = 0;\n    this.totalCost = 0;\n    this.totalShift = 0;\n    this.durationStats = {};\n\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = undefined;\n    this.modifierContexts = undefined;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n    this.lossHistory = [];\n  }\n\n  /**\n   * Find all the rests in each of the `voices` and align them\n   * to neighboring notes. If `alignAllNotes` is `false`, then only\n   * align non-beamed notes.\n   */\n  alignRests(voices: Voice[], alignAllNotes: boolean): void {\n    if (!voices || !voices.length) {\n      throw new RuntimeError('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  /**\n   * Estimate the width required to render 'voices'.  This is done by:\n   * 1. Sum the widths of all the tick contexts\n   * 2. Estimate the padding.\n   * The latter is done by calculating the padding 3 different ways, and taking the\n   * greatest value:\n   * 1. the padding required for unaligned notes in different voices\n   * 2. the padding based on the stddev of the tickable widths\n   * 3. the padding based on the stddev of the tickable durations.\n   *\n   * The last 2 quantities estimate a 'width entropy', where notes might need more\n   * room than the proportional formatting gives them.  A measure of all same duration\n   * and width will need no extra padding, and all these quantities will be\n   * zero in that case.\n   *\n   * @param voices the voices that contain the notes\n   * @returns the estimated width in pixels\n   */\n  preCalculateMinTotalWidth(voices: Voice[]): number {\n    const unalignedPadding = Flow.DEFAULT_FONT_STACK[0].lookupMetric('stave.unalignedNotePadding');\n    // Calculate additional padding based on 3 methods:\n    // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n    let unalignedCtxCount = 0;\n    let wsum = 0;\n    let dsum = 0;\n    const widths: number[] = [];\n    const durations: number[] = [];\n\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    // eslint-disable-next-line\n  const { list: contextList, map: contextMap } = this.tickContexts!;\n    this.minTotalWidth = 0;\n\n    // Go through each tick context and calculate total width,\n    // and also accumulate values used in padding hints\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      context.preFormat();\n      // If this TC doesn't have all the voices on it, it's unaligned.\n      // so increment the unaligned padding accumulator\n      if (context.getTickables().length < voices.length) {\n        unalignedCtxCount += 1;\n      }\n      // calculate the 'width entropy' over all the tickables\n      context.getTickables().forEach((tt) => {\n        wsum += tt.getMetrics().width;\n        dsum += tt.getTicks().value();\n        widths.push(tt.getMetrics().width);\n        durations.push(tt.getTicks().value());\n      });\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n    });\n\n    this.hasMinTotalWidth = true;\n    // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n    const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n    const wvar = widths.map((ll) => Math.pow(ll - wavg, 2)).reduce((a, b) => a + b);\n    const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n\n    const davg = dsum / durations.length;\n    const dvar = durations.map((ll) => Math.pow(ll - davg, 2)).reduce((a, b) => a + b);\n    const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n\n    // Find max of 3 methods pad the width with that\n    const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n    const unalignedPad = unalignedPadding * unalignedCtxCount;\n\n    return this.minTotalWidth + Math.max(unalignedPad, padmax);\n  }\n\n  /**\n   * Get minimum width required to render all voices. Either `format` or\n   * `preCalculateMinTotalWidth` must be called before this method.\n   */\n  getMinTotalWidth(): number {\n    if (!this.hasMinTotalWidth) {\n      throw new RuntimeError(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  /** Calculate the resolution multiplier for `voices`. */\n  static getResolutionMultiplier(voices: Voice[]): number {\n    if (!voices || !voices.length) {\n      throw new RuntimeError('BadArgument', 'No voices to format');\n    }\n    const totalTicks = voices[0].getTotalTicks();\n    const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n      if (!voice.getTotalTicks().equals(totalTicks)) {\n        throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n      }\n\n      if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n        throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n      }\n\n      return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n    }, 1);\n    return resolutionMultiplier;\n  }\n\n  /** Create `ModifierContext`s for each tick in `voices`. */\n  createModifierContexts(voices: Voice[]): AlignmentContexts<ModifierContext> {\n    const fn: addToContextFn<ModifierContext> = (tickable: Note, context: ModifierContext) =>\n      tickable.addToModifierContext(context);\n    const contexts = createContexts(voices, () => new ModifierContext(), fn);\n    this.modifierContexts = contexts;\n    return contexts;\n  }\n\n  /**\n   * Create `TickContext`s for each tick in `voices`. Also calculate the\n   * total number of ticks in voices.\n   */\n  createTickContexts(voices: Voice[]): AlignmentContexts<TickContext> {\n    const fn: addToContextFn<TickContext> = (tickable: Note, context: TickContext, voiceIndex: number) =>\n      context.addTickable(tickable, voiceIndex);\n    const contexts = createContexts(voices, (tick?: { tickID: number }) => new TickContext(tick), fn);\n    this.tickContexts = contexts;\n    const contextArray = this.tickContexts.array;\n\n    contextArray.forEach((context) => {\n      context.tContexts = contextArray;\n    });\n    return contexts;\n  }\n\n  /**\n   * This is the core formatter logic. Format voices and justify them\n   * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n   * that can't retreive widths without a canvas. This method sets the `x` positions\n   * of all the tickables/notes in the formatter.\n   */\n  preFormat(justifyWidth = 0, renderingContext?: RenderContext, voicesParam?: Voice[], stave?: Stave): number {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    if (!contexts) {\n      throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexs');\n    }\n\n    const { list: contextList, map: contextMap } = contexts;\n\n    // Reset loss history for evaluator.\n    this.lossHistory = [];\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voicesParam && stave) {\n      voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    this.minTotalWidth = 0;\n    let totalTicks = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const maxTicks = context.getMaxTicks().value();\n      totalTicks += maxTicks;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.totalLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.totalLeftPx;\n    });\n\n    // Use softmax based on all notes across all staves. (options.globalSoftmax)\n    const formatterOptions = this.formatterOptions;\n    const softmaxFactor = formatterOptions.softmaxFactor || 100;\n    const exp = (tick: number) => softmaxFactor ** (contextMap[tick].getMaxTicks().value() / totalTicks);\n    const expTicksUsed = contextList.map(exp).reduce((a: number, b: number) => a + b);\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return this.evaluate();\n\n    // Start justification. Subtract the right extra pixels of the final context because the formatter\n    // justifies based on the context's X position, which is the left-most part of the note head.\n    const firstContext = contextMap[contextList[0]];\n    const lastContext = contextMap[contextList[contextList.length - 1]];\n\n    // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n    // the softmax of the ticks.\n    function calculateIdealDistances(adjustedJustifyWidth: number): Distance[] {\n      const distances: Distance[] = contextList.map((tick: number, i: number) => {\n        const context: TickContext = contextMap[tick];\n        const voices = context.getTickablesByVoice();\n        let backTickable: Note | undefined;\n        if (i > 0) {\n          const prevContext: TickContext = contextMap[contextList[i - 1]];\n          // Go through each tickable and search backwards for another tickable\n          // in the same voice. If found, use that duration (ticks) to calculate\n          // the expected distance.\n          for (let j = i - 1; j >= 0; j--) {\n            const backTick: TickContext = contextMap[contextList[j]];\n            const backVoices = backTick.getTickablesByVoice();\n\n            // Look for matching voices between tick contexts.\n            const matchingVoices: string[] = [];\n            Object.keys(voices).forEach((v) => {\n              if (backVoices[v]) {\n                matchingVoices.push(v);\n              }\n            });\n\n            if (matchingVoices.length > 0) {\n              // Found matching voices, get largest duration\n              let maxTicks = 0;\n              let maxNegativeShiftPx = Infinity;\n              let expectedDistance = 0;\n\n              matchingVoices.forEach((v) => {\n                const ticks = backVoices[v].getTicks().value();\n                if (ticks > maxTicks) {\n                  backTickable = backVoices[v];\n                  maxTicks = ticks;\n                }\n\n                // Calculate the limits of the shift based on modifiers, etc.\n                const thisTickable = voices[v];\n                const insideLeftEdge =\n                  thisTickable.getX() -\n                  (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n\n                const backMetrics = backVoices[v].getMetrics();\n                const insideRightEdge =\n                  backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n\n                // Don't allow shifting if notes in the same voice can collide\n                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n              });\n\n              // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n              // so that two different tick contexts don't align across staves.\n              maxNegativeShiftPx = Math.min(\n                maxNegativeShiftPx,\n                context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05)\n              );\n\n              // Calculate the expected distance of the current context from the last matching tickable. The\n              // distance is scaled down by the softmax for the voice.\n              if (formatterOptions.globalSoftmax) {\n                const t = totalTicks;\n                expectedDistance = (softmaxFactor ** (maxTicks / t) / expTicksUsed) * adjustedJustifyWidth;\n              } else if (backTickable) {\n                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n              }\n\n              return {\n                expectedDistance,\n                maxNegativeShiftPx,\n                fromTickable: backTickable,\n              };\n            }\n          }\n        }\n\n        return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n      });\n      return distances;\n    }\n\n    function shiftToIdealDistances(idealDistances: Distance[]): number {\n      // Distribute ticks to the contexts based on the calculated distance error.\n      const centerX = adjustedJustifyWidth / 2;\n      let spaceAccum = 0;\n\n      contextList.forEach((tick, index) => {\n        const context = contextMap[tick];\n        if (index > 0) {\n          const contextX = context.getX();\n          const ideal = idealDistances[index];\n          const errorPx = check<Tickable>(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n\n          let negativeShiftPx = 0;\n          if (errorPx > 0) {\n            spaceAccum += errorPx;\n          } else if (errorPx < 0) {\n            negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n            spaceAccum += -negativeShiftPx;\n          }\n\n          context.setX(contextX + spaceAccum);\n        }\n\n        // Move center aligned tickables to middle\n        context.getCenterAlignedTickables().forEach((tickable: Note) => {\n          tickable.setCenterXShift(centerX - context.getX());\n        });\n      });\n\n      return lastContext.getX() - firstContext.getX();\n    }\n\n    const adjustedJustifyWidth =\n      justifyWidth -\n      lastContext.getMetrics().notePx -\n      lastContext.getMetrics().totalRightPx -\n      firstContext.getMetrics().totalLeftPx;\n    let targetWidth = adjustedJustifyWidth;\n    let actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n    const musicFont = Flow.DEFAULT_FONT_STACK[0];\n    const paddingMax = musicFont.lookupMetric('stave.endPaddingMax');\n    const paddingMin = musicFont.lookupMetric('stave.endPaddingMin');\n    const maxX = adjustedJustifyWidth - paddingMin;\n\n    let iterations = this.formatterOptions.maxIterations;\n    while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n      // If we couldn't fit all the notes into the jusification width, it's because the softmax-scaled\n      // widths between different durations differ across stave (e.g., 1 quarter note is not the same pixel-width\n      // as 4 16th-notes). Run another pass, now that we know how much to justify.\n      targetWidth -= actualWidth - maxX;\n      actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n      iterations--;\n    }\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return 0;\n\n    this.justifyWidth = justifyWidth;\n    return this.evaluate();\n  }\n\n  /** Calculate the total cost of this formatting decision. */\n  evaluate(): number {\n    if (!this.tickContexts) return 0;\n    const contexts = this.tickContexts;\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    contexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = contexts.list[index - 1];\n      const prevContext = contexts.map[prevTick];\n      const context = contexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n      const currMetrics = context.getMetrics();\n\n      // Calculate X position of right edge of previous note\n      const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n      // Calculate X position of left edge of current note\n      const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    this.durationStats = {};\n    const durationStats = this.durationStats;\n\n    function updateStats(duration: string, space: number) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach((voice) => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n        let space = 0;\n\n        if (i < notes.length - 1) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach((voice) => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n\n        metrics.space.mean = durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - metrics.space.mean;\n\n        totalDeviation += metrics.space.deviation ** 2;\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this.totalCost;\n  }\n\n  /**\n   * Run a single iteration of rejustification. At a high level, this method calculates\n   * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n   * attempt to reduce the cost. You can call this method multiple times until it finds\n   * and oscillates around a global minimum.\n   * @param alpha the \"learning rate\" for the formatter. It determines how much of a shift\n   * the formatter should make based on its cost function.\n   */\n  tune(options?: { alpha: number }): number {\n    if (!this.tickContexts) return 0;\n    const contexts = this.tickContexts;\n    options = {\n      alpha: 0.5,\n      ...options,\n    };\n\n    const sum = (arr: number[]) => arr.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current: TickContext, shift: number, prev?: TickContext, next?: TickContext) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.totalShift = 0;\n    contexts.list.forEach((tick, index, list) => {\n      const context = contexts.map[tick];\n      const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n      const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n\n      move(context, shift, prevContext, nextContext);\n\n      const cost = -sum(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      shift *= check<{ alpha: number }>(options).alpha;\n      this.totalShift += shift;\n    });\n\n    return this.evaluate();\n  }\n\n  /**\n   * This is the top-level call for all formatting logic completed\n   * after `x` *and* `y` values have been computed for the notes\n   * in the voices.\n   */\n  postFormat(): this {\n    const postFormatContexts = (contexts: AlignmentContexts<ModifierContext> | AlignmentContexts<TickContext>) =>\n      contexts.list.forEach((tick) => contexts.map[tick].postFormat());\n\n    if (this.modifierContexts) postFormatContexts(this.modifierContexts);\n    if (this.tickContexts) postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  /**\n   * Take all `voices` and create `ModifierContext`s out of them. This tells\n   * the formatters that the voices belong on a single stave.\n   */\n  joinVoices(voices: Voice[]): this {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  /**\n   * Align rests in voices, justify the contexts, and position the notes\n   * so voices are aligned and ready to render onto the stave. This method\n   * mutates the `x` positions of all tickables in `voices`.\n   *\n   * Voices are full justified to fit in `justifyWidth` pixels.\n   *\n   * Set `options.context` to the rendering context. Set `options.align_rests`\n   * to true to enable rest alignment.\n   */\n  format(voices: Voice[], justifyWidth?: number, options?: FormatOptions): this {\n    const opts = {\n      align_rests: false,\n      ...options,\n    };\n\n    this.voices = voices;\n    const softmaxFactor = this.formatterOptions.softmaxFactor;\n    if (softmaxFactor) {\n      this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n    }\n\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices: Voice[], stave: Stave, optionsParam?: FormatOptions): this {\n    const options: FormatOptions = { padding: 10, /*stave,*/ context: stave.getContext(), ...optionsParam };\n\n    // eslint-disable-next-line\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n    L('Formatting voices to width: ', justifyWidth);\n    return this.format(voices, justifyWidth, options);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { FontInfo, TieNotes } from './types/common';\n\nexport class StaveTie extends Element {\n  render_options: {\n    cp2: number;\n    last_x_shift: number;\n    tie_spacing: number;\n    cp1: number;\n    first_x_shift: number;\n    text_shift_x: number;\n    y_shift: number;\n    font: FontInfo;\n  };\n\n  protected text?: string;\n\n  protected font: FontInfo;\n  protected notes: TieNotes;\n  protected direction?: number;\n\n  constructor(notes: TieNotes, text?: string) {\n    /**\n     * TieNotes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.text = text;\n    this.render_options = {\n      cp1: 8, // Curve control point 1\n      cp2: 12, // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, weight: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font: FontInfo): this {\n    this.font = font;\n    return this;\n  }\n\n  setDirection(direction: number): this {\n    this.direction = direction;\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes: TieNotes): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.notes = notes;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial(): boolean {\n    return !this.notes.first_note || !this.notes.last_note;\n  }\n\n  renderTie(params: {\n    direction: number;\n    first_x_px: number;\n    last_x_px: number;\n    last_ys: number[];\n    first_ys: number[];\n  }): void {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new RuntimeError('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.checkContext();\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2;\n      cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.notes.first_indices.length; ++i) {\n      const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.notes.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.notes.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n      const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px: number, last_x_px: number): void {\n    if (!this.text) return;\n    const ctx = this.checkContext();\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= ctx.measureText(this.text).width / 2;\n    const stave = this.notes.first_note?.checkStave() ?? this.notes.last_note?.checkStave();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n    ctx.restore();\n  }\n\n  draw(): boolean {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.notes.first_note;\n    const last_note = this.notes.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction = 0;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      const stave = last_note.checkStave();\n      first_x_px = stave.getTieStartX();\n      first_ys = last_note.getYs();\n      this.notes.first_indices = this.notes.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      const stave = first_note.checkStave();\n      last_x_px = stave.getTieEndX();\n      last_ys = first_note.getYs();\n      this.notes.last_indices = this.notes.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\nimport { TieNotes } from './types/common';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes: TieNotes): TabTie {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes: TieNotes): TabTie {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes: TieNotes, text?: string) {\n    /**\n     * TieNotes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.direction = -1; // Tab tie's are always face up.\n\n    this.setNotes(notes);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { log } from './util';\nimport { Flow } from './flow';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { StemmableNote } from './stemmablenote';\nimport { ModifierContextState } from './modifiercontext';\nimport { RenderContext } from './types/common';\n\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any) {\n  if (GraceNoteGroup.DEBUG) log('Vex.Flow.GraceNoteGroup', args);\n}\n\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n  static DEBUG: boolean;\n\n  protected readonly voice: Voice;\n  protected readonly grace_notes: StemmableNote[];\n  protected readonly show_slur?: boolean;\n\n  protected preFormatted: boolean;\n  protected formatter: Formatter;\n  protected render_options: { slur_y_shift: number };\n  protected slur?: StaveTie | TabTie;\n  protected beams: Beam[];\n\n  static get CATEGORY(): string {\n    return 'gracenotegroups';\n  }\n\n  /** Arranges groups inside a `ModifierContext`. */\n  static format(gracenote_groups: GraceNoteGroup[], state: ModifierContextState): boolean {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = note.getCategory() === StaveNote.CATEGORY;\n      const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n\n      if (is_stavenote && note !== prev_note) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n  constructor(grace_notes: StemmableNote[], show_slur?: boolean) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = undefined;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.beams = [];\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory(): string {\n    return GraceNoteGroup.CATEGORY;\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes(grace_notes?: StemmableNote[]): this {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beams.push(beam);\n    }\n\n    return this;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getGraceNotes(): Note[] {\n    return this.grace_notes;\n  }\n\n  draw(): void {\n    const ctx: RenderContext = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    L('Drawing grace note group for:', note);\n\n    this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n\n    // Draw notes\n    this.grace_notes.forEach((graceNote) => {\n      graceNote.setContext(ctx).draw();\n    });\n\n    // Draw beam\n    this.beams.forEach((beam) => {\n      beam.setContext(ctx).draw();\n    });\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = note.getCategory() === StaveNote.CATEGORY;\n      const TieClass = is_stavenote ? StaveTie : TabTie;\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n// MIT License\n\nimport { RuntimeError, log, check } from './util';\nimport { Fraction } from './fraction';\nimport { Flow } from './flow';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceNote } from './gracenote';\nimport { ModifierContextState } from './modifiercontext';\nimport { Voice } from './voice';\nimport { Note } from './note';\nimport { StaveNote } from './stavenote';\n\ntype Line = {\n  column: number;\n  line: number;\n  flatLine: boolean;\n  dblSharpLine: boolean;\n  numAcc: number;\n  width: number;\n};\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Accidental.DEBUG) log('Vex.Flow.Accidental', args);\n}\n\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.js` for usage examples.\n */\n\nexport class Accidental extends Modifier {\n  /** Accidental code provided to the constructor. */\n  readonly type: string;\n  /** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\n  static DEBUG: boolean;\n  protected accidental: {\n    code: string;\n    parenRightPaddingAdjustment: number;\n  };\n  protected render_options: {\n    parenLeftPadding: number;\n    stroke_px: number;\n    font_scale: number;\n    parenRightPadding: number;\n  };\n  protected cautionary: boolean;\n  // initialised in reset which is called by the constructor\n  protected glyph!: Glyph;\n  protected parenRight?: Glyph;\n  protected parenLeft?: Glyph;\n\n  /** Accidentals category string. */\n  static get CATEGORY(): string {\n    return 'accidentals';\n  }\n\n  /** Arrange accidentals inside a ModifierContext. */\n  static format(accidentals: Accidental[], state: ModifierContextState): void {\n    type AccidentalListItem = {\n      y?: number;\n      line: number;\n      shift: number;\n      acc: Accidental;\n      lineSpace?: number;\n    };\n\n    const musicFont = Flow.DEFAULT_FONT_STACK[0];\n    const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n    const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList: AccidentalListItem[] = [];\n    let prevNote = undefined;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote() as StaveNote;\n      const stave = note.getStave();\n      const index = acc.checkIndex();\n      const props = note.getKeyProps()[index];\n      if (note !== prevNote) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n        }\n        prevNote = note;\n      }\n      if (stave) {\n        const lineSpace = stave.getOptions().spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round((y / lineSpace) * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList: Line[] = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = undefined;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === undefined || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n          column: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n          // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index: number) => lineList[groupStart + index];\n      const getGroupLines = (indexes: number[]) => indexes.map(getGroupLine);\n      const lineDifference = (indexA: number, indexB: number) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs: number[][]) =>\n        indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = totalColumns > column ? totalColumns : column;\n        }\n\n        // Otherwise, if the group contains fewer than seven members, use the layouts from\n        // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = totalColumns > column ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths: number[] = [];\n    const columnXOffsets: number[] = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach((line) => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach((line) => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = columnXOffsets[line.column - 1] + lineWidth;\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift + additionalPadding;\n  }\n\n  /** Helper function to determine whether two lines of accidentals collide vertically */\n  static checkCollision(line1: Line, line2: Line): boolean {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) {\n      // then line 2 is on top\n      clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else {\n      // line 1 is on top\n      clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  /**\n   * Use this method to automatically apply accidentals to a set of `voices`.\n   * The accidentals will be remembered between all the voices provided.\n   * Optionally, you can also provide an initial `keySignature`.\n   */\n  static applyAccidentals(voices: Voice[], keySignature: string): void {\n    const tickPositions: number[] = [];\n    const tickNoteMap: Record<number, Note[]> = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach((voice) => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach((note) => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach((tick) => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches: string[] = [];\n\n      const processNote = (note: Note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString: string, keyIndex: number) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n          // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            (note as StaveNote).addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach((modifier) => {\n          if (modifier.getCategory() === GraceNoteGroup.CATEGORY) {\n            (modifier as GraceNoteGroup).getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  /**\n   * Create accidental.\n   * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n   * For example: `#`, `##`, `b`, `n`, etc.\n   */\n  constructor(type: string) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new RuntimeError('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n\n    this.reset();\n  }\n\n  protected reset(): void {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  /** Get element category string. */\n  getCategory(): string {\n    return Accidental.CATEGORY;\n  }\n\n  /** Get width in pixels. */\n  getWidth(): number {\n    const parenWidth = this.cautionary\n      ? check<Glyph>(this.parenLeft).getMetrics().width +\n        check<Glyph>(this.parenRight).getMetrics().width +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      : 0;\n\n    return this.glyph.getMetrics().width + parenWidth;\n  }\n\n  /** Attach this accidental to `note`, which must be a `StaveNote`. */\n  setNote(note: Note): this {\n    if (!note) {\n      throw new RuntimeError('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (note.getCategory() === GraceNote.CATEGORY) {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n    return this;\n  }\n\n  /** If called, draws parenthesis around accidental. */\n  setAsCautionary(): this {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  /** Render accidental onto canvas. */\n  draw(): void {\n    const {\n      type,\n      position,\n      index,\n      cautionary,\n      x_shift,\n      y_shift,\n      glyph,\n      parenLeft,\n      parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(ctx, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      check<Glyph>(parenRight).render(ctx, accX, accY);\n      accX -= check<Glyph>(parenRight).getMetrics().width;\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(ctx, accX, accY);\n      accX -= glyph.getMetrics().width;\n      accX -= parenLeftPadding;\n      check<Glyph>(parenLeft).render(ctx, accX, accY);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { log } from './util';\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\n\nfunction L(\n  // eslint-disable-next-line\n  ...args: any[]) {\n  if (BarNote.DEBUG) log('Vex.Flow.BarNote', args);\n}\n\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.js` for usage examples.\n */\nexport class BarNote extends Note {\n  protected metrics: { widths: Record<string, number> };\n  /** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\n  static DEBUG: boolean;\n  protected type!: BarlineType;\n\n  constructor(type = BarlineType.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = BarlineType;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  /** Get the type of bar note.*/\n  getType(): BarlineType {\n    return this.type;\n  }\n\n  /** Set the type of bar note. */\n  setType(type: string | BarlineType): this {\n    this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  /** overridden to ignore. */\n  addToModifierContext(): this {\n    return this;\n  }\n\n  /** overridden to ignore. */\n  preFormat(): this {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  /** Render note to stave. */\n  draw(): void {\n    const ctx = this.checkContext();\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    if (this.style) this.applyStyle(ctx);\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.checkStave());\n    if (this.style) this.restoreStyle(ctx);\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\n\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { RenderContext } from './types/common';\nimport { BoundingBox } from './boundingbox';\nimport { ClefType } from './clef';\n\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n  protected clef_obj: Clef;\n  protected type: string;\n  protected clef: ClefType;\n\n  static get CATEGORY(): string {\n    return 'clefnote';\n  }\n\n  constructor(type: string, size?: string, annotation?: string) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  /** Set clef type, size and annotation. */\n  setType(type: string, size: string, annotation: string): this {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  /** Get associated clef. */\n  getClef(): ClefType {\n    return this.clef;\n  }\n\n  /** Set associated context. */\n  setContext(context: RenderContext): this {\n    super.setContext(context);\n    this.glyph.setContext(this.getContext());\n    return this;\n  }\n\n  /** Get bounding box. */\n  getBoundingBox(): BoundingBox | undefined {\n    return super.getBoundingBox();\n  }\n\n  /** Overridden to ignore. */\n  addToModifierContext(): this {\n    /* overridden to ignore */\n    return this;\n  }\n\n  /** Get element category string. */\n  getCategory(): string {\n    return ClefNote.CATEGORY;\n  }\n\n  /** Set preformatted. */\n  preFormat(): this {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  /** Render clef note. */\n  draw(): void {\n    const stave = this.checkStave();\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.getContext());\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(stave);\n    this.glyph.setYShift(stave.getYForLine(this.clef.line ?? 0) - stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.getContext());\n      }\n      attachment.setStave(stave);\n      attachment.setYShift(stave.getYForLine(this.clef_obj.annotation.line) - stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { log } from './util';\nimport { Note, NoteStruct } from './note';\nimport { TickContext } from './tickcontext';\nimport { RenderContext } from './types/common';\n\nexport interface CrescendoParams {\n  reverse: boolean;\n  height: number;\n  y: number;\n  end_x: number;\n  begin_x: number;\n}\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(\n  // eslint-disable-next-line\n  ...args: any []) {\n  if (Crescendo.DEBUG) log('Vex.Flow.Crescendo', args);\n}\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx: RenderContext, params: CrescendoParams) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height = params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x, y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x, y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x, y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  static DEBUG: boolean;\n\n  protected decrescendo: boolean;\n  protected height: number;\n  protected line: number;\n  protected options = {\n    // Extensions to the length of the crescendo on either side\n    extend_left: 0,\n    extend_right: 0,\n    // Vertical shift\n    y_shift: 0,\n  };\n\n  // Initialize the crescendo's properties\n  constructor(note_struct: NoteStruct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n  }\n\n  // Set the line to center the element on\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Set the full height at the open end\n  setHeight(height: number): this {\n    this.height = height;\n    return this;\n  }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc: boolean): this {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat(): this {\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the Crescendo object onto the canvas\n  draw(): void {\n    const ctx = this.checkContext();\n    const stave = this.checkStave();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n    const y = stave.getYForLine(this.line + -3) + 1;\n\n    L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n\n    renderHairpin(ctx, {\n      begin_x: begin_x - this.options.extend_left,\n      end_x: end_x + this.options.extend_right,\n      y: y + this.options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { Note } from './note';\n\nexport interface CurveOptions {\n  thickness: number;\n  x_shift: number;\n  y_shift: number;\n  position: number;\n  position_end: number;\n  invert: boolean;\n  cps: { x: number; y: number }[];\n}\n\nexport enum CurvePosition {\n  NEAR_HEAD = 1,\n  NEAR_TOP = 2,\n}\n\nexport class Curve extends Element {\n  protected readonly render_options: CurveOptions;\n  protected from: Note;\n  protected to: Note;\n\n  static get Position(): typeof CurvePosition {\n    return CurvePosition;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from: Note, to: Note, options: Partial<CurveOptions>) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [\n        { x: 0, y: 10 },\n        { x: 0, y: 10 },\n      ],\n      ...options,\n    };\n\n    this.from = from;\n    this.to = to;\n  }\n\n  setNotes(from: Note, to: Note): this {\n    if (!from && !to) {\n      throw new RuntimeError('BadArguments', 'Curve needs to have either first_note or last_note set.');\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial(): boolean {\n    return !this.from || !this.to;\n  }\n\n  renderCurve(params: { last_y: number; last_x: number; first_y: number; first_x: number; direction: number }): void {\n    const ctx = this.checkContext();\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + cps[0].y * params.direction,\n      last_x - cp_spacing + cps[1].x,\n      last_y + cps[1].y * params.direction,\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y + thickness) * params.direction,\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y + thickness) * params.direction,\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw(): boolean {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction = 0;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position: string | number) {\n      return typeof position === 'string' ? Curve.PositionString[position] : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      const stave = last_note.checkStave();\n      first_x = stave.getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      const stave = first_note.checkStave();\n      last_x = stave.getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { RuntimeError, log } from './util';\nimport { Grammar } from './easyscore';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]): void {\n  if (Parser.DEBUG) log('Vex.Flow.Parser', args);\n}\n\nconst NO_ERROR_POS = -1;\n\nexport type Match = string | Match[] | null;\nexport type RuleFunction = () => Rule;\nexport type TriggerFunction = (state?: { matches: Match[] }) => void;\n\nexport interface Rule {\n  // Lexer Rules\n  token?: string; // The token property is a string that is compiled into a RegExp.\n  noSpace?: boolean;\n\n  // Parser Rules\n  expect?: RuleFunction[];\n  zeroOrMore?: boolean;\n  oneOrMore?: boolean;\n  maybe?: boolean;\n  or?: boolean;\n  run?: TriggerFunction;\n}\n\nexport interface Result {\n  success: boolean;\n\n  // Lexer Results\n  pos?: number;\n  incrementPos?: number;\n  matchedString?: string;\n\n  // Parser Results\n  matches?: Match[];\n  numMatches?: number;\n  results?: GroupedResults;\n  errorPos?: number; // Set to NO_ERROR if successful. N if there is an error in the string.\n}\n\n// Represents a mixed array containing Result and/or Result[].\n// The grouping is determined by the structure of the Grammar.\ntype GroupedResults = (Result | Result[])[];\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r: Result | Result[]): Match {\n  if ('matchedString' in r) return r.matchedString as string; // string\n  if ('results' in r) return flattenMatches(r.results as Result[]);\n  const results = r as Result[];\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches); // nested array\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  static DEBUG: boolean = false;\n\n  protected grammar: Grammar;\n\n  protected line: string; // Use RegExp to extract tokens from this line.\n  protected pos: number;\n  protected errorPos: number;\n\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.ts.\n  constructor(grammar: Grammar) {\n    this.grammar = grammar;\n    this.line = '';\n    this.pos = 0;\n    this.errorPos = NO_ERROR_POS;\n  }\n\n  // Parse `line` using current grammar. Returns `{success: true}` if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line: string): Result {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = NO_ERROR_POS;\n    const result = this.expect(this.grammar.begin());\n    result.errorPos = this.errorPos;\n    return result;\n  }\n\n  matchFail(returnPos: number): void {\n    if (this.errorPos === NO_ERROR_POS) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess(): void {\n    this.errorPos = NO_ERROR_POS;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token: string, noSpace: boolean = false): Result {\n    const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  // TODO: expectOne(...) is never called with the `maybe` parameter.\n  expectOne(rule: Rule, maybe: boolean = false): Result {\n    const results: GroupedResults = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = maybe === true || rule.maybe === true;\n\n    // Execute all sub rules in sequence.\n    if (rule.expect) {\n      for (const next of rule.expect) {\n        const localPos = this.pos;\n        const result = this.expect(next);\n\n        // If `rule.or` is set, then return success if any one\n        // of the subrules match, else all subrules must match.\n        if (result.success) {\n          results.push(result);\n          oneMatch = true;\n          if (rule.or) break;\n        } else {\n          allMatches = false;\n          if (!rule.or) {\n            this.pos = localPos;\n            break;\n          }\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || maybe === true;\n    const numMatches = gotOne ? 1 : 0;\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) {\n      this.matchSuccess();\n    } else {\n      this.matchFail(pos);\n    }\n    return { success, results, numMatches };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule: Rule, maybe: boolean = false): Result {\n    const results: GroupedResults = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success && result.results) {\n        numMatches++;\n        results.push(result.results as Result[]);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = numMatches > 0 || maybe === true;\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) {\n      this.matchSuccess();\n    } else {\n      this.matchFail(pos);\n    }\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule: Rule): Result {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided `rules` function. This\n  // offloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(ruleFunc: RuleFunction): Result {\n    L('Evaluating rule function:', ruleFunc);\n    if (!ruleFunc) {\n      throw new RuntimeError('Invalid rule function');\n    }\n    let result: Result;\n\n    // Get rule from Grammar class.\n    // expect(...) handles both lexing & parsing:\n    // - lexer rules produce tokens.\n    // - parser rules produce expressions which may trigger code via the\n    //   { run: () => ... } trigger functions in easyscore.ts.\n    //   These functions build the VexFlow objects that are displayed on screen.\n    const rule: Rule = ruleFunc.bind(this.grammar)();\n    if (rule.token) {\n      // A lexer rule has a `token` property.\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, rule.noSpace === true);\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos as number;\n      }\n    } else if (rule.expect) {\n      // A parser rule has an `expect` property.\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      L(rule);\n      throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n    }\n\n    // If there's a trigger attached to this rule, then run it.\n    // Make the matches accessible through `state.matches` in the\n    // `run: (state) => ...` trigger.\n    const matches: Match[] = [];\n    result.matches = matches;\n    if (result.results) {\n      result.results.forEach((r) => {\n        matches.push(flattenMatches(r));\n      });\n    }\n    if (rule.run && result.success) {\n      rule.run({ matches });\n    }\n    return result;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\n/* eslint max-classes-per-file: \"off\" */\n\nimport { RuntimeError, log } from './util';\nimport { StaveNote } from './stavenote';\nimport { Match, Parser, Result, Rule, RuleFunction } from './parser';\nimport { Articulation } from './articulation';\nimport { FretHandFinger } from './frethandfinger';\nimport { Factory } from './factory';\nimport { RenderContext } from './types/common';\nimport { Accidental } from './accidental';\nimport { Modifier } from './modifier';\nimport { Voice } from './voice';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]): void {\n  if (EasyScore.DEBUG) log('Vex.Flow.EasyScore', args);\n}\n\ntype IDUpdate = { id: string };\ntype ClassUpdate = { class: string };\n// eslint-disable-next-line\ntype CommitHook = (obj: any, note: StaveNote, builder: Builder) => void;\n\nexport class Grammar {\n  builder: Builder;\n\n  constructor(builder: Builder) {\n    this.builder = builder;\n  }\n\n  begin(): RuleFunction {\n    return this.LINE;\n  }\n\n  LINE(): Rule {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE(): Rule {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES(): Rule {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS(): Rule {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE(): Rule {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD(): Rule {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      // eslint-disable-next-line\n      run: (state) => this.builder.addChord(state!.matches[1] as Match[]),\n    };\n  }\n  NOTES(): Rule {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE(): Rule {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE(): Rule {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) => {\n        // eslint-disable-next-line\n        const s = state!;\n        this.builder.addSingleNote(s.matches[0] as string, s.matches[1] as string, s.matches[2] as string);\n      },\n    };\n  }\n  ACCIDENTAL(): Rule {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS(): Rule {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      // eslint-disable-next-line\n      run: (state) => this.builder.setNoteDots(state!.matches),\n    };\n  }\n  TYPE(): Rule {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      // eslint-disable-next-line\n      run: (state) => this.builder.setNoteType(state!.matches[2] as string),\n    };\n  }\n  DURATION(): Rule {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      // eslint-disable-next-line\n      run: (state) => this.builder.setNoteDuration(state!.matches[1] as string),\n    };\n  }\n  OPTS(): Rule {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS(): Rule {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL(): Rule {\n    const unquote = (str: string) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      // eslint-disable-next-line\n      run: (state) => this.builder.addNoteOption(state!.matches[0] as string, unquote(state!.matches[2] as string)),\n    };\n  }\n  VAL(): Rule {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY(): Rule {\n    return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n  }\n  DVAL(): Rule {\n    return { token: '[\"][^\"]*[\"]' };\n  }\n  SVAL(): Rule {\n    return { token: \"['][^']*[']\" };\n  }\n  NOTENAME(): Rule {\n    return { token: '[a-gA-G]' };\n  }\n  OCTAVE(): Rule {\n    return { token: '[0-9]+' };\n  }\n  ACCIDENTALS(): Rule {\n    return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n  }\n  DURATIONS(): Rule {\n    return { token: '[0-9whq]+' };\n  }\n  TYPES(): Rule {\n    return { token: '[rRsSxX]' };\n  }\n  LPAREN(): Rule {\n    return { token: '[(]' };\n  }\n  RPAREN(): Rule {\n    return { token: '[)]' };\n  }\n  COMMA(): Rule {\n    return { token: '[,]' };\n  }\n  DOT(): Rule {\n    return { token: '[.]' };\n  }\n  SLASH(): Rule {\n    return { token: '[/]' };\n  }\n  MAYBESLASH(): Rule {\n    return { token: '[/]?' };\n  }\n  EQUALS(): Rule {\n    return { token: '[=]' };\n  }\n  LBRACKET(): Rule {\n    return { token: '\\\\[' };\n  }\n  RBRACKET(): Rule {\n    return { token: '\\\\]' };\n  }\n  EOL(): Rule {\n    return { token: '$' };\n  }\n}\n\ninterface NotePiece {\n  key: string;\n  accid?: string | null;\n  octave?: string;\n}\n\nclass Piece {\n  chord: NotePiece[] = [];\n  duration: string;\n  dots: number = 0;\n  type?: string;\n  options: { [x: string]: string } = {};\n  constructor(duration: string) {\n    this.duration = duration;\n  }\n}\n\ninterface BuilderElements {\n  notes: StaveNote[];\n  accidentals: (Accidental | undefined)[][];\n}\n\ninterface BuilderOptions {\n  stem?: string;\n  clef?: string;\n  // eslint-disable-next-line\n  [x: string]: any; // allow arbitrary options via reset(...)\n}\n\nexport class Builder {\n  factory: Factory;\n  elements!: BuilderElements;\n  options!: BuilderOptions;\n  commitHooks: CommitHook[] = [];\n  piece!: Piece;\n  rollingDuration!: string;\n\n  constructor(factory: Factory) {\n    this.factory = factory;\n    this.reset();\n  }\n\n  reset(options: BuilderOptions = {}): void {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory(): Factory {\n    return this.factory;\n  }\n\n  getElements(): BuilderElements {\n    return this.elements;\n  }\n\n  addCommitHook(commitHook: CommitHook): void {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece(): void {\n    L('resetPiece');\n    this.piece = new Piece(this.rollingDuration);\n  }\n\n  setNoteDots(dots: Match[]): void {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration?: string): void {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type?: string): void {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key: string, value: string): void {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key?: string, accid?: string | null, octave?: string): void {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({\n      key: key as string,\n      accid: accid,\n      octave: octave,\n    });\n  }\n\n  addSingleNote(key: string, accid?: string | null, octave?: string): void {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  // notes is an array with 3 entries\n  addChord(notes: Match[]): void {\n    L('startChord');\n    if (typeof notes[0] !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach((n: Match) => {\n        if (n) this.addNote(...(n as string[])); // n => [string, string | null, string]\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece(): void {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = { ...this.options, ...this.piece.options };\n\n    // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n    if (options.stem === undefined) {\n      throw new RuntimeError('options.stem is not defined');\n    }\n    if (options.clef === undefined) {\n      throw new RuntimeError('options.clef is not defined');\n    }\n    const stem: string = options.stem.toLowerCase(); // e.g., auto | up | down\n    const clef: string = options.clef; // e.g., treble | bass\n\n    const autoStem = stem === 'auto';\n    const stemDirection = !autoStem && stem === 'up' ? StaveNote.STEM_UP : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys: string[] = chord.map((notePiece) => notePiece.key + '/' + notePiece.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accidentals: (Accidental | undefined)[] = [];\n    chord.forEach((notePiece: NotePiece, index: number) => {\n      const accid = notePiece.accid;\n      if (typeof accid === 'string') {\n        const accidental: Accidental = factory.Accidental({ type: accid });\n        // TODO: Remove \"as unknown as Modifier\".\n        // This compilation warning will be fixed after factory & accidental are migrated to typescript.\n        note.addAccidental(index, accidental as unknown as Modifier);\n        accidentals.push(accidental);\n      } else {\n        accidentals.push(undefined);\n      }\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach((fn) => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.push(accidentals);\n    this.resetPiece();\n  }\n}\n\nfunction setId(options: IDUpdate, note: StaveNote) {\n  if (options.id === undefined) return;\n  note.setAttribute('id', options.id);\n}\n\nfunction setClass(options: ClassUpdate, note: StaveNote) {\n  if (!options.class) return;\n  const commaSeparatedRegex = /\\s*,\\s*/;\n  options.class.split(commaSeparatedRegex).forEach((className: string) => note.addClass(className));\n}\n\nexport interface EasyScoreOptions {\n  factory?: Factory;\n  builder?: Builder;\n  commitHooks?: CommitHook[];\n  throwOnError?: boolean;\n}\n\nexport interface EasyScoreDefaults {\n  clef: string;\n  time: string;\n  stem: string;\n  // eslint-disable-next-line\n  [x: string]: any; // allow arbitrary properties via set(defaults)\n}\n\nexport class EasyScore {\n  static DEBUG: boolean = false;\n\n  defaults: EasyScoreDefaults;\n  options!: EasyScoreOptions;\n  factory!: Factory;\n  builder!: Builder;\n  grammar!: Grammar;\n  parser!: Parser;\n\n  constructor(options: EasyScoreOptions = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults: EasyScoreDefaults): this {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options: EasyScoreOptions): this {\n    this.options = {\n      commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook],\n      throwOnError: false,\n      ...options,\n    };\n\n    // eslint-disable-next-line\n    this.factory = this.options.factory!; // ! operator, because we know it is set in Factory.EasyScore()\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    // eslint-disable-next-line\n    this.options.commitHooks!.forEach((commitHook: CommitHook) => this.addCommitHook(commitHook)); // ! operator, because this.options.commitHooks is set in the first line of this method.\n    return this;\n  }\n\n  setContext(context: RenderContext): this {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line: string, options: BuilderOptions = {}): Result {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      L(result);\n      throw new RuntimeError('Error parsing line: ' + line);\n    }\n    return result;\n  }\n\n  // TODO: Add stricter typing after migrating Factory\n  // eslint-disable-next-line\n  beam(notes: StaveNote[], options: any = {}): StaveNote[] {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  // TODO: Add stricter typing after migrating Factory\n  // eslint-disable-next-line\n  tuplet(notes: StaveNote[], options: any = {}): StaveNote[] {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line: string, options: BuilderOptions = {}): StaveNote[] {\n    options = { clef: this.defaults.clef, stem: this.defaults.stem, ...options };\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  // TODO: Add stricter typing after migrating Factory\n  // eslint-disable-next-line\n  voice(notes: StaveNote[], options?: any): Voice {\n    options = { time: this.defaults.time, ...options };\n    return this.factory.Voice(options).addTickables(notes);\n  }\n\n  addCommitHook(commitHook: CommitHook): void {\n    this.builder.addCommitHook(commitHook);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError, log, check } from './util';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\nimport { TextNoteStruct } from './textnote';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (TextDynamics.DEBUG) log('Vex.Flow.TextDynamics', args);\n}\n\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n  /** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\n  static DEBUG: boolean;\n\n  protected sequence: string;\n\n  protected line: number;\n  protected glyphs: Glyph[];\n\n  /** The glyph data for each dynamics letter. */\n  static get GLYPHS(): Record<string, { code: string; width: number }> {\n    return {\n      f: {\n        code: 'dynamicForte',\n        width: 12,\n      },\n      p: {\n        code: 'dynamicPiano',\n        width: 14,\n      },\n      m: {\n        code: 'dynamicMezzo',\n        width: 17,\n      },\n      s: {\n        code: 'dynamicSforzando',\n        width: 10,\n      },\n      z: {\n        code: 'dynamicZ',\n        width: 12,\n      },\n      r: {\n        code: 'dynamicRinforzando',\n        width: 12,\n      },\n    };\n  }\n\n  /**\n   * A `TextDynamics` object inherits from `Note` so that it can be formatted\n   * within a `Voice`.\n   * Create the dynamics marking. `text_struct` is an object\n   * that contains a `duration` property and a `sequence` of\n   * letters that represents the letters to render\n   */\n  constructor(text_struct: TextNoteStruct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    this.render_options = {\n      ...this.render_options,\n      ...{\n        glyph_font_size: 40,\n      },\n    };\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  /** Set the Stave line on which the note should be placed. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Preformat the dynamics text. */\n  preFormat(): this {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach((letter) => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new RuntimeError('Invalid dynamics character: ' + letter);\n\n      const size = check<number>(this.render_options.glyph_font_size);\n      const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  /** Draw the dynamics text on the rendering context. */\n  draw(): void {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.checkStave().getYForLine(this.line + -3);\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.checkContext(), letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests\n\nimport { RuntimeError } from './util';\nimport { Flow } from './flow';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifier } from './stavemodifier';\nimport { TimeSignature } from './timesignature';\nimport { Stave } from './stave';\nimport { RenderContext } from './types/common';\nimport { Barline } from './stavebarline';\n\nexport interface MultimeasureRestRenderOptions {\n  number_of_measures?: number;\n  padding_left?: number;\n  line: number;\n  number_glyph_point: number;\n  show_number: boolean;\n  line_thickness?: number;\n  symbol_spacing?: number;\n  serif_thickness: number;\n  use_symbols: boolean;\n  number_line: number;\n  spacing_between_lines_px: number;\n  semibrave_rest_glyph_scale: number;\n  padding_right?: number;\n}\n\nlet semibrave_rest: {\n  glyph_font_scale: number;\n  glyph_code: string;\n  width: number;\n};\n\nfunction get_semibrave_rest() {\n  if (!semibrave_rest) {\n    const notehead = new NoteHead({ duration: 'w', note_type: 'r' });\n    semibrave_rest = {\n      glyph_font_scale: notehead.render_options.glyph_font_scale,\n      glyph_code: notehead.glyph_code,\n      width: notehead.getWidth(),\n    };\n  }\n  return semibrave_rest;\n}\n\nexport class MultiMeasureRest extends Element {\n  protected render_options: MultimeasureRestRenderOptions;\n  protected xs: { left: number; right: number };\n  protected number_of_measures: number;\n\n  protected stave?: Stave;\n  // Parameters:\n  // * `number_of_measures` - Number of measures.\n  // * `options` - The options object.\n  //   * `show_number` - Show number of measures string or not.\n  //   * `number_line` -  Staff line to render the number of measures string.\n  //   * `number_glyph_point` - Size of the number of measures string glyphs.\n  //   * `padding_left` - Left padding from stave x.\n  //   * `padding_right` - Right padding from stave end x.\n  //   * `line` - Staff line to render rest line or rest symbols.\n  //   * `spacing_between_lines_px` - Spacing between staff lines to\n  // resolve serif height or {2-bar and 4-bar}rest symbol height.\n  //   * `line_thickness` - Rest line thickness.\n  //   * `serif_thickness` - Rest serif line thickness.\n  //   * `use_symbols` - Use rest symbols or not.\n  //   * `symbol_spacing` - Spacing between each rest symbol glyphs.\n  //   * `semibrave_rest_glyph_scale` - Size of the semibrave(1-bar) rest symbol.\n  constructor(number_of_measures: number, options: Partial<MultimeasureRestRenderOptions>) {\n    super();\n    this.setAttribute('type', 'MultiMeasureRest');\n\n    const point = this.musicFont.lookupMetric('digits.point');\n    const fontLineShift = this.musicFont.lookupMetric('digits.shiftLine', 0);\n\n    this.render_options = {\n      show_number: true,\n      number_line: -0.5,\n      number_glyph_point: point, // same as TimeSignature.\n\n      line: 2,\n\n      spacing_between_lines_px: 10, // same as Stave.\n\n      serif_thickness: 2,\n\n      use_symbols: false,\n\n      /* same as NoteHead. */\n      semibrave_rest_glyph_scale: Flow.DEFAULT_NOTATION_FONT_SCALE,\n    };\n    this.render_options = { ...this.render_options, ...options };\n\n    this.render_options.number_line += fontLineShift;\n\n    this.number_of_measures = number_of_measures;\n    this.xs = {\n      left: NaN,\n      right: NaN,\n    };\n  }\n\n  getXs(): { left: number; right: number } {\n    return this.xs;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  checkStave(): Stave {\n    if (!this.stave) {\n      throw new RuntimeError('NoStave', 'No stave attached to instance');\n    }\n    return this.stave;\n  }\n\n  drawLine(ctx: RenderContext, left: number, right: number, sbl: number): void {\n    const y = this.checkStave().getYForLine(this.render_options.line);\n    const padding = (right - left) * 0.1;\n\n    left += padding;\n    right -= padding;\n\n    const serif = {\n      thickness: this.render_options.serif_thickness,\n      height: sbl,\n    };\n    let lineThicknessHalf = sbl * 0.25;\n    if (this.render_options.line_thickness != undefined) {\n      lineThicknessHalf = this.render_options.line_thickness * 0.5;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(left, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - sbl);\n    ctx.lineTo(right, y - sbl);\n    ctx.lineTo(right, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + sbl);\n    ctx.lineTo(left, y + sbl);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  drawSymbols(ctx: RenderContext, left: number, right: number, sbl: number): void {\n    const stave = this.checkStave();\n    const n4 = Math.floor(this.number_of_measures / 4);\n    const n = this.number_of_measures % 4;\n    const n2 = Math.floor(n / 2);\n    const n1 = n % 2;\n\n    const semibrave_rest = get_semibrave_rest();\n    const semibrave_rest_width =\n      semibrave_rest.width * (this.render_options.semibrave_rest_glyph_scale / semibrave_rest.glyph_font_scale);\n    const glyphs = {\n      2: {\n        width: semibrave_rest_width * 0.5,\n        height: sbl,\n      },\n      1: {\n        width: semibrave_rest_width,\n      },\n    };\n\n    let spacing = semibrave_rest_width * 1.35;\n    if (this.render_options.symbol_spacing != undefined) {\n      spacing = this.render_options.symbol_spacing;\n    }\n\n    const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n    let x = left + (right - left) * 0.5 - width * 0.5;\n    const yTop = stave.getYForLine(this.render_options.line - 1);\n    const yMiddle = stave.getYForLine(this.render_options.line);\n    const yBottom = stave.getYForLine(this.render_options.line + 1);\n\n    ctx.save();\n    ctx.setStrokeStyle('none');\n    ctx.setLineWidth(0);\n\n    for (let i = 0; i < n4; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n2; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n1; ++i) {\n      Glyph.renderGlyph(ctx, x, yTop, this.render_options.semibrave_rest_glyph_scale, semibrave_rest.glyph_code);\n      x += glyphs[1].width + spacing;\n    }\n\n    ctx.restore();\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const stave = this.checkStave();\n    const sbl = this.render_options.spacing_between_lines_px;\n\n    let left = stave.getNoteStartX();\n    let right = stave.getNoteEndX();\n\n    // FIXME: getNoteStartX() returns x+5(barline width) and\n    // getNoteEndX() returns x + width(no barline width) by default. how to fix?\n    const begModifiers = stave.getModifiers(StaveModifier.Position.BEGIN);\n    if (begModifiers.length === 1 && begModifiers[0].getCategory() === Barline.CATEGORY) {\n      left -= begModifiers[0].getWidth();\n    }\n\n    if (this.render_options.padding_left != undefined) {\n      left = stave.getX() + this.render_options.padding_left;\n    }\n\n    if (this.render_options.padding_right != undefined) {\n      right = stave.getX() + stave.getWidth() - this.render_options.padding_right;\n    }\n\n    this.xs.left = left;\n    this.xs.right = right;\n\n    if (this.render_options.use_symbols) {\n      this.drawSymbols(ctx, left, right, sbl);\n    } else {\n      this.drawLine(ctx, left, right, sbl);\n    }\n\n    if (this.render_options.show_number) {\n      const timeSpec = '/' + this.number_of_measures;\n      const timeSig = new TimeSignature(timeSpec, 0, false);\n      timeSig.point = this.render_options.number_glyph_point;\n      timeSig.setTimeSig(timeSpec);\n      timeSig.setStave(stave);\n      timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n      timeSig.bottomLine = this.render_options.number_line;\n      timeSig.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { Flow } from './flow';\nimport { FontInfo, RenderContext } from './types/common';\nimport { StaveNote } from './stavenote';\n\nexport interface StaveLineNotes {\n  last_indices: number[];\n  first_indices: number[];\n  last_note: StaveNote;\n  first_note: StaveNote;\n}\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(\n  ctx: RenderContext,\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): void {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(\n  ctx: RenderContext,\n  pt1: { x: number; y: number },\n  pt2: { x: number; y: number },\n  config: RenderOptions\n): void {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = pt1.x;\n  const y1 = pt1.y;\n  const x2 = pt2.x;\n  const y2 = pt2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\ninterface RenderOptions {\n  padding_left: number;\n  padding_right: number;\n  line_width: number;\n  line_dash?: number[];\n  rounded_end: boolean;\n  color?: string;\n  draw_start_arrow: boolean;\n  draw_end_arrow: boolean;\n  arrowhead_length: number;\n  arrowhead_angle: number;\n  text_position_vertical: number;\n  text_justification: number;\n}\n\nexport class StaveLine extends Element {\n  readonly render_options: RenderOptions;\n\n  protected text: string;\n  protected font: FontInfo;\n  protected first_indices!: number[];\n  protected last_indices!: number[];\n  protected notes: StaveLineNotes;\n  protected first_note!: StaveNote;\n  protected last_note!: StaveNote;\n\n  // Text Positioning\n  static readonly TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n  };\n\n  static readonly TextJustification = {\n    LEFT: 1,\n    CENTER: 2,\n    RIGHT: 3,\n  };\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes: StaveLineNotes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n      line_dash: undefined,\n      // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: undefined,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font: FontInfo): this {\n    this.font = font;\n    return this;\n  }\n  // The the annotation for the `StaveLine`\n  setText(text: string): this {\n    this.text = text;\n    return this;\n  }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes: StaveLineNotes): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new RuntimeError('BadArguments', 'Connected notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle(): void {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle(): void {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    const render_options = this.render_options;\n    const color = render_options.color;\n    if (color) {\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw(): this {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position = { x: 0, y: 0 };\n    let end_position = { x: 0, y: 0 };\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = end_position.x - start_position.x;\n      const center_x = delta_x / 2 + start_position.x;\n      x = center_x - text_width / 2;\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x - text_width;\n    }\n\n    // Determine the y value to start the text\n    let y = 0;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.checkStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.checkStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note, NoteStruct } from './note';\nimport { ModifierContext } from './modifiercontext';\n\nexport interface GlyphNoteOptions {\n  ignoreTicks?: boolean;\n  line?: number;\n}\n\nexport class GlyphNote extends Note {\n  protected options: GlyphNoteOptions;\n\n  constructor(glyph: Glyph | undefined, noteStruct: NoteStruct, options?: GlyphNoteOptions) {\n    super(noteStruct);\n    this.options = {\n      ignoreTicks: false,\n      line: 2,\n      ...options,\n    };\n    this.setAttribute('type', 'GlyphNote');\n\n    // Note properties\n    this.ignore_ticks = this.options.ignoreTicks as boolean;\n    if (glyph) {\n      this.setGlyph(glyph);\n    }\n  }\n\n  setGlyph(glyph: Glyph): this {\n    this.glyph = glyph;\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return this.glyph.getBoundingBox();\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext: ModifierContext): this {\n    this.modifierContext = mContext;\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addMember(this.modifiers[i]);\n    }\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  preFormat(): this {\n    if (!this.preFormatted && this.modifierContext) {\n      this.modifierContext.preFormat();\n    }\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  drawModifiers(): void {\n    const ctx = this.checkContext();\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(ctx);\n      modifier.drawWithStyle();\n    }\n    ctx.closeGroup();\n  }\n  draw(): void {\n    const stave = this.checkStave();\n    const ctx = stave.checkContext();\n    this.setRendered();\n    ctx.openGroup('glyphNote', this.getAttribute('id'));\n\n    // Context is set when setStave is called on Note\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(ctx);\n    }\n\n    this.glyph.setStave(stave);\n    this.glyph.setYShift(stave.getYForLine(this.options.line as number) - stave.getYForGlyphs());\n\n    const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n    this.glyph.renderToStave(x);\n    this.drawModifiers();\n    ctx.closeGroup();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { GlyphNote } from './glyphnote';\nimport { Glyph } from './glyph';\nimport { NoteStruct } from './note';\nimport { GlyphNoteOptions } from './glyphnote';\n\nexport class RepeatNote extends GlyphNote {\n  constructor(type: string, noteStruct?: NoteStruct, options?: GlyphNoteOptions) {\n    // Smufl Codes\n    const CODES = {\n      '1': 'repeat1Bar',\n      '2': 'repeat2Bars',\n      '4': 'repeat4Bars',\n      slash: 'repeatBarSlash',\n    } as Record<string, string>;\n\n    super(undefined, { duration: 'q', align_center: type !== 'slash', ...noteStruct }, options);\n    this.setAttribute('type', 'RepeatNote');\n\n    const glyphCode = CODES[type] || 'repeat1Bar';\n    const glyph = new Glyph(glyphCode, this.musicFont.lookupMetric('repeatNote.point', 40), { category: 'repeatNote' });\n    this.setGlyph(glyph);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter, FormatterOptions } from './formatter';\nimport { Note } from './note';\nimport { Stave, StaveOptions } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { RenderContext } from './types/common';\nimport { RuntimeError } from './util';\nimport { Voice } from './voice';\n\nexport interface SystemFormatterOptions extends Partial<FormatterOptions> {\n  alpha: number;\n}\n\nexport interface SystemParams {\n  stave: Stave;\n  voices: Voice[];\n  noJustification?: boolean;\n  options: Partial<StaveOptions>;\n  spaceAbove: number;\n  spaceBelow: number;\n  debugNoteMetrics: boolean;\n}\n\n/**\n * Formatting for systems created/drawn from factory:\n * If width is provided, the system will use the specified width.\n * If noJustification flag is 'true', there is no justification between voices\n * Otherwise, autoWidth defaults to true.\n * If autowidth is true, the system uses format.preCalculateMinWidth\n * for the width of all voices, and default stave padding\n */\nexport interface SystemOptions {\n  factory?: Factory;\n  noPadding: boolean;\n  debugFormatter: boolean;\n  connector?: StaveConnector;\n  spaceBetweenStaves: number;\n  formatIterations: number;\n  autoWidth: boolean;\n  x: number;\n  width: number;\n  y: number;\n  details: SystemFormatterOptions;\n  noJustification: boolean;\n}\n\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n  protected options!: SystemOptions;\n  protected factory!: Factory;\n  protected formatter?: Formatter;\n  protected startX?: number;\n  protected lastY?: number;\n  protected parts: SystemParams[];\n  protected connector?: StaveConnector;\n  protected debugNoteMetricsYs?: { y: number; voice: Voice }[];\n  constructor(params: Partial<SystemOptions> = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  /** Set formatting options. */\n  setOptions(options: Partial<SystemOptions> = {}): void {\n    this.options = {\n      x: 10,\n      y: 10,\n      width: 500,\n      spaceBetweenStaves: 12, // stave spaces\n      autoWidth: false,\n      noJustification: false,\n      debugFormatter: false,\n      formatIterations: 0, // number of formatter tuning steps\n      noPadding: false,\n      ...options,\n      details: {\n        alpha: 0.5, // formatter tuner learning/shifting rate\n        ...options.details,\n      },\n    };\n    if (this.options.noJustification === false && typeof options.width === 'undefined') {\n      this.options.autoWidth = true;\n    }\n\n    this.factory = this.options.factory || new Factory({ renderer: { elementId: null, width: 0, height: 0 } });\n  }\n\n  /** Set associated context. */\n  setContext(context: RenderContext): this {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  /**\n   * Add connector between staves.\n   * @param type see {@link StaveConnector.typeString}\n   */\n  addConnector(type = 'double'): StaveConnector {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  /** Add stave to the system. */\n  addStave(paramsItems: Partial<SystemParams>): Stave {\n    let stave = paramsItems.stave;\n    if (!stave) {\n      stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options: {\n          left_bar: false,\n          ...paramsItems.options,\n        },\n      });\n    }\n\n    const params: SystemParams = {\n      stave,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      ...paramsItems,\n      options: {\n        left_bar: false,\n        ...paramsItems.options,\n      },\n    };\n\n    params.voices.forEach((voice) =>\n      voice\n        .setContext(this.getContext())\n        .setStave(params.stave)\n        .getTickables()\n        .forEach((tickable) => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  /** Format the system. */\n  format(): void {\n    let justifyWidth = 0;\n    const formatter = new Formatter({ ...this.options.details });\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices: Voice[] = [];\n    const debugNoteMetricsYs: { y: number; voice: Voice }[] = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach((part) => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      if (this.options.autoWidth) {\n        part.voices.forEach((voice) => {\n          formatter.joinVoices([voice]);\n        });\n      } else {\n        formatter.joinVoices(part.voices);\n      }\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach((part) => part.stave.setNoteStartX(startX));\n    if (this.options.autoWidth) {\n      justifyWidth = formatter.preCalculateMinTotalWidth(allVoices);\n      this.parts.forEach((part) => {\n        part.stave.setWidth(justifyWidth + Stave.rightPadding + (startX - this.options.x));\n      });\n    } else {\n      justifyWidth = this.options.noPadding\n        ? this.options.width - this.options.x\n        : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n    }\n    formatter.format(allVoices, this.options.noJustification ? 0 : justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune({ alpha: this.options.details.alpha });\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  /** Render the system. */\n  draw(): void {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n      throw new RuntimeError('NoFormated', 'Format must be instatiated before draw');\n    }\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach((d) => {\n      d.voice.getTickables().forEach((note) => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Note } from './note';\nimport { TimeSignature, TimeSignatureInfo } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  protected timeSigInfo: TimeSignatureInfo;\n\n  constructor(timeSpec: string, customPadding?: number) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSigInfo = timeSignature.getInfo();\n    this.setWidth(this.timeSigInfo.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  addToModifierContext(): this {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat(): this {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw(): void {\n    const stave = this.checkStave();\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (!this.timeSigInfo.glyph.getContext()) {\n      this.timeSigInfo.glyph.setContext(ctx);\n    }\n\n    this.timeSigInfo.glyph.setStave(stave);\n    this.timeSigInfo.glyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n    this.timeSigInfo.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\n\nimport { Note } from './note';\nimport { KeySignature } from './keysignature';\n\nexport class KeySigNote extends Note {\n  protected keySignature: KeySignature;\n  constructor(keySpec: string, cancelKeySpec: string, alterKeySpec: string) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'KeySigNote');\n\n    this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  addToModifierContext(): this {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat(): this {\n    this.setPreFormatted(true);\n    this.keySignature.setStave(this.checkStave());\n    this.setWidth(this.keySignature.getWidth());\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkStave().checkContext();\n    this.setRendered();\n    this.keySignature.setX(this.getAbsoluteX());\n    this.keySignature.setContext(ctx);\n    this.keySignature.draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError, log } from './util';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { FontInfo, RenderContext } from './types/common';\nimport { StaveNote } from './stavenote';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (PedalMarking.DEBUG) log('Vex.Flow.PedalMarking', args);\n}\n\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name: string, context: RenderContext, x: number, y: number, point: number): void {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n  /** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\n  static DEBUG: boolean;\n\n  protected line: number;\n  protected type: number;\n  protected custom_depress_text: string;\n  protected custom_release_text: string;\n  protected render_options: {\n    color: string;\n    bracket_height: number;\n    text_margin_right: number;\n    bracket_line_width: number;\n  };\n  protected font: FontInfo;\n  protected notes: StaveNote[];\n\n  /** Glyph data */\n  static readonly GLYPHS: Record<string, { code: string; y_shift: number; x_shift: number }> = {\n    pedal_depress: {\n      code: 'keyboardPedalPed',\n      x_shift: -10,\n      y_shift: 0,\n    },\n    pedal_release: {\n      code: 'keyboardPedalUp',\n      x_shift: -2,\n      y_shift: 3,\n    },\n  };\n\n  /** Pedal type as number. */\n  static readonly type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n  };\n\n  /** Pedal type as string. */\n  static readonly typeString: Record<string, number> = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n  };\n\n  /** Set pedal type. */\n  setType(type: string | number): this {\n    type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n\n    if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  /**\n   * Create a sustain pedal marking. Returns the defaults PedalMarking.\n   * Which uses the traditional \"Ped\" and \"*\"\" markings.\n   */\n  static createSustain(notes: StaveNote[]): PedalMarking {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  /** Create a sostenuto pedal marking */\n  static createSostenuto(notes: StaveNote[]): PedalMarking {\n    const pedal = new PedalMarking(notes);\n    pedal.setType(PedalMarking.type.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  /** Create an una corda pedal marking */\n  static createUnaCorda(notes: StaveNote[]): PedalMarking {\n    const pedal = new PedalMarking(notes);\n    pedal.setType(PedalMarking.type.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  constructor(notes: StaveNote[]) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.type = PedalMarking.type.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      color: 'black',\n    };\n  }\n\n  /**\n   * Set custom text for the `depress`/`release` pedal markings. No text is\n   * set if the parameter is falsy.\n   */\n  setCustomText(depress: string, release?: string): this {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  /** Set the staff line to render the markings on. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Draw the bracket based pedal markings. */\n  drawBracketed(): void {\n    const ctx = this.checkContext();\n    let is_pedal_depressed = false;\n    let prev_x: number;\n    let prev_y: number;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.checkStave().getYForBottomText(this.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      const point = this.musicFont.lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift = prev_is_same ? 5 : 0;\n\n        if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (this.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(this.custom_depress_text).width;\n            ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n            x_shift = text_width / 2 + this.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, point);\n            x_shift = 20 + this.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - this.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - this.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  /**\n   * Draw the text based pedal markings. This defaults to the traditional\n   * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n   */\n  drawText(): void {\n    const ctx = this.checkContext();\n    let is_pedal_depressed = false;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach((note) => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.checkStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(this.line + 3);\n\n      const point = this.musicFont.lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (this.custom_depress_text) {\n          text_width = ctx.measureText(this.custom_depress_text).width;\n          ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (this.custom_release_text) {\n          text_width = ctx.measureText(this.custom_release_text).width;\n          ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  /** Render the pedal marking in position on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.type === PedalMarking.type.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { RuntimeError, log } from './util';\nimport { Flow } from './flow';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\nimport { FontInfo, RenderContext } from './types/common';\nimport { Note } from './note';\n\nexport interface TextBracketParams {\n  start: Note;\n  stop: Note;\n  text: string;\n  superscript: string;\n  position: number | string;\n}\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(\n  // eslint-disable-next-line\n  ...args: any[]) {\n  if (TextBracket.DEBUG) log('Vex.Flow.TextBracket', args);\n}\n\nexport enum TextBracketPosition {\n  TOP = 1,\n  BOTTOM = -1,\n}\n\nexport class TextBracket extends Element {\n  static DEBUG: boolean;\n\n  render_options: {\n    dashed: boolean;\n    color: string;\n    line_width: number;\n    underline_superscript: boolean;\n    show_bracket: boolean;\n    dash: number[];\n    bracket_height: number;\n  };\n\n  protected readonly text: string;\n  protected readonly superscript: string;\n  protected readonly position: TextBracketPosition;\n\n  protected line: number;\n  protected start: Note;\n  protected stop: Note;\n  protected font: FontInfo;\n\n  static get Positions(): typeof TextBracketPosition {\n    L('Positions is deprecated, use Position instead.');\n    return TextBracket.Position;\n  }\n\n  static get Position(): typeof TextBracketPosition {\n    return TextBracketPosition;\n  }\n\n  static get PositionsString(): Record<string, number> {\n    L('PositionsString is deprecated, use PositionString instead.');\n    return TextBracket.PositionsString;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      top: TextBracket.Position.TOP,\n      bottom: TextBracket.Position.BOTTOM,\n    };\n  }\n\n  constructor({ start, stop, text = '', superscript = '', position = TextBracket.Position.TOP }: TextBracketParams) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context: RenderContext): this {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed: boolean, dash?: number[]): this {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font: Partial<FontInfo>): this {\n    // We use Object.assign to support partial updates to the font object\n    this.font = { ...this.font, ...font };\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Draw the octave bracket on the rendering context\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Position.TOP:\n        y = this.start.checkStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Position.BOTTOM:\n        y = this.start.checkStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - main_height / 2.5;\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Position.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Position.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + 1 * this.position,\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\n\nimport { log } from './util';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\nimport { Note } from './note';\n\nfunction L(\n  // eslint-disable-next-line\n  ...args: any []) {\n  if (VibratoBracket.DEBUG) log('Vex.Flow.VibratoBracket', args);\n}\n\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n  /** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\n  static DEBUG: boolean;\n\n  protected line: number;\n\n  protected start?: Note;\n  protected stop?: Note;\n  protected render_options: {\n    vibrato_width: number;\n    wave_height: number;\n    wave_girth: number;\n    harsh: boolean;\n    wave_width: number;\n  };\n\n  /**\n   * Either the stop or start note must be set, or both of them.\n   * An undefined value for the start or stop note indicates that the vibrato\n   * is drawn from the beginning or until the end of the stave accordingly.\n   */\n  constructor(bracket_data: { stop?: Note; start?: Note }) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n      vibrato_width: 0,\n    };\n  }\n\n  /** Set line position of the vibrato bracket. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Set harsh vibrato bracket. */\n  setHarsh(harsh: boolean): this {\n    this.render_options.harsh = harsh;\n    return this;\n  }\n\n  /** Draw the vibrato bracket on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n    const y: number =\n      (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n      (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n      0;\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x: number =\n      (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x: number =\n      (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n      (this.start && this.start.checkStave().getTieEndX() - 10) ||\n      0;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { RuntimeError } from './util';\nimport { StemmableNote } from './stemmablenote';\nimport { Stave } from './stave';\nimport { NoteStruct } from './note';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter: string | NoteStruct) {\n    // Sanity check\n    if (!parameter) {\n      throw new RuntimeError('BadArguments', 'Ghost note must have valid initialization data to identify duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof parameter === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof parameter === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new RuntimeError(\n        'BadArguments',\n        'Ghost note must have valid initialization data to identify ' + 'duration.'\n      );\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest(): boolean {\n    return true;\n  }\n\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n    return this;\n  }\n\n  addToModifierContext(): this {\n    /* intentionally overridden */ return this;\n  }\n\n  preFormat(): this {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw(): void {\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.getContext());\n      modifier.drawWithStyle();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Stave, StaveOptions } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x: number, y: number, width: number, options: Partial<StaveOptions>) {\n    const tab_options = {\n      ...{\n        spacing_between_lines_px: 13,\n        num_lines: 6,\n        top_text_position: 1,\n      },\n      ...options,\n    };\n\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs(): number {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph(): this {\n    this.addClef('tab');\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { RuntimeError, log } from './util';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { ChordSymbol } from './chordsymbol';\n// import { WidthFormatter } from './widthformatter';\nimport { Formatter, FormatterOptions } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest, MultimeasureRestRenderOptions } from './multimeasurerest';\nimport { Renderer } from './renderer';\nimport { Stave, StaveOptions } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote, StaveNoteStruct } from './stavenote';\nimport { GlyphNote, GlyphNoteOptions } from './glyphnote';\nimport { RepeatNote } from './repeatnote';\nimport { StaveConnector } from './staveconnector';\nimport { System, SystemOptions } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet, TupletOptions } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve, CurveOptions } from './curve';\nimport { GraceNote, GraceNoteStruct } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore, EasyScoreOptions } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { KeySigNote } from './keysignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote, TabNoteStruct } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote, TextNoteStruct } from './textnote';\nimport { TextFont, TextFontRegistry } from './textfont';\nimport { FontInfo, RenderContext } from './types/common';\nimport { Note, NoteStruct } from './note';\nimport { Glyph } from './glyph';\nimport { BarlineType } from './stavebarline';\nimport { StemmableNote } from './stemmablenote';\nimport { Element } from './element';\n\nexport interface FactoryOptions {\n  stave: {\n    space: number;\n  };\n  renderer: {\n    elementId: string | null;\n    backend?: number;\n    width: number;\n    height: number;\n    background?: string;\n  };\n  font: {\n    family: string;\n    size: number;\n    weight: string;\n  };\n}\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Factory.DEBUG) log('Vex.Flow.Factory', args);\n}\n\nexport class Factory {\n  static DEBUG: boolean;\n\n  protected options: FactoryOptions;\n\n  protected stave?: Stave;\n  protected context!: RenderContext;\n  protected staves!: Stave[];\n  protected voices!: Voice[];\n  protected renderQ!: Element[];\n  protected systems!: System[];\n\n  constructor(options: Partial<FactoryOptions> = {}) {\n    L('New factory: ', options);\n    const defaults: FactoryOptions = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        family: 'Arial',\n        size: 10,\n        weight: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId: string | null, width = 500, height = 200): Factory {\n    return new Factory({ renderer: { elementId, width, height, backend: Renderer.Backends.SVG } });\n  }\n\n  reset(): void {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = undefined; // current stave\n  }\n\n  getOptions(): FactoryOptions {\n    return this.options;\n  }\n\n  setOptions(options: Partial<FactoryOptions> = {}): void {\n    if (options.stave) this.options.stave = options.stave;\n    if (options.renderer) this.options.renderer = options.renderer;\n    if (options.font) this.options.font = options.font;\n    if (this.options.renderer.elementId !== null) {\n      this.initRenderer();\n    }\n    this.reset();\n  }\n\n  initRenderer(): void {\n    if (!this.options.renderer) throw new RuntimeError('NoRenderer');\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      L(this);\n      throw new RuntimeError('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(\n      elementId as string,\n      backend ?? Renderer.Backends.SVG,\n      width,\n      height,\n      background\n    );\n  }\n\n  getContext(): RenderContext {\n    return this.context;\n  }\n\n  setContext(context: RenderContext): this {\n    this.context = context;\n    return this;\n  }\n\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  getVoices(): Voice[] {\n    return this.voices;\n  }\n\n  // Returns pixels from current stave spacing.\n  space(spacing: number): number {\n    if (!this.options.stave) throw new RuntimeError('NoStave');\n    return this.options.stave.space * spacing;\n  }\n\n  Stave(paramsP: { x?: number; y?: number; width?: number; options?: Partial<StaveOptions> } = {}): Stave {\n    if (!this.options.renderer) throw new RuntimeError('NoRenderer');\n    if (!this.options.stave) throw new RuntimeError('NoStave');\n    const params = {\n      ...{\n        x: 0,\n        y: 0,\n        width: this.options.renderer.width - this.space(1),\n        options: {\n          spacing_between_lines_px: this.options.stave.space,\n        },\n      },\n      ...paramsP,\n    };\n\n    const stave: Stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(paramsP: { x?: number; y?: number; width?: number; options?: Partial<StaveOptions> } = {}): TabStave {\n    if (!this.options.renderer) throw new RuntimeError('NoRenderer');\n    if (!this.options.stave) throw new RuntimeError('NoStave');\n    const params = {\n      ...{\n        x: 0,\n        y: 0,\n        width: this.options.renderer.width - this.space(1),\n        options: {\n          spacing_between_lines_px: this.options.stave.space * 1.3,\n        },\n      },\n      ...paramsP,\n    };\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct: StaveNoteStruct): StaveNote {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GlyphNote(glyph: Glyph, noteStruct: NoteStruct, options: GlyphNoteOptions): GlyphNote {\n    const note = new GlyphNote(glyph, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  RepeatNote(type: string, noteStruct: NoteStruct, options: GlyphNoteOptions): RepeatNote {\n    const note = new RepeatNote(type, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct: string | NoteStruct): GhostNote {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct: TextNoteStruct): TextNote {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params: { type?: BarlineType } = {}): BarNote {\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(paramsP: { type?: string; options?: { size?: string; annotation?: string } } = {}): ClefNote {\n    const params = {\n      ...{\n        type: 'treble',\n        options: {\n          size: 'default',\n          annotation: undefined,\n        },\n      },\n      ...paramsP,\n    };\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(paramsP: { time?: string } = {}): TimeSigNote {\n    const params = {\n      ...{\n        time: '4/4',\n      },\n      ...paramsP,\n    };\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params: { key: string; cancelKey: string; alterKey: string }): KeySigNote {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct: TabNoteStruct): TabNote {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct: GraceNoteStruct): GraceNote {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params: { notes: StemmableNote[]; slur?: boolean }): GraceNoteGroup {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params: { type: string }): Accidental {\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(\n    paramsP: {\n      text?: string;\n      vJustify?: string;\n      hJustify?: string;\n      fontFamily?: string;\n      fontSize?: number;\n      fontWeight?: string;\n    } = {}\n  ): Annotation {\n    const params = {\n      ...{\n        text: 'p',\n        vJustify: 'below',\n        hJustify: 'center',\n        fontFamily: 'Times',\n        fontSize: 14,\n        fontWeight: 'bold italic',\n        options: {},\n      },\n      ...paramsP,\n    };\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  ChordSymbol(\n    paramsP: {\n      vJustify?: string;\n      hJustify?: string;\n      kerning?: boolean;\n      reportWidth?: boolean;\n      fontFamily?: string;\n      fontSize?: number;\n      fontWeight?: string;\n    } = {}\n  ): ChordSymbol {\n    const params = {\n      ...{\n        vJustify: 'top',\n        hJustify: 'center',\n        kerning: true,\n        reportWidth: true,\n      },\n      ...paramsP,\n    };\n\n    const chordSymbol = new ChordSymbol();\n    chordSymbol.setHorizontal(params.hJustify);\n    chordSymbol.setVertical(params.vJustify);\n    chordSymbol.setEnableKerning(params.kerning);\n    chordSymbol.setReportWidth(params.reportWidth);\n    // There is a default font based on the engraving font.  Only set then\n    // font if it is specific, else use the default\n    if (typeof params.fontFamily === 'string' && typeof params.fontSize === 'number') {\n      if (typeof params.fontWeight === 'string')\n        chordSymbol.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n      else chordSymbol.setFont(params.fontFamily, params.fontSize, '');\n    } else if (typeof params.fontSize === 'number') {\n      chordSymbol.setFontSize(params.fontSize);\n    }\n    chordSymbol.setContext(this.context);\n    return chordSymbol;\n  }\n\n  Articulation(paramsP: { type?: string; position?: string | number } = {}): Articulation {\n    const params = {\n      ...{\n        type: 'a.',\n        position: 'above',\n      },\n      ...paramsP,\n    };\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(paramsP: { text?: string; duration?: string; dots?: number; line?: number } = {}): TextDynamics {\n    const params = {\n      ...{\n        text: 'p',\n        duration: 'q',\n        dots: 0,\n        line: 0,\n      },\n      ...paramsP,\n    };\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(paramsP: { number: string; position?: string }): FretHandFinger {\n    const params = {\n      ...{\n        number: '0',\n        position: 'left',\n      },\n      ...paramsP,\n    };\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params: { number: string; position: string }): StringNumber {\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext(): TickContext {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext(): ModifierContext {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params: Partial<MultimeasureRestRenderOptions>): MultiMeasureRest {\n    if (params.number_of_measures === undefined) throw new RuntimeError('NoNumberOfMeasures');\n    const multimeasurerest = new MultiMeasureRest(params.number_of_measures, params);\n    multimeasurerest.setContext(this.context);\n    this.renderQ.push(multimeasurerest);\n    return multimeasurerest;\n  }\n\n  Voice(paramsP: { time?: string; options?: { softmaxFactor: number } } = {}): Voice {\n    const params = {\n      ...{\n        time: '4/4',\n      },\n      ...paramsP,\n    };\n    const voice = new Voice(params.time, params.options);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params: { top_stave: Stave; bottom_stave: Stave; type: string }): StaveConnector {\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter(options: Partial<FormatterOptions> = {}): Formatter {\n    return new Formatter(options);\n  }\n\n  Tuplet(paramsP: { notes?: Note[]; options?: TupletOptions } = {}): Tuplet {\n    const params = {\n      ...{\n        notes: [],\n        options: {},\n      },\n      ...paramsP,\n    };\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params: { notes: StemmableNote[]; options?: { autoStem?: boolean; secondaryBeamBreaks?: number[] } }): Beam {\n    const beam = new Beam(params.notes, params.options?.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options?.secondaryBeamBreaks ?? []);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params: { from: Note; to: Note; options: Partial<CurveOptions> }): Curve {\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params: {\n    from: Note;\n    to: Note;\n    first_indices: [0];\n    last_indices: [0];\n    text?: string;\n    options?: { direction?: number };\n  }): StaveTie {\n    const tie = new StaveTie(\n      {\n        first_note: params.from,\n        last_note: params.to,\n        first_indices: params.first_indices,\n        last_indices: params.last_indices,\n      },\n      params.text\n    );\n\n    if (params.options?.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params: {\n    from: StaveNote;\n    to: StaveNote;\n    first_indices: number[];\n    last_indices: number[];\n    options?: { text?: string; font?: FontInfo };\n  }): StaveLine {\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options?.text) line.setText(params.options.text);\n    if (params.options?.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params: {\n    from: Note;\n    to: Note;\n    options: {\n      harsh?: boolean;\n      line?: number;\n    };\n  }): VibratoBracket {\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params: {\n    from: Note;\n    to: Note;\n    text: string;\n    options: {\n      superscript: string;\n      position: string;\n      line?: number;\n      font?: Partial<FontInfo>;\n    };\n  }): TextBracket {\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params: Partial<SystemOptions> = {}): System {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params: EasyScoreOptions = {}): EasyScore {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(paramsP: { notes?: StaveNote[]; options?: { style: string } } = {}): PedalMarking {\n    const params = {\n      ...{\n        notes: [],\n        options: {\n          style: 'mixed',\n        },\n      },\n      ...paramsP,\n    };\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setType(PedalMarking.typeString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(paramsP: { notes?: Note[] } = {}): NoteSubGroup {\n    const params = {\n      ...{\n        notes: [],\n      },\n      ...paramsP,\n    };\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  TextFont(params: TextFontRegistry): TextFont {\n    params.factory = this;\n    const textFont = new TextFont(params);\n    return textFont;\n  }\n\n  draw(): void {\n    this.systems.forEach((i) => i.setContext(this.context).format());\n    this.staves.forEach((i) => i.setContext(this.context).draw());\n    this.voices.forEach((i) => i.setContext(this.context).draw());\n    this.renderQ.forEach((i) => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach((i) => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { TabNote, TabNoteStruct } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY(): string {\n    return 'gracetabnotes';\n  }\n\n  constructor(note_struct: TabNoteStruct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    this.render_options = {\n      ...this.render_options,\n      ...{\n        // vertical shift from stave line\n        y_shift: 0.3,\n        // grace glyph scale\n        scale: 0.6,\n        // grace tablature font\n        font: '7.5pt Arial',\n      },\n    };\n\n    this.updateWidth();\n  }\n\n  getCategory(): string {\n    return GraceTabNote.CATEGORY;\n  }\n\n  draw(): void {\n    super.draw();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { RuntimeError } from './util';\nimport { Music, KeyParts } from './music';\n\nexport class KeyManager {\n  protected music: Music;\n  // all attributes below are initialised in setKey which calls reset in the constructor\n  protected keyParts!: KeyParts;\n  protected keyString!: string;\n  protected key!: string;\n  protected scale!: number[];\n  protected scaleMap!: Record<string, string>;\n  protected scaleMapByValue!: Record<number, string>;\n  protected originalScaleMapByValue!: Record<number, string>;\n\n  constructor(key: string) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key: string): this {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey(): string {\n    return this.key;\n  }\n\n  reset(): this {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key: string): {\n    note: string;\n    accidental?: string;\n    change?: boolean;\n  } {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note: string): {\n    note: string;\n    accidental?: string;\n    change: boolean;\n  } {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        note: scaleNote,\n        accidental: parts.accidental,\n        change: false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        note: valueNote,\n        accidental: this.music.getNoteParts(valueNote).accidental,\n        change: false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        note: originalValueNote,\n        accidental: this.music.getNoteParts(originalValueNote).accidental,\n        change: true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        note: modparts.root,\n        accidental: undefined,\n        change: true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      accidental: parts.accidental,\n      change: true,\n    };\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { RuntimeError } from './util';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { RenderContext } from './types/common';\n\nexport interface StaveHairpinRenderOptions {\n  right_shift_ticks: number;\n  left_shift_ticks: number;\n  left_shift_px: number;\n  right_shift_px: number;\n  height: number;\n  y_shift: number;\n}\n\nexport class StaveHairpin extends Element {\n  protected hairpin: number;\n\n  protected position: number;\n  protected render_options: StaveHairpinRenderOptions;\n  protected notes: Record<string, Note>;\n  protected first_note?: Note;\n  protected last_note?: Note;\n\n  static readonly type = {\n    CRESC: 1,\n    DECRESC: 2,\n  };\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(\n    ctx: RenderContext,\n    formatter: {\n      pixelsPerTick: number;\n    },\n    notes: Record<string, Note>,\n    type: number,\n    position: number,\n    options: StaveHairpinRenderOptions\n  ): void {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px,\n      right_shift_ticks: 0,\n      left_shift_ticks: 0,\n    };\n\n    new StaveHairpin(\n      {\n        first_note: notes.first_note,\n        last_note: notes.last_note,\n      },\n      type\n    )\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes: Record<string, Note>, type: number) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n      right_shift_ticks: 0,\n      left_shift_ticks: 0,\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position: number): this {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options: StaveHairpinRenderOptions): this {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes: Record<string, Note>): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params: {\n    first_x: number;\n    last_x: number;\n    first_y: number;\n    last_y: number;\n    staff_height: number;\n  }): void {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n    if (!firstNote || !lastNote) throw new RuntimeError('NoNote', 'Notes required to draw');\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n      last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n      staff_height: firstNote.checkStave().getHeight(),\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { RuntimeError } from './util';\nimport { TabTie } from './tabtie';\nimport { TabNote } from './tabnote';\nimport { TieNotes } from './types/common';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP(): number {\n    return 1;\n  }\n\n  static get SLIDE_DOWN(): number {\n    return -1;\n  }\n\n  static createSlideUp(notes: TieNotes): TabSlide {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes: TieNotes): TabSlide {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes: TieNotes, direction?: number) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = (notes.first_note as TabNote).getPositions()[0].fret;\n      const last_fret = (notes.last_note as TabNote).getPositions()[0].fret;\n\n      direction = parseInt(first_fret, 10) > parseInt(last_fret, 10) ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n    }\n\n    this.direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ family: 'Times', size: 10, weight: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params: {\n    direction: number;\n    first_x_px: number;\n    last_x_px: number;\n    last_ys: number[];\n    first_ys: number[];\n  }): void {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new RuntimeError('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.checkContext();\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = params.direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new RuntimeError('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.notes.first_indices.length; ++i) {\n      const slide_y = first_ys[this.notes.first_indices[i]] + this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + 3 * direction);\n      ctx.lineTo(last_x_px, slide_y - 3 * direction);\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\n\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Stem } from './stem';\n\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n  protected readonly code: string;\n  protected readonly num: number;\n\n  /** Tremolos category string. */\n  static get CATEGORY(): string {\n    return 'tremolo';\n  }\n\n  /**\n   * Constructor.\n   * @param num number of bars\n   */\n  constructor(num: number) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'tremolo1';\n  }\n\n  /** Get element CATEGORY string. */\n  getCategory(): string {\n    return Tremolo.CATEGORY;\n  }\n\n  /** Draw the tremolo on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const stemDirection = note.getStemDirection();\n\n    const start = note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    const isGraceNote = note.getCategory() === GraceNote.CATEGORY;\n    const scale = isGraceNote ? GraceNote.SCALE : 1;\n    const category = `tremolo.${isGraceNote ? 'grace' : 'default'}`;\n\n    const y_spacing = this.musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n    const height = this.num * y_spacing;\n    let y = note.getStemExtents().baseY - height;\n\n    if (stemDirection < 0) {\n      y += this.musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n    } else {\n      y += this.musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n    }\n\n    const fontScale = this.musicFont.lookupMetric(`${category}.point`);\n\n    x += this.musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category });\n      y += y_spacing;\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError } from './util';\nimport { Flow } from './flow';\n\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n  protected tuningValues: number[] = [];\n\n  static get names(): Record<string, string> {\n    return {\n      standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n      dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n      dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n      eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  /**\n   * Constructor.\n   * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n   */\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  /** Return the note number associated to the note string. */\n  noteToInteger(noteString: string): number {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  /**\n   * Set tuning identified by tuning name (eg. 'dagdad')\n   * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n   */\n  setTuning(tuningString: string): void {\n    if (Tuning.names[tuningString]) {\n      tuningString = Tuning.names[tuningString];\n    }\n\n    this.tuningValues = [];\n\n    const keys = tuningString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n    }\n\n    for (let i = 0; i < keys.length; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  /** Return the note number associated with a tablature string. */\n  getValueForString(stringNum: string | number): number {\n    const s = Number(stringNum);\n    if (s < 1 || s > this.tuningValues.length) {\n      throw new RuntimeError(\n        'BadArguments',\n        `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  /** Return the note number associated with a tablature string and fret. */\n  getValueForFret(fretNum: string | number, stringNum: string | number): number {\n    const stringValue = this.getValueForString(stringNum);\n    const f = Number(fretNum);\n\n    if (f < 0) {\n      throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n    }\n\n    return stringValue + f;\n  }\n\n  /** Return the note string associated with tablature string and fret. */\n  getNoteForFret(fretNum: string | number, stringNum: string | number): string {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return `${Flow.integerToNote(value)}/${octave}`;\n  }\n}\n","import { Tables } from './tables';\n\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Barline } from './stavebarline';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { ChordSymbol } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, Fonts } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Repetition } from './staverepetition';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFont } from './textfont';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { Volta } from './stavevolta';\n\nexport const Flow = {\n  ...Tables,\n\n  Accidental,\n  Annotation,\n  Articulation,\n  Barline,\n  BarNote,\n  Beam,\n  Bend,\n  BoundingBox,\n  ChordSymbol,\n  Clef,\n  ClefNote,\n  Crescendo,\n  Curve,\n  Dot,\n  EasyScore,\n  Element,\n  Factory,\n  Font,\n  Fonts,\n  Formatter,\n  Fraction,\n  FretHandFinger,\n  GhostNote,\n  Glyph,\n  GlyphNote,\n  GraceNote,\n  GraceNoteGroup,\n  GraceTabNote,\n  KeyManager,\n  KeySignature,\n  KeySigNote,\n  Modifier,\n  ModifierContext,\n  MultiMeasureRest,\n  Music,\n  Note,\n  NoteHead,\n  NoteSubGroup,\n  Ornament,\n  Parser,\n  PedalMarking,\n  Registry,\n  Renderer,\n  RepeatNote,\n  Repetition,\n  Stave,\n  StaveConnector,\n  StaveHairpin,\n  StaveLine,\n  StaveModifier,\n  StaveNote,\n  StaveTempo,\n  StaveText,\n  StaveTie,\n  Stem,\n  StringNumber,\n  Stroke,\n  System,\n  TabNote,\n  TabSlide,\n  TabStave,\n  TabTie,\n  TextBracket,\n  TextDynamics,\n  TextFont,\n  TextNote,\n  TickContext,\n  TimeSignature,\n  TimeSigNote,\n  Tremolo,\n  Tuning,\n  Tuplet,\n  Vibrato,\n  VibratoBracket,\n  Voice,\n  Volta,\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nimport { log, RuntimeError } from './util';\nimport { Flow } from './flow';\n\nexport const Vex = {\n  Flow: Flow,\n\n  forEach:\n    // eslint-disable-next-line\n  (a: any[], fn: any) => {\n      for (let i = 0; i < a.length; i++) {\n        fn(a[i], i);\n      }\n    },\n\n  // Take `arr` and return a new list consisting of the sorted, unique,\n  // contents of arr. Does not modify `arr`.\n  SortAndUnique:\n    // eslint-disable-next-line\n    (arr: any[], cmp: any, eq: any) => {\n      if (arr.length > 1) {\n        const newArr = [];\n        let last;\n        arr.sort(cmp);\n\n        for (let i = 0; i < arr.length; ++i) {\n          if (i === 0 || !eq(arr[i], last)) {\n            newArr.push(arr[i]);\n          }\n          last = arr[i];\n        }\n\n        return newArr;\n      } else {\n        return arr;\n      }\n    },\n\n  // Check if array `a` contains `obj`.\n  Contains:\n    // eslint-disable-next-line\n    (a: any[], obj: any) => {\n      let i = a.length;\n      while (i--) {\n        if (a[i] === obj) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n  // Get the 2D Canvas context from DOM element `canvas_sel`.\n  getCanvasContext: (canvas_sel: string): RenderingContext => {\n    if (!canvas_sel) {\n      throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n    }\n\n    const canvas = document.getElementById(canvas_sel) as HTMLCanvasElement;\n    if (!(canvas && canvas.getContext)) {\n      throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n    }\n\n    return canvas.getContext('2d') as RenderingContext;\n  },\n\n  // Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\n  BM:\n    // eslint-disable-next-line\n  (s: any, f: any) => {\n      const start_time = new Date().getTime();\n      f();\n      const elapsed = new Date().getTime() - start_time;\n      log(s, elapsed + 'ms');\n    },\n\n  // Get stack trace.\n  StackTrace: (): string | undefined => {\n    const err = new Error();\n    return err.stack;\n  },\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"vexflow-font-\" + {\"289\":\"custom\",\"347\":\"bravura\",\"571\":\"gonville\",\"623\":\"petaluma\"}[chunkId] + \"-min.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = this[\"webpackChunkVex\"] = this[\"webpackChunkVex\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { Vex } from './src/vex';\n            Vex.Flow.VERSION = \"3.0.9\";\n            Vex.Flow.BUILD = \"cef239628fa6fbc887a4c8606f86066334d8954f\";","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\n\nexport default Vex;\n"],"names":["root","factory","exports","module","define","amd","this","inProgress","dataWebpackPrefix","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","P","Promise","resolve","reject","fulfilled","value","step","generator","next","e","rejected","result","done","then","thisArg","_arguments","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","push","body","code","message","Error","undefined","x","RuntimeError","args","line","slice","join","window","console","log","block","err","stack","mid_line","a","parseInt","text","numerator","denominator","set","GCD","Number","isNaN","LCM","Fraction","LCMM","arg0","shift","simplify","u","gcd","add","param1","param2","otherNumerator","otherDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","quotient","Math","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","q","parse","str","split","id","type","class","index","Index","getDefaultRegistry","Registry","defaultRegistry","enableDefaultRegistry","registry","disableDefaultRegistry","clear","setIndexValue","name","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","getElementsByAttribute","attribute","index_attr","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","attrs","Element","newID","el","classes","rendered","fontStack","Flow","DEFAULT_FONT_STACK","musicFont","ID","setFontStack","getFontStack","setStyle","style","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","addClass","removeClass","isRendered","setRendered","getAttributes","oldID","getContext","setContext","getBoundingBox","boundingBox","x1","y1","x2","y2","NaN","addPoint","getX1","getY1","width","height","noOp","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","w","h","that","BoundingBox","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","ctx","new_x","new_y","new_w","max","new_h","rect","stroke","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","doOutline","point","options","bbox","topGlyphs","botGlyphs","scale","x_shift","y_shift","originShift","setOptions","reset","lookupFontMetric","font","category","key","defaultValue","lookupMetric","lookupGlyph","glyph","getGlyphs","loadMetrics","Glyph","x_min","x_max","ha","o","cached_outline","renderGlyph","x_pos","y_pos","val","params","metrics","getResolution","renderOutline","beginPath","moveTo","m","bind","l","lineTo","quadraticCurveTo","bezierCurveTo","fill","getOutlineBoundingBox","bboxComp","BoundingBoxComputation","z","getCode","setPoint","setStave","stave","setXShift","setYShift","getMetrics","setOriginX","xShift","setOriginY","yShift","setOrigin","render","renderToStave","getYForGlyphs","fontData","fontDataMetrics","default","loadBravura","loadCustom","loadGonville","loadPetaluma","getName","resolution","parts","getFontData","glyphs","Fonts","Bravura","Font","Gonville","Leland","Petaluma","Custom","customNoteHeads","D0","D1","D2","D3","T0","T1","T2","T3","X0","X1","X2","X3","S1","S2","R1","R2","RESOLUTION","durations","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","props","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","keyProperties","octave_shift","pieces","toUpperCase","C","int_val","CN","accidental","CB","CBB","D","DN","DB","DBB","E","EN","EB","EBB","F","FN","FB","FBB","G","GN","GB","GBB","A","AN","AB","ABB","B","BN","BB","BBB","R","rest","X","octave","shift_right","Tables","int_value","extraProps","glyph_name","displaced","integerToNote","integer","noteValue","tabToGlyph","fret","shift_y","glyphMetrics","textWidth","getWidth","articulationCodes","artic","between_lines","av","aboveCode","belowCode","ao","ah","am","accidentalMap","accidentalCodes","acc","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","keySignature","spec","keySpec","num","Am","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","Em","Bm","notes","acc_list","unicode","sharp","fromCharCode","flat","natural","triangle","degrees","circle","sanitizeDuration","duration","alias","durationToFraction","durationToNumber","durationToTicks","ticks","getGlyphProps","common","stem","stem_offset","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","code_head","r","position","beam_count","code_flag_upstem","code_flag_downstem","glyphTypeProperties","customGlyphTypeProperties","validTypes","TIME4_4","num_beats","beat_value","canonical_notes","unison","note","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","M","Music","scales","isValidNoteValue","isValidIntervalValue","interval","diatonic_intervals","getNoteParts","noteString","toLowerCase","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","intervals","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","NUM_TONES","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySigParts","scaleName","scaleTypes","keySigString","noteLocation","root_indices","scaleMap","roots","rootName","noteName","ModifierPosition","text_line","Modifier","Position","LEFT","spacingFromNextModifier","center","CENTER","above","ABOVE","below","BELOW","left","right","RIGHT","getCategory","CATEGORY","setWidth","getNote","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifier_context","checkModifierContext","setModifierContext","getPosition","setPosition","PositionString","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","getXShift","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","forEach","subNote","subTickContext","setXOffset","L","Stem","DEBUG","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","UP","HEIGHT","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","WIDTH","stem_x","stem_y","y_base_offset","DOWN","stemletYOffset","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","some","hasBeam","ratioed","location","Tuplet","LOCATION_TOP","Formatter","AlignRestsToNotes","resolveGlyphs","attach","setTuplet","detach","resetTuplet","setBracketed","setRatioed","setTupletLocation","LOCATION_BOTTOM","getNotes","getNoteCount","msg","warn","getBeatsOccupied","getNotesOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","first_note","maxTupletCount","countTuplets","minTupletCount","tupletStack","filter","tuplet","tupletCount","getYPosition","nested_tuplet_y_offset","NESTING_OFFSET","checkStave","getYForLine","top_y","getStemDirection","getStemExtents","bottom_y","last_note","getTieLeftX","getTieRightX","getStemX","addGlyphWidth","check","reduce","notation_start_x","line_width","fillRect","shiftY","x_offset","colon_x","colon_radius","arc","PI","closePath","intrinsicTicks","tickMultiplier","modifiers","preFormatted","postFormatted","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","getTicks","shouldIgnoreTicks","setIgnoreTicks","modifierContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","voice","setVoice","getTuplet","noteCount","notesOccupied","indexOf","splice","applyTickMultiplier","addToModifierContext","mc","addModifier","mod","getModifiers","setTickContext","tc","preFormat","postFormat","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","noteStruct","initStruct","Note","parseNoteStruct","JSON","stringify","keyProps","dots","noteType","customTypes","duration_override","customGlyphs","playNote","leftDisplacedHeadPx","rightDisplacedHeadPx","render_options","annotation_spacing","glyph_font_scale","stroke_px","plotMetrics","yPos","xStart","getAbsoluteX","xPre1","xAbs","xPost1","notePx","xPost2","xEnd","xFreedomRight","xWidth","setFont","fillText","round","color","yy","drawDot","spaceDeviation","prefix","parseDuration","durationString","durationProps","currentTicks","getPlayNote","setPlayNote","isRest","addStroke","setPreFormatted","setYs","getLeftDisplacedHeadPx","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","getLineNumber","isTopNote","getLineForRest","getGlyph","getGlyphWidth","getYs","getYForTopText","getDuration","isDotted","hasStem","getNoteType","getBeam","beam","checkBeam","setBeam","modifier","getModifierStartXY","state","left_shift","right_shift","glyphWidth","glyphPx","getNoteStartX","tieStartX","tieEndX","Tickable","note_struct","getStem","checkStem","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyph","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","textLine","extents","getYForBottomText","drawStem","stemOptions","NoteHead","head_options","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","StaveNote","STEM_UP","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","spacing","getSpacingBetweenLines","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","breve_lines","drawSlashNoteHead","shiftRestVertical","dir","delta","isrest","maxLine","minLine","setKeyLine","getKeyLine","ledgerLineStyle","use_default_head_x","note_heads","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","auto_stem","autoStem","format","formatByY","notesList","getKeyProps","minL","stemDirection","stemMax","stemMin","maxL","voice_shift","getVoiceShiftWidth","is_displaced","voices","noteU","noteM","noteL","stemDelta","voiceXShift","lineSpacing","midLine","centerRest","hasStave","topNote","bottomNote","topKeys","bottomKeys","topNoteBottomY","bottomNoteTopY","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","head","calcNoteDisplacements","start","end","getKeys","lastLine","lineDiff","noteProps","notehead","calculateOptimalStemDirection","sort","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","forceFlagRight","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","flagStyle","getFlagStyle","setKeyStyle","mContext","addMember","addAccidental","addArticulation","articulation","addAnnotation","annotation","addDot","dot","Dot","setDotShiftY","addDotToAll","getAccidentals","getMembers","getDots","noteHeadPadding","minNoteheadPadding","flagWidth","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","getNumLines","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","drawModifiers","openGroup","noteheadStyle","closeGroup","hasNoBeam","drawFlag","noteStemHeight","flagX","flagY","pointerBBox","drawNoteHeads","super_stem_extension","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","StemmableNote","GraceNote","SCALE","LEDGER_LINE_OFFSET","slash","slur","ret","staveNoteScale","getStaveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","slope","beam_angle","atan","iPointOnBeam","cos","sin","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","getBeamYToDraw","radius","dot_list","max_shift_map","TabNote","note_id","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","lineSpace","getOptions","spacing_between_lines_px","tab_struct","draw_stem","ghost","positions","draw_dots","draw_stem_through_stave","updateWidth","setGhost","setRawFont","measureText","getStemY","getPositions","stemDownLine","stemStartLine","flag_x","flag_y","flag_code","drawStemThrough","stem_through","stem_lines","unused_strings","up_stem","down_stem","line_spacing","total_lines","strings","containsLastString","containsFirstString","line_ys","string","isTopBound","isBottomBound","getPartialStemLines","num_lines","strings_used","group","getUnusedStringGroups","bounds","drawPositions","tab_x","clearRect","render_stem","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_BOTH","memo","break_on_indices","beam_width","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","partial_beam_length","flat_beams","min_flat_beam_offset","getDefaultBeamGroups","time_sig","groups","beatTotal","beatValue","applyAndGetBeams","Beam","generateBeams","getTickables","config","nextGroup","currentGroupTotalTicks","sanitizedGroups","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","unprocessedNote","vf_notes","ticksPerGroup","totalTicks","unbeamable","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","findFirstNote","applyStemDirection","uniqueTuplets","beamedNoteGroups","allTuplets","noteTuplet","beams","secondary_breaks","secondary_break_ticks","flat_beam_offset","beamCount","breakSecondaryAt","indices","getSlopeY","first_x_px","first_y_px","calculateSlope","firstNote","initialSlope","lastNote","firstStemTipY","firstStemX","getStemSlope","increment","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","stemTipY","diff","idealSlope","cost","calculateFlatSlope","total","extremeY","extremeBeamCount","currentExtreme","offset","extremeTest","newOffset","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","totalBeamWidth","lookupBeamDirection","prev_tick","tick","next_tick","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","prev_note","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","VoiceMode","time","softmaxFactor","resolutionMultiplier","tickables","ticksUsed","smallestTickCount","largestTickWidth","mode","Voice","Mode","STRICT","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","reCalculateExpTicksUsed","expTicksUsed","tickable","softmax","tickValue","addTickable","addTickables","tickable_bb","drawBoldDoubleLine","topX","botY","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","thickness","DOUBLE","family","size","weight","texts","setType","typeString","SINGLE_RIGHT","NONE","setText","content","shift_x","THIN_DOUBLE","attachment_height","SINGLE","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","text_width","getBottomLineY","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","finger","nums","nums_list","shiftLeft","shiftRight","pos","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","numWidth","easyScoreHook","builder","fingerings","fingeringString","trim","number","getFactory","Fingering","fingering","FretHandFinger","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","dot_x","dot_y","formatter","NoteSubGroup","joinVoices","getMinTotalWidth","all_voices","font_scale","stroke_spacing","strokes","strokeList","strokeShift","Stroke","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_shift_x","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","vexFlowCanvasContext","canvas","CanvasContext","SanitizeCanvasDims","CANVAS_BROWSER_SIZE_LIMIT","cls","child","setBackgroundFillStyle","background_fillStyle","blur","setLineCap","capType","lineCap","setLineDash","dash","lineDash","resize","cpx","cpy","startAngle","endAngle","antiClockwise","glow","attrNamesToIgnoreMap","path","element","fontSize","svg","appendChild","parent","pen","defaultAttributes","attributes","background_attributes","shadow_attributes","state_stack","iePolyfill","svgElementType","document","createElementNS","navigator","ie","test","userAgent","bold","italic","replace","fontAttributes","fontArray","applyAttributes","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","propertyName","setAttributeNS","lastChild","removeChild","rectangle","normalizeAngle","angle","tmp","arcHelper","largeArcFlag","sweepFlag","sa","num_paths","toFixed","opacity","txt","getBBox","textContent","ieMeasureTextFix","widthCorrection","savedState","elementId","backend","Renderer","Backends","CANVAS","bolsterCanvasContext","SVG","SVGContext","buildContext","background","renderer","lastContext","getCanvasContext","getSVGContext","USE_CANVAS_PROXY","methodName","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","atan2","idx","dashLength","nx","ny","devicePixelRatio","LineEndType","string_number","dashed","leg","shift_left","num_shiftR","x_widthL","x_widthR","num_width","StringNumber","setLineEndType","setStringNumber","setLastNote","setDashed","stem_ext","bottom","STEM_DOWN","len","pattern","Articulation","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveNote","noteCategory","articulations","getIncrement","top_text_line","maxWidth","articWidth","articNameToCode","staccato","tenuto","accent","articString","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","noteLine","articLine","snappedLine","snapLineToStaff","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","tContexts","getNextContext","tContext","contexts","getTickID","getXBase","setXBase","getXOffset","setPadding","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickablesForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","Ornament","delayed","accidentalLowerPadding","accidentalUpperPadding","ornament","adjustForStemDirection","reportedWidth","stemUpYOffset","ornamentAlignWithNoteHead","yOffset","ornamentNoteTransition","ornaments","ornamentRelease","ornamentAttack","ornamentArticulation","jazzOrnaments","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","classString","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","TickContext","smufl","TextFont","Justify","VerticalJustify","fontCacheKey","maxSizeGlyph","getFontDataByName","updateParams","registerFont","updateCacheKey","debug","registryInstance","RobotoSlabTextMetrics","fontFamily","serifs","monospaced","superscriptOffset","subscriptOffset","description","PetalumaScriptTextMetrics","getFontFamilies","hash","returnedFonts","fontRegistry","attr","fontWeightToBold","fw","fontStyleToItalic","fs","textWidthCacheInstance","getTextFontFromVexFontData","fd","selectedFont","fallback","candidates","families","famliy","perfect","find","ok","setFontSize","fontName","overwrite","exists","td","getMetricForCharacter","pointsToPixels","getWidthForCharacter","metric","advanceWidth","getWidthForString","textWidthCache","Annotation","justification","vert_justification","TOP","annotations","testWidth","textFont","numLines","maxHeight","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","JustifyString","text_height","has_stem","BOTTOM","stem_base","yt","centerStem","CENTER_STEM","top","ChordSymbol","symbolBlocks","horizontal","horizontalJustify","vertical","verticalJustify","useKerning","reportWidth","chordSymbolMetrics","global","superSubRatio","noFormat","getMetricForGlyph","glyphCode","getYOffsetForText","ix","y_max","engravingFontResolution","getWidthForGlyph","getYShiftForGlyph","getXShiftForGlyph","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","instances","nonSuperWidth","reportedWidths","instance","fontAdj","glyphAdj","lineSpaces","vAlign","symbol","sup","isSuperscript","sub","isSubscript","subAdj","adj","symbolType","symbolTypes","GLYPH","TEXT","over","spacingBetweenBlocks","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","setReportWidth","symIx","barIx","findIndex","xoff","yoff","accum","getKerningAdjustment","kernConst","prevSymbol","rv","preKernUpper","preKernLower","xx","symbolModifier","symbolModifiers","SUPERSCRIPT","getSymbolBlock","parameters","glyphArgs","twidth","LINE","addSymbolBlock","addText","addTextSuperscript","addTextSubscript","SUBSCRIPT","addGlyphSuperscript","addGlyph","addGlyphOrText","addLine","setVertical","verticalJustifyString","setHorizontal","horizontalJustifyString","sp","curY","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","release","phrase","line_style","bend_width","release_width","Bend","bends","last_width","getText","ctxThat","total_width","additional_width","draw_width","bend_height","annotation_y","renderRelease","renderArrowHead","renderText","render_x","cp_x","cp_y","last_bend","last_bend_draw_width","last_drawn_width","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","Vibrato","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","PREFORMAT","Accidental","GraceNoteGroup","POSTFORMAT","member","getLeftShift","getState","formatted","StaveModifierPosition","StaveModifier","placeGlyphOnLine","customShift","getPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","BarlineType","TYPE","widths","END","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","repeatBegin","repeatEnd","repeatBoth","Barline","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","getTopLineTopY","getBottomLineBottomY","begin","dot_radius","symbol_type","Repetition","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","draw_coda","text_x","symbol_x","vertical_bar_width","modifierWidth","section","StaveSection","setStaveSection","tempo","StaveTempo","setTempo","bpm","stem_height","Justification","superscript","subscript","struct","TextNote","GLYPHS","smooth","segno","mordent_upper","mordent_lower","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","StaveText","setStaveText","Clef","types","tab","attachment","cancelKeySpec","alterKeySpec","accList","setKeySig","glyphFontScale","xPositions","paddingForced","KeySignature","convertToGlyph","nextAcc","accGlyphData","extraWidth","accidentalSpacing","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","alterKey","convertToAlterAccList","cancelAccList","firstAccidentalType","getEndClef","getClef","timeSignature","topDigits","botDigits","topWidth","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","topLine","bottomLine","timeSpec","customPadding","validate_args","fontLineShift","parseTimeSpec","TimeSignature","numbers","assertIsValidFraction","makeTimeSignatureGlyph","TimeSignatureGlyph","getInfo","setTimeSig","VoltaType","volta","Volta","vert_height","BEGIN_END","end_x","measure","endClef","glyph_spacing_px","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","getDefaultLedgerLineStyle","visible","setNoteStartX","begBarline","getNoteEndX","getTieStartX","getTieEndX","setNumLines","lines","setMeasure","getModifierXShift","setRepetitionTypeLeft","setRepetitionTypeRight","setVoltaType","number_t","setSection","headroom","getLineForY","setBegBarType","setEndBarType","setClef","clefSpec","clefs","addClef","setEndClef","setKeySignature","keySignatures","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","barlines","keysignatures","timesignatures","lastBarlineIdx","drawVertical","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","createContexts","makeContext","addToContext","tickToContextMap","tickList","integerTicks","newContext","array","list","lookAhead","nextRestLine","formatterOptions","globalSoftmax","maxIterations","justifyWidth","totalCost","totalShift","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","modifierContexts","contextGaps","gaps","lossHistory","SimpleFormat","paddingBetween","accumulator","plotDebugging","xPos","stavePadding","gap","FormatAndDraw","auto_beam","align_rests","formatToStave","FormatAndDrawTab","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","estimateJustifiedMinWidth","preCalculateMinTotalWidth","alignRests","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","tt","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","contextArray","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","maxNegativeShiftPx","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","targetWidth","actualWidth","paddingMax","paddingMin","maxX","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","postFormatContexts","optionsParam","Stave","defaultPadding","cp1","cp2","first_x_shift","last_x_shift","tie_spacing","setNotes","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","last_y_px","top_cp_y","bottom_cp_y","center_x","createHammeron","TabTie","createPulloff","StaveTie","grace_notes","show_slur","slur_y_shift","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","beamNotes","getGraceNotes","graceNote","TieClass","parenLeftPadding","parenRightPadding","cautionary","noteheadAccidentalPadding","leftShift","additionalPadding","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","endCase","groupMember","patternLength","collisionDetected","columnWidths","columnXOffsets","accCount","lastAccOnLine","clearance","clearanceRequired","collision","applyAccidentals","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","modifiedPitches","processNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","accX","accY","BarNote","barline","clef_obj","ClefNote","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","from","to","Curve","NEAR_HEAD","position_end","invert","cps","nearHead","nearTop","NEAR_TOP","renderCurve","first_x","first_y","last_x","last_y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","oneOrMore","zeroOrMore","matches","run","EasyScore","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","chord","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","Piece","addNote","notePiece","fn","setId","setClass","defaults","throwOnError","Builder","Grammar","parser","TextDynamics","semibrave_rest","text_struct","sequence","glyph_font_size","letter","glyph_data","letter_x","current_letter","get_semibrave_rest","number_of_measures","show_number","number_line","number_glyph_point","serif_thickness","use_symbols","semibrave_rest_glyph_scale","xs","getXs","drawLine","sbl","serif","lineThicknessHalf","line_thickness","drawSymbols","n4","n2","n1","semibrave_rest_width","symbol_spacing","yMiddle","padding_left","padding_right","timeSig","drawArrowHead","x0","y0","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","StaveLine","TextVerticalPosition","text_justification","TextJustification","applyLineStyle","applyFontStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","pt1","pt2","end_y","start_y","both_arrows","distance","ratio","angle1","angle2","top_x","line_angle","drawArrowLine","vertical_position","ignoreTicks","setGlyph","GlyphNote","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","Factory","addConnector","connector","addStave","paramsItems","spaceAbove","spaceBelow","debugNoteMetrics","allVoices","debugNoteMetricsYs","part","rightPadding","lastY","timeSigInfo","PedalMarking","drawPedalGlyph","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","MIXED","createSustain","createSostenuto","pedal","setCustomText","createUnaCorda","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","TextBracket","TextBracketPosition","stop","show_bracket","underline_superscript","PositionsString","main_width","main_height","super_y","superscript_width","super_height","line_y","VibratoBracket","bracket_data","stop_x","parameter","tab_options","addTabGlyph","newFromElementId","renderQ","systems","staves","initRenderer","getVoices","paramsP","TabStave","RepeatNote","GhostNote","ghostNote","textNoteStruct","textNote","barNote","clefNote","TimeSigNote","timeSigNote","KeySigNote","keySigNote","vJustify","hJustify","fontWeight","kerning","stringNumber","MultiMeasureRest","multimeasurerest","secondaryBeamBreaks","curve","tie","vibratoBracket","textBracket","System","system","GraceTabNote","setKey","getKey","keyParts","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","hairpin","left_shift_px","right_shift_px","right_shift_ticks","left_shift_ticks","FormatByTicksAndDraw","ppt","pixelsPerTick","l_shift_px","r_shift_px","hairpin_options","StaveHairpin","setRenderOptions","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","first_fret","last_fret","TabSlide","SLIDE_DOWN","SLIDE_UP","createSlideUp","createSlideDown","slide_y","Tremolo","isGraceNote","y_spacing","tuningString","tuningValues","setTuning","standard","dagdad","dropd","eb","standardBanjo","noteToInteger","Tuning","names","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","KeyManager","SortAndUnique","arr","cmp","eq","newArr","last","Contains","obj","canvas_sel","BM","start_time","Date","getTime","StackTrace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","enumerable","get","chunkId","all","promises","globalThis","Function","prop","url","script","needAttach","scripts","getElementsByTagName","createElement","charset","timeout","nc","src","onScriptComplete","event","onerror","onload","clearTimeout","doneFns","parentNode","setTimeout","target","toStringTag","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","promise","error","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}