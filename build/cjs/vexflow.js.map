{"version":3,"file":"vexflow.js","mappings":"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AQuqB,GACN,IAAK,MACHvqB,EAAO,6BACP,MACF,IAAK,IACHA,EAAO,uBACP,MACF,IAAK,IACHA,EAAO,sBACP,MACF,QACEA,EAAO,uBAGX,MACF,IAAK,IACL,IAAK,IACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,sBACP,MACF,IAAK,IACHA,EAAO,gBACP,MACF,IAAK,IACHA,EAAO,eACP,MACF,QACEA,EAAO,gBAGX,MACF,IAAK,IACL,IAAK,IACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,uBACP,MACF,IAAK,IACHA,EAAO,iBACP,MACF,IAAK,IACHA,EAAO,gBACP,MACF,QACEA,EAAO,iBAGX,MACF,IAAK,KACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,6BACP,MACF,IAAK,IACHA,EAAO,uBACP,MACF,IAAK,IACHA,EAAO,sBACP,MACF,QACEA,EAAO,kBAGX,MACF,IAAK,KACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,6BACP,MACF,IAAK,IACHA,EAAO,uBACP,MACF,IAAK,IACHA,EAAO,sBACP,MACF,QACEA,EAAO,uBAGX,MACF,IAAK,KACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,4BACP,MACF,IAAK,IAGL,IAAK,IACHA,EAAO,sBACP,MACF,QACEA,EAAO,sBAGX,MACF,IAAK,KACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,gCACP,MACF,IAAK,IACHA,EAAO,0BACP,MACF,IAAK,IACHA,EAAO,yBACP,MACF,QACEA,EAAO,0BAGX,MACF,IAAK,KACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,kCACP,MACF,IAAK,IACHA,EAAO,4BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,QACEA,EAAO,4BAGX,MACF,IAAK,KACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,8BACP,MACF,IAAK,IACHA,EAAO,wBACP,MACF,IAAK,IACHA,EAAO,uBACP,MACF,QACEA,EAAO,wBAEX,MACF,IAAK,KACH,OAAQuqB,GACN,IAAK,MACHvqB,EAAO,8BACP,MACF,IAAK,I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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/textformatter.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/fonts/bravura_glyphs.ts","webpack://Vex/./src/fonts/common_metrics.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/gonville_glyphs.ts","webpack://Vex/./src/fonts/leland_glyphs.ts","webpack://Vex/./src/fonts/petaluma_glyphs.ts","webpack://Vex/./src/fonts/load_petaluma.ts","webpack://Vex/./src/fonts/petalumascript_glyphs.ts","webpack://Vex/./src/fonts/robotoslab_glyphs.ts","webpack://Vex/./src/fonts/sans_bold_text_metrics.ts","webpack://Vex/./src/fonts/sans_text_metrics.ts","webpack://Vex/./src/fonts/serif_text_metrics.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/load_bravura.ts","webpack://Vex/./src/fonts/load_gonville.ts","webpack://Vex/./src/fonts/load_all.ts","webpack://Vex/./src/fonts/load_custom.ts","webpack://Vex/./src/fonts/load_leland.ts","webpack://Vex/./entry/vexflow.ts","webpack://Vex/./src/fonts/textfonts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Dot } from './dot';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Note } from './note';\nimport { RenderContext } from './rendercontext.js';\nimport { Barline } from './stavebarline';\nimport { StaveNote } from './stavenote';\nimport { StemmableNote } from './stemmablenote';\nimport { TabNote } from './tabnote';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory<T>(obj: any, category: string, checkAncestors: boolean = true): obj is T {\n  // obj is undefined, a number, a primitive string, or null.\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n  let constructorFcn = obj.constructor;\n\n  // Check if the object's static .CATEGORY matches the provided category.\n\n  if (checkAncestors) {\n    // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n    while (obj !== null) {\n      constructorFcn = obj.constructor;\n      if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n        return true;\n      }\n      obj = Object.getPrototypeOf(obj);\n    }\n    return false;\n  } else {\n    // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n    return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n  }\n}\n\nexport const isAccidental = (obj: unknown): obj is Accidental => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj: unknown): obj is Annotation => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj: unknown): obj is Barline => isCategory(obj, Category.Barline);\nexport const isDot = (obj: unknown): obj is Dot => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj: unknown): obj is GraceNote => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj: unknown): obj is GraceNoteGroup => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj: unknown): obj is Note => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj: unknown): obj is RenderContext => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj: unknown): obj is StaveNote => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj: unknown): obj is StemmableNote => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj: unknown): obj is TabNote => isCategory(obj, Category.TabNote);\n\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport const enum Category {\n  Accidental = 'Accidental',\n  Annotation = 'Annotation',\n  Articulation = 'Articulation',\n  Barline = 'Barline',\n  BarNote = 'BarNote',\n  Beam = 'Beam',\n  Bend = 'Bend',\n  ChordSymbol = 'ChordSymbol',\n  Clef = 'Clef',\n  ClefNote = 'ClefNote',\n  Crescendo = 'Crescendo',\n  Curve = 'Curve',\n  Dot = 'Dot',\n  Element = 'Element',\n  Fraction = 'Fraction',\n  FretHandFinger = 'FretHandFinger',\n  GhostNote = 'GhostNote',\n  Glyph = 'Glyph',\n  GlyphNote = 'GlyphNote',\n  GraceNote = 'GraceNote',\n  GraceNoteGroup = 'GraceNoteGroup',\n  GraceTabNote = 'GraceTabNote',\n  KeySignature = 'KeySignature',\n  KeySigNote = 'KeySigNote',\n  Modifier = 'Modifier',\n  MultiMeasureRest = 'MultiMeasureRest',\n  Note = 'Note',\n  NoteHead = 'NoteHead',\n  NoteSubGroup = 'NoteSubGroup',\n  Ornament = 'Ornament',\n  Parenthesis = 'Parenthesis',\n  PedalMarking = 'PedalMarking',\n  RenderContext = 'RenderContext',\n  RepeatNote = 'RepeatNote',\n  Repetition = 'Repetition',\n  Stave = 'Stave',\n  StaveConnector = 'StaveConnector',\n  StaveHairpin = 'StaveHairpin',\n  StaveLine = 'StaveLine',\n  StaveModifier = 'StaveModifier',\n  StaveNote = 'StaveNote',\n  StaveSection = 'StaveSection',\n  StaveTempo = 'StaveTempo',\n  StaveText = 'StaveText',\n  StaveTie = 'StaveTie',\n  Stem = 'Stem',\n  StemmableNote = 'StemmableNote',\n  StringNumber = 'StringNumber',\n  Stroke = 'Stroke',\n  System = 'System',\n  TabNote = 'TabNote',\n  TabSlide = 'TabSlide',\n  TabStave = 'TabStave',\n  TabTie = 'TabTie',\n  TextBracket = 'TextBracket',\n  TextDynamics = 'TextDynamics',\n  TextNote = 'TextNote',\n  Tickable = 'Tickable',\n  TimeSignature = 'TimeSignature',\n  TimeSigNote = 'TimeSigNote',\n  Tremolo = 'Tremolo',\n  Tuplet = 'Tuplet',\n  Vibrato = 'Vibrato',\n  VibratoBracket = 'VibratoBracket',\n  Voice = 'Voice',\n  Volta = 'Volta',\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n  code: string;\n  constructor(code: string, message: string = '') {\n    super('[RuntimeError] ' + code + ': ' + message);\n    this.code = code;\n  }\n}\n\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject(): typeof globalThis & any {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  return Function('return this')();\n}\n\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined<T>(x?: T, code: string = 'undefined', message: string = ''): T {\n  if (x === undefined) {\n    throw new RuntimeError(code, message);\n  }\n  return x;\n}\n\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block: string, ...args: any[]): void {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  globalObject().console.log(block + ': ' + line);\n}\n\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args: any[]): void {\n  const line = args.join(' ');\n  const err = new Error();\n  globalObject().console.log('Warning: ', line, err.stack);\n}\n\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x: number, n: number): number {\n  return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a: number, b: number): number {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = roundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n}\n\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text: string): string {\n  return `vf-${text}`;\n}\n\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a: number): number {\n  a = a % (2 * Math.PI);\n  if (a < 0) {\n    a += 2 * Math.PI;\n  }\n  return a;\n}\n\n/**\n * Return the sum of an array of numbers.\n */\nexport function sumArray(arr: number[]): number {\n  return arr.reduce((a, b) => a + b, 0);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\n\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\n/** Fraction represents a rational number. */\nexport class Fraction {\n  static get CATEGORY(): string {\n    return Category.Fraction;\n  }\n\n  // Cached objects for comparisons.\n  private static __staticFractionA = new Fraction();\n  private static __staticFractionB = new Fraction();\n  private static __staticFractionTmp = new Fraction();\n\n  /**\n   * GCD: Greatest common divisor using the Euclidean algorithm.\n   * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n   */\n  static GCD(a: number, b: number): number {\n    if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n      throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /** LCM: Lowest common multiple. */\n  static LCM(a: number, b: number): number {\n    return (a * b) / Fraction.GCD(a, b);\n  }\n\n  /** Lowest common multiple for more than two numbers. */\n  static LCMM(args: number[]): number {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      // args.shift() removes the first number.\n      // LCM the first number with the rest of the numbers.\n      return Fraction.LCM(args.shift() as number, Fraction.LCMM(args));\n    }\n  }\n\n  numerator: number = 1;\n  denominator: number = 1;\n\n  /** Set the numerator and denominator. */\n  constructor(numerator?: number, denominator?: number) {\n    this.set(numerator, denominator);\n  }\n\n  /** Set the numerator and denominator. */\n  set(numerator: number = 1, denominator: number = 1): this {\n    this.numerator = numerator;\n    this.denominator = denominator;\n    return this;\n  }\n\n  /** Return the value of the fraction. */\n  value(): number {\n    return this.numerator / this.denominator;\n  }\n\n  /** Simplify numerator and denominator using GCD. */\n  simplify(): this {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n\n  /** Add value of another fraction. */\n  add(param1: Fraction | number = 0, param2: number = 1): this {\n    const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n\n  /** Substract value of another fraction. */\n  subtract(param1: Fraction | number = 0, param2: number = 1): this {\n    const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n\n  /** Multiply by value of another fraction. */\n  multiply(param1: Fraction | number = 1, param2: number = 1): this {\n    const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n\n  /** Divide by value of another Fraction. */\n  divide(param1: Fraction | number = 1, param2: number = 1): this {\n    const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  /** Simplify both sides and check if they are equal. */\n  equals(compare: Fraction | number): boolean {\n    const a = Fraction.__staticFractionA.copy(compare).simplify();\n    const b = Fraction.__staticFractionB.copy(this).simplify();\n\n    return a.numerator === b.numerator && a.denominator === b.denominator;\n  }\n\n  /** Greater than operator. */\n  greaterThan(compare: Fraction | number): boolean {\n    const a = Fraction.__staticFractionB.copy(this);\n    a.subtract(compare);\n    return a.numerator > 0;\n  }\n\n  /** Greater than or equals operator. */\n  greaterThanEquals(compare: Fraction | number): boolean {\n    const a = Fraction.__staticFractionB.copy(this);\n    a.subtract(compare);\n    return a.numerator >= 0;\n  }\n\n  /** Less than operator. */\n  lessThan(compare: Fraction | number): boolean {\n    return !this.greaterThanEquals(compare);\n  }\n\n  /** Less than or equals operator. */\n  lessThanEquals(compare: Fraction | number): boolean {\n    return !this.greaterThan(compare);\n  }\n\n  /** Return a new copy with current values. */\n  clone(): Fraction {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  /** Copy value of another fraction. */\n  copy(other: Fraction | number): this {\n    if (typeof other === 'number') {\n      return this.set(other, 1);\n    } else {\n      return this.set(other.numerator, other.denominator);\n    }\n  }\n\n  /** Return the integer component (eg. 5/2 => 2). */\n  quotient(): number {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  /** Return the remainder component (eg. 5/2 => 1). */\n  remainder(): number {\n    return this.numerator % this.denominator;\n  }\n\n  /** Calculate absolute value. */\n  makeAbs(): this {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  /** Return a raw string representation (eg. \"5/2\"). */\n  toString(): string {\n    return `${this.numerator}/${this.denominator}`;\n  }\n\n  /** Return a simplified string respresentation. */\n  toSimplifiedString(): string {\n    return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n  }\n\n  /** Return string representation in mixed form. */\n  toMixedString(): string {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__staticFractionTmp.copy(this);\n\n    if (q < 0) {\n      f.makeAbs();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ` ${f.toSimplifiedString()}`;\n      }\n    } else if (f.numerator === 0) {\n      s = '0';\n    } else {\n      s = f.toSimplifiedString();\n    }\n\n    return s;\n  }\n\n  /** Parse a fraction string. */\n  parse(str: string): this {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = i[1] ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n: Fraction | number, d: number = 1): [number, number] {\n  if (typeof n === 'number') {\n    // Both params are numbers, so we return them as [numerator, denominator].\n    return [n, d];\n  } else {\n    // First param is a Fraction object. We ignore the second param.\n    return [n.numerator, n.denominator];\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\n// Bounding boxes for interactive notation.\n\nexport interface Bounds {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport class BoundingBox implements Bounds {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n\n  /**\n   * Create a new copy.\n   */\n  static copy(that: BoundingBox): BoundingBox {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x: number, y: number, w: number, h: number) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n\n  /** Get x position. */\n  getX(): number {\n    return this.x;\n  }\n\n  /** Get y position. */\n  getY(): number {\n    return this.y;\n  }\n\n  /** Get width. */\n  getW(): number {\n    return this.w;\n  }\n\n  /** Get height. */\n  getH(): number {\n    return this.h;\n  }\n\n  /** Set x position. */\n  setX(x: number): this {\n    this.x = x;\n    return this;\n  }\n\n  /** Set y position. */\n  setY(y: number): this {\n    this.y = y;\n    return this;\n  }\n\n  /** Set width. */\n  setW(w: number): this {\n    this.w = w;\n    return this;\n  }\n\n  /** Set height. */\n  setH(h: number): this {\n    this.h = h;\n    return this;\n  }\n\n  /** Move to position. */\n  move(x: number, y: number): this {\n    this.x += x;\n    this.y += y;\n    return this;\n  }\n\n  /** Clone. */\n  clone(): BoundingBox {\n    return BoundingBox.copy(this);\n  }\n\n  /**\n   * Merge my box with given box. Creates a bigger bounding box unless\n   * the given box is contained in this one.\n   */\n  mergeWith(boundingBox: BoundingBox): this {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n  protected x1: number = Number.NaN;\n  protected y1: number = Number.NaN;\n  protected x2: number = Number.NaN;\n  protected y2: number = Number.NaN;\n\n  /** Get calculated X1. */\n  getX1(): number {\n    return this.x1;\n  }\n\n  /** Get calculated Y1. */\n  getY1(): number {\n    return this.y1;\n  }\n\n  /** Get calculated width. */\n  width(): number {\n    return this.x2 - this.x1;\n  }\n\n  /** Get calculated height. */\n  height(): number {\n    return this.y2 - this.y1;\n  }\n\n  /** Add point to BoundingBox. */\n  addPoint(x: number, y: number): void {\n    if (isNaN(this.x1) || x < this.x1) this.x1 = x;\n    if (isNaN(this.x2) || x > this.x2) this.x2 = x;\n    if (isNaN(this.y1) || y < this.y1) this.y1 = y;\n    if (isNaN(this.y2) || y > this.y2) this.y2 = y;\n  }\n\n  /** Add X to BoundingBox. */\n  addX(x: number): void {\n    this.addPoint(x, this.y1);\n  }\n\n  /** Add Y to BoundingBox. */\n  addY(y: number): void {\n    this.addPoint(this.x1, y);\n  }\n\n  /** Add quadratic curve to BoundingBox. */\n  addQuadraticCurve(p0x: number, p0y: number, p1x: number, p1y: number, p2x: number, p2y: number): void {\n    this.addPoint(p0x, p0y);\n    this.addPoint(p2x, p2y);\n\n    const p01x = p1x - p0x;\n    const p12x = p2x - p1x;\n    let denom = p01x - p12x;\n    if (denom != 0) {\n      const t = p01x / denom;\n      if (t > 0 && t < 1) {\n        const it = 1 - t;\n        this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n      }\n    }\n\n    const p01y = p1y - p0y;\n    const p12y = p2y - p1y;\n    denom = p01y - p12y;\n    if (denom != 0) {\n      const t = p01y / denom;\n      if (t > 0 && t < 1) {\n        const it = 1 - t;\n        this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n      }\n    }\n  }\n\n  /** Add bezier curve to BoundingBox. */\n  addBezierCurve(\n    p0x: number,\n    p0y: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number\n  ): void {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t: number, i: number) =>\n      Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n","import { ChordSymbolMetrics } from './chordsymbol';\nimport { ClefMetrics } from './clef';\nimport { NoteHeadMetrics } from './notehead';\nimport { OrnamentMetrics } from './ornament';\nimport { StringNumberMetrics } from './stringnumber';\nimport { TupletMetrics } from './tuplet';\nimport { defined } from './util';\n\nexport interface FontInfo {\n  /** CSS font-family, e.g., 'Arial', 'Helvetica Neue, Arial, sans-serif', 'Times, serif' */\n  family?: string;\n\n  /**\n   * CSS font-size (e.g., '10pt', '12px').\n   * For backwards compatibility with 3.0.9, plain numbers are assumed to be specified in 'pt'.\n   */\n  size?: number | string;\n\n  /** `bold` or a number (e.g., 900) as inspired by CSS font-weight. */\n  weight?: string | number;\n\n  /** `italic` as inspired by CSS font-style. */\n  style?: string;\n}\n\nexport type FontModule = { data: FontData; metrics: FontMetrics };\n\nexport interface FontData {\n  glyphs: Record<string, FontGlyph>;\n  fontFamily?: string;\n  resolution: number;\n  generatedOn?: string;\n}\n\n/** Specified in the `xxx_metrics.ts` files. */\n// eslint-disable-next-line\nexport interface FontMetrics extends Record<string, any> {\n  smufl: boolean;\n  stave?: Record<string, number>;\n  accidental?: Record<string, number>;\n  clef_default?: ClefMetrics;\n  clef_small?: ClefMetrics;\n  pedalMarking?: Record<string, Record<string, number>>;\n  digits?: Record<string, number>;\n  articulation?: Record<string, Record<string, number>>;\n  tremolo?: Record<string, Record<string, number>>;\n  chordSymbol?: ChordSymbolMetrics;\n  ornament?: Record<string, OrnamentMetrics>;\n  noteHead?: NoteHeadMetrics;\n  stringNumber?: StringNumberMetrics;\n  tuplet?: TupletMetrics;\n  glyphs: Record<\n    string,\n    {\n      point?: number;\n      shiftX?: number;\n      shiftY?: number;\n      scale?: number;\n      [key: string]: { point?: number; shiftX?: number; shiftY?: number; scale?: number } | number | undefined;\n    }\n  >;\n}\n\nexport interface FontGlyph {\n  x_min: number;\n  x_max: number;\n  y_min?: number;\n  y_max?: number;\n  ha: number;\n  leftSideBearing?: number;\n  advanceWidth?: number;\n\n  // The o (outline) field is optional, because robotoslab_glyphs.ts & petalumascript_glyphs.ts\n  // do not include glyph outlines. We rely on *.woff files to provide the glyph outlines.\n  o?: string;\n  cached_outline?: number[];\n}\n\nexport enum FontWeight {\n  NORMAL = 'normal',\n  BOLD = 'bold',\n}\n\nexport enum FontStyle {\n  NORMAL = 'normal',\n  ITALIC = 'italic',\n}\n\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser: HTMLSpanElement;\n\nconst Fonts: Record<string, Font> = {};\n\nexport class Font {\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // STATIC MEMBERS\n\n  /** Default sans-serif font family. */\n  static SANS_SERIF: string = 'Arial, sans-serif';\n\n  /** Default serif font family. */\n  static SERIF: string = 'Times New Roman, serif';\n\n  /** Default font size in `pt`. */\n  static SIZE: number = 10;\n\n  // CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n  /** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\n  static scaleToPxFrom: Record<string, number> = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n  };\n\n  /**\n   * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n   * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n   * units (e.g., pt, em, %).\n   * @returns the number of pixels that is equivalent to `fontSize`\n   */\n  static convertSizeToPixelValue(fontSize: string | number = Font.SIZE): number {\n    if (typeof fontSize === 'number') {\n      // Assume the numeric fontSize is specified in pt.\n      return fontSize * Font.scaleToPxFrom.pt;\n    } else {\n      const value = parseFloat(fontSize);\n      if (isNaN(value)) {\n        return 0;\n      }\n      const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n      const conversionFactor = Font.scaleToPxFrom[unit] ?? 1;\n      return value * conversionFactor;\n    }\n  }\n\n  /**\n   * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n   * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n   * units (e.g., pt, em, %).\n   * @returns the number of points that is equivalent to `fontSize`\n   */\n  static convertSizeToPointValue(fontSize: string | number = Font.SIZE): number {\n    if (typeof fontSize === 'number') {\n      // Assume the numeric fontSize is specified in pt.\n      return fontSize;\n    } else {\n      const value = parseFloat(fontSize);\n      if (isNaN(value)) {\n        return 0;\n      }\n      const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n      const conversionFactor = (Font.scaleToPxFrom[unit] ?? 1) / Font.scaleToPxFrom.pt;\n      return value * conversionFactor;\n    }\n  }\n\n  /**\n   * @param f\n   * @param size\n   * @param weight\n   * @param style\n   * @returns the `size` field will include the units (e.g., '12pt', '16px').\n   */\n  static validate(\n    f?: string | FontInfo,\n    size?: string | number,\n    weight?: string | number,\n    style?: string\n  ): Required<FontInfo> {\n    // If f is a string but all other arguments are undefined, we assume that\n    // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n    if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n      return Font.fromCSSString(f);\n    }\n\n    let family: string | undefined;\n    if (typeof f === 'object') {\n      // f is a FontInfo object, so we extract its fields.\n      family = f.family;\n      size = f.size;\n      weight = f.weight;\n      style = f.style;\n    } else {\n      // f is a string representing the font family name or undefined.\n      family = f;\n    }\n\n    family = family ?? Font.SANS_SERIF;\n    size = size ?? Font.SIZE + 'pt';\n    weight = weight ?? FontWeight.NORMAL;\n    style = style ?? FontStyle.NORMAL;\n\n    if (weight === '') {\n      weight = FontWeight.NORMAL;\n    }\n    if (style === '') {\n      style = FontStyle.NORMAL;\n    }\n\n    // If size is a number, we assume the unit is `pt`.\n    if (typeof size === 'number') {\n      size = `${size}pt`;\n    }\n\n    // If weight is a number (e.g., 900), turn it into a string representation of that number.\n    if (typeof weight === 'number') {\n      weight = weight.toString();\n    }\n\n    // At this point, `family`, `size`, `weight`, and `style` are all strings.\n    return { family, size, weight, style };\n  }\n\n  /**\n   * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n   */\n  static fromCSSString(cssFontShorthand: string): Required<FontInfo> {\n    // Let the browser parse this string for us.\n    // First, create a span element.\n    // Then, set its style.font and extract it back out.\n    if (!fontParser) {\n      fontParser = document.createElement('span');\n    }\n    fontParser.style.font = cssFontShorthand;\n    const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n    return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n  }\n\n  /**\n   * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n   */\n  static toCSSString(fontInfo?: FontInfo): string {\n    if (!fontInfo) {\n      return '';\n    }\n\n    let style: string;\n    const st = fontInfo.style;\n    if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n      style = ''; // no space! Omit the style section.\n    } else {\n      style = st.trim() + ' ';\n    }\n\n    let weight: string;\n    const wt = fontInfo.weight;\n    if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n      weight = ''; // no space! Omit the weight section.\n    } else if (typeof wt === 'number') {\n      weight = wt + ' ';\n    } else {\n      weight = wt.trim() + ' ';\n    }\n\n    let size: string;\n    const sz = fontInfo.size;\n    if (sz === undefined) {\n      size = Font.SIZE + 'pt ';\n    } else if (typeof sz === 'number') {\n      size = sz + 'pt ';\n    } else {\n      // size is already a string.\n      size = sz.trim() + ' ';\n    }\n\n    const family: string = fontInfo.family ?? Font.SANS_SERIF;\n\n    return `${style}${weight}${size}${family}`;\n  }\n\n  /**\n   * @param fontSize a number representing a font size, or a string font size with units.\n   * @param scaleFactor multiply the size by this factor.\n   * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n   * If the fontSize argument was a number, the return value will be a number.\n   * If the fontSize argument was a string, the return value will be a string.\n   */\n  static scaleSize<T extends number | string>(fontSize: T, scaleFactor: number): T {\n    if (typeof fontSize === 'number') {\n      return (fontSize * scaleFactor) as T;\n    } else {\n      const value = parseFloat(fontSize);\n      const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n      return `${value * scaleFactor}${unit}` as T;\n    }\n  }\n\n  /**\n   * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n   * @returns true if the font weight indicates bold.\n   */\n  static isBold(weight?: string | number): boolean {\n    if (!weight) {\n      return false;\n    } else if (typeof weight === 'number') {\n      return weight >= 600;\n    } else {\n      // a string can be 'bold' or '700'\n      const parsedWeight = parseInt(weight, 10);\n      if (isNaN(parsedWeight)) {\n        return weight.toLowerCase() === 'bold';\n      } else {\n        return parsedWeight >= 600;\n      }\n    }\n  }\n\n  /**\n   * @param style\n   * @returns true if the font style indicates 'italic'.\n   */\n  static isItalic(style?: string): boolean {\n    if (!style) {\n      return false;\n    } else {\n      return style.toLowerCase() === FontStyle.ITALIC;\n    }\n  }\n\n  /**\n   * Customize this field to specify a different CDN for delivering web fonts.\n   * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n   * Or you can use your own host.\n   */\n  static WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n\n  /**\n   * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n   * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n   * set of fonts to load. See: `Font.loadWebFonts()`.\n   */\n  static WEB_FONT_FILES: Record<string /* fontName */, string /* fontPath */> = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n  };\n\n  /**\n   * @param fontName\n   * @param woffURL The absolute or relative URL to the woff file.\n   * @param includeWoff2 If true, we assume that a woff2 file is in\n   * the same folder as the woff file, and will append a `2` to the url.\n   */\n  // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n  // eslint-disable-next-line\n  // @ts-ignore\n  static async loadWebFont(fontName: string, woffURL: string, includeWoff2: boolean = true): Promise<FontFace> {\n    const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n    const woff1URL = `url(${woffURL}) format('woff')`;\n    const woffURLs = woff2URL + woff1URL;\n    // eslint-disable-next-line\n    // @ts-ignore\n    const fontFace = new FontFace(fontName, woffURLs);\n    await fontFace.load();\n    // eslint-disable-next-line\n    // @ts-ignore\n    document.fonts.add(fontFace);\n    return fontFace;\n  }\n\n  /**\n   * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n   *   `await Vex.Flow.Font.loadWebFonts();`\n   * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n   * and a @font-face { font-family: ... } rule in your CSS.\n   * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n   * depending on the current music engraving font.\n   *\n   * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n   * for your app.\n   */\n  static async loadWebFonts(): Promise<void> {\n    const host = Font.WEB_FONT_HOST;\n    const files = Font.WEB_FONT_FILES;\n    for (const fontName in files) {\n      const fontPath = files[fontName];\n      Font.loadWebFont(fontName, host + fontPath);\n    }\n  }\n\n  /**\n   * @param fontName\n   * @param data optionally set the Font object's `.data` property.\n   *   This is usually done when setting up a font for the first time.\n   * @param metrics optionally set the Font object's `.metrics` property.\n   *   This is usually done when setting up a font for the first time.\n   * @returns a Font object with the given `fontName`.\n   *   Reuse an existing Font object if a matching one is found.\n   */\n  static load(fontName: string, data?: FontData, metrics?: FontMetrics): Font {\n    let font = Fonts[fontName];\n    if (!font) {\n      font = new Font(fontName);\n      Fonts[fontName] = font;\n    }\n    if (data) {\n      font.setData(data);\n    }\n    if (metrics) {\n      font.setMetrics(metrics);\n    }\n    return font;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // INSTANCE MEMBERS\n\n  protected name: string;\n  protected data?: FontData;\n  protected metrics?: FontMetrics;\n\n  /**\n   * Use `Font.load(fontName)` to get a Font object.\n   * Do not call this constructor directly.\n   */\n  private constructor(fontName: string) {\n    this.name = fontName;\n  }\n\n  getName(): string {\n    return this.name;\n  }\n\n  getData(): FontData {\n    return defined(this.data, 'FontError', 'Missing font data');\n  }\n\n  getMetrics(): FontMetrics {\n    return defined(this.metrics, 'FontError', 'Missing metrics');\n  }\n\n  setData(data: FontData): void {\n    this.data = data;\n  }\n\n  setMetrics(metrics: FontMetrics): void {\n    this.metrics = metrics;\n  }\n\n  hasData(): boolean {\n    return this.data !== undefined;\n  }\n\n  getResolution(): number {\n    return this.getData().resolution;\n  }\n\n  getGlyphs(): Record<string, FontGlyph> {\n    return this.getData().glyphs;\n  }\n\n  /**\n   * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n   * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n   * @param defaultValue is returned if the lookup fails.\n   * @returns the retrieved value (or `defaultValue` if the lookup fails).\n   */\n  // eslint-disable-next-line\n  lookupMetric(key: string, defaultValue?: Record<string, any> | number): any {\n    const keyParts = key.split('.');\n\n    // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n    let currObj = this.getMetrics();\n    for (let i = 0; i < keyParts.length; i++) {\n      const keyPart = keyParts[i];\n      const value = currObj[keyPart];\n      if (value === undefined) {\n        // If the key lookup fails, we fall back to the defaultValue.\n        return defaultValue;\n      }\n      // The most recent lookup succeeded, so we drill deeper into the object.\n      currObj = value;\n    }\n\n    // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n    return currObj;\n  }\n\n  /** For debugging. */\n  toString(): string {\n    return '[' + this.name + ' Font]';\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Element } from './element';\nimport { RuntimeError } from './util';\n\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n  // [attribute_name][attribute_value][element_id] => Element\n  [key: string]: { [key: string]: { [key: string]: Element } };\n  constructor() {\n    this.id = {};\n    this.type = {};\n    this.class = {};\n  }\n}\n\nexport interface RegistryUpdate {\n  id: string;\n  name: string;\n  value: string | undefined;\n  oldValue: string | undefined;\n}\n\nexport class Registry {\n  private static defaultRegistry?: Registry;\n\n  static getDefaultRegistry(): Registry | undefined {\n    return Registry.defaultRegistry;\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry: Registry): void {\n    Registry.defaultRegistry = registry;\n  }\n\n  static disableDefaultRegistry(): void {\n    Registry.defaultRegistry = undefined;\n  }\n\n  protected index: Index;\n\n  constructor() {\n    this.index = new Index();\n  }\n\n  clear(): this {\n    this.index = new Index();\n    return this;\n  }\n\n  setIndexValue(name: string, value: string, id: string, elem: Element): void {\n    const index = this.index;\n    if (!index[name][value]) {\n      index[name][value] = {};\n    }\n    index[name][value][id] = elem;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }: RegistryUpdate): void {\n    const elem = this.getElementById(id);\n    if (oldValue !== undefined && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value && elem) {\n      this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  /**\n   * Register element `elem` with this registry.\n   * This adds the element to its index and watches it for attribute changes.\n   * @param elem\n   * @param id\n   * @returns this\n   */\n  register(elem: Element, id?: string): this {\n    id = id || elem.getAttribute('id');\n    if (!id) {\n      throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    this.setIndexValue('id', id, id, elem);\n    this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id: string): Element | undefined {\n    return this.index.id?.[id]?.[id]; // return undefined if the id is not found.\n  }\n\n  getElementsByAttribute(attribute: string, value: string): Element[] {\n    const index_attr = this.index[attribute];\n    if (index_attr) {\n      const index_attr_val = index_attr[value];\n      if (index_attr_val) {\n        const keys = Object.keys(index_attr_val);\n        return keys.map((k) => index_attr_val[k]);\n      }\n    }\n    return [];\n  }\n\n  getElementsByType(type: string): Element[] {\n    return this.getElementsByAttribute('type', type);\n  }\n\n  getElementsByClass(className: string): Element[] {\n    return this.getElementsByAttribute('class', className);\n  }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate(info: RegistryUpdate): this {\n    const allowedNames = ['id', 'type', 'class'];\n    if (allowedNames.includes(info.name)) {\n      this.updateIndex(info);\n    }\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\n\nimport { BoundingBox } from './boundingbox';\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Category } from './typeguard';\nimport { defined, prefix } from './util';\n\n/** Element attributes. */\nexport interface ElementAttributes {\n  [name: string]: string | undefined;\n  id: string;\n  type: string;\n  class: string;\n}\n\n/** Element style */\nexport interface ElementStyle {\n  /**\n   * CSS color used for the shadow.\n   *\n   * Examples: 'red', '#ff0000', '#ff000010', 'rgb(255,0,0)'\n   *\n   * See [CSS Legal Color Values](https://www.w3schools.com/cssref/css_colors_legal.asp)\n   */\n  shadowColor?: string;\n  /**\n   * Level of blur applied to shadows.\n   *\n   * Values that are not finite numbers greater than or equal to zero are ignored.\n   */\n  shadowBlur?: number;\n  /**\n   * CSS color used with context fill command.\n   *\n   * Examples: 'red', '#ff0000', '#ff000010', 'rgb(255,0,0)'\n   *\n   * See [CSS Legal Color Values](https://www.w3schools.com/cssref/css_colors_legal.asp)\n   */\n  fillStyle?: string;\n  /**\n   * CSS color used with context stroke command.\n   *\n   * Examples: 'red', '#ff0000', '#ff000010', 'rgb(255,0,0)'\n   *\n   * See [CSS Legal Color Values](https://www.w3schools.com/cssref/css_colors_legal.asp)\n   */\n  strokeStyle?: string;\n  /**\n   * Line width, 1.0 by default.\n   */\n  lineWidth?: number;\n}\n\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n *\n * The Element is an abstract class that needs to be subclassed to work. It handles\n * style and text-font properties for the Element and any child elements, along with\n * working with the Registry to create unique ids, but does not have any tools for\n * formatting x or y positions or connections to a Stave.\n */\nexport abstract class Element {\n  static get CATEGORY(): string {\n    return Category.Element;\n  }\n\n  // all Element objects keep a list of children that they are responsible and which\n  // inherit the style of their parents.\n  protected children: Element[] = [];\n  protected static ID: number = 1000;\n  public static newID(): string {\n    return `auto${Element.ID++}`;\n  }\n\n  /**\n   * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n   * to customize the font for musical symbols placed on the score.\n   */\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n  };\n\n  private context?: RenderContext;\n  protected rendered: boolean;\n  protected style?: ElementStyle;\n  private attrs: ElementAttributes;\n  protected boundingBox?: BoundingBox;\n  protected registry?: Registry;\n\n  /**\n   * Some elements include text.\n   * The `textFont` property contains information required to style the text (i.e., font family, size, weight, and style).\n   * It is undefined by default, and can be set using `setFont(...)` or `resetFont()`.\n   */\n  protected textFont?: Required<FontInfo>;\n\n  constructor() {\n    this.attrs = {\n      id: Element.newID(),\n      type: this.getCategory(),\n      class: '',\n    };\n\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    Registry.getDefaultRegistry()?.register(this);\n  }\n\n  /**\n   * Adds a child Element to the Element, which lets it inherit the\n   * same style as the parent when setGroupStyle() is called.\n   *\n   * Examples of children are noteheads and stems.  Modifiers such\n   * as Accidentals are generally not set as children.\n   *\n   * Note that StaveNote calls setGroupStyle() when setStyle() is called.\n   */\n  addChildElement(child: Element): this {\n    this.children.push(child);\n    return this;\n  }\n\n  getCategory(): string {\n    return (<typeof Element>this.constructor).CATEGORY;\n  }\n\n  /**\n   * Set the element style used to render.\n   *\n   * Example:\n   * ```typescript\n   * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n   * element.draw();\n   * ```\n   * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n   * the style can be applied to all of them by means of the context:\n   * ```typescript\n   * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n   * element.getContext().setFillStyle('red');\n   * element.getContext().setStrokeStyle('red');\n   * element.draw();\n   * ```\n   * or using drawWithStyle:\n   * ```typescript\n   * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n   * element.drawWithStyle();\n   * ```\n   */\n  setStyle(style: ElementStyle | undefined): this {\n    this.style = style;\n    return this;\n  }\n\n  /** Set the element & associated children style used for rendering. */\n  setGroupStyle(style: ElementStyle): this {\n    this.style = style;\n    this.children.forEach((child) => child.setGroupStyle(style));\n    return this;\n  }\n\n  /** Get the element style used for rendering. */\n  getStyle(): ElementStyle | undefined {\n    return this.style;\n  }\n\n  /** Apply the element style to `context`. */\n  applyStyle(\n    context: RenderContext | undefined = this.context,\n    style: ElementStyle | undefined = this.getStyle()\n  ): this {\n    if (!style) return this;\n    if (!context) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  /** Restore the style of `context`. */\n  restoreStyle(\n    context: RenderContext | undefined = this.context,\n    style: ElementStyle | undefined = this.getStyle()\n  ): this {\n    if (!style) return this;\n    if (!context) return this;\n    context.restore();\n    return this;\n  }\n\n  /**\n   * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n   * with the element's style (see `getStyle()` and `setStyle()`)\n   */\n  drawWithStyle(): void {\n    this.checkContext();\n    this.applyStyle();\n    this.draw();\n    this.restoreStyle();\n  }\n\n  /** Draw an element. */\n  // eslint-disable-next-line\n  abstract draw(...args: any[]): void;\n\n  /** Check if it has a class label (An element can have multiple class labels).  */\n  hasClass(className: string): boolean {\n    if (!this.attrs.class) return false;\n    return this.attrs.class?.split(' ').indexOf(className) != -1;\n  }\n\n  /** Add a class label (An element can have multiple class labels).  */\n  addClass(className: string): this {\n    if (this.hasClass(className)) return this;\n    if (!this.attrs.class) this.attrs.class = `${className}`;\n    else this.attrs.class = `${this.attrs.class} ${className}`;\n    this.registry?.onUpdate({\n      id: this.attrs.id,\n      name: 'class',\n      value: className,\n      oldValue: undefined,\n    });\n    return this;\n  }\n\n  /** Remove a class label (An element can have multiple class labels).  */\n  removeClass(className: string): this {\n    if (!this.hasClass(className)) return this;\n    const arr = this.attrs.class?.split(' ');\n    if (arr) {\n      arr.splice(arr.indexOf(className));\n      this.attrs.class = arr.join(' ');\n    }\n    this.registry?.onUpdate({\n      id: this.attrs.id,\n      name: 'class',\n      value: undefined,\n      oldValue: className,\n    });\n    return this;\n  }\n\n  /** Call back from registry after the element is registered. */\n  onRegister(registry: Registry): this {\n    this.registry = registry;\n    return this;\n  }\n\n  /** Return the rendered status. */\n  isRendered(): boolean {\n    return this.rendered;\n  }\n\n  /** Set the rendered status. */\n  setRendered(rendered = true): this {\n    this.rendered = rendered;\n    return this;\n  }\n\n  /** Return the element attributes. */\n  getAttributes(): ElementAttributes {\n    return this.attrs;\n  }\n\n  /** Return an attribute, such as 'id', 'type' or 'class'. */\n  // eslint-disable-next-line\n  getAttribute(name: string): any {\n    return this.attrs[name];\n  }\n\n  /** Return associated SVGElement. */\n  getSVGElement(suffix: string = ''): SVGElement | undefined {\n    const id = prefix(this.attrs.id + suffix);\n    const element = document.getElementById(id);\n    if (element) return element as unknown as SVGElement;\n  }\n\n  /** Set an attribute such as 'id', 'class', or 'type'. */\n  setAttribute(name: string, value: string | undefined): this {\n    const oldID = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    // Register with old id to support id changes.\n    this.registry?.onUpdate({ id: oldID, name, value, oldValue });\n    return this;\n  }\n\n  /** Get the boundingBox. */\n  getBoundingBox(): BoundingBox | undefined {\n    return this.boundingBox;\n  }\n\n  /** Return the context, such as an SVGContext or CanvasContext object. */\n  getContext(): RenderContext | undefined {\n    return this.context;\n  }\n\n  /** Set the context to an SVGContext or CanvasContext object */\n  setContext(context?: RenderContext): this {\n    this.context = context;\n    return this;\n  }\n\n  /** Validate and return the rendering context. */\n  checkContext(): RenderContext {\n    return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Font Handling\n\n  /**\n   * Provide a CSS compatible font string (e.g., 'bold 16px Arial') that will be applied\n   * to text (not glyphs).\n   */\n  set font(f: string) {\n    this.setFont(f);\n  }\n\n  /** Returns the CSS compatible font string for the text font. */\n  get font(): string {\n    return Font.toCSSString(this.textFont);\n  }\n\n  /**\n   * Set the element's text font family, size, weight, style\n   * (e.g., `Arial`, `10pt`, `bold`, `italic`).\n   *\n   * This attribute does not determine the font used for musical Glyphs like treble clefs.\n   *\n   * @param font is 1) a `FontInfo` object or\n   *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n   *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n   * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n   * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n   * @param style is a string (e.g., 'italic', 'normal').\n   * If no arguments are provided, then the font is set to the default font.\n   * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n   */\n  setFont(font?: string | FontInfo, size?: string | number, weight?: string | number, style?: string): this {\n    // Allow subclasses to override `TEXT_FONT`.\n    const defaultTextFont: Required<FontInfo> = (<typeof Element>this.constructor).TEXT_FONT;\n\n    const fontIsObject = typeof font === 'object';\n    const fontIsString = typeof font === 'string';\n    const fontIsUndefined = font === undefined;\n    const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n\n    if (fontIsObject) {\n      // `font` is case 1) a FontInfo object\n      this.textFont = { ...defaultTextFont, ...font };\n    } else if (fontIsString && sizeWeightStyleAreUndefined) {\n      // `font` is case 2) CSS font shorthand.\n      this.textFont = Font.fromCSSString(font);\n    } else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n      // All arguments are undefined. Do not check for `arguments.length === 0`,\n      // which fails on the edge case: `setFont(undefined)`.\n      // TODO: See if we can remove this case entirely without introducing a visual diff.\n      // The else case below seems like it should be equivalent to this case.\n      this.textFont = { ...defaultTextFont };\n    } else {\n      // `font` is case 3) a font family string (e.g., 'Times New Roman').\n      // The other parameters represent the size, weight, and style.\n      // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n      // Following CSS conventions, unspecified params are reset to the default.\n      this.textFont = Font.validate(\n        font ?? defaultTextFont.family,\n        size ?? defaultTextFont.size,\n        weight ?? defaultTextFont.weight,\n        style ?? defaultTextFont.style\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Get the css string describing this Element's text font. e.g.,\n   * 'bold 10pt Arial'.\n   */\n  getFont(): string {\n    if (!this.textFont) {\n      this.resetFont();\n    }\n    return Font.toCSSString(this.textFont);\n  }\n\n  /**\n   * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n   * Subclasses can call this to initialize `textFont` for the first time.\n   */\n  resetFont(): void {\n    this.setFont();\n  }\n\n  /** Return a copy of the current FontInfo object. */\n  get fontInfo(): Required<FontInfo> {\n    if (!this.textFont) {\n      this.resetFont();\n    }\n    // We can cast to Required<FontInfo> here, because\n    // we just called resetFont() above to ensure this.textFont is set.\n    return { ...this.textFont } as Required<FontInfo>;\n  }\n\n  set fontInfo(fontInfo: FontInfo) {\n    this.setFont(fontInfo);\n  }\n\n  /** Change the font size, while keeping everything else the same. */\n  setFontSize(size?: string | number): this {\n    const fontInfo = this.fontInfo;\n    this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n    return this;\n  }\n\n  /**\n   * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n   * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n   */\n  getFontSize(): string {\n    return this.fontSize;\n  }\n\n  /**\n   * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n   *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n   */\n  set fontSize(size: string | number) {\n    this.setFontSize(size);\n  }\n\n  /**\n   * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n   */\n  get fontSize(): string {\n    let size = this.fontInfo.size;\n    if (typeof size === 'number') {\n      size = `${size}pt`;\n    }\n    return size;\n  }\n\n  /**\n   * @returns the font size in `pt`.\n   */\n  get fontSizeInPoints(): number {\n    return Font.convertSizeToPointValue(this.fontSize);\n  }\n\n  /**\n   * @returns the font size in `px`.\n   */\n  get fontSizeInPixels(): number {\n    return Font.convertSizeToPixelValue(this.fontSize);\n  }\n\n  /**\n   * @returns a CSS font-style string (e.g., 'italic').\n   */\n  get fontStyle(): string {\n    return this.fontInfo.style;\n  }\n\n  set fontStyle(style: string) {\n    const fontInfo = this.fontInfo;\n    this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n  }\n\n  /**\n   * @returns a CSS font-weight string (e.g., 'bold').\n   * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n   */\n  get fontWeight(): string {\n    return this.fontInfo.weight + '';\n  }\n\n  set fontWeight(weight: string | number) {\n    const fontInfo = this.fontInfo;\n    this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { ArticulationStruct } from './articulation';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { Glyph, GlyphProps } from './glyph';\nimport { KeyProps } from './note';\nimport { RuntimeError } from './util';\n\nconst RESOLUTION = 16384;\n\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations: Record<string, number> = {\n  '1/2': RESOLUTION * 2,\n  1: RESOLUTION / 1,\n  2: RESOLUTION / 2,\n  4: RESOLUTION / 4,\n  8: RESOLUTION / 8,\n  16: RESOLUTION / 16,\n  32: RESOLUTION / 32,\n  64: RESOLUTION / 64,\n  128: RESOLUTION / 128,\n  256: RESOLUTION / 256,\n};\n\nconst durationAliases: Record<string, string> = {\n  w: '1',\n  h: '2',\n  q: '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  // TODO(0xfe): This needs to be cleaned up.\n  b: '256',\n};\n\nconst keySignatures: Record<string, { acc?: string; num: number }> = {\n  C: { num: 0 },\n  Am: { num: 0 },\n  F: { acc: 'b', num: 1 },\n  Dm: { acc: 'b', num: 1 },\n  Bb: { acc: 'b', num: 2 },\n  Gm: { acc: 'b', num: 2 },\n  Eb: { acc: 'b', num: 3 },\n  Cm: { acc: 'b', num: 3 },\n  Ab: { acc: 'b', num: 4 },\n  Fm: { acc: 'b', num: 4 },\n  Db: { acc: 'b', num: 5 },\n  Bbm: { acc: 'b', num: 5 },\n  Gb: { acc: 'b', num: 6 },\n  Ebm: { acc: 'b', num: 6 },\n  Cb: { acc: 'b', num: 7 },\n  Abm: { acc: 'b', num: 7 },\n  G: { acc: '#', num: 1 },\n  Em: { acc: '#', num: 1 },\n  D: { acc: '#', num: 2 },\n  Bm: { acc: '#', num: 2 },\n  A: { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  E: { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  B: { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nconst clefs: Record<string, { line_shift: number }> = {\n  treble: { line_shift: 0 },\n  bass: { line_shift: 6 },\n  tenor: { line_shift: 4 },\n  alto: { line_shift: 3 },\n  soprano: { line_shift: 1 },\n  percussion: { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  subbass: { line_shift: 7 },\n  french: { line_shift: -1 },\n};\n\nconst notesInfo: Record<\n  string,\n  {\n    index: number;\n    int_val?: number;\n    accidental?: string;\n    rest?: boolean;\n    octave?: number;\n    code?: string;\n    shift_right?: number;\n  }\n> = {\n  C: { index: 0, int_val: 0 },\n  CN: { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  CB: { index: 0, int_val: 11, accidental: 'b' },\n  CBB: { index: 0, int_val: 10, accidental: 'bb' },\n  D: { index: 1, int_val: 2 },\n  DN: { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  DB: { index: 1, int_val: 1, accidental: 'b' },\n  DBB: { index: 1, int_val: 0, accidental: 'bb' },\n  E: { index: 2, int_val: 4 },\n  EN: { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  EB: { index: 2, int_val: 3, accidental: 'b' },\n  EBB: { index: 2, int_val: 2, accidental: 'bb' },\n  F: { index: 3, int_val: 5 },\n  FN: { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  FB: { index: 3, int_val: 4, accidental: 'b' },\n  FBB: { index: 3, int_val: 3, accidental: 'bb' },\n  G: { index: 4, int_val: 7 },\n  GN: { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  GB: { index: 4, int_val: 6, accidental: 'b' },\n  GBB: { index: 4, int_val: 5, accidental: 'bb' },\n  A: { index: 5, int_val: 9 },\n  AN: { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  AB: { index: 5, int_val: 8, accidental: 'b' },\n  ABB: { index: 5, int_val: 7, accidental: 'bb' },\n  B: { index: 6, int_val: 11 },\n  BN: { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  BB: { index: 6, int_val: 10, accidental: 'b' },\n  BBB: { index: 6, int_val: 9, accidental: 'bb' },\n  R: { index: 6, rest: true }, // Rest\n  X: {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'noteheadXBlack',\n    shift_right: 5.5,\n  },\n};\n\nconst validNoteTypes: Record<string, { name: string }> = {\n  n: { name: 'note' },\n  r: { name: 'rest' },\n  h: { name: 'harmonic' },\n  m: { name: 'muted' },\n  s: { name: 'slash' },\n  g: { name: 'ghost' },\n  d: { name: 'diamond' },\n  x: { name: 'x' },\n  ci: { name: 'circled' },\n  cx: { name: 'circle x' },\n  sf: { name: 'slashed' },\n  sb: { name: 'slashed backward' },\n  sq: { name: 'square' },\n  tu: { name: 'triangle up' },\n  td: { name: 'triangle down' },\n};\n\nconst accidentals: Record<string, { code: string; parenRightPaddingAdjustment: number }> = {\n  '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n  '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n  b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n  bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n  n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n  '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n  '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n  db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n  d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n  '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n  '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n  '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n  bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n  bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n  o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n  k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n  bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'accidentalBuyukMucennebSharp', parenRightPaddingAdjustment: -1 },\n  ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n  afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n  accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n  accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n  accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n  accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n  accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n  accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n  accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n  accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n  accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n  accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n  accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n  accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n  accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n  accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n  accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n  accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n  accidentalNarrowReversedFlatAndFlat: {\n    code: 'accidentalNarrowReversedFlatAndFlat',\n    parenRightPaddingAdjustment: -1,\n  },\n  accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n  accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n\n// Helps determine the layout of accidentals.\nconst accidentalColumns: Record<number, { [name: string]: number[] }> = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n  },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nconst articulations: Record<string, ArticulationStruct> = {\n  'a.': { code: 'augmentationDot', between_lines: true }, // Staccato\n  av: {\n    aboveCode: 'articStaccatissimoAbove',\n    belowCode: 'articStaccatissimoBelow',\n    between_lines: true,\n  }, // Staccatissimo\n  'a>': {\n    aboveCode: 'articAccentAbove',\n    belowCode: 'articAccentBelow',\n    between_lines: true,\n  }, // Accent\n  'a-': {\n    aboveCode: 'articTenutoAbove',\n    belowCode: 'articTenutoBelow',\n    between_lines: true,\n  }, // Tenuto\n  'a^': {\n    aboveCode: 'articMarcatoAbove',\n    belowCode: 'articMarcatoBelow',\n    between_lines: false,\n  }, // Marcato\n  'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false }, // Left hand pizzicato\n  ao: {\n    aboveCode: 'pluckedSnapPizzicatoAbove',\n    belowCode: 'pluckedSnapPizzicatoBelow',\n    between_lines: false,\n  }, // Snap pizzicato\n  ah: { code: 'stringsHarmonic', between_lines: false }, // Natural harmonic or open note\n  'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false }, // Fermata\n  'a@a': { code: 'fermataAbove', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'fermataBelow', between_lines: false }, // Fermata below staff\n  'a@s': { aboveCode: 'fermataShortAbove', belowCode: 'fermataShortBelow', between_lines: false }, // Fermata short\n  'a@as': { code: 'fermataShortAbove', between_lines: false }, // Fermata short above staff\n  'a@us': { code: 'fermataShortBelow', between_lines: false }, // Fermata short below staff\n  'a@l': { aboveCode: 'fermataLongAbove', belowCode: 'fermataLongBelow', between_lines: false }, // Fermata long\n  'a@al': { code: 'fermataLongAbove', between_lines: false }, // Fermata long above staff\n  'a@ul': { code: 'fermataLongBelow', between_lines: false }, // Fermata long below staff\n  'a@vl': { aboveCode: 'fermataVeryLongAbove', belowCode: 'fermataVeryLongBelow', between_lines: false }, // Fermata very long\n  'a@avl': { code: 'fermataVeryLongAbove', between_lines: false }, // Fermata very long above staff\n  'a@uvl': { code: 'fermataVeryLongBelow', between_lines: false }, // Fermata very long below staff\n  'a|': { code: 'stringsUpBow', between_lines: false }, // Bow up - up stroke\n  am: { code: 'stringsDownBow', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\n\nconst ornaments: Record<string, { code: string }> = {\n  mordent: { code: 'ornamentShortTrill' },\n  mordent_inverted: { code: 'ornamentMordent' },\n  turn: { code: 'ornamentTurn' },\n  turn_inverted: { code: 'ornamentTurnSlash' },\n  tr: { code: 'ornamentTrill' },\n  upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n  downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n  prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n  pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n  upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n  downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n  lineprall: { code: 'ornamentPrecompAppoggTrill' },\n  prallprall: { code: 'ornamentTremblement' },\n  scoop: { code: 'brassScoop' },\n  doit: { code: 'brassDoitMedium' },\n  fall: { code: 'brassFallLipShort' },\n  doitLong: { code: 'brassLiftMedium' },\n  fallLong: { code: 'brassFallRoughMedium' },\n  bend: { code: 'brassBend' },\n  plungerClosed: { code: 'brassMuteClosed' },\n  plungerOpen: { code: 'brassMuteOpen' },\n  flip: { code: 'brassFlip' },\n  jazzTurn: { code: 'brassJazzTurn' },\n  smear: { code: 'brassSmear' },\n};\n\nexport class Tables {\n  static UNISON = true;\n  static SOFTMAX_FACTOR = 10;\n  static STEM_WIDTH = 1.5;\n  static STEM_HEIGHT = 35;\n  static STAVE_LINE_THICKNESS = 1;\n  static RENDER_PRECISION_PLACES = 3;\n  static RESOLUTION = RESOLUTION;\n\n  /**\n   * Customize this by calling Flow.setMusicFont(...fontNames);\n   */\n  static MUSIC_FONT_STACK: Font[] = [];\n\n  /**\n   * @returns the `Font` object at the head of the music font stack.\n   */\n  static currentMusicFont(): Font {\n    if (Tables.MUSIC_FONT_STACK.length === 0) {\n      throw new RuntimeError(\n        'NoFonts',\n        'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).'\n      );\n    } else {\n      return Tables.MUSIC_FONT_STACK[0];\n    }\n  }\n\n  static NOTATION_FONT_SCALE = 39;\n  static TABLATURE_FONT_SCALE = 39;\n\n  static SLASH_NOTEHEAD_WIDTH = 15;\n  static STAVE_LINE_DISTANCE = 10;\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  static TEXT_HEIGHT_OFFSET_HACK = 1;\n\n  static clefProperties(clef: string): { line_shift: number } {\n    if (!clef || !(clef in clefs)) throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n    return clefs[clef];\n  }\n\n  /**\n   * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n   * @param clef\n   * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n   * @returns properties for the specified note.\n   */\n  static keyProperties(keyOctaveGlyph: string, clef: string = 'treble', params?: { octave_shift?: number }): KeyProps {\n    let options = { octave_shift: 0, duration: '4' };\n    if (typeof params === 'object') {\n      options = { ...options, ...params };\n    }\n    const duration = Tables.sanitizeDuration(options.duration);\n\n    const pieces = keyOctaveGlyph.split('/');\n    if (pieces.length < 2) {\n      throw new RuntimeError(\n        'BadArguments',\n        `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`\n      );\n    }\n\n    const key = pieces[0].toUpperCase();\n    const value = notesInfo[key];\n    if (!value) throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n    if (value.octave) pieces[1] = value.octave.toString();\n\n    let octave = parseInt(pieces[1], 10);\n\n    // Octave_shift is the shift to compensate for clef 8va/8vb.\n    octave += -1 * options.octave_shift;\n\n    const baseIndex = octave * 7 - 4 * 7;\n    let line = (baseIndex + value.index) / 2;\n    line += Tables.clefProperties(clef).line_shift;\n\n    let stroke = 0;\n\n    if (line <= 0 && (line * 2) % 2 === 0) stroke = 1; // stroke up\n    if (line >= 6 && (line * 2) % 2 === 0) stroke = -1; // stroke down\n\n    // Integer value for note arithmetic.\n    const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n\n    // If the user specified a glyph, overwrite the glyph code.\n    const code = value.code;\n    const shift_right = value.shift_right;\n    let customNoteHeadProps = {};\n    if (pieces.length > 2 && pieces[2]) {\n      const glyphName = pieces[2].toUpperCase();\n      customNoteHeadProps = { code: this.codeNoteHead(glyphName, duration) } || {};\n    }\n\n    return {\n      key,\n      octave,\n      line,\n      int_value,\n      accidental: value.accidental,\n      code,\n      stroke,\n      shift_right,\n      displaced: false,\n      ...customNoteHeadProps,\n    };\n  }\n\n  static integerToNote(integer?: number): string {\n    if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n      throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n    }\n\n    const table: Record<number, string> = {\n      0: 'C',\n      1: 'C#',\n      2: 'D',\n      3: 'D#',\n      4: 'E',\n      5: 'F',\n      6: 'F#',\n      7: 'G',\n      8: 'G#',\n      9: 'A',\n      10: 'A#',\n      11: 'B',\n    };\n\n    const noteValue = table[integer];\n    if (!noteValue) {\n      throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n    }\n\n    return noteValue;\n  }\n\n  static tabToGlyphProps(fret: string, scale: number = 1.0): GlyphProps {\n    let glyph = undefined;\n    let width = 0;\n    let shift_y = 0;\n\n    if (fret.toUpperCase() === 'X') {\n      const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n      glyph = 'accidentalDoubleSharp';\n      if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n        throw new RuntimeError('InvalidMetrics', 'Width and height required');\n      width = glyphMetrics.width;\n      shift_y = -glyphMetrics.height / 2;\n    } else {\n      width = Tables.textWidth(fret);\n    }\n\n    return {\n      text: fret,\n      code: glyph,\n      getWidth: () => width * scale,\n      shift_y,\n    } as GlyphProps;\n  }\n\n  // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n  // TODO: The actual width depends on the font family, size, weight, style.\n  static textWidth(text: string): number {\n    return 7 * text.toString().length;\n  }\n\n  static articulationCodes(artic: string): ArticulationStruct {\n    return articulations[artic];\n  }\n\n  static accidentalMap = accidentals;\n\n  static accidentalCodes(acc: string): { code: string; parenRightPaddingAdjustment: number } {\n    return accidentals[acc];\n  }\n\n  static accidentalColumnsTable = accidentalColumns;\n\n  static ornamentCodes(acc: string): { code: string } {\n    return ornaments[acc];\n  }\n\n  static keySignature(spec: string): { type: string; line: number }[] {\n    const keySpec = keySignatures[spec];\n\n    if (!keySpec) {\n      throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n    }\n\n    if (!keySpec.acc) {\n      return [];\n    }\n\n    const accidentalList: Record<string, number[]> = {\n      b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n      '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n    };\n\n    const notes = accidentalList[keySpec.acc];\n\n    const acc_list = [];\n    for (let i = 0; i < keySpec.num; ++i) {\n      const line = notes[i];\n      acc_list.push({ type: keySpec.acc, line });\n    }\n\n    return acc_list;\n  }\n\n  static getKeySignatures(): Record<string, { acc?: string; num: number }> {\n    return keySignatures;\n  }\n\n  static hasKeySignature(spec: string): boolean {\n    return spec in keySignatures;\n  }\n\n  static unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n  };\n\n  /**\n   * Convert duration aliases to the number based duration.\n   * If the input isn't an alias, simply return the input.\n   * @param duration\n   * @returns Example: 'q' -> '4', '8' -> '8'\n   */\n  static sanitizeDuration(duration: string): string {\n    const durationNumber: string = durationAliases[duration];\n    if (durationNumber !== undefined) {\n      duration = durationNumber;\n    }\n    if (durations[duration] === undefined) {\n      throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n    }\n    return duration;\n  }\n\n  /** Convert the `duration` to a fraction. */\n  static durationToFraction(duration: string): Fraction {\n    return new Fraction().parse(Tables.sanitizeDuration(duration));\n  }\n\n  /** Convert the `duration` to a number. */\n  static durationToNumber(duration: string): number {\n    return Tables.durationToFraction(duration).value();\n  }\n\n  /* Convert the `duration` to total ticks. */\n  static durationToTicks(duration: string): number {\n    duration = Tables.sanitizeDuration(duration);\n    const ticks = durations[duration];\n    if (ticks === undefined) {\n      throw new RuntimeError('InvalidDuration');\n    }\n    return ticks;\n  }\n\n  static codeNoteHead(type: string, duration: string): string {\n    let code = '';\n    switch (type) {\n      /* Diamond */\n      case 'D0':\n        code = 'noteheadDiamondWhole';\n        break;\n      case 'D1':\n        code = 'noteheadDiamondHalf';\n        break;\n      case 'D2':\n        code = 'noteheadDiamondBlack';\n        break;\n      case 'D3':\n        code = 'noteheadDiamondBlack';\n        break;\n\n      /* Triangle */\n      case 'T0':\n        code = 'noteheadTriangleUpWhole';\n        break;\n      case 'T1':\n        code = 'noteheadTriangleUpHalf';\n        break;\n      case 'T2':\n        code = 'noteheadTriangleUpBlack';\n        break;\n      case 'T3':\n        code = 'noteheadTriangleUpBlack';\n        break;\n\n      /* Cross */\n      case 'X0':\n        code = 'noteheadXWhole';\n        break;\n      case 'X1':\n        code = 'noteheadXHalf';\n        break;\n      case 'X2':\n        code = 'noteheadXBlack';\n        break;\n      case 'X3':\n        code = 'noteheadCircleX';\n        break;\n\n      /* Square */\n      case 'S1':\n        code = 'noteheadSquareWhite';\n        break;\n      case 'S2':\n        code = 'noteheadSquareBlack';\n        break;\n\n      /* Rectangle */\n      case 'R1':\n        code = 'vexNoteHeadRectWhite'; // no smufl code\n        break;\n      case 'R2':\n        code = 'vexNoteHeadRectBlack'; // no smufl code\n        break;\n\n      case 'DO':\n        code = 'noteheadTriangleUpBlack';\n        break;\n      case 'RE':\n        code = 'noteheadMoonBlack';\n        break;\n      case 'MI':\n        code = 'noteheadDiamondBlack';\n        break;\n      case 'FA':\n        code = 'noteheadTriangleLeftBlack';\n        break;\n      case 'FAUP':\n        code = 'noteheadTriangleRightBlack';\n        break;\n      case 'SO':\n        code = 'noteheadBlack';\n        break;\n      case 'LA':\n        code = 'noteheadSquareBlack';\n        break;\n      case 'TI':\n        code = 'noteheadTriangleRoundDownBlack';\n        break;\n\n      case 'D':\n      case 'H': // left for backwards compatibility\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadDiamondDoubleWhole';\n            break;\n          case '1':\n            code = 'noteheadDiamondWhole';\n            break;\n          case '2':\n            code = 'noteheadDiamondHalf';\n            break;\n          default:\n            code = 'noteheadDiamondBlack';\n            break;\n        }\n        break;\n      case 'N':\n      case 'G':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadDoubleWhole';\n            break;\n          case '1':\n            code = 'noteheadWhole';\n            break;\n          case '2':\n            code = 'noteheadHalf';\n            break;\n          default:\n            code = 'noteheadBlack';\n            break;\n        }\n        break;\n      case 'M': // left for backwards compatibility\n      case 'X':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadXDoubleWhole';\n            break;\n          case '1':\n            code = 'noteheadXWhole';\n            break;\n          case '2':\n            code = 'noteheadXHalf';\n            break;\n          default:\n            code = 'noteheadXBlack';\n            break;\n        }\n        break;\n      case 'CX':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadCircleXDoubleWhole';\n            break;\n          case '1':\n            code = 'noteheadCircleXWhole';\n            break;\n          case '2':\n            code = 'noteheadCircleXHalf';\n            break;\n          default:\n            code = 'noteheadCircleX';\n            break;\n        }\n        break;\n      case 'CI':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadCircledDoubleWhole';\n            break;\n          case '1':\n            code = 'noteheadCircledWhole';\n            break;\n          case '2':\n            code = 'noteheadCircledHalf';\n            break;\n          default:\n            code = 'noteheadCircledBlack';\n            break;\n        }\n        break;\n      case 'SQ':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadDoubleWholeSquare';\n            break;\n          case '1':\n            code = 'noteheadSquareWhite';\n            break;\n          case '2':\n            code = 'noteheadSquareWhite';\n            break;\n          default:\n            code = 'noteheadSquareBlack';\n            break;\n        }\n        break;\n      case 'TU':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadTriangleUpDoubleWhole';\n            break;\n          case '1':\n            code = 'noteheadTriangleUpWhole';\n            break;\n          case '2':\n            code = 'noteheadTriangleUpHalf';\n            break;\n          default:\n            code = 'noteheadTriangleUpBlack';\n            break;\n        }\n        break;\n      case 'TD':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadTriangleDownDoubleWhole';\n            break;\n          case '1':\n            code = 'noteheadTriangleDownWhole';\n            break;\n          case '2':\n            code = 'noteheadTriangleDownHalf';\n            break;\n          default:\n            code = 'noteheadTriangleDownBlack';\n            break;\n        }\n        break;\n      case 'SF':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadSlashedDoubleWhole1';\n            break;\n          case '1':\n            code = 'noteheadSlashedWhole1';\n            break;\n          case '2':\n            code = 'noteheadSlashedHalf1';\n            break;\n          default:\n            code = 'noteheadSlashedBlack1';\n        }\n        break;\n      case 'SB':\n        switch (duration) {\n          case '1/2':\n            code = 'noteheadSlashedDoubleWhole2';\n            break;\n          case '1':\n            code = 'noteheadSlashedWhole2';\n            break;\n          case '2':\n            code = 'noteheadSlashedHalf2';\n            break;\n          default:\n            code = 'noteheadSlashedBlack2';\n        }\n        break;\n    }\n    return code;\n  }\n\n  // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n  // The default type is a regular note ('n').\n  static getGlyphProps(duration: string, type: string = 'n'): GlyphProps {\n    duration = Tables.sanitizeDuration(duration);\n\n    // Lookup duration for default glyph head code\n    let code = durationCodes[duration];\n    if (code === undefined) {\n      code = durationCodes['4'];\n    }\n\n    // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n    let glyphTypeProperties = code[type];\n\n    // Try and get it from the custom list of note heads\n    const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n    if (codeNoteHead != '')\n      glyphTypeProperties = { ...glyphTypeProperties, ...{ code_head: codeNoteHead, code: codeNoteHead } };\n\n    const code_head = glyphTypeProperties.code_head as string;\n\n    // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n    // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n    const getWidth = (scale = Tables.NOTATION_FONT_SCALE): number => Glyph.getWidth(code_head, scale);\n\n    // Merge duration props for 'duration' with the note head properties.\n    return { ...code.common, getWidth: getWidth, ...glyphTypeProperties } as GlyphProps;\n  }\n\n  /* The list of valid note types. Used by note.ts during parseNoteStruct(). */\n  static validTypes = validNoteTypes;\n\n  // Default time signature.\n  static TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n  };\n}\n\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\nconst durationCodes: Record<string, Record<string, Partial<GlyphProps>>> = {\n  '1/2': {\n    common: {\n      code_head: '',\n      stem: false,\n      flag: false,\n      stem_up_extension: -Tables.STEM_HEIGHT,\n      stem_down_extension: -Tables.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Breve rest\n        code_head: 'restDoubleWhole',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      s: {\n        // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n\n  1: {\n    common: {\n      code_head: '',\n      stem: false,\n      flag: false,\n      stem_up_extension: -Tables.STEM_HEIGHT,\n      stem_down_extension: -Tables.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Whole rest\n        code_head: 'restWhole',\n      ledger_code_head: 'restWholeLegerLine',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      s: {\n        // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n\n  2: {\n    common: {\n      code_head: '',\n      stem: true,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Half rest\n        code_head: 'restHalf',\n      ledger_code_head: 'restHalfLegerLine',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      s: {\n        // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n\n  4: {\n    common: {\n      code_head: '',\n      stem: true,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Quarter rest\n        code_head: 'restQuarter',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      s: {\n        // Quarter slash\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n\n  8: {\n    common: {\n      code_head: '',\n      stem: true,\n      flag: true,\n      beam_count: 1,\n      stem_beam_extension: 0,\n      code_flag_upstem: 'flag8thUp',\n      code_flag_downstem: 'flag8thDown',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Eighth rest\n        code_head: 'rest8th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      s: {\n        // Eighth slash\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n\n  16: {\n    common: {\n      code_head: '',\n      beam_count: 2,\n      stem_beam_extension: 0,\n      stem: true,\n      flag: true,\n      code_flag_upstem: 'flag16thUp',\n      code_flag_downstem: 'flag16thDown',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Sixteenth rest\n        code_head: 'rest16th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      s: {\n        // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n\n  32: {\n    common: {\n      code_head: '',\n      beam_count: 3,\n      stem_beam_extension: 7.5,\n      stem: true,\n      flag: true,\n      code_flag_upstem: 'flag32ndUp',\n      code_flag_downstem: 'flag32ndDown',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      tabnote_stem_up_extension: 9,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Thirty-second rest\n        code_head: 'rest32nd',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      s: {\n        // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n\n  64: {\n    common: {\n      code_head: '',\n      beam_count: 4,\n      stem_beam_extension: 15,\n      stem: true,\n      flag: true,\n      code_flag_upstem: 'flag64thUp',\n      code_flag_downstem: 'flag64thDown',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      tabnote_stem_up_extension: 13,\n      tabnote_stem_down_extension: 13,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Sixty-fourth rest\n        code_head: 'rest64th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      s: {\n        // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n\n  128: {\n    common: {\n      code_head: '',\n      beam_count: 5,\n      stem_beam_extension: 22.5,\n      stem: true,\n      flag: true,\n      code_flag_upstem: 'flag128thUp',\n      code_flag_downstem: 'flag128thDown',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      tabnote_stem_up_extension: 22,\n      tabnote_stem_down_extension: 22,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n      r: {\n        // Hundred-twenty-eight rest\n        code_head: 'rest128th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -2.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      s: {\n        // Hundred-twenty-eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Font, FontGlyph } from './font';\nimport { RenderContext } from './rendercontext';\nimport { Stave } from './stave';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n\nexport interface GlyphProps {\n  code_head: string;\n  ledger_code_head?: string;\n  dot_shiftY: number;\n  position: string;\n  rest: boolean;\n  line_below: number;\n  line_above: number;\n  stem_beam_extension: number;\n  stem_up_extension: number;\n  stem_down_extension: number;\n  stem: boolean;\n  code?: string;\n  code_flag_upstem?: string;\n  code_flag_downstem?: string;\n  flag?: boolean;\n  width?: number;\n  text?: string;\n  tabnote_stem_down_extension: number;\n  tabnote_stem_up_extension: number;\n  beam_count: number;\n  shift_y?: number;\n  getWidth(a?: number): number;\n}\n\nexport interface GlyphOptions {\n  category?: string;\n}\n\nexport interface GlyphMetrics {\n  width: number;\n  height: number;\n  x_min: number;\n  x_max: number;\n  x_shift: number;\n  y_shift: number;\n  scale: number;\n  ha: number;\n  outline: number[];\n  font: Font;\n}\n\nexport const enum OutlineCode {\n  MOVE = 0,\n  LINE = 1,\n  QUADRATIC = 2,\n  BEZIER = 3,\n}\n\nclass GlyphCacheEntry {\n  metrics: GlyphMetrics;\n  bbox: BoundingBox;\n  point: number = -1;\n\n  constructor(fontStack: Font[], code: string, category?: string) {\n    this.metrics = Glyph.loadMetrics(fontStack, code, category);\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.metrics.scale,\n      this.metrics.x_shift,\n      this.metrics.y_shift\n    );\n\n    if (category) {\n      this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n    }\n  }\n}\n\nclass GlyphCache {\n  protected cache: Map<string, Record<string, GlyphCacheEntry>> = new Map();\n\n  lookup(code: string, category?: string): GlyphCacheEntry {\n    let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n    if (entries === undefined) {\n      entries = {};\n      this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n    }\n    const key = category ? `${code}%${category}` : code;\n    let entry = entries[key];\n    if (entry === undefined) {\n      entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n      entries[key] = entry;\n    }\n    return entry;\n  }\n}\n\nclass GlyphOutline {\n  private i: number = 0;\n  private precision = 1;\n\n  constructor(private outline: number[], private originX: number, private originY: number, private scale: number) {\n    // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n    this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n  }\n\n  done(): boolean {\n    return this.i >= this.outline.length;\n  }\n  next(): number {\n    return Math.round((this.outline[this.i++] * this.precision) / this.precision);\n  }\n  nextX(): number {\n    return Math.round((this.originX + this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n  }\n  nextY(): number {\n    return Math.round((this.originY - this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n  }\n\n  static parse(str: string): number[] {\n    const result: number[] = [];\n    const parts = str.split(' ');\n    let i = 0;\n    while (i < parts.length) {\n      switch (parts[i++]) {\n        case 'm':\n          result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n          break;\n        case 'l':\n          result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n          break;\n        case 'q':\n          result.push(\n            OutlineCode.QUADRATIC,\n            parseInt(parts[i++]),\n            parseInt(parts[i++]),\n            parseInt(parts[i++]),\n            parseInt(parts[i++])\n          );\n          break;\n        case 'b':\n          result.push(\n            OutlineCode.BEZIER,\n            parseInt(parts[i++]),\n            parseInt(parts[i++]),\n            parseInt(parts[i++]),\n            parseInt(parts[i++]),\n            parseInt(parts[i++]),\n            parseInt(parts[i++])\n          );\n          break;\n      }\n    }\n    return result;\n  }\n}\n\nexport class Glyph extends Element {\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // STATIC MEMBERS\n\n  static get CATEGORY(): string {\n    return Category.Glyph;\n  }\n\n  protected static cache = new GlyphCache();\n\n  // The current cache key for GlyphCache above.\n  // Computed when Flow.setMusicFont(...) is called.\n  // It is set to a comma separated list of font names.\n  public static CURRENT_CACHE_KEY: string = '';\n\n  // Used by the GlyphCache above.\n  // Set when Flow.setMusicFont(...) is called.\n  public static MUSIC_FONT_STACK: Font[] = [];\n\n  /**\n   * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n   * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n   *\n   * @param font\n   * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n   * @param code\n   * @param key\n   * @param defaultValue\n   */\n  static lookupFontMetric(font: Font, category: string, code: string, key: string, defaultValue: number): number {\n    let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n    if (value === undefined) {\n      // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n      value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n    }\n    return value;\n  }\n\n  static lookupGlyph(fontStack: Font[], code: string): { font: Font; glyph: FontGlyph } {\n    defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n\n    let glyph: FontGlyph;\n    let font: Font;\n    for (let i = 0; i < fontStack.length; i++) {\n      font = fontStack[i];\n      glyph = font.getGlyphs()[code];\n      if (glyph) return { glyph, font };\n    }\n\n    throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n  }\n\n  static loadMetrics(fontStack: Font[], code: string, category?: string): GlyphMetrics {\n    const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n\n    if (!glyph.o) throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n\n    let x_shift = 0;\n    let y_shift = 0;\n    let scale = 1;\n    if (category && font) {\n      x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n      y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n      scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    if (!glyph.cached_outline) {\n      glyph.cached_outline = GlyphOutline.parse(glyph.o);\n    }\n\n    return {\n      x_min,\n      x_max,\n      x_shift,\n      y_shift,\n      scale,\n      ha,\n      outline: glyph.cached_outline,\n      font,\n      width: x_max - x_min,\n      height: ha,\n    };\n  }\n\n  /**\n   * Renders glyphs from the default font stack.\n   *\n   * @param ctx Canvas or SVG context\n   * @param x_pos x coordinate\n   * @param y_pos y coordinate\n   * @param point the point size of the font\n   * @param code the glyph code in font.getGlyphs()\n   * @param options\n   * @returns\n   */\n  static renderGlyph(\n    ctx: RenderContext,\n    x_pos: number,\n    y_pos: number,\n    point: number,\n    code: string,\n    options?: { category?: string; scale?: number }\n  ): GlyphMetrics {\n    const data = Glyph.cache.lookup(code, options?.category);\n    const metrics = data.metrics;\n    if (data.point != -1) {\n      point = data.point;\n    }\n\n    const customScale = options?.scale ?? 1;\n    const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n\n    Glyph.renderOutline(\n      ctx,\n      metrics.outline,\n      scale,\n      x_pos + metrics.x_shift * customScale,\n      y_pos + metrics.y_shift * customScale\n    );\n    return metrics;\n  }\n\n  static renderOutline(ctx: RenderContext, outline: number[], scale: number, x_pos: number, y_pos: number): void {\n    const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n\n    ctx.beginPath();\n    let x, y: number;\n    while (!go.done()) {\n      switch (go.next()) {\n        case OutlineCode.MOVE:\n          ctx.moveTo(go.nextX(), go.nextY());\n          break;\n        case OutlineCode.LINE:\n          ctx.lineTo(go.nextX(), go.nextY());\n          break;\n        case OutlineCode.QUADRATIC:\n          x = go.nextX();\n          y = go.nextY();\n          ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n          break;\n        case OutlineCode.BEZIER:\n          x = go.nextX();\n          y = go.nextY();\n          ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n          break;\n      }\n    }\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline: number[], scale: number, x_pos: number, y_pos: number): BoundingBox {\n    const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n    const bboxComp = new BoundingBoxComputation();\n\n    // (penX, penY) hold the pen position: the start of each stroke.\n    let penX: number = x_pos;\n    let penY: number = y_pos;\n    let x, y: number;\n    while (!go.done()) {\n      switch (go.next()) {\n        case OutlineCode.MOVE:\n          // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n          penX = go.nextX();\n          penY = go.nextY();\n          break;\n        case OutlineCode.LINE:\n          bboxComp.addPoint(penX, penY);\n          penX = go.nextX();\n          penY = go.nextY();\n          bboxComp.addPoint(penX, penY);\n          break;\n        case OutlineCode.QUADRATIC:\n          x = go.nextX();\n          y = go.nextY();\n          bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n          penX = x;\n          penY = y;\n          break;\n        case OutlineCode.BEZIER:\n          x = go.nextX();\n          y = go.nextY();\n          bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n          penX = x;\n          penY = y;\n          break;\n      }\n    }\n\n    return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n  }\n\n  static getWidth(code: string, point: number, category?: string): number {\n    const data = Glyph.cache.lookup(code, category);\n    if (data.point != -1) {\n      point = data.point;\n    }\n    const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n    return data.bbox.getW() * scale;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // INSTANCE MEMBERS\n\n  bbox: BoundingBox = new BoundingBox(0, 0, 0, 0);\n  code: string;\n  // metrics is initialized in the constructor by reset() or setOptions() which calls reset().\n  // eslint-disable-next-line\n  metrics!: GlyphMetrics;\n  topGlyphs: Glyph[] = [];\n  botGlyphs: Glyph[] = [];\n\n  protected options: GlyphOptions = {};\n  protected originShift: { x: number; y: number };\n  protected x_shift: number;\n  protected y_shift: number;\n  scale: number = 1;\n  protected point: number;\n  protected stave?: Stave;\n\n  /**\n   * @param code\n   * @param point\n   * @param options\n   */\n  constructor(code: string, point: number, options?: GlyphOptions) {\n    super();\n\n    this.code = code;\n    this.point = point;\n\n    this.originShift = { x: 0, y: 0 };\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  // eslint-disable-next-line\n  draw(...args: any[]): void {\n    // DO NOTHING.\n  }\n\n  getCode(): string {\n    return this.code;\n  }\n\n  // eslint-disable-next-line\n  setOptions(options: any): void {\n    this.options = { ...this.options, ...options };\n    this.reset();\n  }\n\n  setPoint(point: number): this {\n    this.point = point;\n    return this;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  getXShift(): number {\n    return this.x_shift;\n  }\n\n  setXShift(x_shift: number): this {\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  getYshift(): number {\n    return this.y_shift;\n  }\n\n  setYShift(y_shift: number): this {\n    this.y_shift = y_shift;\n    return this;\n  }\n\n  reset(): void {\n    const data = Glyph.cache.lookup(this.code, this.options.category);\n    this.metrics = data.metrics;\n    // Override point from metrics file\n    if (data.point != -1) {\n      this.point = data.point;\n    }\n\n    this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n    this.bbox = new BoundingBox(\n      data.bbox.getX() * this.scale,\n      data.bbox.getY() * this.scale,\n      data.bbox.getW() * this.scale,\n      data.bbox.getH() * this.scale\n    );\n  }\n\n  checkMetrics(): GlyphMetrics {\n    return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n  }\n\n  getMetrics(): GlyphMetrics {\n    const metrics = this.checkMetrics();\n    const metricsScale = metrics.scale;\n    return {\n      x_min: metrics.x_min * this.scale * metricsScale,\n      x_max: metrics.x_max * this.scale * metricsScale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n      scale: this.scale * metricsScale,\n      x_shift: metrics.x_shift,\n      y_shift: metrics.y_shift,\n      outline: metrics.outline,\n      font: metrics.font,\n      ha: metrics.ha,\n    };\n  }\n\n  setOriginX(x: number): void {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y: number): void {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x: number, y: number): void {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx: RenderContext, x: number, y: number): void {\n    const metrics = this.checkMetrics();\n\n    const outline = metrics.outline;\n    const scale = this.scale * metrics.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    const xPos = x + this.originShift.x + metrics.x_shift;\n    const yPos = y + this.originShift.y + metrics.y_shift;\n    Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n    this.restoreStyle(ctx);\n  }\n\n  checkStave(): Stave {\n    return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n  }\n\n  renderToStave(x: number): void {\n    const context = this.checkContext();\n    const metrics = this.checkMetrics();\n    const stave = this.checkStave();\n\n    const outline = metrics.outline;\n    const scale = this.scale * metrics.scale;\n\n    this.setRendered();\n    this.applyStyle();\n\n    const xPos = x + this.x_shift + metrics.x_shift;\n    const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n    Glyph.renderOutline(context, outline, scale, xPos, yPos);\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Element } from './element';\nimport { ModifierContext } from './modifiercontext';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n\nexport enum ModifierPosition {\n  CENTER = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  ABOVE = 3,\n  BELOW = 4,\n}\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n  /**\n   * Modifiers category string. Every modifier has a different category.\n   * The `ModifierContext` uses this to determine the type and order of the modifiers.\n   */\n  static get CATEGORY(): string {\n    return Category.Modifier;\n  }\n\n  /** Modifiers can be positioned almost anywhere, relative to a note. */\n  static get Position(): typeof ModifierPosition {\n    return ModifierPosition;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      center: ModifierPosition.CENTER,\n      above: ModifierPosition.ABOVE,\n      below: ModifierPosition.BELOW,\n      left: ModifierPosition.LEFT,\n      right: ModifierPosition.RIGHT,\n    };\n  }\n\n  // Modifiers are attached to a note and an index. An index is a specific head in a chord.\n  protected note?: Note;\n  protected index?: number;\n\n  protected width: number;\n  protected text_line: number;\n  protected position: ModifierPosition;\n  protected y_shift: number;\n  protected x_shift: number;\n\n  private spacingFromNextModifier: number;\n  private modifierContext?: ModifierContext;\n\n  constructor() {\n    super();\n\n    this.width = 0;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  /** Called when position changes. */\n  protected reset(): void {\n    // DO NOTHING.\n  }\n\n  /** Get modifier widths. */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /** Set modifier widths. */\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n  getNote(): Note {\n    return defined(this.note, 'NoNote', 'Modifier has no note.');\n  }\n\n  /**\n   * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n   * Also verifies that the index is valid.\n   */\n  checkAttachedNote(): Note {\n    const category = this.getCategory();\n    defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n    return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n  }\n\n  /**\n   * Set attached note.\n   * @param note (`StaveNote`, `TabNote`, etc.)\n   */\n  setNote(note: Note): this {\n    this.note = note;\n    return this;\n  }\n\n  /** Get note index, which is a specific note in a chord. */\n  getIndex(): number | undefined {\n    return this.index;\n  }\n\n  /** Check and get note index, which is a specific note in a chord. */\n  checkIndex(): number {\n    return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n  }\n\n  /** Set note index, which is a specific note in a chord. */\n  setIndex(index: number): this {\n    this.index = index;\n    return this;\n  }\n\n  /** Get `ModifierContext`. */\n  getModifierContext(): ModifierContext | undefined {\n    return this.modifierContext;\n  }\n\n  /** Check and get `ModifierContext`. */\n  checkModifierContext(): ModifierContext {\n    return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n  }\n\n  /** Every modifier must be part of a `ModifierContext`. */\n  setModifierContext(c: ModifierContext): this {\n    this.modifierContext = c;\n    return this;\n  }\n\n  /** Get position. */\n  getPosition(): number {\n    return this.position;\n  }\n\n  /**\n   * Set position.\n   * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n   */\n  setPosition(position: string | number): this {\n    this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n    this.reset();\n    return this;\n  }\n\n  /** Set the `text_line` for the modifier. */\n  setTextLine(line: number): this {\n    this.text_line = line;\n    return this;\n  }\n\n  /** Shift modifier down `y` pixels. Negative values shift up. */\n  setYShift(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  /** Set spacing from next modifier. */\n  setSpacingFromNextModifier(x: number): void {\n    this.spacingFromNextModifier = x;\n  }\n\n  /** Get spacing from next modifier. */\n  getSpacingFromNextModifier(): number {\n    return this.spacingFromNextModifier;\n  }\n\n  /**\n   * Shift modifier `x` pixels in the direction of the modifier. Negative values\n   * shift reverse.\n   */\n  setXShift(x: number): this {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n    return this;\n  }\n\n  /** Get shift modifier `x` */\n  getXShift(): number {\n    return this.x_shift;\n  }\n\n  /** Render the modifier onto the canvas. */\n  draw(): void {\n    this.checkContext();\n    throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n  }\n\n  // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n  alignSubNotesWithNote(subNotes: Note[], note: Note): void {\n    // Shift over the tick contexts of each note\n    const tickContext = note.getTickContext();\n    const metrics = tickContext.getMetrics();\n    const stave = note.getStave();\n    const subNoteXOffset =\n      tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n\n    subNotes.forEach((subNote) => {\n      const subTickContext = subNote.getTickContext();\n      if (stave) subNote.setStave(stave);\n      subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n    });\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { RuntimeError } from './util';\n\nexport interface NoteAccidental {\n  note: number;\n  accidental: AccidentalValue;\n}\n\nexport interface NoteParts {\n  root: string;\n  accidental: string;\n}\n\nexport interface KeyParts {\n  root: string;\n  accidental: string;\n  type: string;\n}\n\nexport type KeyValue = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11;\n\nexport type RootValue = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type AccidentalValue = -2 | -1 | 0 | 1 | 2;\n\nexport interface Key {\n  root_index: RootValue;\n  int_val: KeyValue;\n}\n\n/** Music implements some standard music theory routines. */\nexport class Music {\n  /** Number of an canonical notes (12). */\n  static get NUM_TONES(): number {\n    return this.canonical_notes.length;\n  }\n\n  /** Names of root notes ('c', 'd',...) */\n  static get roots(): string[] {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  /** Values of the root notes.*/\n  static get root_values(): KeyValue[] {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  /** Indices of the root notes.*/\n  static get root_indices(): Record<string, RootValue> {\n    return {\n      c: 0,\n      d: 1,\n      e: 2,\n      f: 3,\n      g: 4,\n      a: 5,\n      b: 6,\n    };\n  }\n\n  /** Names of canonical notes ('c', 'c#', 'd',...). */\n  static get canonical_notes(): string[] {\n    return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n  }\n\n  /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n  static get diatonic_intervals(): string[] {\n    return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n  }\n\n  /** NoteAccidental associated to diatonic intervals. */\n  static get diatonic_accidentals(): Record<string, NoteAccidental> {\n    return {\n      unison: { note: 0, accidental: 0 },\n      m2: { note: 1, accidental: -1 },\n      M2: { note: 1, accidental: 0 },\n      m3: { note: 2, accidental: -1 },\n      M3: { note: 2, accidental: 0 },\n      p4: { note: 3, accidental: 0 },\n      dim5: { note: 4, accidental: -1 },\n      p5: { note: 4, accidental: 0 },\n      m6: { note: 5, accidental: -1 },\n      M6: { note: 5, accidental: 0 },\n      b7: { note: 6, accidental: -1 },\n      M7: { note: 6, accidental: 0 },\n      octave: { note: 7, accidental: 0 },\n    };\n  }\n\n  /** Semitones shift associated to intervals .*/\n  static get intervals(): Record<string, number> {\n    return {\n      u: 0,\n      unison: 0,\n      m2: 1,\n      b2: 1,\n      min2: 1,\n      S: 1,\n      H: 1,\n      2: 2,\n      M2: 2,\n      maj2: 2,\n      T: 2,\n      W: 2,\n      m3: 3,\n      b3: 3,\n      min3: 3,\n      M3: 4,\n      3: 4,\n      maj3: 4,\n      4: 5,\n      p4: 5,\n      '#4': 6,\n      b5: 6,\n      aug4: 6,\n      dim5: 6,\n      5: 7,\n      p5: 7,\n      '#5': 8,\n      b6: 8,\n      aug5: 8,\n      6: 9,\n      M6: 9,\n      maj6: 9,\n      b7: 10,\n      m7: 10,\n      min7: 10,\n      dom7: 10,\n      M7: 11,\n      maj7: 11,\n      8: 12,\n      octave: 12,\n    };\n  }\n\n  /** Semitones shifts associated with scales. */\n  static get scales(): Record<string, number[]> {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n      ionian: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      phyrgian: [1, 2, 2, 2, 1, 2, 2],\n      lydian: [2, 2, 2, 1, 2, 2, 1],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      aeolian: [2, 1, 2, 2, 1, 2, 2],\n      locrian: [1, 2, 2, 1, 2, 2, 2],\n    };\n  }\n\n  /** Scales associated with m (minor) and M (major). */\n  static get scaleTypes(): Record<string, number[]> {\n    return {\n      M: Music.scales.major,\n      m: Music.scales.minor,\n    };\n  }\n\n  /** Accidentals abbreviations. */\n  static get accidentals(): string[] {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  /** Note values. */\n  static get noteValues(): Record<string, Key> {\n    return {\n      c: { root_index: 0, int_val: 0 },\n      cn: { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      cb: { root_index: 0, int_val: 11 },\n      cbb: { root_index: 0, int_val: 10 },\n      d: { root_index: 1, int_val: 2 },\n      dn: { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      db: { root_index: 1, int_val: 1 },\n      dbb: { root_index: 1, int_val: 0 },\n      e: { root_index: 2, int_val: 4 },\n      en: { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      eb: { root_index: 2, int_val: 3 },\n      ebb: { root_index: 2, int_val: 2 },\n      f: { root_index: 3, int_val: 5 },\n      fn: { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      fb: { root_index: 3, int_val: 4 },\n      fbb: { root_index: 3, int_val: 3 },\n      g: { root_index: 4, int_val: 7 },\n      gn: { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      gb: { root_index: 4, int_val: 6 },\n      gbb: { root_index: 4, int_val: 5 },\n      a: { root_index: 5, int_val: 9 },\n      an: { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      ab: { root_index: 5, int_val: 8 },\n      abb: { root_index: 5, int_val: 7 },\n      b: { root_index: 6, int_val: 11 },\n      bn: { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      bb: { root_index: 6, int_val: 10 },\n      bbb: { root_index: 6, int_val: 9 },\n    };\n  }\n\n  protected isValidNoteValue(note: number): boolean {\n    return note >= 0 && note < Music.canonical_notes.length;\n  }\n\n  protected isValidIntervalValue(interval: number): boolean {\n    return interval >= 0 && interval < Music.diatonic_intervals.length;\n  }\n\n  /** Return root and accidental associated to a note. */\n  getNoteParts(noteString: string): NoteParts {\n    if (!noteString || noteString.length < 1) {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match !== null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  /** Return root, accidental and type associated to a key. */\n  getKeyParts(keyString: string): KeyParts {\n    if (!keyString || keyString.length < 1) {\n      throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match !== null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  /** Note value associated to a note name. */\n  getNoteValue(noteString: string): number {\n    const value = Music.noteValues[noteString];\n    if (value === undefined) {\n      throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n    }\n    return value.int_val;\n  }\n\n  /** Interval value associated to an interval name. */\n  getIntervalValue(intervalString: string): number {\n    const value = Music.intervals[intervalString];\n    if (value === undefined) {\n      throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n    }\n    return value;\n  }\n\n  /** Canonical note name associated to a value. */\n  getCanonicalNoteName(noteValue: number): string {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n    return Music.canonical_notes[noteValue];\n  }\n\n  /** Interval name associated to a value. */\n  getCanonicalIntervalName(intervalValue: number): string {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /**\n   * Given a note, interval, and interval direction, produce the relative note.\n   */\n  getRelativeNoteValue(noteValue: number, intervalValue: number, direction: number = 1): number {\n    if (direction !== 1 && direction !== -1) {\n      throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  /**\n   * Given a root and note value, produce the relative note name.\n   */\n  getRelativeNoteName(root: string, noteValue: number): string {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /**\n   * Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key: number, intervals: number[]): number[] {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i++) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /**\n   * Return the interval of a note, given a diatonic scale.\n   * e.g., given the scale C, and the note E, returns M3.\n   */\n  getIntervalBetween(note1: number, note2: number, direction: number = 1): number {\n    if (direction !== 1 && direction !== -1) {\n      throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1 ? note2 - note1 : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  /**\n   * Create a scale map that represents the pitch state for a\n   * `keySignature`. For example, passing a `G` to `keySignature` would\n   * return a scale map with every note naturalized except for `F` which\n   * has an `F#` state.\n   */\n  createScaleMap(keySignature: string): Record<string, string> {\n    const keySigParts = this.getKeyParts(keySignature);\n    if (!keySigParts.type) throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {} as Record<string, string>;\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\nimport { Voice } from './voice';\n\nexport type Line = {\n  column: number;\n  line: number;\n  flatLine: boolean;\n  dblSharpLine: boolean;\n  numAcc: number;\n  width: number;\n};\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Accidental.DEBUG) log('Vex.Flow.Accidental', args);\n}\n\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\n\nexport class Accidental extends Modifier {\n  /** Accidental code provided to the constructor. */\n  readonly type: string;\n  /** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n  protected accidental: {\n    code: string;\n    parenRightPaddingAdjustment: number;\n  };\n  public render_options: {\n    parenLeftPadding: number;\n    font_scale: number;\n    parenRightPadding: number;\n  };\n  protected cautionary: boolean;\n  // initialised in reset which is called by the constructor\n  protected glyph!: Glyph;\n  protected parenRight?: Glyph;\n  protected parenLeft?: Glyph;\n\n  /** Accidentals category string. */\n  static get CATEGORY(): string {\n    return Category.Accidental;\n  }\n\n  /** Arrange accidentals inside a ModifierContext. */\n  static format(accidentals: Accidental[], state: ModifierContextState): void {\n    // If there are no accidentals, no need to format their positions.\n    if (!accidentals || accidentals.length === 0) return;\n\n    const musicFont = Tables.currentMusicFont();\n    const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n    const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n\n    // A type used just in this formatting function.\n    type AccidentalListItem = {\n      y?: number;\n      line: number;\n      shift: number;\n      acc: Accidental;\n      lineSpace?: number;\n    };\n\n    const accList: AccidentalListItem[] = [];\n    let prevNote = undefined;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc: Accidental = accidentals[i];\n\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const index = acc.checkIndex();\n      const props = note.getKeyProps()[index];\n      if (note !== prevNote) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), shiftL);\n        }\n        prevNote = note;\n      }\n      if (stave) {\n        const lineSpace = stave.getSpacingBetweenLines();\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round((y / lineSpace) * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList: Line[] = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = undefined;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === undefined || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n          column: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Tables.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n          // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index: number) => lineList[groupStart + index];\n      const getGroupLines = (indexes: number[]) => indexes.map(getGroupLine);\n      const lineDifference = (indexA: number, indexB: number) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs: number[][]) =>\n        indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains seven members or more, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = totalColumns > column ? totalColumns : column;\n        }\n      } else {\n        // If the group contains fewer than seven members, use the layouts from\n        // the Tables.accidentalColumnsTable (See: tables.ts).\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = totalColumns > column ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths: number[] = [];\n    const columnXOffsets: number[] = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach((line) => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach((line) => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = columnXOffsets[line.column - 1] + lineWidth;\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift + additionalPadding;\n  }\n\n  /** Helper function to determine whether two lines of accidentals collide vertically */\n  static checkCollision(line1: Line, line2: Line): boolean {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) {\n      // then line 2 is on top\n      clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else {\n      // line 1 is on top\n      clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  /**\n   * Use this method to automatically apply accidentals to a set of `voices`.\n   * The accidentals will be remembered between all the voices provided.\n   * Optionally, you can also provide an initial `keySignature`.\n   */\n  static applyAccidentals(voices: Voice[], keySignature: string): void {\n    const tickPositions: number[] = [];\n    const tickNoteMap: Record<number, Tickable[]> = {};\n\n    // Sort the tickables in each voice by their tick position in the voice.\n    voices.forEach((voice) => {\n      const tickPosition = new Fraction(0, 1);\n      const tickable = voice.getTickables();\n      tickable.forEach((t) => {\n        if (t.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [t];\n        } else {\n          notesAtPosition.push(t);\n        }\n\n        tickPosition.add(t.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major.\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch.\n    const scaleMapKey = music.createScaleMap(keySignature);\n    const scaleMap: Record<string, string> = {};\n\n    tickPositions.forEach((tickPos: number) => {\n      const tickables = tickNoteMap[tickPos];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches: string[] = [];\n\n      const processNote = (t: Tickable) => {\n        // Only StaveNote implements .addModifier(), which is used below.\n        if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n          return;\n        }\n\n        // Go through each key and determine if an accidental should be applied.\n        const staveNote = t;\n        staveNote.keys.forEach((keyString: string, keyIndex: number) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n          const octave = keyString.split('/')[1];\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          if (!scaleMap[key.root + octave]) scaleMap[key.root + octave] = scaleMapKey[key.root];\n          const sameAccidental = scaleMap[key.root + octave] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n\n          // Remove accidentals\n          staveNote.getModifiers().forEach((modifier, index) => {\n            if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n              staveNote.getModifiers().splice(index, 1);\n            }\n          });\n\n          // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root + octave] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            staveNote.addModifier(accidental, keyIndex);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(keyString);\n          }\n        });\n\n        // process grace notes\n        staveNote.getModifiers().forEach((modifier: Modifier) => {\n          if (isGraceNoteGroup(modifier)) {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      tickables.forEach(processNote);\n    });\n  }\n\n  /**\n   * Create accidental.\n   * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n   * For example: `#`, `##`, `b`, `n`, etc.\n   */\n  constructor(type: string) {\n    super();\n\n    L('New accidental: ', type);\n\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: Tables.NOTATION_FONT_SCALE,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Tables.accidentalCodes(this.type);\n    defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n\n    this.reset();\n  }\n\n  protected reset(): void {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  /** Get width in pixels. */\n  getWidth(): number {\n    if (this.cautionary) {\n      const parenLeft = defined(this.parenLeft);\n      const parenRight = defined(this.parenRight);\n      const parenWidth =\n        parenLeft.getMetrics().width +\n        parenRight.getMetrics().width +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding;\n      return this.glyph.getMetrics().width + parenWidth;\n    } else {\n      return this.glyph.getMetrics().width;\n    }\n  }\n\n  /** Attach this accidental to `note`, which must be a `StaveNote`. */\n  setNote(note: Note): this {\n    defined(note, 'ArgumentError', `Bad note value: ${note}`);\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (isGraceNote(note)) {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n    return this;\n  }\n\n  /** If called, draws parenthesis around accidental. */\n  setAsCautionary(): this {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  /** Render accidental onto canvas. */\n  draw(): void {\n    const {\n      type,\n      position,\n      index,\n      cautionary,\n      x_shift,\n      y_shift,\n      glyph,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(ctx, accX, accY);\n    } else {\n      const parenLeft = defined(this.parenLeft);\n      const parenRight = defined(this.parenRight);\n\n      // Render the accidental in parentheses.\n      parenRight.render(ctx, accX, accY);\n      accX -= parenRight.getMetrics().width;\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(ctx, accX, accY);\n      accX -= glyph.getMetrics().width;\n      accX -= parenLeftPadding;\n      parenLeft.render(ctx, accX, accY);\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Stem.DEBUG) log('Vex.Flow.Stem', args);\n}\n\nexport interface StemOptions {\n  stem_down_y_base_offset?: number;\n  stem_up_y_base_offset?: number;\n  stem_down_y_offset?: number;\n  stem_up_y_offset?: number;\n  stemletHeight?: number;\n  isStemlet?: boolean;\n  hide?: boolean;\n  stem_direction?: number;\n  stem_extension?: number;\n  y_bottom?: number;\n  y_top?: number;\n  x_end?: number;\n  x_begin?: number;\n}\n\nexport class Stem extends Element {\n  /** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.Stem;\n  }\n\n  // Stem directions\n  static get UP(): number {\n    return 1;\n  }\n  static get DOWN(): number {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH(): number {\n    return Tables.STEM_WIDTH;\n  }\n  static get HEIGHT(): number {\n    return Tables.STEM_HEIGHT;\n  }\n\n  protected hide: boolean;\n  protected isStemlet: boolean;\n  protected stemletHeight: number;\n  protected x_begin: number;\n  protected x_end: number;\n  protected y_top: number;\n  protected stem_up_y_offset: number = 0;\n  protected y_bottom: number;\n  protected stem_down_y_offset: number = 0;\n  protected stem_up_y_base_offset: number = 0;\n  protected stem_down_y_base_offset: number = 0;\n  protected stem_direction: number;\n  protected stem_extension: number;\n  protected renderHeightAdjustment: number;\n\n  constructor(options?: StemOptions) {\n    super();\n\n    // Default notehead x bounds\n    this.x_begin = options?.x_begin || 0;\n    this.x_end = options?.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options?.y_top || 0;\n    this.y_bottom = options?.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options?.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options?.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options?.hide || false;\n\n    this.isStemlet = options?.isStemlet || false;\n    this.stemletHeight = options?.stemletHeight || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n    this.setOptions(options);\n  }\n\n  setOptions(options?: StemOptions): void {\n    // Changing where the stem meets the head\n    this.stem_up_y_offset = options?.stem_up_y_offset || 0;\n    this.stem_down_y_offset = options?.stem_down_y_offset || 0;\n    this.stem_up_y_base_offset = options?.stem_up_y_base_offset || 0;\n    this.stem_down_y_base_offset = options?.stem_down_y_base_offset || 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin: number, x_end: number): this {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction: number): void {\n    this.stem_direction = direction;\n  }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext: number): void {\n    this.stem_extension = ext;\n  }\n\n  getExtension(): number {\n    return this.stem_extension;\n  }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top: number, y_bottom: number): void {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // Gets the entire height for the stem\n  getHeight(): number {\n    const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n    const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n    return unsigned_height * this.stem_direction;\n  }\n\n  getBoundingBox(): BoundingBox {\n    throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents(): { topY: number; baseY: number } {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  setVisibility(isVisible: boolean): this {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet: boolean, stemletHeight: number): this {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  adjustHeightForFlag(): void {\n    this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n  }\n\n  adjustHeightForBeam(): void {\n    this.renderHeightAdjustment = -Stem.WIDTH / 2;\n  }\n\n  // Render the stem onto the canvas\n  draw(): void {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    let y_base_offset: number = 0;\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n      y_base_offset = this.stem_down_y_base_offset;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n      y_base_offset = this.stem_up_y_base_offset;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle();\n    ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n    ctx.stroke();\n    ctx.closeGroup();\n    this.restoreStyle();\n    ctx.restore();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Font, FontGlyph, FontInfo, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n\nexport interface TextFormatterInfo extends Record<string, unknown> {\n  family: string;\n  resolution?: number;\n  glyphs?: Record<string, FontGlyph>;\n  serifs: boolean;\n  monospaced: boolean;\n  italic: boolean;\n  bold: boolean;\n  maxSizeGlyph?: string;\n  superscriptOffset?: number;\n  subscriptOffset?: number;\n  description: string;\n}\n\n/**\n * Y information, 0 is baseline, yMin is lowest point.\n */\nexport interface yExtent {\n  yMin: number;\n  yMax: number;\n  height: number;\n}\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (TextFormatter.DEBUG) log('Vex.Flow.TextFormatter', args);\n}\n\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache: Record<string, Record<string, number | undefined> | undefined> = {};\nconst textHeightCache: Record<string, Record<string, yExtent | undefined> | undefined> = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry: Record<string, TextFormatterInfo> = {};\n\nexport class TextFormatter {\n  /** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  /**\n   * Return all registered font families.\n   */\n  static getFontFamilies(): TextFormatterInfo[] {\n    const registeredFonts: TextFormatterInfo[] = [];\n    for (const fontFamily in registry) {\n      const formatterInfo = registry[fontFamily];\n      registeredFonts.push({ ...formatterInfo });\n    }\n    return registeredFonts;\n  }\n\n  /**\n   * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n   *\n   * This method creates a formatter for the font that most closely matches the requested font.\n   * We compare font family, bold, and italic attributes.\n   * This method will return a fallback formatter if there are no matches.\n   */\n  static create(requestedFont: FontInfo = {}): TextFormatter {\n    L('create: ', requestedFont);\n    if (!requestedFont.family) {\n      requestedFont.family = Font.SANS_SERIF;\n    }\n\n    // TODO: One potential (small) optimization is to cache the TextFormatter object\n    // returned for each font info. We would probably want to clear the cache if\n    // the registry is ever updated.\n\n    const candidates: TextFormatterInfo[] = [];\n    // The incoming font family is a string of comma-separated font family names.\n    // (e.g., `PetalumaScript, Arial, sans-serif`).\n    const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n    for (const requestedFamily of requestedFamilies) {\n      for (const fontFamily in registry) {\n        // Support cases where the registry contains 'Roboto Slab Medium',\n        // but the requestedFont.family is 'Roboto Slab'.\n        if (fontFamily.startsWith(requestedFamily)) {\n          candidates.push(registry[fontFamily]);\n        }\n      }\n      if (candidates.length > 0) {\n        break;\n      }\n    }\n\n    let formatter;\n    if (candidates.length === 0) {\n      // No match, so return a fallback text formatter.\n      formatter = new TextFormatter(Object.values(registry)[0]);\n    } else if (candidates.length === 1) {\n      formatter = new TextFormatter(candidates[0]);\n    } else {\n      const bold = Font.isBold(requestedFont.weight);\n      const italic = Font.isItalic(requestedFont.style);\n      const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n      if (perfectMatch) {\n        formatter = new TextFormatter(perfectMatch);\n      } else {\n        const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n        if (partialMatch) {\n          formatter = new TextFormatter(partialMatch);\n        } else {\n          formatter = new TextFormatter(candidates[0]);\n        }\n      }\n    }\n\n    const fontSize = requestedFont.size;\n    if (typeof fontSize !== 'undefined') {\n      const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n      formatter.setFontSize(fontSizeInPt);\n    }\n    return formatter;\n  }\n\n  /**\n   * @param fontFamily used as a key to the font registry.\n   * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n   */\n  static getInfo(fontFamily: string): TextFormatterInfo | undefined {\n    return registry[fontFamily];\n  }\n\n  /**\n   * Apps may register their own fonts and metrics, and those metrics\n   * will be available to the app for formatting.\n   *\n   * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n   * @param info\n   * @param overwrite\n   */\n  static registerInfo(info: TextFormatterInfo, overwrite: boolean = false): void {\n    L('registerInfo: ', info, overwrite);\n    const fontFamily = info.family;\n    const currFontInfo = registry[fontFamily];\n    if (currFontInfo === undefined || overwrite) {\n      registry[fontFamily] = info;\n    }\n  }\n\n  /** Font family. */\n  protected family: string = '';\n\n  /** Specified in `pt` units. */\n  protected size: number = 14;\n\n  /** Font metrics are extracted at 1000 upem (units per em). */\n  protected resolution: number = 1000;\n\n  /**\n   * For text formatting, we do not require glyph outlines, but instead rely on glyph\n   * bounding box metrics such as:\n   * ```\n   * {\n   *    x_min: 48,\n   *    x_max: 235,\n   *    y_min: -17,\n   *    y_max: 734,\n   *    ha: 751,\n   *    leftSideBearing: 48,\n   *    advanceWidth: 286,\n   *  }\n   * ```\n   */\n  protected glyphs: Record<string, FontGlyph> = {};\n  protected description?: string;\n  protected serifs: boolean = false;\n  protected monospaced: boolean = false;\n  protected italic: boolean = false;\n  protected bold: boolean = false;\n  protected superscriptOffset: number = 0;\n  protected subscriptOffset: number = 0;\n  protected maxSizeGlyph: string = '@';\n\n  // This is an internal key used to index the `textWidthCache`.\n  protected cacheKey: string = '';\n\n  /**\n   * Use `TextFormatter.create(...)` to build an instance from information previously\n   * registered via `TextFormatter.registerInfo(info)`.\n   */\n  private constructor(formatterInfo: TextFormatterInfo) {\n    this.updateParams(formatterInfo);\n  }\n  get localHeightCache(): Record<string, yExtent | undefined> {\n    if (textHeightCache[this.cacheKey] === undefined) {\n      textHeightCache[this.cacheKey] = {};\n    }\n    return textHeightCache[this.cacheKey] ?? {};\n  }\n  updateParams(params: TextFormatterInfo): void {\n    if (params.family) this.family = params.family;\n    if (params.resolution) this.resolution = params.resolution;\n    if (params.glyphs) this.glyphs = params.glyphs;\n    if (params.serifs) this.serifs = params.serifs;\n    if (params.monospaced) this.monospaced = params.monospaced;\n    if (params.italic) this.italic = params.italic;\n    if (params.bold) this.bold = params.bold;\n    if (params.maxSizeGlyph) this.maxSizeGlyph = params.maxSizeGlyph;\n    if (params.superscriptOffset) this.superscriptOffset = params.superscriptOffset;\n    if (params.subscriptOffset) this.subscriptOffset = params.subscriptOffset;\n    this.updateCacheKey();\n  }\n\n  /** Create a hash with the current font data, so we can cache computed widths. */\n  updateCacheKey(): void {\n    const family = this.family.replace(/\\s+/g, '_');\n    const size = this.size;\n    const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n    const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n    // Use the same key format as SVGContext.\n    this.cacheKey = `${family}%${size}%${weight}%${style}`;\n  }\n\n  /**\n   * The glyphs table is indexed by the character (e.g., 'C', '@').\n   * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n   */\n  getGlyphMetrics(character: string): FontGlyph {\n    if (this.glyphs[character]) {\n      return this.glyphs[character];\n    } else {\n      return this.glyphs[this.maxSizeGlyph];\n    }\n  }\n\n  get maxHeight(): number {\n    const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n    return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n  }\n\n  /**\n   * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n   * For the space character ' ' as defined in the:\n   *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n   *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n   */\n  getWidthForCharacterInEm(c: string): number {\n    const metrics = this.getGlyphMetrics(c);\n    if (!metrics) {\n      // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n      return 0.65;\n    } else {\n      const advanceWidth = metrics.advanceWidth ?? 0;\n      return advanceWidth / this.resolution;\n    }\n  }\n  /**\n   * Retrieve the character's y bounds (ymin, ymax) and height.\n   */\n  getYForCharacterInPx(c: string): yExtent {\n    const metrics = this.getGlyphMetrics(c);\n    const rv = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n    if (!metrics) {\n      return rv;\n    } else {\n      if (typeof metrics.y_min === 'number') {\n        rv.yMin = (metrics.y_min / this.resolution) * this.fontSizeInPixels;\n      }\n      if (typeof metrics.y_max === 'number') {\n        rv.yMax = (metrics.y_max / this.resolution) * this.fontSizeInPixels;\n      }\n      rv.height = rv.yMax - rv.yMin;\n      return rv;\n    }\n  }\n  getYForStringInPx(str: string): yExtent {\n    const entry = this.localHeightCache;\n    const extent = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n    const cache = entry[str];\n    if (cache !== undefined) {\n      return cache;\n    }\n    for (let i = 0; i < str.length; ++i) {\n      const curY = this.getYForCharacterInPx(str[i]);\n      extent.yMin = Math.min(extent.yMin, curY.yMin);\n      extent.yMax = Math.max(extent.yMax, curY.yMax);\n      extent.height = extent.yMax - extent.yMin;\n    }\n    entry[str] = extent;\n    return extent;\n  }\n  /**\n   * Retrieve the total width of `text` in `em` units.\n   */\n  getWidthForTextInEm(text: string): number {\n    const key = this.cacheKey;\n    // Get the cache for this specific font family, size, weight, style combination.\n    // The cache contains previously computed widths for different `text` strings.\n    let cachedWidths = textWidthCache[key];\n    if (cachedWidths === undefined) {\n      cachedWidths = {};\n      textWidthCache[key] = cachedWidths;\n    }\n\n    let width = cachedWidths[text];\n    if (width === undefined) {\n      width = 0;\n      for (let i = 0; i < text.length; ++i) {\n        width += this.getWidthForCharacterInEm(text[i]);\n      }\n      cachedWidths[text] = width;\n    }\n    return width;\n  }\n  /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n  getWidthForTextInPx(text: string): number {\n    return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n  }\n\n  /**\n   * @param size in pt.\n   */\n  setFontSize(size: number): this {\n    this.size = size;\n    // The width cache key depends on the current font size.\n    this.updateCacheKey();\n    return this;\n  }\n\n  /** `this.size` is specified in points. Convert to pixels. */\n  get fontSizeInPixels(): number {\n    return this.size * Font.scaleToPxFrom.pt;\n  }\n\n  getResolution(): number {\n    return this.resolution;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { FontInfo } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Stave } from './stave';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Annotation.DEBUG) log('Vex.Flow.Annotation', args);\n}\n\nexport enum AnnotationHorizontalJustify {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n  CENTER_STEM = 4,\n}\n\nexport enum AnnotationVerticalJustify {\n  TOP = 1,\n  CENTER = 2,\n  BOTTOM = 3,\n  CENTER_STEM = 4,\n}\n\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n  /** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  /** Annotations category string. */\n  static get CATEGORY(): string {\n    return Category.Annotation;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = { ...Element.TEXT_FONT };\n\n  /** Text annotations can be positioned and justified relative to the note. */\n  static HorizontalJustify = AnnotationHorizontalJustify;\n\n  static HorizontalJustifyString: Record<string, number> = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n  };\n\n  static VerticalJustify = AnnotationVerticalJustify;\n\n  static VerticalJustifyString: Record<string, number> = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n  };\n\n  // Use the same padding for annotations as note head so the\n  // words don't run into each other.\n  static get minAnnotationPadding(): number {\n    const musicFont = Tables.currentMusicFont();\n    return musicFont.lookupMetric('noteHead.minPadding');\n  }\n  /** Arrange annotations within a `ModifierContext` */\n  static format(annotations: Annotation[], state: ModifierContextState): boolean {\n    if (!annotations || annotations.length === 0) return false;\n    let leftWidth = 0;\n    let rightWidth = 0;\n    let maxLeftGlyphWidth = 0;\n    let maxRightGlyphWidth = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      const textFormatter = TextFormatter.create(annotation.textFont);\n      // Text height is expressed in fractional stave spaces.\n      const textLines = (2 + textFormatter.getYForStringInPx(annotation.text).height) / Tables.STAVE_LINE_DISTANCE;\n      let verticalSpaceNeeded = textLines;\n\n      const note = annotation.checkAttachedNote();\n      const glyphWidth = note.getGlyphProps().getWidth();\n      // Get the text width from the font metrics.\n      const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n      if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n        maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n        leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n      } else if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n        maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n        rightWidth = Math.max(rightWidth, textWidth);\n      } else {\n        leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n        rightWidth = Math.max(rightWidth, textWidth / 2);\n        maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n        maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n      }\n\n      const stave: Stave | undefined = note.getStave();\n      const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n      let stemHeight = 0;\n      let lines = 5;\n\n      if (isTabNote(note)) {\n        if (note.render_options.draw_stem) {\n          const stem = (note as StemmableNote).getStem();\n          if (stem) {\n            stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n          }\n        } else {\n          stemHeight = 0;\n        }\n      } else if (isStemmableNote(note)) {\n        const stem = note.getStem();\n        if (stem && note.getNoteType() === 'n') {\n          stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n        }\n      }\n      if (stave) {\n        lines = stave.getNumLines();\n      }\n\n      if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n        let noteLine = note.getLineNumber(true);\n        if (isTabNote(note)) {\n          noteLine = lines - (note.leastString() - 0.5);\n        }\n        if (stemDirection === Stem.UP) {\n          noteLine += stemHeight;\n        }\n        const curTop = noteLine + state.top_text_line + 0.5;\n        if (curTop < lines) {\n          annotation.setTextLine(lines - noteLine);\n          verticalSpaceNeeded += lines - noteLine;\n          state.top_text_line = verticalSpaceNeeded;\n        } else {\n          annotation.setTextLine(state.top_text_line);\n          state.top_text_line += verticalSpaceNeeded;\n        }\n      } else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n        let noteLine = lines - note.getLineNumber();\n        if (isTabNote(note)) {\n          noteLine = note.greatestString() - 1;\n        }\n        if (stemDirection === Stem.DOWN) {\n          noteLine += stemHeight;\n        }\n        const curBottom = noteLine + state.text_line + 1;\n        if (curBottom < lines) {\n          annotation.setTextLine(lines - curBottom);\n          verticalSpaceNeeded += lines - curBottom;\n          state.text_line = verticalSpaceNeeded;\n        } else {\n          annotation.setTextLine(state.text_line);\n          state.text_line += verticalSpaceNeeded;\n        }\n      } else {\n        annotation.setTextLine(state.text_line);\n      }\n    }\n    const rightOverlap = Math.min(\n      Math.max(rightWidth - maxRightGlyphWidth, 0),\n      Math.max(rightWidth - state.right_shift, 0)\n    );\n    const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n    state.left_shift += leftOverlap;\n    state.right_shift += rightOverlap;\n    return true;\n  }\n\n  protected horizontalJustification: AnnotationHorizontalJustify;\n  protected verticalJustification: AnnotationVerticalJustify;\n  protected text: string;\n\n  /**\n   * Annotations inherit from `Modifier` and is positioned correctly when\n   * in a `ModifierContext`.\n   * Create a new `Annotation` with the string `text`.\n   */\n  constructor(text: string) {\n    super();\n\n    this.text = text;\n    this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n    // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n    // this is to support legacy application that may expect this.\n    this.verticalJustification = AnnotationVerticalJustify.TOP;\n    this.resetFont();\n\n    // The default width is calculated from the text.\n    this.setWidth(Tables.textWidth(text));\n  }\n  /**\n   * Set vertical position of text (above or below stave).\n   * @param just value in `AnnotationVerticalJustify`.\n   */\n  setVerticalJustification(just: string | AnnotationVerticalJustify): this {\n    this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n    return this;\n  }\n\n  /**\n   * Get horizontal justification.\n   */\n  getJustification(): AnnotationHorizontalJustify {\n    return this.horizontalJustification;\n  }\n\n  /**\n   * Set horizontal justification.\n   * @param justification value in `Annotation.Justify`.\n   */\n  setJustification(just: string | AnnotationHorizontalJustify): this {\n    this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n    return this;\n  }\n\n  /** Render text beside the note. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n    const textFormatter = TextFormatter.create(this.textFont);\n    const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n\n    this.setRendered();\n\n    // We're changing context parameters. Save current state.\n    ctx.save();\n    // Apply style might not save context, if this.style is undefined, so we\n    // still need to save context state just before this, since we will be\n    // changing ctx parameters below.\n    this.applyStyle();\n    ctx.openGroup('annotation', this.getAttribute('id'));\n    ctx.setFont(this.textFont);\n\n    const text_width = textFormatter.getWidthForTextInPx(this.text);\n    const text_height = textFormatter.getYForStringInPx(this.text).height;\n    let x;\n    let y;\n\n    if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n      x = start.x;\n    } else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n      x = start.x - text_width / 2;\n    } /* CENTER_STEM */ else {\n      x = (note as StemmableNote).getStemX() - text_width / 2;\n    }\n\n    let stem_ext: Record<string, number> = {};\n    let spacing = 0;\n    const has_stem = note.hasStem();\n    const stave = note.checkStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = (note as StemmableNote).checkStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n      // Use the largest (lowest) Y value\n      const ys: number[] = note.getYs();\n      y = ys.reduce((a, b) => (a > b ? a : b));\n      y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n      if (has_stem && stemDirection === Stem.DOWN) {\n        y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n      }\n    } else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n      const yt = note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n      const topY = Math.min(...note.getYs());\n      y = topY - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n      if (has_stem && stemDirection === Stem.UP) {\n        // If the stem is above the stave already, go with default line width vs. actual\n        // since the lines between don't really matter.\n        spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n        y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n      }\n    } /* CENTER_STEM */ else {\n      const extents = note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    ctx.fillText(this.text, x, y);\n    ctx.closeGroup();\n    this.restoreStyle();\n    ctx.restore();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\n\nimport { Builder } from './easyscore';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n\nexport interface ArticulationStruct {\n  code?: string;\n  aboveCode?: string;\n  belowCode?: string;\n  between_lines: boolean;\n}\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Articulation.DEBUG) log('Vex.Flow.Articulation', args);\n}\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nfunction roundToNearestHalf(mathFn: (a: number) => number, value: number): number {\n  return mathFn(value / 0.5) * 0.5;\n}\n\n// This includes both staff and ledger lines\nfunction isWithinLines(line: number, position: number): boolean {\n  return position === ABOVE ? line <= 5 : line >= 1;\n}\n\nfunction getRoundingFunction(line: number, position: number): (a: number) => number {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n}\n\nfunction snapLineToStaff(canSitBetweenLines: boolean, line: number, position: number, offsetDirection: number): number {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n  } else {\n    return snappedLine;\n  }\n}\n\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note: Note) => isStaveNote(note) || isGraceNote(note);\n\nfunction getTopY(note: Note, textLine: number): number {\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveOrGraceNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (isTabNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return note.checkStave().getYForTopText(textLine);\n      }\n    } else {\n      return note.checkStave().getYForTopText(textLine);\n    }\n  } else {\n    throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n  }\n}\n\nfunction getBottomY(note: Note, textLine: number): number {\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveOrGraceNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (isTabNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return note.checkStave().getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return note.checkStave().getYForBottomText(textLine);\n    }\n  } else {\n    throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n  }\n}\n\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note: Note, position: number): number {\n  const isOnStemTip =\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN);\n\n  if (isStaveOrGraceNote(note)) {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n}\n\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n  /** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  /** Articulations category string. */\n  static get CATEGORY(): string {\n    return Category.Articulation;\n  }\n\n  protected static readonly INITIAL_OFFSET: number = -0.5;\n\n  /** Articulation code provided to the constructor. */\n  readonly type: string;\n\n  public render_options: { font_scale: number };\n  // articulation defined calling reset in constructor\n  protected articulation!: ArticulationStruct;\n  // glyph defined calling reset in constructor\n  protected glyph!: Glyph;\n\n  /**\n   * FIXME:\n   * Most of the complex formatting logic (ie: snapping to space) is\n   * actually done in .render(). But that logic belongs in this method.\n   *\n   * Unfortunately, this isn't possible because, by this point, stem lengths\n   * have not yet been finalized. Finalized stem lengths are required to determine the\n   * initial position of any stem-side articulation.\n   *\n   * This indicates that all objects should have their stave set before being\n   * formatted. It can't be an optional if you want accurate vertical positioning.\n   * Consistently positioned articulations that play nice with other modifiers\n   * won't be possible until we stop relying on render-time formatting.\n   *\n   * Ideally, when this function has completed, the vertical articulation positions\n   * should be ready to render without further adjustment. But the current state\n   * is far from this ideal.\n   */\n  static format(articulations: Articulation[], state: ModifierContextState): boolean {\n    if (!articulations || articulations.length === 0) return false;\n\n    const margin = 0.5;\n    let maxGlyphWidth = 0;\n\n    const getIncrement = (articulation: Articulation, line: number, position: number) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        defined(articulation.glyph.getMetrics().height) / 10 + margin\n      );\n\n    articulations.forEach((articulation) => {\n      const note = articulation.checkAttachedNote();\n      maxGlyphWidth = Math.max(note.getGlyphProps().getWidth(), maxGlyphWidth);\n      let lines = 5;\n      const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n      let stemHeight = 0;\n      // Decide if we need to consider beam direction in placement.\n\n      if (isStemmableNote(note)) {\n        const stem = note.getStem();\n        if (stem) {\n          stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n        }\n      }\n      const stave: Stave | undefined = note.getStave();\n      if (stave) {\n        lines = stave.getNumLines();\n      }\n      if (articulation.getPosition() === ABOVE) {\n        let noteLine = note.getLineNumber(true);\n        if (stemDirection === Stem.UP) {\n          noteLine += stemHeight;\n        }\n        let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n        const curTop = noteLine + state.top_text_line + 0.5;\n        // If articulation must be above stave, add lines between note and stave top\n        if (!articulation.articulation.between_lines && curTop < lines) {\n          increment += lines - curTop;\n        }\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else if (articulation.getPosition() === BELOW) {\n        let noteLine = Math.max(lines - note.getLineNumber(), 0);\n        if (stemDirection === Stem.DOWN) {\n          noteLine += stemHeight;\n        }\n        let increment = getIncrement(articulation, state.text_line, BELOW);\n        const curBottom = noteLine + state.text_line + 0.5;\n        // if articulation must be below stave, add lines from note to stave bottom\n        if (!articulation.articulation.between_lines && curBottom < lines) {\n          increment += lines - curBottom;\n        }\n        articulation.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    });\n\n    const width = articulations\n      .map((articulation) => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n    const overlap = Math.min(\n      Math.max(width - maxGlyphWidth, 0),\n      Math.max(width - (state.left_shift + state.right_shift), 0)\n    );\n\n    state.left_shift += overlap / 2;\n    state.right_shift += overlap / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }: { articulations: string }, note: StemmableNote, builder: Builder): void {\n    if (!articulations) return;\n\n    const articNameToCode: Record<string, string> = {\n      staccato: 'a.',\n      tenuto: 'a-',\n      accent: 'a>',\n    };\n\n    articulations\n      .split(',')\n      .map((articString) => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic: { type: string; position?: number } = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map((artic) => note.addModifier(artic, 0));\n  }\n\n  /**\n   * Create a new articulation.\n   * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts` or Glyph code.\n   *\n   * Notes (by default):\n   * - Glyph codes ending with 'Above' will be positioned ABOVE\n   * - Glyph codes ending with 'Below' will be positioned BELOW\n   */\n  constructor(type: string) {\n    super();\n\n    this.type = type;\n    this.position = ABOVE;\n    this.render_options = {\n      font_scale: Tables.NOTATION_FONT_SCALE,\n    };\n\n    this.reset();\n  }\n\n  protected reset(): void {\n    this.articulation = Tables.articulationCodes(this.type);\n    // Use type as glyph code, if not defined as articulation code\n    if (!this.articulation) {\n      this.articulation = { code: this.type, between_lines: false };\n      if (this.type.endsWith('Above')) this.position = ABOVE;\n      if (this.type.endsWith('Below')) this.position = BELOW;\n    }\n    const code =\n      (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) || this.articulation.code;\n    this.glyph = new Glyph(code ?? '', this.render_options.font_scale);\n    defined(this.glyph, 'ArgumentError', `Articulation not found: ${this.type}`);\n\n    this.setWidth(defined(this.glyph.getMetrics().width));\n  }\n\n  /** Set if articulation should be rendered between lines. */\n  setBetweenLines(betweenLines = true): this {\n    this.articulation.between_lines = betweenLines;\n    return this;\n  }\n\n  /** Render articulation in position next to note. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const index = this.checkIndex();\n    const { position, glyph, text_line: textLine } = this;\n    const canSitBetweenLines = this.articulation.between_lines;\n\n    const stave = note.checkStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = isTabNote(note);\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n\n    let y = (\n      {\n        [ABOVE]: () => {\n          glyph.setOrigin(0.5, 1);\n          const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n          return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n        },\n        [BELOW]: () => {\n          glyph.setOrigin(0.5, 0);\n          const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n          return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n        },\n      } as Record<number, () => number>\n    )[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + Number(noteLine);\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\n\nimport { FontInfo } from './font';\nimport { Category } from './typeguard';\n\nexport interface TextMeasure {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface GroupAttributes {\n  pointerBBox: boolean;\n}\n\nexport abstract class RenderContext {\n  static get CATEGORY(): string {\n    return Category.RenderContext;\n  }\n\n  abstract clear(): void;\n  abstract setFillStyle(style: string): this;\n  abstract setBackgroundFillStyle(style: string): this;\n  abstract setStrokeStyle(style: string): this;\n  abstract setShadowColor(color: string): this;\n  abstract setShadowBlur(blur: number): this;\n  abstract setLineWidth(width: number): this;\n  abstract setLineCap(capType: CanvasLineCap): this;\n  abstract setLineDash(dashPattern: number[]): this;\n  abstract scale(x: number, y: number): this;\n  abstract rect(x: number, y: number, width: number, height: number): this;\n  abstract resize(width: number, height: number): this;\n  abstract fillRect(x: number, y: number, width: number, height: number): this;\n  abstract clearRect(x: number, y: number, width: number, height: number): this;\n  abstract beginPath(): this;\n  abstract moveTo(x: number, y: number): this;\n  abstract lineTo(x: number, y: number): this;\n  abstract bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): this;\n  abstract quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): this;\n  abstract arc(\n    x: number,\n    y: number,\n    radius: number,\n    startAngle: number,\n    endAngle: number,\n    counterclockwise: boolean\n  ): this;\n  // eslint-disable-next-line\n  abstract fill(attributes?: any): this;\n  abstract stroke(): this;\n  abstract closePath(): this;\n  abstract fillText(text: string, x: number, y: number): this;\n  abstract save(): this;\n  abstract restore(): this;\n  // eslint-disable-next-line\n  abstract openGroup(cls?: string, id?: string, attrs?: GroupAttributes): any;\n  abstract closeGroup(): void;\n  // eslint-disable-next-line\n  abstract add(child: any): void;\n  abstract measureText(text: string): TextMeasure;\n\n  abstract set fillStyle(style: string | CanvasGradient | CanvasPattern);\n  abstract get fillStyle(): string | CanvasGradient | CanvasPattern;\n\n  abstract set strokeStyle(style: string | CanvasGradient | CanvasPattern);\n  abstract get strokeStyle(): string | CanvasGradient | CanvasPattern;\n\n  abstract setFont(f?: string | FontInfo, size?: string | number, weight?: string | number, style?: string): this;\n  abstract getFont(): string;\n\n  set font(f: string) {\n    this.setFont(f);\n  }\n  get font(): string {\n    return this.getFont();\n  }\n\n  /**\n   * This is kept for backwards compatibility with 3.0.9.\n   * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n   */\n  setRawFont(f: string): this {\n    this.setFont(f);\n    return this;\n  }\n}\n\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx: RenderContext, x: number, y: number, color = '#F55'): void {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Modifier } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nimport { Voice } from './voice';\n\n/** Formatter metrics interface */\nexport interface FormatterMetrics {\n  duration: string;\n  freedom: {\n    left: number;\n    right: number;\n  };\n  iterations: number;\n  space: {\n    used: number;\n    mean: number;\n    deviation: number;\n  };\n}\n\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport abstract class Tickable extends Element {\n  static get CATEGORY(): string {\n    return Category.Tickable;\n  }\n\n  protected ignore_ticks: boolean;\n  protected tupletStack: Tuplet[];\n  protected tuplet?: Tuplet;\n  protected ticks: Fraction;\n  protected center_x_shift: number;\n  protected voice?: Voice;\n  protected width: number;\n  protected x_shift: number;\n  protected modifierContext?: ModifierContext;\n  protected tickContext?: TickContext;\n  protected modifiers: Modifier[];\n  protected tickMultiplier: Fraction;\n  protected formatterMetrics: FormatterMetrics;\n  protected intrinsicTicks: number;\n  protected align_center: boolean;\n\n  private _preFormatted: boolean = false;\n  private _postFormatted: boolean = false;\n\n  constructor() {\n    super();\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1); // Fractional value of ticks\n    this.intrinsicTicks = 0; // Floating point value of ticks\n    this.tickMultiplier = new Fraction(1, 1);\n\n    // Formatter metrics\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n\n    this.modifiers = [];\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  /** Reset the Tickable, this function will be overloaded. */\n  reset(): this {\n    return this;\n  }\n\n  /** Return the ticks. */\n  getTicks(): Fraction {\n    return this.ticks;\n  }\n\n  /** Check if it ignores the ticks. */\n  shouldIgnoreTicks(): boolean {\n    return this.ignore_ticks;\n  }\n\n  /** Ignore the ticks. */\n  setIgnoreTicks(flag: boolean): this {\n    this.ignore_ticks = flag;\n    return this;\n  }\n\n  /** Set width of note. Used by the formatter for positioning. */\n  setWidth(width: number): void {\n    this.width = width;\n  }\n\n  /** Get width of note. Used by the formatter for positioning. */\n  getWidth(): number {\n    if (!this._preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  /** Displace note by `x` pixels. Used by the formatter. */\n  setXShift(x: number): this {\n    this.x_shift = x;\n    return this;\n  }\n\n  /** Get the `x` displaced pixels of the note. */\n  getXShift(): number {\n    return this.x_shift;\n  }\n\n  /** Get `x` position of this tick context. */\n  getX(): number {\n    const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n    return tickContext.getX() + this.x_shift;\n  }\n\n  /** Return the formatterMetrics. */\n  getFormatterMetrics(): FormatterMetrics {\n    return this.formatterMetrics;\n  }\n\n  /** Return the center `x` shift. */\n  getCenterXShift(): number {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n\n  /** Set the center `x` shift. */\n  setCenterXShift(centerXShift: number): this {\n    this.center_x_shift = centerXShift;\n    return this;\n  }\n\n  // Check if tickable is center aligned. */\n  isCenterAligned(): boolean {\n    return this.align_center;\n  }\n\n  // Set/unset center alignment. */\n  setCenterAlignment(align_center: boolean): this {\n    this.align_center = align_center;\n    return this;\n  }\n\n  /**\n   * Return the associated voice. Every tickable must be associated with a voice.\n   * This allows formatters and preFormatter to associate them with the right modifierContexts.\n   */\n  getVoice(): Voice {\n    return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n  }\n\n  /** Set the associated voice. */\n  setVoice(voice: Voice): void {\n    this.voice = voice;\n  }\n\n  /** Get the tuplet. */\n  getTuplet(): Tuplet | undefined {\n    return this.tuplet;\n  }\n\n  /** Return a list of Tuplets. */\n  getTupletStack(): Tuplet[] {\n    return this.tupletStack;\n  }\n\n  /**\n   * Reset the specific Tuplet (if this is not provided, all tuplets are reset).\n   * Remove any prior tuplets from the tick calculation and\n   * reset the intrinsic tick value.\n   */\n  resetTuplet(tuplet?: Tuplet): this {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop() as Tuplet;\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  /** Attach to new tuplet. */\n  setTuplet(tuplet: Tuplet): this {\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /**\n   * Add self to the provided ModifierContext `mc`.\n   * If this tickable has modifiers, set modifierContext.\n   * @returns this\n   */\n  addToModifierContext(mc: ModifierContext): this {\n    this.modifierContext = mc;\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addMember(this.modifiers[i]);\n    }\n    this.modifierContext.addMember(this);\n    this._preFormatted = false;\n    return this;\n  }\n\n  /**\n   * Optional, if tickable has modifiers, associate a Modifier.\n   * @param mod the modifier\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  addModifier(modifier: Modifier, index: number = 0): this {\n    this.modifiers.push(modifier);\n    this._preFormatted = false;\n    return this;\n  }\n\n  /** Get the list of associated modifiers. */\n  getModifiers(): Modifier[] {\n    return this.modifiers;\n  }\n\n  /** Set the Tick Context. */\n  setTickContext(tc: TickContext): void {\n    this.tickContext = tc;\n    this._preFormatted = false;\n  }\n\n  checkTickContext(message = 'Tickable has no tick context.'): TickContext {\n    return defined(this.tickContext, 'NoTickContext', message);\n  }\n\n  /** Preformat the Tickable. */\n  preFormat(): void {\n    if (this._preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n\n  /** Set preformatted status. */\n  set preFormatted(value: boolean) {\n    this._preFormatted = value;\n  }\n\n  get preFormatted(): boolean {\n    return this._preFormatted;\n  }\n\n  /** Postformat the Tickable. */\n  postFormat(): this {\n    if (this._postFormatted) return this;\n    this._postFormatted = true;\n    return this;\n  }\n\n  /** Set postformatted status. */\n  set postFormatted(value: boolean) {\n    this._postFormatted = value;\n  }\n\n  get postFormatted(): boolean {\n    return this._postFormatted;\n  }\n\n  /** Return the intrinsic ticks. */\n  getIntrinsicTicks(): number {\n    return this.intrinsicTicks;\n  }\n\n  /** Set the intrinsic ticks. */\n  setIntrinsicTicks(intrinsicTicks: number): void {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n\n  /** Get the tick multiplier. */\n  getTickMultiplier(): Fraction {\n    return this.tickMultiplier;\n  }\n\n  /** Apply a tick multiplier. */\n  applyTickMultiplier(numerator: number, denominator: number): void {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n\n  /** Set the duration. */\n  setDuration(duration: Fraction): void {\n    const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n\n  getAbsoluteX(): number {\n    const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n    return tickContext.getX();\n  }\n\n  /** Attach this note to a modifier context. */\n  setModifierContext(mc?: ModifierContext): this {\n    this.modifierContext = mc;\n    return this;\n  }\n\n  /** Get `ModifierContext`. */\n  getModifierContext(): ModifierContext | undefined {\n    return this.modifierContext;\n  }\n\n  /** Check and get `ModifierContext`. */\n  checkModifierContext(): ModifierContext {\n    return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n  }\n\n  /** Get the target stave. */\n  abstract getStave(): Stave | undefined;\n\n  /** Set the target stave. */\n  abstract setStave(stave: Stave): this;\n\n  // eslint-disable-next-line\n  abstract getMetrics(): any;\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { GlyphProps } from './glyph';\nimport { Modifier } from './modifier';\nimport { drawDot, RenderContext } from './rendercontext';\nimport { Stave } from './stave';\nimport { Stroke } from './strokes';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nimport { Voice } from './voice';\n\nexport interface KeyProps {\n  stem_down_x_offset?: number;\n  stem_up_x_offset?: number;\n  key: string;\n  octave: number;\n  line: number;\n  int_value?: number;\n  accidental?: string;\n  code?: string;\n  stroke: number;\n  shift_right?: number;\n  displaced: boolean;\n}\n\nexport interface NoteMetrics {\n  /** The total width of the note (including modifiers). */\n  width: number;\n  glyphWidth?: number;\n  /** The width of the note head only. */\n  notePx: number;\n  /** Start `X` for left modifiers. */\n  modLeftPx: number;\n  /** Start `X` for right modifiers. */\n  modRightPx: number;\n  /** Extra space on left of note. */\n  leftDisplacedHeadPx: number;\n  glyphPx: number;\n  /** Extra space on right of note. */\n  rightDisplacedHeadPx: number;\n}\n\nexport interface NoteDuration {\n  duration: string;\n  dots: number;\n  type: string;\n}\n\nexport interface ParsedNote {\n  duration: string;\n  type: string;\n  customTypes: string[];\n  dots: number;\n  ticks: number;\n}\n\nexport interface NoteStruct {\n  /** Array of pitches, e.g: `['c/4', 'e/4', 'g/4']` */\n  keys?: string[];\n  /** The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.). */\n  duration: string;\n  line?: number;\n  /** The number of dots, which affects the duration. */\n  dots?: number;\n  /** The note type (e.g., `r` for rest, `s` for slash notes, etc.). */\n  type?: string;\n  align_center?: boolean;\n  duration_override?: Fraction;\n}\n\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport abstract class Note extends Tickable {\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // STATIC MEMBERS\n\n  static get CATEGORY(): string {\n    return Category.Note;\n  }\n\n  /** Debug helper. Displays various note metrics for the given note. */\n  static plotMetrics(ctx: RenderContext, note: Tickable, yPos: number): void {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n    const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.notePx;\n    const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n    const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n    const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont(Font.SANS_SERIF, 8);\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = yPos + 7;\n    function stroke(x1: number, x2: number, color: string, yy: number = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  protected static parseDuration(durationString?: string): NoteDuration | undefined {\n    if (!durationString) {\n      return undefined;\n    }\n    const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n    const result = regexp.exec(durationString);\n    if (!result) {\n      return undefined;\n    }\n\n    const duration = result[1];\n    const dots = result[2].length;\n    const type = result[3] || 'n';\n\n    return { duration, dots, type };\n  }\n\n  protected static parseNoteStruct(noteStruct: NoteStruct): ParsedNote | undefined {\n    // Preserve backwards-compatibility\n    const durationProps = Note.parseDuration(noteStruct.duration);\n    if (!durationProps) {\n      return undefined;\n    }\n\n    // If specified type is invalid, return undefined.\n    let type = noteStruct.type;\n    if (type && !Tables.validTypes[type]) {\n      return undefined;\n    }\n\n    // If no type specified, check duration or custom types\n    const customTypes: string[] = [];\n    if (!type) {\n      type = durationProps.type || 'n';\n\n      // If we have keys, try and check if we've got a custom glyph\n      if (noteStruct.keys !== undefined) {\n        noteStruct.keys.forEach((k, i) => {\n          const result = k.split('/');\n          // We have a custom glyph specified after the note eg. /X2\n          customTypes[i] = (result && result.length === 3 ? result[2] : type) as string;\n        });\n      }\n    }\n\n    // Calculate the tick duration of the note\n    let ticks = Tables.durationToTicks(durationProps.duration);\n    if (!ticks) {\n      return undefined;\n    }\n\n    // Are there any dots?\n    const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n    if (typeof dots !== 'number') {\n      return undefined;\n    }\n\n    // Add ticks as necessary depending on the numbr of dots\n    let currentTicks = ticks;\n    for (let i = 0; i < dots; i++) {\n      if (currentTicks <= 1) return undefined;\n\n      currentTicks = currentTicks / 2;\n      ticks += currentTicks;\n    }\n\n    return {\n      duration: durationProps.duration,\n      type,\n      customTypes,\n      dots,\n      ticks,\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // INSTANCE MEMBERS\n\n  glyphProps: GlyphProps;\n  keys: string[];\n  keyProps: KeyProps[];\n\n  protected stave?: Stave;\n  public render_options: {\n    draw_stem_through_stave?: boolean;\n    draw?: boolean;\n    draw_dots?: boolean;\n    draw_stem?: boolean;\n    y_shift: number;\n    extend_left?: number;\n    extend_right?: number;\n    glyph_font_scale: number;\n    annotation_spacing: number;\n    glyph_font_size?: number;\n    scale: number;\n    font: string;\n    stroke_px: number;\n  };\n  protected duration: string;\n  protected leftDisplacedHeadPx: number;\n  protected rightDisplacedHeadPx: number;\n  protected noteType: string;\n  protected customGlyphs: GlyphProps[];\n  protected ys: number[];\n  protected customTypes: string[];\n  protected playNote?: Note;\n  protected beam?: Beam;\n\n  /**\n   * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n   * positioning and layout.\n   *\n   * @param noteStruct To create a new note you need to provide a `noteStruct`.\n   */\n  constructor(noteStruct: NoteStruct) {\n    super();\n\n    if (!noteStruct) {\n      throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n    }\n\n    /** Parses `noteStruct` and get note properties. */\n    const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n    if (!parsedNoteStruct) {\n      throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n    }\n\n    // Set note properties from parameters.\n    this.keys = noteStruct.keys || [];\n    // per-pitch properties\n    this.keyProps = [];\n\n    this.duration = parsedNoteStruct.duration;\n    this.noteType = parsedNoteStruct.type;\n    this.customTypes = parsedNoteStruct.customTypes;\n\n    if (noteStruct.duration_override) {\n      // Custom duration\n      this.setDuration(noteStruct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(parsedNoteStruct.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n    this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n\n    // Note to play for audio players.\n    this.playNote = undefined;\n\n    // Positioning contexts used by the Formatter.\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0; // Width in pixels calculated after preFormat\n    this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n    this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n    this.x_shift = 0; // X shift from tick context X\n    this.ys = []; // list of y coordinates for each note\n    // we need to hold on to these for ties and beams.\n\n    if (noteStruct.align_center) {\n      this.setCenterAlignment(noteStruct.align_center);\n    }\n\n    // The render surface.\n    this.render_options = {\n      annotation_spacing: 5,\n      glyph_font_scale: 1,\n      stroke_px: 1,\n      scale: 1,\n      font: '',\n      y_shift: 0,\n    };\n  }\n\n  /**\n   * Get the play note, which is arbitrary data that can be used by an\n   * audio player.\n   */\n  getPlayNote(): Note | undefined {\n    return this.playNote;\n  }\n\n  /**\n   * Set the play note, which is arbitrary data that can be used by an\n   * audio player.\n   */\n  setPlayNote(note: Note): this {\n    this.playNote = note;\n    return this;\n  }\n\n  /**\n   * @returns true if this note is a type of rest.\n   *\n   * Rests don't have pitches, but take up space in the score.\n   * Subclasses should override this default implementation.\n   */\n  isRest(): boolean {\n    return false;\n  }\n\n  /** Add stroke. */\n  addStroke(index: number, stroke: Stroke): this {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.preFormatted = false;\n    return this;\n  }\n\n  /** Get the target stave. */\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  /** Check and get the target stave. */\n  checkStave(): Stave {\n    return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n  }\n\n  /** Set the target stave. */\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.setContext(this.stave.getContext());\n    return this;\n  }\n\n  /** Get spacing to the left of the notes. */\n  getLeftDisplacedHeadPx(): number {\n    return this.leftDisplacedHeadPx;\n  }\n\n  /** Get spacing to the right of the notes. */\n  getRightDisplacedHeadPx(): number {\n    return this.rightDisplacedHeadPx;\n  }\n\n  /** Set spacing to the left of the notes. */\n  setLeftDisplacedHeadPx(x: number): this {\n    this.leftDisplacedHeadPx = x;\n    return this;\n  }\n\n  /** Set spacing to the right of the notes. */\n  setRightDisplacedHeadPx(x: number): this {\n    this.rightDisplacedHeadPx = x;\n    return this;\n  }\n\n  /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n  shouldIgnoreTicks(): boolean {\n    return this.ignore_ticks;\n  }\n\n  /** Get the stave line number for the note. */\n  // eslint-disable-next-line\n  getLineNumber(isTopNote?: boolean): number {\n    return 0;\n  }\n\n  /** Get the stave line number for rest. */\n  getLineForRest(): number {\n    return 0;\n  }\n\n  /**\n   * @deprecated Use `getGlyphProps()` instead.\n   */\n  // eslint-disable-next-line\n  getGlyph(): any {\n    return this.glyphProps;\n  }\n\n  /** Get the glyph associated with this note. */\n  getGlyphProps(): GlyphProps {\n    return this.glyphProps;\n  }\n\n  /** Get the glyph width. */\n  getGlyphWidth(): number {\n    return this.glyphProps.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  /**\n   * Set Y positions for this note. Each Y value is associated with\n   * an individual pitch/key within the note/chord.\n   */\n  setYs(ys: number[]): this {\n    this.ys = ys;\n    return this;\n  }\n\n  /**\n   * Get Y positions for this note. Each Y value is associated with\n   * an individual pitch/key within the note/chord.\n   */\n  getYs(): number[] {\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  /**\n   * Get the Y position of the space above the stave onto which text can\n   * be rendered.\n   */\n  getYForTopText(text_line: number): number {\n    return this.checkStave().getYForTopText(text_line);\n  }\n\n  /** Return the voice that this note belongs in. */\n  getVoice(): Voice {\n    if (!this.voice) throw new RuntimeError('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  /** Attach this note to `voice`. */\n  setVoice(voice: Voice): this {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  /** Get the `TickContext` for this note. */\n  getTickContext(): TickContext {\n    return this.checkTickContext();\n  }\n\n  /** Set the `TickContext` for this note. */\n  setTickContext(tc: TickContext): this {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  /** Accessor to duration. */\n  getDuration(): string {\n    return this.duration;\n  }\n\n  /** Accessor to isDotted. */\n  isDotted(): boolean {\n    return this.getModifiersByType(Category.Dot).length > 0;\n  }\n\n  /** Accessor to hasStem. */\n  hasStem(): boolean {\n    return false;\n  }\n\n  /** Accessor to note type. */\n  getNoteType(): string {\n    return this.noteType;\n  }\n\n  /** Get the beam. */\n  getBeam(): Beam | undefined {\n    return this.beam;\n  }\n\n  /** Check and get the beam. */\n  checkBeam(): Beam {\n    return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n  }\n\n  /** Check it has a beam. */\n  hasBeam(): boolean {\n    return this.beam != undefined;\n  }\n\n  /** Set the beam. */\n  setBeam(beam: Beam): this {\n    this.beam = beam;\n    return this;\n  }\n\n  /**\n   * Attach a modifier to this note.\n   * @param modifier the Modifier to add.\n   * @param index of the key to modify.\n   * @returns this\n   */\n  addModifier(modifier: Modifier, index: number = 0): this {\n    const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n    // Backwards compatibility with 3.0.9.\n    if (typeof index === 'string') {\n      index = parseInt(index);\n      // eslint-disable-next-line\n      console.warn(signature + ' expected a number for `index`, but received a string.');\n    }\n\n    // Some versions of VexFlow had the two parameters reversed.\n    // Check here and throw an error if the argument types are not correct.\n    if (typeof modifier !== 'object' || typeof index !== 'number') {\n      throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n    }\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    super.addModifier(modifier);\n    return this;\n  }\n\n  /** Get all modifiers of a specific type in `this.modifiers`. */\n  getModifiersByType(type: string): Modifier[] {\n    return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n  }\n\n  /** Get the coordinates for where modifiers begin. */\n  // eslint-disable-next-line\n  getModifierStartXY(position?: number, index?: number, options?: any): { x: number; y: number } {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  getRightParenthesisPx(index: number): number {\n    const props = this.getKeyProps()[index];\n    return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n  }\n\n  getLeftParenthesisPx(index: number): number {\n    const props = this.getKeyProps()[index];\n    return props.displaced ? this.getLeftDisplacedHeadPx() - this.x_shift : -this.x_shift;\n  }\n\n  getFirstDotPx(): number {\n    let px = this.getRightDisplacedHeadPx();\n\n    if (this.checkModifierContext().getMembers('Parenthesis').length !== 0)\n      px += Tables.currentMusicFont().lookupMetric('parenthesis.default.width');\n    return px;\n  }\n\n  /** Get the metrics for this note. */\n  getMetrics(): NoteMetrics {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    const modLeftPx = this.modifierContext ? this.modifierContext.getState().left_shift : 0;\n    const modRightPx = this.modifierContext ? this.modifierContext.getState().right_shift : 0;\n    const width = this.getWidth();\n    const glyphWidth = this.getGlyphWidth();\n    const notePx =\n      width -\n      modLeftPx - // subtract left modifiers\n      modRightPx - // subtract right modifiers\n      this.leftDisplacedHeadPx - // subtract left displaced head\n      this.rightDisplacedHeadPx; // subtract right displaced head\n\n    // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n    return {\n      width,\n      glyphWidth,\n      notePx,\n\n      // Modifier spacing.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n      rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n      glyphPx: 0,\n    };\n  }\n\n  /**\n   * Get the absolute `X` position of this note's tick context. This\n   * excludes x_shift, so you'll need to factor it in if you're\n   * looking for the post-formatted x-position.\n   */\n  getAbsoluteX(): number {\n    const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n    // Position note to left edge of tick context.\n    let x = tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n    }\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n    return x;\n  }\n\n  /** Get point for notes. */\n  static getPoint(size?: string): number {\n    // for sizes other than 'default', note is 2/3 of the default value\n    return size == 'default' ? Tables.NOTATION_FONT_SCALE : (Tables.NOTATION_FONT_SCALE / 5) * 3;\n  }\n\n  /** Get the direction of the stem. */\n  getStemDirection(): number {\n    throw new RuntimeError('NoStem', 'No stem attached to this note.');\n  }\n\n  /** Get the top and bottom `y` values of the stem. */\n  getStemExtents(): Record<string, number> {\n    throw new RuntimeError('NoStem', 'No stem attached to this note.');\n  }\n\n  /** Get the `x` coordinate to the right of the note. */\n  getTieRightX(): number {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyphProps.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += -this.width / 2 + this.width + 2;\n\n    return tieStartX;\n  }\n\n  /** Get the `x` coordinate to the left of the note. */\n  getTieLeftX(): number {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyphProps.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= this.width / 2 + 2;\n\n    return tieEndX;\n  }\n\n  // Get the pitches in the note\n  getKeys(): string[] {\n    return this.keys;\n  }\n\n  // Get the properties for all the keys in the note\n  getKeyProps(): KeyProps[] {\n    return this.keyProps;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { defined } from './util';\n\nexport interface LayoutMetrics {\n  xMin: number;\n  xMax: number;\n  paddingLeft: number;\n  paddingRight: number;\n}\n\nexport enum StaveModifierPosition {\n  CENTER = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  ABOVE = 3,\n  BELOW = 4,\n  BEGIN = 5,\n  END = 6,\n}\n\nexport class StaveModifier extends Element {\n  static get CATEGORY(): string {\n    return Category.StaveModifier;\n  }\n\n  static get Position(): typeof StaveModifierPosition {\n    return StaveModifierPosition;\n  }\n\n  protected width: number = 0;\n  protected x: number = 0;\n\n  protected padding: number;\n  protected position: StaveModifierPosition;\n  protected stave?: Stave;\n  protected layoutMetrics?: LayoutMetrics;\n\n  constructor() {\n    super();\n\n    this.padding = 10;\n    this.position = StaveModifierPosition.ABOVE;\n  }\n\n  getPosition(): number {\n    return this.position;\n  }\n\n  setPosition(position: number): this {\n    this.position = position;\n    return this;\n  }\n\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  checkStave(): Stave {\n    return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  setX(x: number): this {\n    this.x = x;\n    return this;\n  }\n\n  /**\n   * Runs setYShift() for the Glyph object so that it matches the position of line for\n   * the Stave provided.  A `customShift` can also be given (measured in the same units\n   * as `setYShift` not in lines) and this will be added after all other positions are\n   * calculated from the Stave.\n   *\n   * Note that this routine only sets the yShift; it does not actually \"place\" (meaning\n   * draw) the Glyph on the Stave.  Call .draw() afterwards to do that.\n   */\n  placeGlyphOnLine(glyph: Glyph, stave: Stave, line?: number, customShift = 0): void {\n    glyph.setYShift(stave.getYForLine(line ?? 0) - stave.getYForGlyphs() + customShift);\n  }\n\n  getPadding(index: number): number {\n    return index !== undefined && index < 2 ? 0 : this.padding;\n  }\n\n  setPadding(padding: number): this {\n    this.padding = padding;\n    return this;\n  }\n\n  setLayoutMetrics(layoutMetrics: LayoutMetrics): this {\n    this.layoutMetrics = layoutMetrics;\n    return this;\n  }\n\n  getLayoutMetrics(): LayoutMetrics | undefined {\n    return this.layoutMetrics;\n  }\n\n  // eslint-disable-next-line\n  draw(...args: any[]): void {\n    // DO NOTHING.\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Stave } from './stave';\nimport { LayoutMetrics, StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n\nexport enum BarlineType {\n  SINGLE = 1,\n  DOUBLE = 2,\n  END = 3,\n  REPEAT_BEGIN = 4,\n  REPEAT_END = 5,\n  REPEAT_BOTH = 6,\n  NONE = 7,\n}\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY(): string {\n    return Category.Barline;\n  }\n\n  protected widths: Record<string, number>;\n  protected paddings: Record<string, number>;\n  protected layoutMetricsMap: Record<number, LayoutMetrics>;\n\n  protected thickness: number;\n  protected type!: BarlineType;\n\n  static get type(): typeof BarlineType {\n    return BarlineType;\n  }\n\n  static get typeString(): Record<string, BarlineType> {\n    return {\n      single: BarlineType.SINGLE,\n      double: BarlineType.DOUBLE,\n      end: BarlineType.END,\n      repeatBegin: BarlineType.REPEAT_BEGIN,\n      repeatEnd: BarlineType.REPEAT_END,\n      repeatBoth: BarlineType.REPEAT_BOTH,\n      none: BarlineType.NONE,\n    };\n  }\n\n  constructor(type: BarlineType | string) {\n    super();\n    this.thickness = Tables.STAVE_LINE_THICKNESS;\n\n    const TYPE = BarlineType;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.layoutMetricsMap = {};\n    this.layoutMetricsMap[TYPE.SINGLE] = {\n      xMin: 0,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.DOUBLE] = {\n      xMin: -3,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.END] = {\n      xMin: -5,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_END] = {\n      xMin: -10,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n      xMin: -2,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n      xMin: -10,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.NONE] = {\n      xMin: 0,\n      xMax: 0,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.setPosition(StaveModifierPosition.BEGIN);\n    this.setType(type);\n  }\n\n  getType(): number {\n    return this.type;\n  }\n\n  setType(type: string | number): this {\n    this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave: Stave): void {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    this.applyStyle(ctx);\n    ctx.openGroup('stavebarline', this.getAttribute('id'));\n    switch (this.type) {\n      case BarlineType.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case BarlineType.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case BarlineType.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case BarlineType.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case BarlineType.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case BarlineType.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n    ctx.closeGroup();\n    this.restoreStyle(ctx);\n  }\n\n  drawVerticalBar(stave: Stave, x: number, double_bar?: boolean): void {\n    const staveCtx = stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    staveCtx.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave: Stave, x: number): void {\n    const staveCtx = stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n    staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave: Stave, x: number, begin: boolean): void {\n    const staveCtx = stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n    staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = x + x_shift + dot_radius / 2;\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n    let dot_y = topY + y_offset + dot_radius / 2;\n\n    // draw the top repeat dot\n    staveCtx.beginPath();\n    staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    staveCtx.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    staveCtx.beginPath();\n    staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    staveCtx.fill();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log, RuntimeError } from './util';\n\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]): void {\n  if (ChordSymbol.DEBUG) log('Vex.Flow.ChordSymbol', args);\n}\n\nexport interface ChordSymbolBlock {\n  text: string;\n  symbolType: SymbolTypes;\n  symbolModifier: SymbolModifiers;\n  xShift: number;\n  yShift: number;\n  vAlign: boolean;\n  width: number;\n  glyph?: Glyph;\n}\n\nexport interface ChordSymbolGlyphMetrics {\n  scale: number;\n  leftSideBearing: number;\n  advanceWidth: number;\n  yOffset: number;\n}\n\nexport interface ChordSymbolMetrics {\n  global: {\n    superscriptOffset: number;\n    subscriptOffset: number;\n    kerningOffset: number;\n    lowerKerningText: string[];\n    upperKerningText: string[];\n    spacing: number;\n    superSubRatio: number;\n  };\n  glyphs: Record<string, ChordSymbolGlyphMetrics>;\n}\n\nexport enum ChordSymbolHorizontalJustify {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n  CENTER_STEM = 4,\n}\n\nexport enum ChordSymbolVerticalJustify {\n  TOP = 1,\n  BOTTOM = 2,\n}\n\nexport enum SymbolTypes {\n  GLYPH = 1,\n  TEXT = 2,\n  LINE = 3,\n}\n\nexport enum SymbolModifiers {\n  NONE = 1,\n  SUBSCRIPT = 2,\n  SUPERSCRIPT = 3,\n}\n\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.ChordSymbol;\n  }\n\n  // Chord symbols can be positioned and justified relative to the note.\n  static readonly HorizontalJustify = ChordSymbolHorizontalJustify;\n\n  static readonly HorizontalJustifyString: Record<string, ChordSymbolHorizontalJustify> = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n  };\n\n  static readonly VerticalJustify = ChordSymbolVerticalJustify;\n\n  static readonly VerticalJustifyString: Record<string, ChordSymbolVerticalJustify> = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n  };\n\n  static get superSubRatio(): number {\n    return ChordSymbol.metrics.global.superSubRatio;\n  }\n\n  /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n  static set NO_TEXT_FORMAT(val: boolean) {\n    ChordSymbol.noFormat = val;\n  }\n\n  static get NO_TEXT_FORMAT(): boolean {\n    return ChordSymbol.noFormat;\n  }\n\n  static getMetricForGlyph(glyphCode: string): ChordSymbolGlyphMetrics | undefined {\n    if (ChordSymbol.metrics.glyphs[glyphCode]) {\n      return ChordSymbol.metrics.glyphs[glyphCode];\n    }\n    return undefined;\n  }\n\n  static get engravingFontResolution(): number {\n    return Tables.currentMusicFont().getResolution();\n  }\n\n  static get spacingBetweenBlocks(): number {\n    return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n  }\n\n  static getWidthForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0.65; // probably should do something here.\n    }\n    return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n  }\n\n  static getYShiftForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0;\n    }\n    return metric.yOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static getXShiftForGlyph(glyph: Glyph): number {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0;\n    }\n    return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n  }\n\n  static get superscriptOffset(): number {\n    return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static get subscriptOffset(): number {\n    return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static get kerningOffset(): number {\n    return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  // Glyph data\n  static readonly glyphs: Record<string, { code: string }> = {\n    diminished: {\n      code: 'csymDiminished',\n    },\n    dim: {\n      code: 'csymDiminished',\n    },\n    halfDiminished: {\n      code: 'csymHalfDiminished',\n    },\n    '+': {\n      code: 'csymAugmented',\n    },\n    augmented: {\n      code: 'csymAugmented',\n    },\n    majorSeventh: {\n      code: 'csymMajorSeventh',\n    },\n    minor: {\n      code: 'csymMinor',\n    },\n    '-': {\n      code: 'csymMinor',\n    },\n    '(': {\n      code: 'csymParensLeftTall',\n    },\n    leftParen: {\n      code: 'csymParensLeftTall',\n    },\n    ')': {\n      code: 'csymParensRightTall',\n    },\n    rightParen: {\n      code: 'csymParensRightTall',\n    },\n    leftBracket: {\n      code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n      code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n      code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n      code: 'csymParensRightVeryTall',\n    },\n    '/': {\n      code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n      code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n      code: 'accidentalSharp',\n    },\n    b: {\n      code: 'accidentalFlat',\n    },\n  };\n\n  static readonly symbolTypes = SymbolTypes;\n\n  static readonly symbolModifiers = SymbolModifiers;\n\n  static get metrics(): ChordSymbolMetrics {\n    const chordSymbol = Tables.currentMusicFont().getMetrics().chordSymbol;\n\n    if (!chordSymbol) throw new RuntimeError('BadMetrics', `chordSymbol missing`);\n    return chordSymbol;\n  }\n\n  static get lowerKerningText(): string[] {\n    // For example, see: `bravura_metrics.ts`\n    // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n    // ['D', 'F', 'P', 'T', 'V', 'Y']\n    return ChordSymbol.metrics.global.lowerKerningText;\n  }\n\n  static get upperKerningText(): string[] {\n    return ChordSymbol.metrics.global.upperKerningText;\n  }\n\n  static isSuperscript(block: ChordSymbolBlock): boolean {\n    return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n  }\n\n  static isSubscript(block: ChordSymbolBlock): boolean {\n    return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n  }\n\n  static get minPadding(): number {\n    const musicFont = Tables.currentMusicFont();\n    return musicFont.lookupMetric('noteHead.minPadding');\n  }\n  /**\n   * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n   * Estimate how many lines above/below the staff we need.\n   */\n  static format(symbols: ChordSymbol[], state: ModifierContextState): boolean {\n    if (!symbols || symbols.length === 0) return false;\n\n    let width = 0;\n    let nonSuperWidth = 0;\n    let leftWidth = 0;\n    let rightWidth = 0;\n    let maxLeftGlyphWidth = 0;\n    let maxRightGlyphWidth = 0;\n\n    for (const symbol of symbols) {\n      const fontSize = Font.convertSizeToPointValue(symbol.textFont?.size);\n      const fontAdj = Font.scaleSize(fontSize, 0.05);\n      const glyphAdj = fontAdj * 2;\n      const note: Note = symbol.checkAttachedNote();\n      let symbolWidth = 0;\n      let lineSpaces = 1;\n      let vAlign = false;\n\n      for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n        const block = symbol.symbolBlocks[j];\n        const sup = ChordSymbol.isSuperscript(block);\n        const sub = ChordSymbol.isSubscript(block);\n        const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n        const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n\n        // If there are super/subscripts, they extend beyond the line so\n        // assume they take up 2 lines\n        if (sup || sub) {\n          lineSpaces = 2;\n        }\n\n        // If there is a symbol-specific offset, add it but consider font\n        // size since font and glyphs will be interspersed.\n        const fontSize = symbol.textFormatter.fontSizeInPixels;\n        const superSubFontSize = fontSize * superSubScale;\n        if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n          block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n          block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n          block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n          block.glyph.scale = block.glyph.scale * adj;\n        } else if (block.symbolType === SymbolTypes.TEXT) {\n          block.width = block.width * superSubFontSize;\n          block.yShift += symbol.getYOffsetForText(block.text) * adj;\n        }\n\n        if (\n          block.symbolType === SymbolTypes.GLYPH &&\n          block.glyph !== undefined &&\n          block.glyph.code === ChordSymbol.glyphs.over.code\n        ) {\n          lineSpaces = 2;\n        }\n        block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n\n        // If a subscript immediately  follows a superscript block, try to\n        // overlay them.\n        if (sup && j > 0) {\n          const prev = symbol.symbolBlocks[j - 1];\n          if (!ChordSymbol.isSuperscript(prev)) {\n            nonSuperWidth = width;\n          }\n        }\n        if (sub && nonSuperWidth > 0) {\n          vAlign = true;\n          // slide the symbol over so it lines up with superscript\n          block.xShift = block.xShift + (nonSuperWidth - width);\n          width = nonSuperWidth;\n          nonSuperWidth = 0;\n          // If we have vertically lined up, turn kerning off.\n          symbol.setEnableKerning(false);\n        }\n        if (!sup && !sub) {\n          nonSuperWidth = 0;\n        }\n        block.vAlign = vAlign;\n        width += block.width;\n        symbolWidth = width;\n      }\n\n      // make kerning adjustments after computing super/subscripts\n      symbol.updateKerningAdjustments();\n      symbol.updateOverBarAdjustments();\n\n      if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n        symbol.setTextLine(state.top_text_line);\n        state.top_text_line += lineSpaces;\n      } else {\n        symbol.setTextLine(state.text_line + 1);\n        state.text_line += lineSpaces + 1;\n      }\n      if (symbol.getReportWidth() && isStemmableNote(note)) {\n        const glyphWidth = note.getGlyphProps().getWidth();\n        if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n          maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n          leftWidth = Math.max(leftWidth, symbolWidth) + ChordSymbol.minPadding;\n        } else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n          maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n          rightWidth = Math.max(rightWidth, symbolWidth);\n        } else {\n          leftWidth = Math.max(leftWidth, symbolWidth / 2) + ChordSymbol.minPadding;\n          rightWidth = Math.max(rightWidth, symbolWidth / 2);\n          maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n          maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n        }\n      }\n      width = 0; // reset symbol width\n    }\n    const rightOverlap = Math.min(\n      Math.max(rightWidth - maxRightGlyphWidth, 0),\n      Math.max(rightWidth - state.right_shift, 0)\n    );\n    const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n\n    state.left_shift += leftOverlap;\n    state.right_shift += rightOverlap;\n    return true;\n  }\n\n  /** Currently unused. */\n  protected static noFormat: boolean = false;\n\n  protected symbolBlocks: ChordSymbolBlock[] = [];\n  protected horizontal: number = ChordSymbolHorizontalJustify.LEFT;\n  protected vertical: number = ChordSymbolVerticalJustify.TOP;\n  protected useKerning: boolean = true;\n  protected reportWidth: boolean = true;\n\n  // Initialized by the constructor via this.setFont().\n  protected textFormatter!: TextFormatter;\n\n  constructor() {\n    super();\n    this.resetFont();\n  }\n\n  /**\n   * Default text font.\n   * Choose a font family that works well with the current music engraving font.\n   * @override `Element.TEXT_FONT`.\n   */\n  static get TEXT_FONT(): Required<FontInfo> {\n    let family = 'Roboto Slab, Times, serif';\n    if (Tables.currentMusicFont().getName() === 'Petaluma') {\n      // Fixes Issue #1180\n      family = 'PetalumaScript, Arial, sans-serif';\n    }\n    return {\n      family,\n      size: 12,\n      weight: FontWeight.NORMAL,\n      style: FontStyle.NORMAL,\n    };\n  }\n\n  /**\n   * The offset is specified in `em`. Scale this value by the font size in pixels.\n   */\n  get superscriptOffset(): number {\n    return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n  }\n\n  get subscriptOffset(): number {\n    return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n  }\n\n  setReportWidth(value: boolean): this {\n    this.reportWidth = value;\n    return this;\n  }\n\n  getReportWidth(): boolean {\n    return this.reportWidth;\n  }\n\n  updateOverBarAdjustments(): void {\n    const barIndex = this.symbolBlocks.findIndex(\n      ({ symbolType, glyph }: ChordSymbolBlock) =>\n        symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash'\n    );\n\n    if (barIndex < 0) {\n      return;\n    }\n    const bar = this.symbolBlocks[barIndex];\n    const xoff = bar.width / 4;\n    const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n    let symIndex = 0;\n    for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n      const symbol = this.symbolBlocks[symIndex];\n      symbol.xShift = symbol.xShift + xoff;\n      symbol.yShift = symbol.yShift - yoff;\n    }\n\n    for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n      const symbol = this.symbolBlocks[symIndex];\n      symbol.xShift = symbol.xShift - xoff;\n      symbol.yShift = symbol.yShift + yoff;\n    }\n  }\n\n  updateKerningAdjustments(): void {\n    let accum = 0;\n    for (let j = 0; j < this.symbolBlocks.length; ++j) {\n      const symbol = this.symbolBlocks[j];\n      accum += this.getKerningAdjustment(j);\n      symbol.xShift += accum;\n    }\n  }\n\n  /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n  getKerningAdjustment(j: number): number {\n    if (!this.useKerning) {\n      return 0;\n    }\n    const currSymbol = this.symbolBlocks[j];\n    const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n    let adjustment = 0;\n\n    // Move things into the '/' over bar\n    if (\n      currSymbol.symbolType === SymbolTypes.GLYPH &&\n      currSymbol.glyph !== undefined &&\n      currSymbol.glyph.code === ChordSymbol.glyphs.over.code\n    ) {\n      adjustment += currSymbol.glyph.metrics.x_shift;\n    }\n\n    if (\n      prevSymbol !== undefined &&\n      prevSymbol.symbolType === SymbolTypes.GLYPH &&\n      prevSymbol.glyph !== undefined &&\n      prevSymbol.glyph.code === ChordSymbol.glyphs.over.code\n    ) {\n      adjustment += prevSymbol.glyph.metrics.x_shift;\n    }\n\n    // For superscripts that follow a letter without much top part, move it to the left slightly\n    let preKernUpper = false;\n    let preKernLower = false;\n    if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n      preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n      preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n    }\n\n    const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n    // TODO: adjust kern for font size.\n    // Where should this constant live?\n    if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n      adjustment += kerningOffsetPixels;\n    }\n\n    if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n      if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n        adjustment += kerningOffsetPixels / 2;\n      }\n      if (ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol?.text[prevSymbol.text.length - 1])) {\n        adjustment += kerningOffsetPixels / 2;\n      }\n    }\n    return adjustment;\n  }\n\n  /**\n   * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n   * Each block can have its own vertical orientation.\n   */\n  // eslint-disable-next-line\n  getSymbolBlock(params: any = {}): ChordSymbolBlock {\n    const symbolType = params.symbolType ?? SymbolTypes.TEXT;\n    const symbolBlock: ChordSymbolBlock = {\n      text: params.text ?? '',\n      symbolType,\n      symbolModifier: params.symbolModifier ?? SymbolModifiers.NONE,\n      xShift: 0,\n      yShift: 0,\n      vAlign: false,\n      width: 0,\n    };\n\n    // Note: symbol widths are resolution and font-independent.\n    // We convert to pixel values when we know what the font is.\n    if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n      const glyphArgs = ChordSymbol.glyphs[params.glyph];\n      const glyphPoints = 20;\n      symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n      // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n      // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n      // rv.width = rv.glyph.getMetrics().width;\n      // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n    } else if (symbolType === SymbolTypes.TEXT) {\n      symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n    } else if (symbolType === SymbolTypes.LINE) {\n      symbolBlock.width = params.width;\n    }\n\n    return symbolBlock;\n  }\n\n  /** Add a symbol to this chord, could be text, glyph or line. */\n  // eslint-disable-next-line\n  addSymbolBlock(parameters: any): this {\n    this.symbolBlocks.push(this.getSymbolBlock(parameters));\n    return this;\n  }\n\n  // ### Convenience functions for creating different types of chord symbol parts.\n\n  /** Add a text block. */\n  // eslint-disable-next-line\n  addText(text: string, parameters: any = {}): this {\n    const symbolType = SymbolTypes.TEXT;\n    return this.addSymbolBlock({ ...parameters, text, symbolType });\n  }\n\n  /** Add a text block with superscript modifier. */\n  addTextSuperscript(text: string): this {\n    const symbolType = SymbolTypes.TEXT;\n    const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n    return this.addSymbolBlock({ text, symbolType, symbolModifier });\n  }\n\n  /** Add a text block with subscript modifier. */\n  addTextSubscript(text: string): this {\n    const symbolType = SymbolTypes.TEXT;\n    const symbolModifier = SymbolModifiers.SUBSCRIPT;\n    return this.addSymbolBlock({ text, symbolType, symbolModifier });\n  }\n\n  /** Add a glyph block with superscript modifier. */\n  addGlyphSuperscript(glyph: string): this {\n    const symbolType = SymbolTypes.GLYPH;\n    const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n    return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n  }\n\n  /** Add a glyph block. */\n  // eslint-disable-next-line\n  addGlyph(glyph: string, params: any = {}): this {\n    const symbolType = SymbolTypes.GLYPH;\n    return this.addSymbolBlock({ ...params, glyph, symbolType });\n  }\n\n  /**\n   * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n   * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n   */\n  // eslint-disable-next-line\n  addGlyphOrText(text: string, params: any = {}): this {\n    let str = '';\n    for (let i = 0; i < text.length; ++i) {\n      const char = text[i];\n      if (ChordSymbol.glyphs[char]) {\n        if (str.length > 0) {\n          this.addText(str, params);\n          str = '';\n        }\n        this.addGlyph(char, params);\n      } else {\n        // Collect consecutive characters with no glyphs.\n        str += char;\n      }\n    }\n    if (str.length > 0) {\n      this.addText(str, params);\n    }\n    return this;\n  }\n\n  /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n  // eslint-disable-next-line\n  addLine(width: number, params: any = {}): this {\n    const symbolType = SymbolTypes.LINE;\n    return this.addSymbolBlock({ ...params, symbolType, width });\n  }\n\n  /**\n   * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n   *\n   * @param f is 1) a `FontInfo` object or\n   *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n   *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n   * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n   * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n   * @param style is a string (e.g., 'italic', 'normal').\n   *\n   * @override See: Element.\n   */\n  setFont(f?: string | FontInfo, size?: string | number, weight?: string | number, style?: string): this {\n    super.setFont(f, size, weight, style);\n    this.textFormatter = TextFormatter.create(this.textFont);\n    return this;\n  }\n\n  setEnableKerning(val: boolean): this {\n    this.useKerning = val;\n    return this;\n  }\n\n  /** Set vertical position of text (above or below stave). */\n  setVertical(vj: ChordSymbolVerticalJustify | string | number): this {\n    this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n    return this;\n  }\n\n  getVertical(): number {\n    return this.vertical;\n  }\n\n  /** Set horizontal justification. */\n  setHorizontal(hj: ChordSymbolHorizontalJustify | string | number): this {\n    this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n    return this;\n  }\n\n  getHorizontal(): number {\n    return this.horizontal;\n  }\n\n  getWidth(): number {\n    let width = 0;\n    this.symbolBlocks.forEach((symbol) => {\n      width += symbol.vAlign ? 0 : symbol.width;\n    });\n    return width;\n  }\n\n  getYOffsetForText(text: string): number {\n    let acc = 0;\n    let i = 0;\n    for (i = 0; i < text.length; ++i) {\n      const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n      if (metrics) {\n        const yMax = metrics.y_max ?? 0;\n        acc = yMax < acc ? yMax : acc;\n      }\n    }\n\n    const resolution = this.textFormatter.getResolution();\n    return i > 0 ? -1 * (acc / resolution) : 0;\n  }\n\n  /** Render text and glyphs above/below the note. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote() as StemmableNote;\n    this.setRendered();\n\n    // We're changing context parameters. Save current state.\n    ctx.save();\n    this.applyStyle();\n    ctx.openGroup('chordsymbol', this.getAttribute('id'));\n\n    const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n    ctx.setFont(this.textFont);\n\n    let y: number;\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    const hasStem = note.hasStem();\n    const stave = note.checkStave();\n\n    if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n      if (hasStem) {\n        const stem_ext = note.checkStem().getExtents();\n        const spacing = stave.getSpacingBetweenLines();\n        const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n        y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n      }\n    } else {\n      // (this.vertical === VerticalJustify.TOP)\n      const topY = Math.min(...note.getYs());\n      y = Math.min(stave.getYForTopText(this.text_line), topY - 10);\n      if (hasStem) {\n        const stem_ext = note.checkStem().getExtents();\n        const spacing = stave.getSpacingBetweenLines();\n        y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n      }\n    }\n\n    let x = start.x;\n    if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n      x = start.x;\n    } else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n      x = start.x + this.getWidth();\n    } else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n      x = start.x - this.getWidth() / 2;\n    } else {\n      // HorizontalJustify.CENTER_STEM\n      x = note.getStemX() - this.getWidth() / 2;\n    }\n    L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n\n    this.symbolBlocks.forEach((symbol) => {\n      const isSuper = ChordSymbol.isSuperscript(symbol);\n      const isSub = ChordSymbol.isSubscript(symbol);\n      let curY = y;\n      L('shift was ', symbol.xShift, symbol.yShift);\n      L('curY pre sub ', curY);\n      if (isSuper) {\n        curY += this.superscriptOffset;\n      }\n      if (isSub) {\n        curY += this.subscriptOffset;\n      }\n      L('curY sup/sub ', curY);\n\n      if (symbol.symbolType === SymbolTypes.TEXT) {\n        if (isSuper || isSub) {\n          ctx.save();\n          if (this.textFont) {\n            const { family, size, weight, style } = this.textFont;\n            const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n            ctx.setFont(family, smallerFontSize, weight, style);\n          }\n        }\n        // TODO???\n        // We estimate the text width, fill it in with the empirical value so the formatting is even.\n        // const textDim = ctx.measureText(symbol.text);\n        // symbol.width = textDim.width;\n\n        L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n\n        ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n        if (isSuper || isSub) {\n          ctx.restore();\n        }\n      } else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n        curY += symbol.yShift;\n        L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n        symbol.glyph.render(ctx, x + symbol.xShift, curY);\n      } else if (symbol.symbolType === SymbolTypes.LINE) {\n        L('Rendering Line : ', symbol.width, x, curY);\n        ctx.beginPath();\n        ctx.setLineWidth(1); // ?\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + symbol.width, curY);\n        ctx.stroke();\n      }\n\n      x += symbol.width;\n      if (symbol.vAlign) {\n        x += symbol.xShift;\n      }\n    });\n    ctx.closeGroup();\n    this.restoreStyle();\n    ctx.restore();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { ModifierContext } from './modifiercontext';\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (BarNote.DEBUG) log('Vex.Flow.BarNote', args);\n}\n\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n  /** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.BarNote;\n  }\n\n  protected metrics: { widths: Record<string, number> };\n  // Initialized by the constructor via this.setType(type)\n  protected type!: BarlineType;\n\n  constructor(type: string | BarlineType = BarlineType.SINGLE) {\n    super({ duration: 'b' });\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = BarlineType;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  /** Get the type of bar note.*/\n  getType(): BarlineType {\n    return this.type;\n  }\n\n  /** Set the type of bar note. */\n  setType(type: string | BarlineType): this {\n    this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  /* Overridden to ignore */\n  // eslint-disable-next-line\n  addToModifierContext(mc: ModifierContext): this {\n    // DO NOTHING.\n    return this;\n  }\n\n  /** Overridden to ignore. */\n  preFormat(): this {\n    this.preFormatted = true;\n    return this;\n  }\n\n  /** Render note to stave. */\n  draw(): void {\n    const ctx = this.checkContext();\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    this.applyStyle(ctx);\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.checkStave());\n    this.restoreStyle(ctx);\n    this.setRendered();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Element } from './element';\nimport { FontInfo } from './font';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { TextFormatter } from './textformatter';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport interface BendPhrase {\n  x?: number;\n  type: number;\n  text: string;\n  width?: number;\n  draw_width?: number;\n}\n\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n  static get CATEGORY(): string {\n    return Category.Bend;\n  }\n\n  static get UP(): number {\n    return 0;\n  }\n\n  static get DOWN(): number {\n    return 1;\n  }\n\n  /** Default text font. */\n  static TEXT_FONT: Required<FontInfo> = { ...Element.TEXT_FONT };\n\n  // Arrange bends in `ModifierContext`\n  static format(bends: Bend[], state: ModifierContextState): boolean {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      const note = bend.checkAttachedNote();\n\n      if (isTabNote(note)) {\n        const stringPos = note.leastString() - 1;\n        if (state.top_text_line < stringPos) {\n          state.top_text_line = stringPos;\n        }\n      }\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(state.top_text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  protected text: string;\n  protected tap: string;\n  protected release: boolean;\n  protected phrase: BendPhrase[];\n\n  public render_options: {\n    line_width: number;\n    release_width: number;\n    bend_width: number;\n    line_style: string;\n  };\n\n  /**\n   * Example of a phrase:\n   * ```\n   *    [{\n   *     type: UP,\n   *     text: \"whole\"\n   *     width: 8;\n   *   },\n   *   {\n   *     type: DOWN,\n   *     text: \"whole\"\n   *     width: 8;\n   *   },\n   *   {\n   *     type: UP,\n   *     text: \"half\"\n   *     width: 8;\n   *   },\n   *   {\n   *     type: UP,\n   *     text: \"whole\"\n   *     width: 8;\n   *   },\n   *   {\n   *     type: DOWN,\n   *     text: \"1 1/2\"\n   *     width: 8;\n   *   }]\n   * ```\n   * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   * @param release if true, render a release. (DEPRECATED)\n   * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n   */\n  constructor(text: string, release: boolean = false, phrase?: BendPhrase[]) {\n    super();\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release;\n    this.tap = '';\n    this.resetFont();\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  /** Set horizontal shift in pixels. */\n  setXShift(value: number): this {\n    this.x_shift = value;\n    this.updateWidth();\n    return this;\n  }\n\n  setTap(value: string): this {\n    this.tap = value;\n    return this;\n  }\n\n  /** Get text provided in the constructor. */\n  getText(): string {\n    return this.text;\n  }\n  getTextHeight(): number {\n    const textFormatter = TextFormatter.create(this.textFont);\n    return textFormatter.maxHeight;\n  }\n\n  /** Recalculate width. */\n  protected updateWidth(): this {\n    const textFormatter = TextFormatter.create(this.textFont);\n    const measureText = (text: string) => {\n      return textFormatter.getWidthForTextInPx(text);\n    };\n\n    let totalWidth = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (bend.width !== undefined) {\n        totalWidth += bend.width;\n      } else {\n        const additional_width =\n          bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        totalWidth += bend.width;\n      }\n    }\n\n    this.setWidth(totalWidth + this.x_shift);\n    return this;\n  }\n\n  /** Draw the bend on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const stave = note.checkStave();\n    const spacing = stave.getSpacingBetweenLines();\n    const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n    // this.text_line is relative to top string in the group.\n    const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n    const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n\n    const renderBend = (x: number, y: number, width: number, height: number) => {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(this.render_options.line_width);\n      ctx.setStrokeStyle(this.render_options.line_style);\n      ctx.setFillStyle(this.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    const renderRelease = (x: number, y: number, width: number, height: number) => {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(this.render_options.line_width);\n      ctx.setStrokeStyle(this.render_options.line_style);\n      ctx.setFillStyle(this.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(x + width, height, x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    const renderArrowHead = (x: number, y: number, direction: number) => {\n      const width = 4;\n      const yBase = y + width * direction;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y); // tip of the arrow\n      ctx.lineTo(x - width, yBase);\n      ctx.lineTo(x + width, yBase);\n      ctx.closePath();\n      ctx.fill();\n    };\n\n    const renderText = (x: number, text: string) => {\n      ctx.save();\n      ctx.setFont(this.textFont);\n      const render_x = x - ctx.measureText(text).width / 2;\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    };\n\n    let last_bend = undefined;\n    let last_bend_draw_width = 0;\n    let last_drawn_width = 0;\n    if (this.tap?.length) {\n      const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n      renderText(tapStart.x, this.tap);\n    }\n\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (!bend.draw_width) bend.draw_width = 0;\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height, +1);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (!last_bend) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend_draw_width = bend.draw_width;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    if (!last_bend || last_bend.x == undefined) {\n      throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\n\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport class Dot extends Modifier {\n  static get CATEGORY(): string {\n    return Category.Dot;\n  }\n\n  protected radius: number;\n  protected dot_shiftY: number;\n\n  /** Returns the dots associated to a Note. */\n  static getDots(note: Note): Dot[] {\n    return note.getModifiersByType(Dot.CATEGORY) as Dot[];\n  }\n\n  /** Add a dot on the specified keys to the notes. */\n  static buildAndAttach(notes: Note[], options?: { index?: number; all?: boolean }): void {\n    for (const note of notes) {\n      if (options?.all) {\n        for (let i = 0; i < note.keys.length; i++) {\n          const dot = new Dot();\n          dot.setDotShiftY(note.glyphProps.dot_shiftY);\n          note.addModifier(dot, i);\n        }\n      } else if (options?.index != undefined) {\n        const dot = new Dot();\n        dot.setDotShiftY(note.glyphProps.dot_shiftY);\n        note.addModifier(dot, options?.index);\n      } else {\n        const dot = new Dot();\n        dot.setDotShiftY(note.glyphProps.dot_shiftY);\n        note.addModifier(dot, 0);\n      }\n    }\n  }\n\n  // Arrange dots inside a ModifierContext.\n  static format(dots: Dot[], state: ModifierContextState): boolean {\n    const right_shift = state.right_shift;\n    const dot_spacing = 1;\n\n    if (!dots || dots.length === 0) return false;\n\n    const dot_list = [];\n    const max_shift_map: Record<string, number> = {};\n    for (let i = 0; i < dots.length; ++i) {\n      const dot = dots[i];\n      const note = dot.getNote();\n\n      let props;\n      let shift;\n\n      if (isStaveNote(note)) {\n        const index = dot.checkIndex();\n        props = note.getKeyProps()[index];\n        // consider right displaced head with no previous modifier\n        shift = note.getFirstDotPx();\n      } else if (isTabNote(note)) {\n        props = { line: 0.5 }; // Shim key props for dot placement\n        shift = right_shift;\n      } else {\n        // note object is not StaveNote or TabNote.\n        throw new RuntimeError('Internal', 'Unexpected instance.');\n      }\n\n      const note_id = note.getAttribute('id');\n      dot_list.push({ line: props.line, note, note_id, dot });\n      max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n    }\n\n    // Sort dots by line number.\n    dot_list.sort((a, b) => b.line - a.line);\n\n    let dot_shift = right_shift;\n    let x_width = 0;\n    let last_line = null;\n    let last_note = null;\n    let prev_dotted_space = null;\n    let half_shiftY = 0;\n\n    for (let i = 0; i < dot_list.length; ++i) {\n      const { dot, note, note_id, line } = dot_list[i];\n\n      // Reset the position of the dot every line.\n      if (line !== last_line || note !== last_note) {\n        dot_shift = max_shift_map[note_id];\n      }\n\n      if (!note.isRest() && line !== last_line) {\n        if (Math.abs(line % 1) === 0.5) {\n          // note is on a space, so no dot shift\n          half_shiftY = 0;\n        } else {\n          // note is on a line, so shift dot to space above the line\n          half_shiftY = 0.5;\n          if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n            // previous note on a space, so shift dot to space below the line\n            half_shiftY = -0.5;\n          } else if (line + half_shiftY === prev_dotted_space) {\n            // previous space is dotted, so shift dot to space below the line\n            half_shiftY = -0.5;\n          }\n        }\n      }\n\n      // convert half_shiftY to a multiplier for dots.draw()\n      if (note.isRest()) {\n        dot.dot_shiftY += -half_shiftY;\n      } else {\n        dot.dot_shiftY = -half_shiftY;\n      }\n      prev_dotted_space = line + half_shiftY;\n\n      dot.setXShift(dot_shift);\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\n      x_width = dot_shift > x_width ? dot_shift : x_width;\n      last_line = line;\n      last_note = note;\n    }\n\n    // Update state.\n    state.right_shift += x_width;\n    return true;\n  }\n\n  constructor() {\n    super();\n\n    this.position = Modifier.Position.RIGHT;\n\n    this.radius = 2;\n    this.setWidth(5);\n    this.dot_shiftY = 0;\n  }\n\n  setNote(note: Note): this {\n    this.note = note;\n    if (isGraceNote(note)) {\n      this.radius *= 0.5;\n      this.setWidth(3);\n    }\n    return this;\n  }\n\n  setDotShiftY(y: number): this {\n    this.dot_shiftY = y;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const stave = note.checkStave();\n    const lineSpace = stave.getSpacingBetweenLines();\n\n    const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n\n    // Set the starting y coordinate to the base of the stem for TabNotes.\n\n    if (isTabNote(note)) {\n      start.y = note.getStemExtents().baseY;\n    }\n\n    const x = start.x + this.x_shift + this.width - this.radius;\n    const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n\n    ctx.beginPath();\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n    ctx.fill();\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\n\nimport { Builder } from './easyscore';\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport class FretHandFinger extends Modifier {\n  static get CATEGORY(): string {\n    return Category.FretHandFinger;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n  };\n\n  // Arrange fingerings inside a ModifierContext.\n  static format(nums: FretHandFinger[], state: ModifierContextState): boolean {\n    const { left_shift, right_shift } = state;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shiftLeft = 0;\n    let shiftRight = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote();\n      const pos = num.getPosition();\n      const index = num.checkIndex();\n      const props = note.getKeyProps()[index];\n      const textFormatter = TextFormatter.create(num.textFont);\n      const textHeight = textFormatter.maxHeight;\n      if (num.position === ModifierPosition.ABOVE) {\n        state.top_text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n      }\n      if (num.position === ModifierPosition.BELOW) {\n        state.text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n      }\n\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          if (left_shift === 0) {\n            shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n          }\n          if (right_shift === 0) {\n            shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n          }\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({\n        note,\n        num,\n        pos,\n        line: props.line,\n        shiftL: shiftLeft,\n        shiftR: shiftRight,\n      });\n    }\n\n    // Sort fingernumbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let numShiftL = 0;\n    let numShiftR = 0;\n    let xWidthL = 0;\n    let xWidthR = 0;\n    let lastLine = null;\n    let lastNote = null;\n\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n\n      // Reset the position of the string number every line.\n      if (line !== lastLine || note !== lastNote) {\n        numShiftL = left_shift + shiftL;\n        numShiftR = right_shift + shiftR;\n      }\n\n      const numWidth = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift + numShiftL);\n        num_shift = left_shift + numWidth; // spacing\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(numShiftR);\n        num_shift = shiftRight + numWidth; // spacing\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n      }\n      lastLine = line;\n      lastNote = note;\n    }\n\n    state.left_shift += xWidthL;\n    state.right_shift += xWidthR;\n\n    return true;\n  }\n\n  static easyScoreHook({ fingerings }: { fingerings?: string } = {}, note: StemmableNote, builder: Builder): void {\n    fingerings\n      ?.split(',')\n      .map((fingeringString: string) => {\n        const split = fingeringString.trim().split('.');\n        const params: { number: string; position?: string } = { number: split[0] };\n        if (split[1]) params.position = split[1];\n        return builder.getFactory().Fingering(params);\n      })\n      .map((fingering: Modifier, index: number) => note.addModifier(fingering, index));\n  }\n\n  protected finger: string;\n  protected x_offset: number;\n  protected y_offset: number;\n\n  constructor(finger: string) {\n    super();\n\n    this.finger = finger;\n    this.width = 7;\n    this.position = Modifier.Position.LEFT; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.resetFont();\n  }\n\n  setFretHandFinger(finger: string): this {\n    this.finger = finger;\n    return this;\n  }\n\n  getFretHandFinger(): string {\n    return this.finger;\n  }\n\n  setOffsetX(x: number): this {\n    this.x_offset = x;\n    return this;\n  }\n\n  setOffsetY(y: number): this {\n    this.y_offset = y;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(this.position, this.index);\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n        dot_x -= 4;\n        dot_y -= 12;\n        break;\n      case Modifier.Position.BELOW:\n        dot_x -= 2;\n        dot_y += 10;\n        break;\n      case Modifier.Position.LEFT:\n        dot_x -= this.width;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += 1;\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n    }\n\n    ctx.save();\n    ctx.setFont(this.textFont);\n    ctx.fillText('' + this.finger, dot_x, dot_y);\n    ctx.restore();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { BoundingBox } from './boundingbox';\nimport { ElementStyle } from './element';\nimport { Glyph } from './glyph';\nimport { Note, NoteStruct } from './note';\nimport { RenderContext } from './rendercontext';\nimport { Stave } from './stave';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (NoteHead.DEBUG) log('Vex.Flow.NoteHead', args);\n}\n\nexport interface NoteHeadMetrics {\n  minPadding?: number;\n  displacedShiftX?: number;\n}\nexport interface NoteHeadStruct extends NoteStruct {\n  line?: number;\n  glyph_font_scale?: number;\n  slashed?: boolean;\n  style?: ElementStyle;\n  stem_down_x_offset?: number;\n  stem_up_x_offset?: number;\n  custom_glyph_code?: string;\n  x_shift?: number;\n  stem_direction?: number;\n  displaced?: boolean;\n  note_type?: string;\n  x?: number;\n  y?: number;\n  index?: number;\n}\n\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(\n  ctx: RenderContext,\n  duration: string,\n  x: number,\n  y: number,\n  stem_direction: number,\n  staveSpace: number\n) {\n  const width = Tables.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Tables.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Tables.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Tables.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n  /** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.NoteHead;\n  }\n\n  glyph_code: string;\n\n  protected custom_glyph: boolean = false;\n  protected stem_up_x_offset: number = 0;\n  protected stem_down_x_offset: number = 0;\n  protected displaced: boolean;\n  protected stem_direction: number;\n\n  protected x: number;\n  protected y: number;\n  protected line: number;\n  protected index?: number;\n  protected slashed: boolean;\n\n  constructor(noteStruct: NoteHeadStruct) {\n    super(noteStruct);\n\n    this.index = noteStruct.index;\n    this.x = noteStruct.x || 0;\n    this.y = noteStruct.y || 0;\n    if (noteStruct.note_type) this.noteType = noteStruct.note_type;\n    this.displaced = noteStruct.displaced || false;\n    this.stem_direction = noteStruct.stem_direction || Stem.UP;\n    this.line = noteStruct.line || 0;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n    defined(\n      this.glyphProps,\n      'BadArguments',\n      `No glyph found for duration '${this.duration}' and type '${this.noteType}'`\n    );\n\n    // Swap out the glyph with ledger lines\n    if ((this.line > 5 || this.line < 0) && this.glyphProps.ledger_code_head) {\n      this.glyphProps.code_head = this.glyphProps.ledger_code_head;\n    }\n    this.glyph_code = this.glyphProps.code_head;\n    this.x_shift = noteStruct.x_shift || 0;\n    if (noteStruct.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = noteStruct.custom_glyph_code;\n      this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n      this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n    }\n\n    this.setStyle(noteStruct.style);\n    this.slashed = noteStruct.slashed || false;\n\n    this.render_options = {\n      ...this.render_options,\n      // font size for note heads\n      glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE,\n    };\n\n    this.setWidth(\n      this.custom_glyph &&\n        !this.glyph_code.startsWith('noteheadSlashed') &&\n        !this.glyph_code.startsWith('noteheadCircled')\n        ? Glyph.getWidth(this.glyph_code, this.render_options.glyph_font_scale)\n        : this.glyphProps.getWidth(this.render_options.glyph_font_scale)\n    );\n  }\n  /** Get the width of the notehead. */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /** Determine if the notehead is displaced. */\n  isDisplaced(): boolean {\n    return this.displaced === true;\n  }\n\n  /** Set the X coordinate. */\n  setX(x: number): this {\n    this.x = x;\n    return this;\n  }\n\n  /** Get the Y coordinate. */\n  getY(): number {\n    return this.y;\n  }\n\n  /** Set the Y coordinate. */\n  setY(y: number): this {\n    this.y = y;\n    return this;\n  }\n\n  /** Get the stave line the notehead is placed on. */\n  getLine(): number {\n    return this.line;\n  }\n\n  /** Set the stave line the notehead is placed on. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Get the canvas `x` coordinate position of the notehead. */\n  getAbsoluteX(): number {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = Stem.WIDTH / 2;\n    const musicFont = Tables.currentMusicFont();\n    const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n    const displacedFontShift = musicFont.lookupMetric('noteHead.displacedShiftX', 0) * this.stem_direction;\n\n    return (\n      x +\n      fontShift +\n      (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0)\n    );\n  }\n\n  /** Get the `BoundingBox` for the `NoteHead`. */\n  getBoundingBox(): BoundingBox {\n    const spacing = this.checkStave().getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  /** Set notehead to a provided `stave`. */\n  setStave(stave: Stave): this {\n    const line = this.getLine();\n\n    this.stave = stave;\n    if (this.stave) {\n      this.setY(this.stave.getYForNote(line));\n      this.setContext(this.stave.getContext());\n    }\n    return this;\n  }\n\n  /** Pre-render formatting. */\n  preFormat(): this {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n\n    this.setWidth(width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  /** Draw the notehead. */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let head_x = this.getAbsoluteX();\n    if (this.custom_glyph) {\n      // head_x += this.x_shift;\n      head_x +=\n        this.stem_direction === Stem.UP\n          ? this.stem_up_x_offset +\n            (this.glyphProps.stem ? this.glyphProps.getWidth(this.render_options.glyph_font_scale) - this.width : 0)\n          : this.stem_down_x_offset;\n    }\n\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n    if (this.noteType === 's') {\n      const staveSpace = this.checkStave().getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n        category: `noteHead.${categorySuffix}`,\n      });\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Glyph, GlyphProps } from './glyph';\nimport { Note, NoteStruct } from './note';\nimport { Stem, StemOptions } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport abstract class StemmableNote extends Note {\n  static get CATEGORY(): string {\n    return Category.StemmableNote;\n  }\n\n  stem_direction?: number;\n  stem?: Stem;\n\n  protected flag?: Glyph;\n  protected stem_extension_override?: number;\n\n  constructor(noteStruct: NoteStruct) {\n    super(noteStruct);\n  }\n\n  // Get and set the note's `Stem`\n  getStem(): Stem | undefined {\n    return this.stem;\n  }\n\n  checkStem(): Stem {\n    if (!this.stem) {\n      throw new RuntimeError('NoStem', 'No stem attached to instance');\n    }\n    return this.stem;\n  }\n\n  setStem(stem: Stem): this {\n    this.stem = stem;\n    this.addChildElement(stem);\n    return this;\n  }\n\n  // Builds and sets a new stem\n  buildStem(): this {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag(category = 'flag'): void {\n    const { glyphProps } = this;\n\n    if (this.hasFlag()) {\n      const flagCode =\n        this.getStemDirection() === Stem.DOWN ? glyphProps.code_flag_downstem : glyphProps.code_flag_upstem;\n\n      if (flagCode) this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n    }\n  }\n\n  // Get the custom glyph associated with the outer note head on the base of the stem.\n  getBaseCustomNoteHeadGlyphProps(): GlyphProps {\n    if (this.getStemDirection() === Stem.DOWN) {\n      return this.customGlyphs[this.customGlyphs.length - 1];\n    } else {\n      return this.customGlyphs[0];\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength(): number {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount(): number {\n    const glyphProps = this.getGlyphProps();\n\n    if (glyphProps) {\n      return glyphProps.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinimumLength(): number {\n    const frac = Tables.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == undefined) length = 35;\n        break;\n      case '16':\n        length = this.beam == undefined ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == undefined ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == undefined ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == undefined ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection(): number {\n    if (!this.stem_direction) throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    return this.stem_direction;\n  }\n\n  setStemDirection(direction?: number): this {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n\n    // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n    this.reset();\n    if (this.hasFlag()) {\n      this.buildFlag();\n    }\n    this.beam = undefined;\n\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n\n      // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n      // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n      const glyphProps = this.getBaseCustomNoteHeadGlyphProps() || this.getGlyphProps();\n\n      // Get the font-specific customizations for the note heads.\n      const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyphProps.code_head}`, {\n        offsetYBaseStemUp: 0,\n        offsetYTopStemUp: 0,\n        offsetYBaseStemDown: 0,\n        offsetYTopStemDown: 0,\n      });\n\n      // Configure the stem to use these offsets.\n      this.stem.setOptions({\n        stem_up_y_offset: offsets.offsetYTopStemUp, // glyph.stem_up_y_offset,\n        stem_down_y_offset: offsets.offsetYTopStemDown, // glyph.stem_down_y_offset,\n        stem_up_y_base_offset: offsets.offsetYBaseStemUp, // glyph.stem_up_y_base_offset,\n        stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n      });\n    }\n\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX(): number {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX(): number {\n    return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension(): number {\n    const glyphProps = this.getGlyphProps();\n\n    if (this.stem_extension_override != undefined) {\n      return this.stem_extension_override;\n    }\n\n    // Use stem_beam_extension with beams\n    if (this.beam) {\n      return glyphProps.stem_beam_extension;\n    }\n\n    if (glyphProps) {\n      return this.getStemDirection() === Stem.UP ? glyphProps.stem_up_extension : glyphProps.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height: number): this {\n    this.stem_extension_override = height - Stem.HEIGHT;\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents(): { topY: number; baseY: number } {\n    if (!this.stem) throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    return this.stem.getExtents();\n  }\n\n  /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n  getYForTopText(textLine: number): number {\n    const stave = this.checkStave();\n    if (this.hasStem()) {\n      const extents = this.getStemExtents();\n      if (!extents) throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n\n      return Math.min(\n        stave.getYForTopText(textLine),\n        extents.topY - this.render_options.annotation_spacing * (textLine + 1)\n      );\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  }\n\n  /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n  getYForBottomText(textLine: number): number {\n    const stave = this.checkStave();\n    if (this.hasStem()) {\n      const extents = this.getStemExtents();\n      if (!extents) throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n\n      return Math.max(\n        stave.getYForTopText(textLine),\n        extents.baseY + this.render_options.annotation_spacing * textLine\n      );\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag(): boolean {\n    return Tables.getGlyphProps(this.duration).flag == true && !this.beam;\n  }\n\n  /** Post formats the note. */\n  postFormat(): this {\n    this.beam?.postFormat();\n    this.postFormatted = true;\n    return this;\n  }\n\n  /** Renders the stem onto the canvas. */\n  drawStem(stemOptions: StemOptions): void {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stemOptions));\n    this.stem?.setContext(this.getContext()).draw();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\n\nimport { Beam } from './beam';\nimport { BoundingBox } from './boundingbox';\nimport { ElementStyle } from './element';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { KeyProps, Note, NoteStruct } from './note';\nimport { NoteHead } from './notehead';\nimport { Stave } from './stave';\nimport { Stem, StemOptions } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\n\nfunction showDeprecationWarningForNoteHeads(): void {\n  // eslint-disable-next-line\n  console.warn(\n    'StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.',\n    'This accessor will be removed in VexFlow 5.0.'\n  );\n}\n\nexport interface StaveNoteHeadBounds {\n  y_top: number;\n  y_bottom: number;\n  displaced_x?: number;\n  non_displaced_x?: number;\n  highest_line: number;\n  lowest_line: number;\n  highest_displaced_line?: number;\n  lowest_displaced_line?: number;\n  highest_non_displaced_line: number;\n  lowest_non_displaced_line: number;\n}\n\nexport interface StaveNoteFormatSettings {\n  line: number;\n  maxLine: number;\n  minLine: number;\n  isrest: boolean;\n  stemDirection?: number;\n  stemMax: number;\n  stemMin: number;\n  voice_shift: number;\n  is_displaced: boolean;\n  note: StaveNote;\n}\n\nexport interface StaveNoteStruct extends NoteStruct {\n  /** `Stem.UP` or `Stem.DOWN`. */\n  stem_direction?: number;\n  auto_stem?: boolean;\n  stem_down_x_offset?: number;\n  stem_up_x_offset?: number;\n  stroke_px?: number;\n  glyph_font_scale?: number;\n  octave_shift?: number;\n  clef?: string;\n}\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (StaveNote.DEBUG) log('Vex.Flow.StaveNote', args);\n}\n\nconst isInnerNoteIndex = (note: StaveNote, index: number) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest: StaveNoteFormatSettings, note: StaveNoteFormatSettings, dir: number) {\n  const delta = dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest: StaveNoteFormatSettings, noteU: StaveNoteFormatSettings, noteL: StaveNoteFormatSettings) {\n  const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.StaveNote;\n  }\n\n  /**\n   * @deprecated Use Stem.UP.\n   */\n  static get STEM_UP(): number {\n    return Stem.UP;\n  }\n\n  /**\n   * @deprecated Use Stem.DOWN.\n   */\n  static get STEM_DOWN(): number {\n    return Stem.DOWN;\n  }\n\n  static get LEDGER_LINE_OFFSET(): number {\n    return 3;\n  }\n\n  static get minNoteheadPadding(): number {\n    const musicFont = Tables.currentMusicFont();\n    return musicFont.lookupMetric('noteHead.minPadding');\n  }\n\n  /** Format notes inside a ModifierContext. */\n  static format(notes: StaveNote[], state: ModifierContextState): boolean {\n    if (!notes || notes.length < 2) return false;\n\n    const notesList: StaveNoteFormatSettings[] = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      // Formatting uses sortedKeyProps to calculate line and minL.\n      const props = notes[i].sortedKeyProps;\n      const line = props[0].keyProps.line;\n      let minL = props[props.length - 1].keyProps.line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinimumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyphProps.line_above;\n        minL = line - notes[i].glyphProps.line_below;\n      } else {\n        maxL =\n          stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n\n        minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].keyProps.line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection: stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    let voices = 0;\n    let noteU = undefined;\n    let noteM = undefined;\n    let noteL = undefined;\n    const draw = [false, false, false];\n\n    for (let i = 0; i < notesList.length; i++) {\n      draw[i] = notesList[i].note.render_options.draw == false ? false : true;\n    }\n\n    if (draw[0] && draw[1] && draw[2]) {\n      // Three visible notes\n      voices = 3;\n      noteU = notesList[0];\n      noteM = notesList[1];\n      noteL = notesList[2];\n    } else if (draw[0] && draw[1]) {\n      // Two visible notes, 0 & 1\n      voices = 2;\n      noteU = notesList[0];\n      noteL = notesList[1];\n    } else if (draw[0] && draw[2]) {\n      // Two visible notes, 0 & 2\n      voices = 2;\n      noteU = notesList[0];\n      noteL = notesList[2];\n    } else if (draw[1] && draw[2]) {\n      // Two visible notes, 1 & 2\n      voices = 2;\n      noteU = notesList[1];\n      noteL = notesList[2];\n    } else {\n      // No shift required for less than 2 visible notes\n      return true;\n    }\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing =\n        noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n        noteL.note.render_options.draw = false;\n      } else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          //Instead of shifting notes, remove the appropriate flag\n          //If we are sharing a line, switch one notes stem direction.\n          //If we are sharing a line and in the same voice, only then offset one note\n          const lineDiff = Math.abs(noteU.line - noteL.line);\n          if (noteU.note.hasStem() && noteL.note.hasStem()) {\n            const noteUHead = Tables.codeNoteHead(\n              noteU.note.sortedKeyProps[0].keyProps.code ?? 'N',\n              noteU.note.duration\n            );\n            const noteLHead = Tables.codeNoteHead(\n              noteL.note.sortedKeyProps[noteL.note.sortedKeyProps.length - 1].keyProps.code ?? 'N',\n              noteL.note.duration\n            );\n            if (\n              // If unison is not configured, shift\n              !Tables.UNISON ||\n              // If we have different noteheads, shift\n              noteUHead !== noteLHead ||\n              // If we have different dot values, shift\n              noteU.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                .length !==\n                noteL.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                  .length ||\n              // If the notes are quite close but not on the same line, shift\n              (lineDiff < 1 && lineDiff > 0) ||\n              // If styles are different, shift\n              JSON.stringify(noteU.note.getStyle()) !== JSON.stringify(noteL.note.getStyle())\n            ) {\n              xShift = voiceXShift + 2;\n              if (noteU.stemDirection === noteL.stemDirection) {\n                // upper voice is middle voice, so shift it right\n                noteU.note.setXShift(xShift);\n              } else {\n                // shift lower voice right\n                noteL.note.setXShift(xShift);\n              }\n            } else if (noteU.note.voice !== noteL.note.voice) {\n              //If we are not in the same voice\n              if (noteU.stemDirection === noteL.stemDirection) {\n                if (noteU.line != noteL.line) {\n                  xShift = voiceXShift + 2;\n                  noteU.note.setXShift(xShift);\n                } else {\n                  //same line, swap stem direction for one note\n                  if (noteL.stemDirection === 1) {\n                    noteL.stemDirection = -1;\n                    noteL.note.setStemDirection(-1);\n                  }\n                }\n              }\n            } //Very close whole notes\n          } else if (lineDiff < 1) {\n            xShift = voiceXShift + 2;\n            if (noteU.note.duration < noteL.note.duration) {\n              // upper voice is shorter, so shift it right\n              noteU.note.setXShift(xShift);\n            } else {\n              // shift lower voice right\n              noteL.note.setXShift(xShift);\n            }\n          } else if (noteU.note.hasStem()) {\n            noteU.stemDirection = -noteU.note.getStemDirection();\n            noteU.note.setStemDirection(noteU.stemDirection);\n          } else if (noteL.note.hasStem()) {\n            noteL.stemDirection = -noteL.note.getStemDirection();\n            noteL.note.setStemDirection(noteL.stemDirection);\n          }\n        }\n      }\n\n      // format complete\n      state.right_shift += xShift;\n      return true;\n    }\n\n    if (!noteM) throw new RuntimeError('InvalidState', 'noteM not defined.');\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n          // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 2; // shift middle rest right\n          noteM.note.setXShift(xShift);\n          if (noteL.note.hasBeam() === false) {\n            noteL.stemDirection = -1;\n            noteL.note.setStemDirection(-1);\n          }\n          if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n            noteU.stemDirection = 1;\n            noteU.note.setStemDirection(1);\n          }\n        }\n        // format complete\n        state.right_shift += xShift;\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Hide upper voice rest\n      noteU.note.render_options.draw = false;\n      // Hide lower voice rest\n      noteL.note.render_options.draw = false;\n      // format complete\n      state.right_shift += xShift;\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Hide middle voice rest\n      noteM.note.render_options.draw = false;\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Hide middle voice rest\n      noteM.note.render_options.draw = false;\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n    // If middle voice intersects upper or lower voice\n    if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n      // shift middle note right\n      xShift = voiceXShift + 2;\n      noteM.note.setXShift(xShift);\n      if (noteL.note.hasBeam() === false) {\n        noteL.stemDirection = -1;\n        noteL.note.setStemDirection(-1);\n      }\n      if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n        noteU.stemDirection = 1;\n        noteU.note.setStemDirection(1);\n      }\n    }\n\n    state.right_shift += xShift;\n    return true;\n  }\n\n  static postFormat(notes: Note[]): boolean {\n    if (!notes) return false;\n\n    notes.forEach((note) => note.postFormat());\n\n    return true;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // INSTANCE MEMBERS\n\n  minLine: number = 0;\n  maxLine: number = 0;\n\n  protected readonly clef: string;\n  protected readonly octave_shift?: number;\n\n  protected displaced: boolean;\n  protected dot_shiftY: number;\n  protected use_default_head_x: boolean;\n  protected ledgerLineStyle: ElementStyle;\n  private _noteHeads: NoteHead[];\n  // Sorted variant of keyProps used internally\n  private sortedKeyProps: { keyProps: KeyProps; index: number }[] = [];\n\n  constructor(noteStruct: StaveNoteStruct) {\n    super(noteStruct);\n\n    this.ledgerLineStyle = {};\n\n    this.clef = noteStruct.clef ?? 'treble';\n    this.octave_shift = noteStruct.octave_shift ?? 0;\n\n    // Pull note rendering properties.\n    this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n    defined(\n      this.glyphProps,\n      'BadArguments',\n      `No glyph found for duration '${this.duration}' and type '${this.noteType}'`\n    );\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this._noteHeads = [];\n    this.modifiers = [];\n\n    this.render_options = {\n      ...this.render_options,\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET,\n    };\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction ?? Stem.UP);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset(): this {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n    this.buildNoteHeads();\n    this._noteHeads.forEach((noteHead, index) => {\n      const noteHeadStyle = noteHeadStyles[index];\n      if (noteHeadStyle) noteHead.setStyle(noteHeadStyle);\n    });\n\n    const stave = this.stave;\n    if (stave) {\n      this.setStave(stave);\n    }\n    this.calcNoteDisplacements();\n    return this;\n  }\n\n  setBeam(beam: Beam): this {\n    this.beam = beam;\n    this.calcNoteDisplacements();\n    // Update stem extension if a beam is assigned.\n    if (this.stem) {\n      this.stem.setExtension(this.getStemExtension());\n    }\n    return this;\n  }\n\n  // Builds a `Stem` for the note\n  buildStem(): this {\n    this.setStem(new Stem({ hide: !!this.isRest() }));\n    return this;\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads(): void {\n    this._noteHeads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = undefined;\n    let lineDiff = undefined;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start: number;\n    let end: number;\n    let step: number;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n      const noteProps = this.sortedKeyProps[i].keyProps;\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === undefined) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        stem_up_x_offset: noteProps.stem_up_x_offset,\n        stem_down_x_offset: noteProps.stem_down_x_offset,\n        line: noteProps.line,\n      });\n\n      this.addChildElement(notehead);\n      this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem(): void {\n    this.setStemDirection(this.calculateOptimalStemDirection());\n  }\n\n  calculateOptimalStemDirection(): number {\n    // Figure out optimal stem direction based on given notes\n    // minLine & maxLine rely on sortedKeyProps\n    this.minLine = this.sortedKeyProps[0].keyProps.line;\n    this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    return stemDirection;\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps(): void {\n    let lastLine: number | undefined;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyphProps.rest) this.glyphProps.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0, duration: this.duration };\n      const props = Tables.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine == undefined) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n    // Sort the notes from lowest line to highest line in sortedKeyProps\n    // Warn no longer required as keyProps remains unsorted\n    this.keyProps.forEach((keyProps, index) => {\n      this.sortedKeyProps.push({ keyProps, index });\n    });\n    this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox(): BoundingBox {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n\n    let minY: number = 0;\n    let maxY: number = 0;\n    const halfLineSpacing = (this.getStave()?.getSpacingBetweenLines() ?? 0) / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Tables.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - this.glyphProps.line_above * lineSpacing;\n        maxY = y + this.glyphProps.line_below * lineSpacing;\n      }\n    } else if (this.glyphProps.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.getStemDirection();\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = 0;\n      maxY = 0;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note's line number instead\n  getLineNumber(isTopNote?: boolean): number {\n    if (!this.keyProps.length) {\n      throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  /**\n   * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n   */\n  isRest(): boolean {\n    return this.glyphProps.rest;\n  }\n\n  // Determine if the current note is a chord\n  isChord(): boolean {\n    return !this.isRest() && this.keys.length > 1;\n  }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem(): boolean {\n    return this.glyphProps.stem;\n  }\n\n  hasFlag(): boolean {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX(): number {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine: number): number {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.checkStave().getYForTopText(textLine),\n      extents.topY - this.render_options.annotation_spacing * (textLine + 1)\n    );\n  }\n  getYForBottomText(textLine: number): number {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.checkStave().getYForTopText(textLine),\n      extents.baseY + this.render_options.annotation_spacing * textLine\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n\n    const ys = this._noteHeads.map((notehead) => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced(): boolean {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced: boolean): this {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX(): number {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getRightShift();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX(): number {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest(): number {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = midLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(\n    position: number,\n    index: number,\n    options: { forceFlagRight?: boolean } = {}\n  ): { x: number; y: number } {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // FIXME: Left modifier padding, move to font file\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // FIXME: Right modifier padding, move to font file\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (\n        this.stem_direction === Stem.UP &&\n        this.hasFlag() &&\n        (options.forceFlagRight || isInnerNoteIndex(this, index))\n      ) {\n        x += this?.flag?.getMetrics().width ?? 0;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style: ElementStyle): this {\n    return super.setGroupStyle(style);\n  }\n\n  setStemStyle(style: ElementStyle): this {\n    const stem = this.getStem();\n    if (stem) stem.setStyle(style);\n    return this;\n  }\n  getStemStyle(): ElementStyle | undefined {\n    return this.stem?.getStyle();\n  }\n\n  setLedgerLineStyle(style: ElementStyle): void {\n    this.ledgerLineStyle = style;\n  }\n\n  getLedgerLineStyle(): ElementStyle {\n    return this.ledgerLineStyle;\n  }\n\n  setFlagStyle(style: ElementStyle): void {\n    this.flag?.setStyle(style);\n  }\n  getFlagStyle(): ElementStyle | undefined {\n    return this.flag?.getStyle();\n  }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index: number, style: ElementStyle): this {\n    this._noteHeads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index: number, line: number): this {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index: number): number {\n    return this.keyProps[index].line;\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth(): number {\n    // TODO: may need to accommodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcNoteDisplacements(): void {\n    this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setRightDisplacedHeadPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    let noteHeadPadding = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      // If there are no modifiers on this note, make sure there is adequate padding\n      // between the notes.\n      if (this.modifierContext.getWidth() === 0) {\n        noteHeadPadding = StaveNote.minNoteheadPadding;\n      }\n    }\n\n    let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n      // TODO: Add flag width as a separate metric\n    }\n\n    this.setWidth(width);\n    this.preFormatted = true;\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|false} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|false} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {noteHeadBounds}\n   */\n  getNoteHeadBounds(): StaveNoteHeadBounds {\n    // Top and bottom Y values for stem.\n    let yTop: number = +Infinity;\n    let yBottom: number = -Infinity;\n    let nonDisplacedX: number | undefined;\n    let displacedX: number | undefined;\n\n    let highestLine = this.checkStave().getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine: number | undefined;\n    let lowestDisplacedLine: number | undefined;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this._noteHeads.forEach((notehead) => {\n      const line: number = notehead.getLine();\n      const y = notehead.getY();\n\n      yTop = Math.min(y, yTop);\n      yBottom = Math.max(y, yBottom);\n\n      if (displacedX === undefined && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = Math.max(line, highestLine);\n      lowestLine = Math.min(line, lowestLine);\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n        lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX(): number {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX(): number {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  get noteHeads(): NoteHead[] {\n    return this._noteHeads.slice();\n  }\n\n  /** @deprecated use StaveNote.noteHeads instead. */\n  get note_heads(): NoteHead[] {\n    showDeprecationWarningForNoteHeads();\n    return this.noteHeads;\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines(): void {\n    const stave = this.checkStave();\n    const {\n      glyphProps,\n      render_options: { stroke_px },\n    } = this;\n    const ctx = this.checkContext();\n    const width = glyphProps.getWidth() + stroke_px * 2;\n    const doubleWidth = 2 * (glyphProps.getWidth() + stroke_px) - Stem.WIDTH / 2;\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    // Early out if there are no ledger lines to draw.\n    if (highest_line < 6 && lowest_line > 0) return;\n\n    const min_x = Math.min(displaced_x ?? 0, non_displaced_x ?? 0);\n\n    const drawLedgerLine = (y: number, normal: boolean, displaced: boolean) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = (non_displaced_x ?? 0) - stroke_px;\n      else x = (displaced_x ?? 0) - stroke_px;\n      const ledgerWidth = normal && displaced ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = { ...stave.getDefaultLedgerLineStyle(), ...this.getLedgerLineStyle() };\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n      const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n      const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers(noteheadParam: NoteHead): void {\n    const ctx = this.checkContext();\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const index = modifier.checkIndex();\n      const notehead = this._noteHeads[index];\n      if (notehead == noteheadParam) {\n        const noteheadStyle = notehead.getStyle();\n        notehead.applyStyle(ctx, noteheadStyle);\n        modifier.setContext(ctx);\n        modifier.drawWithStyle();\n        notehead.restoreStyle(ctx, noteheadStyle);\n      }\n    }\n  }\n\n  shouldDrawFlag(): boolean {\n    const hasStem = this.stem !== undefined;\n    const hasFlag = this.glyphProps.flag == true;\n    const hasNoBeam = this.beam === undefined;\n    return hasStem && hasFlag && hasNoBeam;\n  }\n\n  // Draw the flag for the note\n  drawFlag(): void {\n    const ctx = this.checkContext();\n    if (!ctx) {\n      throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (this.shouldDrawFlag()) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      // eslint-disable-next-line\n      const noteStemHeight = this.stem!.getHeight();\n      const flagX = this.getStemX();\n      // What's with the magic +/- 2\n      // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n      // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n      // Alternatively, we could shorten the stem.\n      const flagY =\n        this.getStemDirection() === Stem.DOWN\n          ? // Down stems are below the note head and have flags on the right.\n            y_top -\n            noteStemHeight +\n            2 -\n            (this.glyphProps ? this.glyphProps.stem_down_extension : 0) * this.getStaveNoteScale() -\n            (this.flag?.getMetrics().y_shift ?? 0) * (1 - this.getStaveNoteScale())\n          : // Up stems are above the note head and have flags on the right.\n            y_bottom -\n            noteStemHeight -\n            2 +\n            (this.glyphProps ? this.glyphProps.stem_up_extension : 0) * this.getStaveNoteScale() -\n            (this.flag?.getMetrics().y_shift ?? 0) * (1 - this.getStaveNoteScale());\n\n      // Draw the Flag\n      this.flag?.render(ctx, flagX, flagY);\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads(): void {\n    const ctx = this.checkContext();\n    this._noteHeads.forEach((notehead) => {\n      notehead.applyStyle(ctx);\n      ctx.openGroup('notehead', notehead.getAttribute('id'), { pointerBBox: true });\n      notehead.setContext(ctx).draw();\n      this.drawModifiers(notehead);\n      ctx.closeGroup();\n      notehead.restoreStyle(ctx);\n    });\n  }\n\n  drawStem(stemOptions?: StemOptions): void {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    const ctx = this.checkContext();\n\n    if (stemOptions) {\n      this.setStem(new Stem(stemOptions));\n    }\n\n    // If we will render a flag, we shorten the stem so that the tip\n    // does not poke through the flag.\n    if (this.shouldDrawFlag() && this.stem) {\n      this.stem.adjustHeightForFlag();\n    }\n\n    if (this.stem) {\n      this.stem.setContext(ctx).draw();\n    }\n  }\n\n  /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n  getStaveNoteScale(): number {\n    return 1.0;\n  }\n\n  /**\n   * Override stemmablenote stem extension to adjust for distance from middle line.\n   */\n  getStemExtension(): number {\n    const super_stem_extension = super.getStemExtension();\n    if (!this.glyphProps.stem) {\n      return super_stem_extension;\n    }\n\n    const stem_direction = this.getStemDirection();\n    if (stem_direction !== this.calculateOptimalStemDirection()) {\n      return super_stem_extension; // no adjustment for manually set stem direction.\n    }\n    let mid_line_distance;\n    const MIDDLE_LINE = 3;\n    if (stem_direction === Stem.UP) {\n      // Note that the use of maxLine here instead of minLine might\n      // seem counterintuitive, but in the case of (say) treble clef\n      // chord(F2, E4) stem up, we do not want to extend the stem because\n      // of F2, when a normal octave-length stem above E4 is fine.\n      //\n      // maxLine and minLine are set in calculateOptimalStemDirection() so\n      // will be known.\n      mid_line_distance = MIDDLE_LINE - this.maxLine;\n    } else {\n      mid_line_distance = this.minLine - MIDDLE_LINE;\n    }\n\n    // how many lines more than an octave is the relevant notehead?\n    const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n    if (lines_over_octave_from_mid_line <= 0) {\n      return super_stem_extension;\n    }\n    const stave = this.getStave();\n    let spacing_between_lines = 10;\n    if (stave != undefined) {\n      spacing_between_lines = stave.getSpacingBetweenLines();\n    }\n    return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw(): void {\n    if (this.render_options.draw === false) return;\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const ctx = this.checkContext();\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n\n    if (this.stem) {\n      // Format stem x positions\n      const stemX = this.getStemX();\n      this.stem.setNoteHeadXBounds(stemX, stemX);\n    }\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    ctx.openGroup('stavenote', this.getAttribute('id'));\n    this.drawLedgerLines();\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    ctx.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Element } from './element';\nimport { FontInfo } from './font';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\n// For backwards compatibility with 3.0.9, first_note and/or last_note can be undefined or null.\n// We prefer undefined instead of null.\n// However, some of our test cases used to pass in null, so maybe there is client code relying on it.\nexport interface TieNotes {\n  first_note?: Note | null;\n  last_note?: Note | null;\n  first_indices?: number[];\n  last_indices?: number[];\n}\n\nexport class StaveTie extends Element {\n  static get CATEGORY(): string {\n    return Category.StaveTie;\n  }\n\n  /** Default text font. */\n  static TEXT_FONT: Required<FontInfo> = { ...Element.TEXT_FONT };\n\n  public render_options: {\n    cp2: number;\n    last_x_shift: number;\n    tie_spacing: number;\n    cp1: number;\n    first_x_shift: number;\n    text_shift_x: number;\n    y_shift: number;\n  };\n\n  protected text?: string;\n\n  // notes is initialized by the constructor via this.setNotes(notes).\n  protected notes!: TieNotes;\n\n  protected direction?: number;\n\n  /**\n   * @param notes is a struct that has:\n   *\n   *  {\n   *    first_note: Note,\n   *    last_note: Note,\n   *    first_indices: [n1, n2, n3],\n   *    last_indices: [n1, n2, n3]\n   *  }\n   *\n   * @param text\n   */\n  constructor(notes: TieNotes, text?: string) {\n    super();\n    this.setNotes(notes);\n    this.text = text;\n    this.render_options = {\n      cp1: 8, // Curve control point 1\n      cp2: 12, // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n    };\n\n    this.resetFont();\n  }\n\n  setDirection(direction: number): this {\n    this.direction = direction;\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes: TieNotes): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n    }\n\n    if (!notes.first_indices) {\n      notes.first_indices = [0];\n    }\n    if (!notes.last_indices) {\n      notes.last_indices = [0];\n    }\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n    }\n\n    this.notes = notes;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial(): boolean {\n    return !this.notes.first_note || !this.notes.last_note;\n  }\n\n  renderTie(params: {\n    direction: number;\n    first_x_px: number;\n    last_x_px: number;\n    last_ys: number[];\n    first_ys: number[];\n  }): void {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new RuntimeError('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.checkContext();\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2;\n      cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    // setNotes(...) verified that first_indices and last_indices are not undefined.\n    // As a result, we use the ! non-null assertion operator here.\n    // eslint-disable-next-line\n    const first_indices = this.notes.first_indices!;\n    // eslint-disable-next-line\n    const last_indices = this.notes.last_indices!;\n    this.applyStyle();\n    ctx.openGroup('stavetie', this.getAttribute('id'));\n    for (let i = 0; i < first_indices.length; ++i) {\n      const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n      const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.closeGroup();\n    this.restoreStyle();\n  }\n\n  renderText(first_x_px: number, last_x_px: number): void {\n    if (!this.text) return;\n    const ctx = this.checkContext();\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= ctx.measureText(this.text).width / 2;\n    const stave = this.notes.first_note?.checkStave() ?? this.notes.last_note?.checkStave();\n    if (stave) {\n      ctx.save();\n      ctx.setFont(this.textFont);\n      ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n      ctx.restore();\n    }\n  }\n\n  /**\n   * Returns the TieNotes structure of the first and last note this tie connects.\n   */\n  getNotes(): TieNotes {\n    return this.notes;\n  }\n\n  draw(): boolean {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.notes.first_note;\n    const last_note = this.notes.last_note;\n\n    // Provide some default values so the compiler doesn't complain.\n    let first_x_px = 0;\n    let last_x_px = 0;\n    let first_ys: number[] = [0];\n    let last_ys: number[] = [0];\n    let stem_direction = 0;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else if (last_note) {\n      const stave = last_note.checkStave();\n      first_x_px = stave.getTieStartX();\n      first_ys = last_note.getYs();\n      this.notes.first_indices = this.notes.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else if (first_note) {\n      const stave = first_note.checkStave();\n      last_x_px = stave.getTieEndX();\n      last_ys = first_note.getYs();\n      this.notes.last_indices = this.notes.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie, TieNotes } from './stavetie';\nimport { Category } from './typeguard';\n\nexport class TabTie extends StaveTie {\n  static get CATEGORY(): string {\n    return Category.TabTie;\n  }\n\n  static createHammeron(notes: TieNotes): TabTie {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes: TieNotes): TabTie {\n    return new TabTie(notes, 'P');\n  }\n\n  /**\n   * @param notes is a struct that has:\n   *  {\n   *    first_note: Note,\n   *    last_note: Note,\n   *    first_indices: [n1, n2, n3],\n   *    last_indices: [n1, n2, n3]\n   *  }\n   *\n   * @param text\n   */\n  constructor(notes: TieNotes, text?: string) {\n    super(notes, text);\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.direction = -1; // Tab tie's are always face up.\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { RenderContext } from './rendercontext';\nimport { Stave } from './stave';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError, sumArray } from './util';\n\nexport interface VoiceTime {\n  num_beats: number;\n  beat_value: number;\n  /** Defaults to `Flow.RESOLUTION` if not provided. */\n  resolution?: number;\n}\n\nexport enum VoiceMode {\n  STRICT = 1,\n  SOFT = 2,\n  FULL = 3,\n}\n\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n  static get CATEGORY(): string {\n    return Category.Voice;\n  }\n\n  /**\n   * Modes allow the addition of ticks in three different ways:\n   * - STRICT: This is the default. Ticks must fill the voice.\n   * - SOFT: Ticks can be added without restrictions.\n   * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n   */\n  static get Mode(): typeof VoiceMode {\n    return VoiceMode;\n  }\n\n  protected resolutionMultiplier: number = 1;\n  protected smallestTickCount: Fraction;\n  protected stave?: Stave;\n  protected mode: VoiceMode = VoiceMode.STRICT;\n  protected expTicksUsed?: number;\n  protected preFormatted: boolean = false;\n  protected options: { softmaxFactor: number };\n\n  protected readonly totalTicks: Fraction;\n  protected readonly ticksUsed: Fraction = new Fraction(0, 1);\n  protected readonly largestTickWidth: number = 0;\n  protected readonly tickables: Tickable[] = [];\n  protected readonly time: Required<VoiceTime>;\n\n  constructor(time?: VoiceTime | string) {\n    super();\n\n    this.options = {\n      softmaxFactor: Tables.SOFTMAX_FACTOR,\n    };\n\n    // Convert the `time` string into a VoiceTime object if necessary.\n    let voiceTime: VoiceTime | undefined;\n    if (typeof time === 'string') {\n      // Time signature shortcut: \"4/4\", \"3/8\", etc.\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        voiceTime = {\n          num_beats: parseInt(match[1]),\n          beat_value: parseInt(match[2]),\n        };\n      }\n    } else {\n      voiceTime = time;\n    }\n\n    // Default time signature is 4/4.\n    this.time = {\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Tables.RESOLUTION,\n      ...voiceTime,\n    };\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n    // until tickables are added, the smallestTickCount is the same as the stated totalTicks duration.\n    this.smallestTickCount = this.totalTicks.clone();\n  }\n\n  /** Get the total ticks in the voice. */\n  getTotalTicks(): Fraction {\n    return this.totalTicks;\n  }\n\n  /** Get the total ticks used in the voice by all the tickables. */\n  getTicksUsed(): Fraction {\n    return this.ticksUsed;\n  }\n\n  /** Get the largest width of all the tickables. */\n  getLargestTickWidth(): number {\n    return this.largestTickWidth;\n  }\n\n  /** Get the tick count for the shortest tickable */\n  getSmallestTickCount(): Fraction {\n    return this.smallestTickCount;\n  }\n\n  /** Get the tickables in the voice. */\n  getTickables(): Tickable[] {\n    return this.tickables;\n  }\n\n  /** Get the voice mode (Voice.Mode.SOFT, STRICT, or FULL) */\n  getMode(): number {\n    return this.mode;\n  }\n\n  /**\n   * Set the voice mode.\n   * @param mode value from `VoiceMode` or Voice.Mode\n   */\n  setMode(mode: number): this {\n    this.mode = mode;\n    return this;\n  }\n\n  /** Get the resolution multiplier for the voice. */\n  getResolutionMultiplier(): number {\n    return this.resolutionMultiplier;\n  }\n\n  /** Get the actual tick resolution for the voice. */\n  getActualResolution(): number {\n    return this.resolutionMultiplier * this.time.resolution;\n  }\n\n  /** Set the voice's stave. */\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    // Reset the bounding box so we can reformat.\n    this.boundingBox = undefined;\n    return this;\n  }\n\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  /** Get the bounding box for the voice. */\n  getBoundingBox(): BoundingBox | undefined {\n    if (!this.boundingBox) {\n      const stave = this.checkStave();\n      let boundingBox = undefined;\n      for (let i = 0; i < this.tickables.length; ++i) {\n        const tickable = this.tickables[i];\n        if (!tickable.getStave()) tickable.setStave(stave);\n        const bb = tickable.getBoundingBox();\n        if (bb) {\n          boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n        }\n      }\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  /** Set the voice mode to strict or soft. */\n  setStrict(strict: boolean): this {\n    this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n    return this;\n  }\n\n  /** Determine if the voice is complete according to the voice mode. */\n  isComplete(): boolean {\n    if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * We use softmax to layout the tickables proportional to the exponent of\n   * their duration. The softmax factor is used to determine the 'linearness' of\n   * the layout.\n   *\n   * The softmax of all the tickables in this voice should sum to 1.\n   */\n  setSoftmaxFactor(factor: number): this {\n    this.options.softmaxFactor = factor;\n    this.expTicksUsed = 0; // reset\n    return this;\n  }\n\n  /**\n   * Calculate the sum of the exponents of all the ticks in this voice to use\n   * as the denominator of softmax.  (It is not the sum of the softmax(t) over all tickables)\n   *\n   * Note that the \"exp\" of \"expTicksUsed\" stands for \"expontential\" ticks used,\n   * not \"expected\" ticks used.\n   */\n  protected reCalculateExpTicksUsed(): number {\n    const totalTicks = this.ticksUsed.value();\n    const exp = (tickable: Tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n    this.expTicksUsed = sumArray(this.tickables.map(exp));\n    return this.expTicksUsed;\n  }\n\n  /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n  softmax(tickValue: number): number {\n    if (!this.expTicksUsed) {\n      this.expTicksUsed = this.reCalculateExpTicksUsed();\n    }\n\n    const totalTicks = this.ticksUsed.value();\n    const exp = (v: number) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n    const sm = exp(tickValue) / this.expTicksUsed;\n    return sm;\n  }\n\n  /** Add a tickable to the voice. */\n  addTickable(tickable: Tickable): this {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n      this.expTicksUsed = 0; // reset\n\n      if (\n        (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.ticksUsed.subtract(ticks);\n        throw new RuntimeError('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  /** Add an array of tickables to the voice. */\n  addTickables(tickables: Tickable[]): this {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n    return this;\n  }\n\n  /** Preformat the voice by applying the voice's stave to each note. */\n  preFormat(): this {\n    if (this.preFormatted) return this;\n    const stave = this.checkStave();\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(stave);\n      }\n    });\n    this.preFormatted = true;\n    return this;\n  }\n\n  checkStave(): Stave {\n    return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n  }\n\n  /**\n   * Render the voice onto the canvas `context` and an optional `stave`.\n   * If `stave` is omitted, it is expected that the notes have staves\n   * already set.\n   *\n   * This method also calculates the voice's boundingBox while drawing\n   * the notes. Note the similarities with this.getBoundingBox().\n   */\n  draw(context: RenderContext = this.checkContext(), stave?: Stave): void {\n    stave = stave ?? this.stave;\n    this.setRendered();\n    let boundingBox = undefined;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      // Set the stave if provided.\n      if (stave) {\n        tickable.setStave(stave);\n      }\n      defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n      const bb = tickable.getBoundingBox();\n      if (bb) {\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      tickable.setContext(context);\n      tickable.drawWithStyle();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { RenderContext } from './rendercontext';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any) {\n  if (GraceNoteGroup.DEBUG) log('Vex.Flow.GraceNoteGroup', args);\n}\n\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.GraceNoteGroup;\n  }\n\n  protected readonly voice: Voice;\n  protected readonly grace_notes: StemmableNote[];\n  protected readonly show_slur?: boolean;\n\n  protected preFormatted: boolean = false;\n  protected formatter?: Formatter;\n  public render_options: { slur_y_shift: number };\n  protected slur?: StaveTie | TabTie;\n  protected beams: Beam[];\n\n  /** Arranges groups inside a `ModifierContext`. */\n  static format(gracenote_groups: GraceNoteGroup[], state: ModifierContextState): boolean {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = isStaveNote(note);\n      const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n\n      if (is_stavenote && note !== prev_note) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(\n        group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding\n      );\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n  constructor(grace_notes: StemmableNote[], show_slur?: boolean) {\n    super();\n\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.show_slur = show_slur;\n    this.slur = undefined;\n\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Tables.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.beams = [];\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    if (!this.formatter) {\n      this.formatter = new Formatter();\n    }\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes(grace_notes?: StemmableNote[]): this {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beams.push(beam);\n    }\n\n    return this;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width + StaveNote.minNoteheadPadding;\n  }\n\n  getGraceNotes(): Note[] {\n    return this.grace_notes;\n  }\n\n  draw(): void {\n    const ctx: RenderContext = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    L('Drawing grace note group for:', note);\n\n    this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n\n    // Draw grace notes.\n    this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n    // Draw beams.\n    this.beams.forEach((beam) => beam.setContext(ctx).draw());\n\n    if (this.show_slur) {\n      // Create and draw slur.\n      const is_stavenote = isStaveNote(note);\n      const TieClass = is_stavenote ? StaveTie : TabTie;\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { RenderContext } from './rendercontext';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY(): string {\n    return Category.NoteSubGroup;\n  }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups: NoteSubGroup[], state: ModifierContextState): boolean {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  protected subNotes: Note[];\n  protected preFormatted: boolean = false;\n  protected formatter: Formatter;\n  protected voice: Voice;\n\n  constructor(subNotes: Note[]) {\n    super();\n\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach((subNote) => {\n      subNote.setIgnoreTicks(false);\n    });\n    this.width = 0;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Tables.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setWidth(width: number): this {\n    this.width = width;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  draw(): void {\n    const ctx: RenderContext = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n    this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n    this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Fraction } from './fraction';\nimport { NoteMetrics } from './note';\nimport { Tickable } from './tickable';\nimport { RuntimeError } from './util';\n\nexport interface TickContextMetrics extends NoteMetrics {\n  totalLeftPx: number;\n  totalRightPx: number;\n}\n\nexport interface TickContextOptions {\n  tickID: number;\n}\n\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n  protected readonly tickID: number;\n  protected readonly tickables: Tickable[];\n  protected readonly tickablesByVoice: Record<string, Tickable>;\n  protected currentTick: Fraction;\n  protected maxTicks: Fraction;\n  protected padding: number;\n  protected xBase: number;\n  protected x: number;\n  protected xOffset: number;\n  protected notePx: number;\n  protected glyphPx: number;\n  protected leftDisplacedHeadPx: number;\n  protected rightDisplacedHeadPx: number;\n  protected modLeftPx: number;\n  protected modRightPx: number;\n  protected totalLeftPx: number;\n  protected totalRightPx: number;\n  protected maxTickable?: Tickable;\n  protected minTicks?: Fraction;\n  protected minTickable?: Tickable;\n  tContexts: TickContext[];\n\n  protected preFormatted: boolean = false;\n  protected postFormatted: boolean = false;\n  protected width: number;\n  protected formatterMetrics: { freedom: { left: number; right: number } };\n\n  static getNextContext(tContext: TickContext): TickContext | undefined {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    if (index + 1 < contexts.length) return contexts[index + 1];\n  }\n\n  constructor(options?: TickContextOptions) {\n    this.tickID = options && options.tickID ? options.tickID : 0;\n    this.currentTick = new Fraction(0, 1);\n\n    this.maxTicks = new Fraction(0, 1);\n    this.maxTickable = undefined; // Biggest tickable\n    this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n    this.minTickable = undefined;\n\n    this.padding = 1; // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.xBase = 0; // base x position without xOffset\n    this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n    this.tickables = []; // Notes, tabs, chords, lyrics.\n    this.tickablesByVoice = {}; // Tickables indexed by voice number\n\n    // Formatting metrics\n    this.notePx = 0; // width of widest note in this context\n    this.glyphPx = 0; // width of glyph (note head)\n    this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n    this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n    this.modLeftPx = 0; // Left modifier pixels\n    this.modRightPx = 0; // Right modifier pixels\n    this.totalLeftPx = 0; // Total left pixels\n    this.totalRightPx = 0; // Total right pixels\n    this.tContexts = []; // Parent array of tick contexts\n\n    this.width = 0;\n    this.formatterMetrics = {\n      // The freedom of a tickcontext is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n    };\n  }\n\n  getTickID(): number {\n    return this.tickID;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  setX(x: number): this {\n    this.x = x;\n    this.xBase = x;\n    this.xOffset = 0;\n    return this;\n  }\n\n  getXBase(): number {\n    return this.xBase;\n  } // use of xBase and xOffset is optional, avoids offset creep\n\n  setXBase(xBase: number): void {\n    this.xBase = xBase;\n    this.x = xBase + this.xOffset;\n  }\n\n  getXOffset(): number {\n    return this.xOffset;\n  }\n\n  setXOffset(xOffset: number): void {\n    this.xOffset = xOffset;\n    this.x = this.xBase + xOffset;\n  }\n\n  getWidth(): number {\n    return this.width + this.padding * 2;\n  }\n\n  setPadding(padding: number): this {\n    this.padding = padding;\n    return this;\n  }\n\n  getMaxTicks(): Fraction {\n    return this.maxTicks;\n  }\n\n  getMinTicks(): Fraction | undefined {\n    return this.minTicks;\n  }\n\n  getMaxTickable(): Tickable | undefined {\n    return this.maxTickable;\n  }\n\n  getMinTickable(): Tickable | undefined {\n    return this.minTickable;\n  }\n\n  getTickables(): Tickable[] {\n    return this.tickables;\n  }\n\n  /**\n   * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n   *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n   * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n   */\n  getTickableForVoice(voiceIndex: number): Tickable {\n    return this.tickablesByVoice[voiceIndex];\n  }\n\n  getTickablesByVoice(): Record<string, Tickable> {\n    return this.tickablesByVoice;\n  }\n\n  getCenterAlignedTickables(): Tickable[] {\n    return this.tickables.filter((tickable) => tickable.isCenterAligned());\n  }\n\n  /** Gets widths context, note and left/right modifiers for formatting. */\n  getMetrics(): TickContextMetrics {\n    const {\n      width,\n      glyphPx,\n      notePx,\n      leftDisplacedHeadPx,\n      rightDisplacedHeadPx,\n      modLeftPx,\n      modRightPx,\n      totalLeftPx,\n      totalRightPx,\n    } = this;\n    return {\n      width, // Width of largest tickable in context\n      glyphPx, // Width of largest glyph (note head)\n      notePx, // Width of notehead + stem\n      leftDisplacedHeadPx, // Left modifiers\n      rightDisplacedHeadPx, // Right modifiers\n      modLeftPx,\n      modRightPx,\n      totalLeftPx,\n      totalRightPx,\n    };\n  }\n\n  getCurrentTick(): Fraction {\n    return this.currentTick;\n  }\n\n  setCurrentTick(tick: Fraction): void {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  addTickable(tickable: Tickable, voiceIndex?: number): this {\n    if (!tickable) {\n      throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n        this.maxTickable = tickable;\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n        this.minTickable = tickable;\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n        this.minTickable = tickable;\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.tickablesByVoice[voiceIndex || 0] = tickable;\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat(): this {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max displaced head pixels from all tickables in the context\n      this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n      this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.notePx);\n\n      // Maintain the widest note head\n      this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n\n      // Total modifier shift\n      this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n      this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n\n      // Total shift\n      this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n      this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat(): this {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n\n  getFormatterMetrics(): { freedom: { left: number; right: number } } {\n    return this.formatterMetrics;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\n\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Ornament.DEBUG) log('Vex.Flow.Ornament', args);\n}\n\nexport interface OrnamentMetrics {\n  xOffset: number;\n  yOffset: number;\n  stemUpYOffset: number;\n  reportedWidth: number;\n}\n\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n  /** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  /** Ornaments category string. */\n  static get CATEGORY(): string {\n    return Category.Ornament;\n  }\n  static get minPadding(): number {\n    const musicFont = Tables.currentMusicFont();\n    return musicFont.lookupMetric('noteHead.minPadding');\n  }\n\n  protected ornament: {\n    code: string;\n  };\n  protected stemUpYOffset: number;\n  protected ornamentAlignWithNoteHead: string[] | boolean;\n  protected type: string;\n\n  protected delayed: boolean;\n  protected reportedWidth: number;\n  protected adjustForStemDirection: boolean;\n  public render_options: {\n    accidentalUpperPadding: number;\n    accidentalLowerPadding: number;\n    font_scale: number;\n  };\n  protected glyph: Glyph;\n  protected accidentalUpper?: Glyph;\n  protected accidentalLower?: Glyph;\n  protected delayXShift?: number;\n\n  /** Arrange ornaments inside `ModifierContext` */\n  static format(ornaments: Ornament[], state: ModifierContextState): boolean {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0; // width is used by ornaments, which are always centered on the note head\n    let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n    let left_shift = state.left_shift;\n    let yOffset = 0;\n\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n        ornament.x_shift += right_shift + 2;\n      }\n      if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n        ornament.x_shift -= left_shift + 2;\n      }\n      if (ornament.reportedWidth && ornament.x_shift < 0) {\n        left_shift += ornament.reportedWidth;\n      } else if (ornament.reportedWidth && ornament.x_shift >= 0) {\n        right_shift += ornament.reportedWidth + Ornament.minPadding;\n      } else {\n        width = Math.max(ornament.getWidth(), width);\n      }\n      // articulations above/below the line can be stacked.\n      if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n        // Unfortunately we don't know the stem direction.  So we base it\n        // on the line number, but also allow it to be overridden.\n        const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n        if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n          state.top_text_line += increment;\n          ornament.y_shift += yOffset;\n          yOffset -= ornament.glyph.bbox.getH();\n        } else {\n          state.text_line += increment;\n          ornament.y_shift += yOffset;\n          yOffset += ornament.glyph.bbox.getH();\n        }\n      } else {\n        if (ornament.getPosition() === Modifier.Position.ABOVE) {\n          ornament.setTextLine(state.top_text_line);\n          state.top_text_line += increment;\n        } else {\n          ornament.setTextLine(state.text_line);\n          state.text_line += increment;\n        }\n      }\n    }\n\n    // Note: 'legit' ornaments don't consider other modifiers when calculating their\n    // X position, but jazz ornaments sometimes need to.\n    state.left_shift = left_shift + width / 2;\n    state.right_shift = right_shift + width / 2;\n    return true;\n  }\n\n  /**\n   * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n   * these are generally on the top of the staff.\n   */\n  static get ornamentNoteTransition(): string[] {\n    return ['flip', 'jazzTurn', 'smear'];\n  }\n\n  /**\n   * ornamentAttack indicates something that happens in the attach, placed before the note and\n   * any accidentals\n   */\n  static get ornamentAttack(): string[] {\n    return ['scoop'];\n  }\n\n  /**\n   * The ornament is aligned based on the note head, but without regard to whether the\n   * stem goes up or down.\n   */\n  static get ornamentAlignWithNoteHead(): string[] {\n    return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n  }\n\n  /**\n   * An ornament that happens on the release of the note, generally placed after the\n   * note and overlapping the next beat/measure..\n   */\n  static get ornamentRelease(): string[] {\n    return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n  }\n\n  /** ornamentArticulation goes above/below the note based on space availablity */\n  static get ornamentArticulation(): string[] {\n    return ['bend', 'plungerClosed', 'plungerOpen'];\n  }\n\n  /**\n   * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n   * added, get their metrics here.\n   */\n  getMetrics(): OrnamentMetrics {\n    const ornamentMetrics = Tables.currentMusicFont().getMetrics().ornament;\n\n    if (!ornamentMetrics) throw new RuntimeError('BadMetrics', `ornament missing`);\n    return ornamentMetrics[this.ornament.code];\n  }\n\n  /**\n   * Create a new ornament of type `type`, which is an entry in\n   * `Vex.Flow.ornamentCodes` in `tables.ts`.\n   */\n  constructor(type: string) {\n    super();\n\n    this.type = type;\n    this.delayed = false;\n\n    this.render_options = {\n      font_scale: Tables.NOTATION_FONT_SCALE,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Tables.ornamentCodes(this.type);\n\n    // new ornaments have their origin at the origin, and have more specific\n    // metrics.  Legacy ornaments do some\n    // x scaling, and have hard-coded metrics\n    const metrics = this.getMetrics();\n\n    // some jazz ornaments are above or below depending on stem direction.\n    this.adjustForStemDirection = false;\n\n    // some jazz ornaments like falls are supposed to overlap with future bars\n    // and so we report a different width than they actually take up.\n    this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n\n    this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n\n    this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n\n    if (!this.ornament) {\n      throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.x_shift = metrics ? metrics.xOffset : 0;\n    this.y_shift = metrics ? metrics.yOffset : 0;\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n      category: `ornament.${this.ornament.code}`,\n    });\n\n    // Is this a jazz ornament that goes between this note and the next note.\n    if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n      this.delayed = true;\n    }\n\n    // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n    // happen if I don't set it.\n    if (!metrics) {\n      this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n    }\n  }\n\n  /** Set whether the ornament is to be delayed. */\n  setDelayed(delayed: boolean): this {\n    this.delayed = delayed;\n    return this;\n  }\n\n  /** Set the upper accidental for the ornament. */\n  setUpperAccidental(accid: string): this {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  /** Set the lower accidental for the ornament. */\n  setLowerAccidental(accid: string): this {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  /** Render ornament in position next to note. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote() as StemmableNote;\n    this.setRendered();\n\n    const stemDir = note.getStemDirection();\n    const stave = note.checkStave();\n\n    this.applyStyle();\n    ctx.openGroup('ornament', this.getAttribute('id'));\n\n    // Get stem extents\n    const stemExtents = note.checkStem().getExtents();\n    let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n    if (isTabNote(note)) {\n      if (note.hasStem()) {\n        if (stemDir === Stem.DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else {\n        // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n\n    // If the ornament is aligned with the note head, don't consider the stave y\n    // but use the 'natural' modifier y\n    let glyphY = this.ornamentAlignWithNoteHead\n      ? start.y\n      : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      let delayXShift = 0;\n      const startX = glyphX - (stave.getX() - 10);\n      if (this.delayXShift !== undefined) {\n        delayXShift = this.delayXShift;\n      } else {\n        delayXShift += this.glyph.getMetrics().width / 2;\n        const nextContext = TickContext.getNextContext(note.getTickContext());\n        if (nextContext) {\n          delayXShift += (nextContext.getX() - startX) * 0.5;\n        } else {\n          delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n        }\n        this.delayXShift = delayXShift;\n      }\n      glyphX += delayXShift;\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n      glyphY += this.stemUpYOffset;\n    }\n    if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n      glyphY = note.checkStave().getBoundingBox().getY() + 40;\n    }\n\n    this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n\n    if (this.accidentalUpper) {\n      glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n    ctx.closeGroup();\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\n\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n  static get CATEGORY(): string {\n    return Category.Parenthesis;\n  }\n\n  protected point: number;\n\n  /** Add parentheses to the notes. */\n  static buildAndAttach(notes: Note[]): void {\n    for (const note of notes) {\n      for (let i = 0; i < note.keys.length; i++) {\n        note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n        note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n      }\n    }\n  }\n\n  /** Arrange parentheses inside a ModifierContext. */\n  static format(parentheses: Parenthesis[], state: ModifierContextState): boolean {\n    if (!parentheses || parentheses.length === 0) return false;\n\n    let x_widthL = 0;\n    let x_widthR = 0;\n\n    for (let i = 0; i < parentheses.length; ++i) {\n      const parenthesis = parentheses[i];\n      const note = parenthesis.getNote();\n      const pos = parenthesis.getPosition();\n      const index = parenthesis.checkIndex();\n\n      let shift = 0;\n\n      if (pos === ModifierPosition.RIGHT) {\n        shift = note.getRightParenthesisPx(index);\n        x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n      }\n      if (pos === ModifierPosition.LEFT) {\n        shift = note.getLeftParenthesisPx(index);\n        x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n      }\n      parenthesis.setXShift(shift);\n    }\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n\n    return true;\n  }\n\n  /**\n   * Constructor\n   *\n   * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n   */\n  constructor(position: ModifierPosition) {\n    super();\n\n    this.position = position ?? Modifier.Position.LEFT;\n\n    this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point') ?? Note.getPoint('default');\n    this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n  }\n\n  /** Set the associated note. */\n  setNote(note: Note): this {\n    this.note = note;\n    this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point') ?? Note.getPoint('default');\n    this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    if (isGraceNote(note)) {\n      this.point = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point') ?? Note.getPoint('gracenote');\n      this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n    }\n    return this;\n  }\n\n  /** Render the parenthesis. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n    const x = start.x + this.x_shift;\n    const y = start.y + this.y_shift;\n    if (this.position == Modifier.Position.RIGHT) {\n      Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n        category: `noteHead.standard.noteheadParenthesisRight`,\n      });\n    } else if (this.position == Modifier.Position.LEFT) {\n      Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n        category: `noteHead.standard.noteheadParenthesisLeft`,\n      });\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\n\nimport { globalObject } from './util';\n\n// eslint-disable-next-line\nexport function isHTMLCanvas(element: any): element is HTMLCanvasElement {\n  if (!element) return false;\n\n  const global = globalObject();\n  return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n    // OR it's pretending to be a <canvas> element. Good enough!\n    // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n    (typeof element.getContext === 'function' && typeof element.toDataURL === 'function')\n  );\n}\n\n// eslint-disable-next-line\nexport function isHTMLDiv(element: any): element is HTMLDivElement {\n  if (!element) return false;\n\n  const global = globalObject();\n  return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n    // OR it's pretending to be a <div>. See: svgcontext.ts.\n    (typeof element.appendChild === 'function' && typeof element.style === 'object')\n  );\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Font, FontInfo } from './font';\nimport { GroupAttributes, RenderContext, TextMeasure } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n\n// https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/offscreencanvas\n// https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/offscreencanvas/index.d.ts\n\ninterface OffscreenCanvas extends EventTarget {\n  width: number;\n  height: number;\n  // ...more stuff that we removed.\n}\n\n// https://html.spec.whatwg.org/multipage/canvas.html#offscreencanvasrenderingcontext2d\ninterface OffscreenCanvasRenderingContext2D\n  extends CanvasState,\n    CanvasTransform,\n    CanvasCompositing,\n    CanvasImageSmoothing,\n    CanvasFillStrokeStyles,\n    CanvasShadowStyles,\n    CanvasFilters,\n    CanvasRect,\n    CanvasDrawPath,\n    CanvasText,\n    CanvasDrawImage,\n    CanvasImageData,\n    CanvasPathDrawingStyles,\n    CanvasTextDrawingStyles,\n    CanvasPath {\n  readonly canvas: OffscreenCanvas;\n}\n\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n  /**  The 2D rendering context from the Canvas API. Forward method calls to this object. */\n  context2D: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\n\n  /**\n   * The HTMLCanvasElement or OffscreenCanvas that is associated with the above context.\n   * If there was no associated `<canvas>` element, just store the default WIDTH / HEIGHT.\n   */\n  canvas: HTMLCanvasElement | OffscreenCanvas | { width: number; height: number };\n\n  /** Height of one line of text (in pixels). */\n  textHeight: number = 0;\n\n  static get WIDTH(): number {\n    return 600;\n  }\n\n  static get HEIGHT(): number {\n    return 400;\n  }\n\n  static get CANVAS_BROWSER_SIZE_LIMIT(): number {\n    return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n  }\n\n  /**\n   * Ensure that width and height do not exceed the browser limit.\n   * @returns array of [width, height] clamped to the browser limit.\n   */\n  static sanitizeCanvasDims(width: number, height: number): [number, number] {\n    const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n    if (Math.max(width, height) > limit) {\n      warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n      if (width > limit) {\n        width = limit;\n      }\n      if (height > limit) {\n        height = limit;\n      }\n    }\n    return [width, height];\n  }\n\n  constructor(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n    super();\n    this.context2D = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  /**\n   * Set all pixels to transparent black rgba(0,0,0,0).\n   */\n  clear(): void {\n    this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // eslint-disable-next-line\n  openGroup(cls?: string, id?: string, attrs?: GroupAttributes): any {\n    // Containers not implemented.\n  }\n\n  closeGroup(): void {\n    // Containers not implemented.\n  }\n\n  // eslint-disable-next-line\n  add(child: any): void {\n    // Containers not implemented.\n  }\n\n  setFillStyle(style: string): this {\n    this.context2D.fillStyle = style;\n    return this;\n  }\n\n  /** CanvasContext ignores `setBackgroundFillStyle()`. */\n  // eslint-disable-next-line\n  setBackgroundFillStyle(style: string): this {\n    // DO NOTHING\n    return this;\n  }\n\n  setStrokeStyle(style: string): this {\n    this.context2D.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(color: string): this {\n    this.context2D.shadowColor = color;\n    return this;\n  }\n\n  setShadowBlur(blur: number): this {\n    // CanvasRenderingContext2D does not scale the shadow blur by the current\n    // transform, so we have to do it manually. We assume uniform scaling\n    // (though allow for rotation) because the blur can only be scaled\n    // uniformly anyway.\n    const t = this.context2D.getTransform();\n    const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n    this.context2D.shadowBlur = scale * blur;\n    return this;\n  }\n\n  setLineWidth(width: number): this {\n    this.context2D.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(capType: CanvasLineCap): this {\n    this.context2D.lineCap = capType;\n    return this;\n  }\n\n  setLineDash(dash: number[]): this {\n    this.context2D.setLineDash(dash);\n    return this;\n  }\n\n  scale(x: number, y: number): this {\n    this.context2D.scale(x, y);\n    return this;\n  }\n\n  resize(width: number, height: number): this {\n    const canvas = this.context2D.canvas;\n    const devicePixelRatio = globalObject().devicePixelRatio || 1;\n\n    // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n    [width, height] = CanvasContext.sanitizeCanvasDims(width * devicePixelRatio, height * devicePixelRatio);\n\n    // Divide back down by the pixel ratio and convert to integers.\n    width = (width / devicePixelRatio) | 0;\n    height = (height / devicePixelRatio) | 0;\n\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n\n    // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n    // Only HTMLCanvasElement has a style attribute.\n    if (isHTMLCanvas(canvas)) {\n      canvas.style.width = width + 'px';\n      canvas.style.height = height + 'px';\n    }\n\n    return this.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  rect(x: number, y: number, width: number, height: number): this {\n    this.context2D.rect(x, y, width, height);\n    return this;\n  }\n\n  fillRect(x: number, y: number, width: number, height: number): this {\n    this.context2D.fillRect(x, y, width, height);\n    return this;\n  }\n\n  /**\n   * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n   */\n  clearRect(x: number, y: number, width: number, height: number): this {\n    this.context2D.clearRect(x, y, width, height);\n    return this;\n  }\n\n  beginPath(): this {\n    this.context2D.beginPath();\n    return this;\n  }\n\n  moveTo(x: number, y: number): this {\n    this.context2D.moveTo(x, y);\n    return this;\n  }\n\n  lineTo(x: number, y: number): this {\n    this.context2D.lineTo(x, y);\n    return this;\n  }\n\n  bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): this {\n    this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    return this;\n  }\n\n  quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): this {\n    this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n    return this;\n  }\n\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise: boolean): this {\n    this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n    return this;\n  }\n\n  fill(): this {\n    this.context2D.fill();\n    return this;\n  }\n\n  stroke(): this {\n    this.context2D.stroke();\n    return this;\n  }\n\n  closePath(): this {\n    this.context2D.closePath();\n    return this;\n  }\n\n  measureText(text: string): TextMeasure {\n    const metrics = this.context2D.measureText(text);\n\n    let y = 0;\n    let height = 0;\n    if (metrics.fontBoundingBoxAscent) {\n      y = -metrics.fontBoundingBoxAscent;\n      height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n    } else {\n      y = -metrics.actualBoundingBoxAscent;\n      height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n    }\n    // Return x, y, width & height in the same manner as svg getBBox\n    return {\n      x: 0,\n      y: y,\n      width: metrics.width,\n      height: height,\n    };\n  }\n\n  fillText(text: string, x: number, y: number): this {\n    this.context2D.fillText(text, x, y);\n    return this;\n  }\n\n  save(): this {\n    this.context2D.save();\n    return this;\n  }\n\n  restore(): this {\n    this.context2D.restore();\n    return this;\n  }\n\n  set fillStyle(style: string | CanvasGradient | CanvasPattern) {\n    this.context2D.fillStyle = style;\n  }\n\n  get fillStyle(): string | CanvasGradient | CanvasPattern {\n    return this.context2D.fillStyle;\n  }\n\n  set strokeStyle(style: string | CanvasGradient | CanvasPattern) {\n    this.context2D.strokeStyle = style;\n  }\n\n  get strokeStyle(): string | CanvasGradient | CanvasPattern {\n    return this.context2D.strokeStyle;\n  }\n\n  /**\n   * @param f is 1) a `FontInfo` object or\n   *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n   *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n   * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n   * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n   * @param style is a string (e.g., 'italic', 'normal').\n   */\n  setFont(f?: string | FontInfo, size?: string | number, weight?: string | number, style?: string): this {\n    const fontInfo = Font.validate(f, size, weight, style);\n    this.context2D.font = Font.toCSSString(fontInfo);\n    this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n    return this;\n  }\n\n  /** Return a string of the form `'italic bold 15pt Arial'` */\n  getFont(): string {\n    return this.context2D.font;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { GroupAttributes, RenderContext, TextMeasure } from './rendercontext';\nimport { Tables } from './tables';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n\nexport type Attributes = {\n  [name: string]: string | number | undefined;\n  'font-family'?: string;\n  'font-size'?: string | number;\n  'font-style'?: string;\n  'font-weight'?: string | number;\n  scaleX?: number;\n  scaleY?: number;\n};\n\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE: Record<string /* element type */, Record<string, boolean> /* ignored attributes */> = {\n  path: {\n    x: true,\n    y: true,\n    width: true,\n    height: true,\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  },\n  rect: {\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  },\n  text: {\n    width: true,\n    height: true,\n  },\n};\n\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nconst TWO_PI = 2 * Math.PI;\n\nexport interface State {\n  state: Attributes;\n  attributes: Attributes;\n  shadow_attributes: Attributes;\n  lineWidth: number;\n}\n\nclass MeasureTextCache {\n  protected txt?: SVGTextElement;\n\n  // The cache is keyed first by the text string, then by the font attributes\n  // joined together.\n  protected cache: Record<string, Record<string, TextMeasure>> = {};\n\n  lookup(text: string, svg: SVGSVGElement, attributes: Attributes): TextMeasure {\n    let entries = this.cache[text];\n    if (entries === undefined) {\n      entries = {};\n      this.cache[text] = entries;\n    }\n\n    const family = attributes['font-family'];\n    const size = attributes['font-size'];\n    const weight = attributes['font-weight'];\n    const style = attributes['font-style'];\n\n    const key = `${family}%${size}%${weight}%${style}`;\n    let entry = entries[key];\n    if (entry === undefined) {\n      entry = this.measureImpl(text, svg, attributes);\n      entries[key] = entry;\n    }\n    return entry;\n  }\n\n  measureImpl(text: string, svg: SVGSVGElement, attributes: Attributes): TextMeasure {\n    let txt = this.txt;\n    if (!txt) {\n      // Create the SVG text element that will be used to measure text in the event\n      // of a cache miss.\n      txt = document.createElementNS(SVG_NS, 'text');\n      this.txt = txt;\n    }\n\n    txt.textContent = text;\n    if (attributes['font-family']) txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n    if (attributes['font-size']) txt.setAttributeNS(null, 'font-size', `${attributes['font-size']}`);\n    if (attributes['font-style']) txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n    if (attributes['font-weight']) txt.setAttributeNS(null, 'font-weight', `${attributes['font-weight']}`);\n    svg.appendChild(txt);\n    const bbox = txt.getBBox();\n    svg.removeChild(txt);\n\n    return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n  }\n}\n\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n  protected static measureTextCache = new MeasureTextCache();\n\n  element: HTMLElement; // the parent DOM object\n  svg: SVGSVGElement;\n  width: number = 0;\n  height: number = 0;\n  path: string;\n  pen: { x: number; y: number };\n  lineWidth: number;\n  attributes: Attributes;\n  shadow_attributes: Attributes;\n  state: Attributes;\n  state_stack: State[];\n\n  // Always points to the current group.\n  // Calls to add() or openGroup() will append the new element to `this.parent`.\n  parent: SVGGElement;\n  // The stack of groups.\n  groups: SVGGElement[];\n  // The stack of attributes associated with each group.\n  protected groupAttributes: Attributes[];\n\n  protected precision = 1;\n\n  backgroundFillStyle: string = 'white';\n\n  /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n  protected fontCSSString: string = '';\n\n  constructor(element: HTMLElement) {\n    super();\n    this.element = element;\n\n    this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n\n    // Create a SVG element and add it to the container element.\n    const svg = this.create('svg');\n    this.element.appendChild(svg);\n    this.svg = svg;\n\n    this.parent = this.svg;\n    this.groups = [this.svg];\n\n    this.path = '';\n    this.pen = { x: NaN, y: NaN };\n    this.lineWidth = 1.0;\n\n    const defaultFontAttributes = {\n      'font-family': Font.SANS_SERIF,\n      'font-size': Font.SIZE + 'pt',\n      'font-weight': FontWeight.NORMAL,\n      'font-style': FontStyle.NORMAL,\n    };\n\n    this.state = {\n      scaleX: 1,\n      scaleY: 1,\n      ...defaultFontAttributes,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'stroke-dasharray': 'none',\n      fill: 'black',\n      stroke: 'black',\n      ...defaultFontAttributes,\n    };\n\n    this.groupAttributes = [];\n    this.applyAttributes(svg, this.attributes);\n    this.groupAttributes.push({ ...this.attributes });\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  protected round(n: number): number {\n    return Math.round(n * this.precision) / this.precision;\n  }\n\n  /**\n   * Use one of the overload signatures to create an SVG element of a specific type.\n   * The last overload accepts an arbitrary string, and is identical to the\n   * implementation signature.\n   * Feel free to add new overloads for other SVG element types as required.\n   */\n  create(svgElementType: 'g'): SVGGElement;\n  create(svgElementType: 'path'): SVGPathElement;\n  create(svgElementType: 'rect'): SVGRectElement;\n  create(svgElementType: 'svg'): SVGSVGElement;\n  create(svgElementType: 'text'): SVGTextElement;\n  create(svgElementType: string): SVGElement;\n  create(svgElementType: string): SVGElement {\n    return document.createElementNS(SVG_NS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls?: string, id?: string, attrs?: GroupAttributes): SVGGElement {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', prefix(cls));\n    if (id) group.setAttribute('id', prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    this.applyAttributes(group, this.attributes);\n    this.groupAttributes.push({ ...this.groupAttributes[this.groupAttributes.length - 1], ...this.attributes });\n    return group;\n  }\n\n  closeGroup(): void {\n    this.groups.pop();\n    this.groupAttributes.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem: SVGElement): void {\n    this.parent.appendChild(elem);\n  }\n\n  setFillStyle(style: string): this {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  /**\n   * Used to set the fill color for `clearRect()`. This allows us to simulate\n   * cutting a \"hole\" into the SVG drawing.\n   */\n  setBackgroundFillStyle(style: string): this {\n    this.backgroundFillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style: string): this {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(color: string): this {\n    this.shadow_attributes.color = color;\n    return this;\n  }\n\n  /**\n   * @param blur A non-negative float specifying the level of shadow blur, where 0\n   *             represents no blur and larger numbers represent increasingly more blur.\n   * @returns this\n   */\n  setShadowBlur(blur: number): this {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  /**\n   * @param width\n   * @returns this\n   */\n  setLineWidth(width: number): this {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n    return this;\n  }\n\n  /**\n   * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n   * @returns this\n   *\n   * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n   */\n  setLineDash(lineDash: number[]): this {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      this.attributes['stroke-dasharray'] = lineDash.join(',');\n      return this;\n    } else {\n      throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  /**\n   * @param capType\n   * @returns this\n   */\n  setLineCap(capType: CanvasLineCap): this {\n    this.attributes['stroke-linecap'] = capType;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- separate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width.toString();\n\n    this.svg.style.width = width.toString();\n    this.svg.style.height = height.toString();\n\n    const attributes = {\n      width,\n      height,\n    };\n\n    this.applyAttributes(this.svg, attributes);\n    this.scale(this.state.scaleX as number, this.state.scaleY as number);\n    return this;\n  }\n\n  scale(x: number, y: number): this {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scaleX = this.state.scaleX ? this.state.scaleX * x : x;\n    this.state.scaleY = this.state.scaleY ? this.state.scaleY * y : y;\n    const visibleWidth = this.width / this.state.scaleX;\n    const visibleHeight = this.height / this.state.scaleY;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  /**\n   * 1 arg: string in the \"x y w h\" format\n   * 4 args: x:number, y:number, w:number, h:number\n   */\n  setViewBox(viewBox_or_minX: string | number, minY?: number, width?: number, height?: number): void {\n    if (typeof viewBox_or_minX === 'string') {\n      this.svg.setAttribute('viewBox', viewBox_or_minX);\n    } else {\n      const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element: SVGElement, attributes: Attributes): SVGElement {\n    const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n    for (const attrName in attributes) {\n      if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n        continue;\n      }\n      if (\n        attributes[attrName] &&\n        (this.groupAttributes.length == 0 ||\n          attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName])\n      )\n        element.setAttributeNS(null, attrName, attributes[attrName] as string);\n    }\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear(): void {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed.\n    this.scale(this.state.scaleX as number, this.state.scaleY as number);\n  }\n\n  // ## Rectangles:\n  rect(x: number, y: number, width: number, height: number, attributes?: Attributes): this {\n    // Avoid invalid negative height attributes by flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    const rectangle = this.create('rect');\n    attributes = attributes ?? { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n    x = this.round(x);\n    y = this.round(y);\n    width = this.round(width);\n    height = this.round(height);\n    this.applyAttributes(rectangle, { x, y, width, height, ...attributes });\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x: number, y: number, width: number, height: number): this {\n    const attributes = { fill: this.attributes.fill, stroke: 'none' };\n    this.rect(x, y, width, height, attributes);\n    return this;\n  }\n\n  clearRect(x: number, y: number, width: number, height: number): this {\n    // Currently this fills a rect with the backgroundFillStyle, rather\n    // than \"cut a hole\" into the existing shapes.\n    //\n    // Since tabNote seems to be the only module that makes use of this\n    // it may be worth creating a separate tabStave that would\n    // draw lines around locations of tablature fingering.\n    this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath(): this {\n    this.path = '';\n    this.pen.x = NaN;\n    this.pen.y = NaN;\n    return this;\n  }\n\n  moveTo(x: number, y: number): this {\n    x = this.round(x);\n    y = this.round(y);\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x: number, y: number): this {\n    x = this.round(x);\n    y = this.round(y);\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1: number, y1: number, x2: number, y2: number, x: number, y: number): this {\n    x = this.round(x);\n    y = this.round(y);\n    x1 = this.round(x1);\n    y1 = this.round(y1);\n    x2 = this.round(x2);\n    y2 = this.round(y2);\n    this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1: number, y1: number, x: number, y: number): this {\n    x = this.round(x);\n    y = this.round(y);\n    x1 = this.round(x1);\n    y1 = this.round(y1);\n    this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise: boolean): this {\n    let x0 = x + radius * Math.cos(startAngle);\n    let y0 = y + radius * Math.sin(startAngle);\n    x0 = this.round(x0);\n    y0 = this.round(y0);\n\n    // svg behavior different from canvas.  Don't normalize angles if\n    // we are drawing a circle because they both normalize to 0\n    const tmpStartTest = normalizeAngle(startAngle);\n    const tmpEndTest = normalizeAngle(endAngle);\n    if (\n      (!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n      (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n      tmpStartTest === tmpEndTest\n    ) {\n      let x1 = x + radius * Math.cos(startAngle + Math.PI);\n      let y1 = y + radius * Math.sin(startAngle + Math.PI);\n      // There's no way to specify a completely circular arc in SVG so we have to\n      // use two semi-circular arcs.\n      x1 = this.round(x1);\n      y1 = this.round(y1);\n      radius = this.round(radius);\n      this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n      this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n      this.pen.x = x0;\n      this.pen.y = y0;\n    } else {\n      let x1 = x + radius * Math.cos(endAngle);\n      let y1 = y + radius * Math.sin(endAngle);\n\n      startAngle = tmpStartTest;\n      endAngle = tmpEndTest;\n      let large: boolean;\n      if (Math.abs(endAngle - startAngle) < Math.PI) {\n        large = counterclockwise;\n      } else {\n        large = !counterclockwise;\n      }\n      if (startAngle > endAngle) {\n        large = !large;\n      }\n\n      const sweep = !counterclockwise;\n\n      x1 = this.round(x1);\n      y1 = this.round(y1);\n      radius = this.round(radius);\n      this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n      this.pen.x = x1;\n      this.pen.y = y1;\n    }\n    return this;\n  }\n\n  closePath(): this {\n    this.path += 'Z';\n    return this;\n  }\n\n  private getShadowStyle(): string {\n    const sa = this.shadow_attributes;\n    // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n    // of the same radius, so we scale the drop-shadow radius here to make it\n    // look close to the canvas shadow.\n    return `filter: drop-shadow(0 0 ${(sa.width as number) / 1.5}px ${sa.color})`;\n  }\n\n  fill(attributes?: Attributes): this {\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = { ...this.attributes, stroke: 'none' };\n    }\n\n    attributes.d = this.path;\n    if ((this.shadow_attributes.width as number) > 0) {\n      attributes.style = this.getShadowStyle();\n    }\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke(): this {\n    const path = this.create('path');\n    const attributes: Attributes = {\n      ...this.attributes,\n      fill: 'none',\n      'stroke-width': this.lineWidth,\n      d: this.path,\n    };\n    if ((this.shadow_attributes.width as number) > 0) {\n      attributes.style = this.getShadowStyle();\n    }\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text: string): TextMeasure {\n    return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n  }\n\n  fillText(text: string, x: number, y: number): this {\n    if (!text || text.length <= 0) {\n      return this;\n    }\n    x = this.round(x);\n    y = this.round(y);\n    const attributes: Attributes = {\n      ...this.attributes,\n      stroke: 'none',\n      x,\n      y,\n    };\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n    return this;\n  }\n\n  // TODO: State should be deep-copied.\n  save(): this {\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n        scale: this.state.scale,\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n      lineWidth: this.lineWidth,\n    });\n    return this;\n  }\n\n  // TODO: State should be deep-restored.\n  restore(): this {\n    const savedState = this.state_stack.pop();\n    if (savedState) {\n      const state = savedState;\n      this.state['font-family'] = state.state['font-family'];\n      this.state['font-weight'] = state.state['font-weight'];\n      this.state['font-style'] = state.state['font-style'];\n      this.state['font-size'] = state.state['font-size'];\n      this.state.scale = state.state.scale;\n\n      this.attributes['font-family'] = state.attributes['font-family'];\n      this.attributes['font-weight'] = state.attributes['font-weight'];\n      this.attributes['font-style'] = state.attributes['font-style'];\n      this.attributes['font-size'] = state.attributes['font-size'];\n\n      this.attributes.fill = state.attributes.fill;\n      this.attributes.stroke = state.attributes.stroke;\n      this.attributes['stroke-width'] = state.attributes['stroke-width'];\n      this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n      this.shadow_attributes.width = state.shadow_attributes.width;\n      this.shadow_attributes.color = state.shadow_attributes.color;\n\n      this.lineWidth = state.lineWidth;\n    }\n    return this;\n  }\n\n  set fillStyle(style: string | CanvasGradient | CanvasPattern) {\n    this.setFillStyle(style as string);\n  }\n\n  get fillStyle(): string | CanvasGradient | CanvasPattern {\n    return this.attributes.fill as string;\n  }\n\n  set strokeStyle(style: string | CanvasGradient | CanvasPattern) {\n    this.setStrokeStyle(style as string);\n  }\n\n  get strokeStyle(): string | CanvasGradient | CanvasPattern {\n    return this.attributes.stroke as string;\n  }\n\n  /**\n   * @param f is 1) a `FontInfo` object or\n   *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n   *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n   * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n   * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n   *               into the font-weight attribute (e.g., font-weight=\"bold\")\n   * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n   *              font-style attribute (e.g., font-style=\"italic\")\n   */\n  setFont(f?: string | FontInfo, size?: string | number, weight?: string | number, style?: string): this {\n    const fontInfo = Font.validate(f, size, weight, style);\n    this.fontCSSString = Font.toCSSString(fontInfo);\n    const fontAttributes = {\n      'font-family': fontInfo.family,\n      'font-size': fontInfo.size,\n      'font-weight': fontInfo.weight,\n      'font-style': fontInfo.style,\n    };\n    this.attributes = { ...this.attributes, ...fontAttributes };\n    this.state = { ...this.state, ...fontAttributes };\n    return this;\n  }\n\n  /** Return a string of the form `'italic bold 15pt Arial'` */\n  getFont(): string {\n    return this.fontCSSString;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { CanvasContext } from './canvascontext';\nimport { RenderContext } from './rendercontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\n\n// A ContextBuilder is either Renderer.getSVGContext or Renderer.getCanvasContext.\nexport type ContextBuilder = typeof Renderer.getSVGContext | typeof Renderer.getCanvasContext;\n\nexport enum RendererBackends {\n  CANVAS = 1,\n  SVG = 2,\n}\n\n// End of line types\nexport enum RendererLineEndType {\n  NONE = 1, // No leg\n  UP = 2, // Upward leg\n  DOWN = 3, // Downward leg\n}\n\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n  static Backends = RendererBackends;\n\n  static LineEndType = RendererLineEndType;\n\n  // Used by vexflow_test_helpers.ts\n  // Should this be private?\n  // Can we do this in a cleaner way?\n  static lastContext?: RenderContext = undefined;\n\n  static buildContext(\n    elementId: string | HTMLCanvasElement | HTMLDivElement,\n    backend: number,\n    width: number,\n    height: number,\n    background: string = '#FFF'\n  ): RenderContext {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) {\n      renderer.resize(width, height);\n    }\n\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId: string, width: number, height: number, background?: string): RenderContext {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getSVGContext(elementId: string, width: number, height: number, background?: string): RenderContext {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(\n    context: RenderContext,\n    fromX: number,\n    fromY: number,\n    toX: number,\n    toY: number,\n    dashPattern: number[]\n  ): void {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + Math.cos(angle) * dashLength;\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + Math.sin(angle) * dashLength;\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  protected ctx: RenderContext;\n\n  /**\n   * @param canvasId can be:\n   *   - a string element ID (of a canvas or div element)\n   *   - a canvas element\n   *   - a div element, which will contain the SVG output\n   * @param backend Renderer.Backends.CANVAS or Renderer.Backends.SVG\n   */\n  constructor(context: RenderContext);\n  constructor(canvas: string | HTMLCanvasElement | HTMLDivElement, backend: number);\n  constructor(arg0: string | HTMLCanvasElement | HTMLDivElement | RenderContext, arg1?: number) {\n    if (isRenderContext(arg0)) {\n      // The user has provided what looks like a RenderContext, let's just use it.\n      this.ctx = arg0;\n    } else {\n      if (arg1 === undefined) {\n        // The backend must be specified if the render context isn't directly provided.\n        throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n      }\n      const backend: number = arg1;\n\n      let element: HTMLElement;\n      if (typeof arg0 == 'string') {\n        const maybeElement = document.getElementById(arg0);\n        if (!maybeElement) {\n          throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n        }\n        element = maybeElement;\n      } else {\n        element = arg0 as HTMLElement;\n      }\n\n      // Verify backend and create context\n      if (backend === Renderer.Backends.CANVAS) {\n        if (!isHTMLCanvas(element)) {\n          throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n        }\n        const context = element.getContext('2d', { willReadFrequently: true });\n        if (!context) {\n          throw new RuntimeError('BadElement', \"Can't get canvas context\");\n        }\n        this.ctx = new CanvasContext(context);\n      } else if (backend === Renderer.Backends.SVG) {\n        if (!isHTMLDiv(element)) {\n          throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n        }\n        this.ctx = new SVGContext(element);\n      } else {\n        throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n      }\n    }\n  }\n\n  resize(width: number, height: number): this {\n    this.ctx.resize(width, height);\n    return this;\n  }\n\n  getContext(): RenderContext {\n    return this.ctx;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note, NoteStruct } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport enum TextJustification {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n}\n\nexport interface TextNoteStruct extends NoteStruct {\n  text?: string;\n  glyph?: string;\n  ignore_ticks?: boolean;\n  smooth?: boolean;\n  font?: FontInfo;\n  subscript?: string;\n  superscript?: string;\n}\n\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n  static get CATEGORY(): string {\n    return Category.TextNote;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n  };\n\n  static readonly Justification = TextJustification;\n\n  /** Glyph data. */\n  static get GLYPHS(): Record<string, { code: string }> {\n    return {\n      segno: {\n        code: 'segno',\n      },\n      tr: {\n        code: 'ornamentTrill',\n      },\n      mordent: {\n        code: 'ornamentMordent',\n      },\n      mordent_upper: {\n        code: 'ornamentShortTrill',\n      },\n      mordent_lower: {\n        code: 'ornamentMordent',\n      },\n      f: {\n        code: 'dynamicForte',\n      },\n      p: {\n        code: 'dynamicPiano',\n      },\n      m: {\n        code: 'dynamicMezzo',\n      },\n      s: {\n        code: 'dynamicSforzando',\n      },\n      z: {\n        code: 'dynamicZ',\n      },\n      coda: {\n        code: 'coda',\n      },\n      pedal_open: {\n        code: 'keyboardPedalPed',\n      },\n      pedal_close: {\n        code: 'keyboardPedalUp',\n      },\n      caesura_straight: {\n        code: 'caesura',\n      },\n      caesura_curved: {\n        code: 'caesuraCurved',\n      },\n      breath: {\n        code: 'breathMarkComma',\n      },\n      tick: {\n        code: 'breathMarkTick',\n      },\n      turn: {\n        code: 'ornamentTurn',\n      },\n      turn_inverted: {\n        code: 'ornamentTurnSlash',\n      },\n    };\n  }\n\n  protected text: string;\n  protected glyph?: Glyph;\n  protected superscript?: string;\n  protected subscript?: string;\n  protected smooth: boolean;\n  protected justification: TextJustification;\n  protected line: number;\n\n  constructor(noteStruct: TextNoteStruct) {\n    super(noteStruct);\n\n    this.text = noteStruct.text || '';\n    this.superscript = noteStruct.superscript;\n    this.subscript = noteStruct.subscript;\n    this.setFont(noteStruct.font);\n    this.line = noteStruct.line || 0;\n    this.smooth = noteStruct.smooth || false;\n    this.ignore_ticks = noteStruct.ignore_ticks || false;\n    this.justification = TextJustification.LEFT;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n    if (noteStruct.glyph) {\n      const struct = TextNote.GLYPHS[noteStruct.glyph];\n      if (!struct) throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n\n      this.glyph = new Glyph(struct.code, Tables.NOTATION_FONT_SCALE, { category: 'textNote' });\n      this.setWidth(this.glyph.getMetrics().width);\n    } else {\n      this.glyph = undefined;\n    }\n  }\n\n  /** Set the horizontal justification of the TextNote. */\n  setJustification(just: TextJustification): this {\n    this.justification = just;\n    return this;\n  }\n\n  /** Set the Stave line on which the note should be placed. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Return the Stave line on which the TextNote is placed. */\n  getLine(): number {\n    return this.line;\n  }\n\n  /** Return the unformatted text of this TextNote. */\n  getText(): string {\n    return this.text;\n  }\n\n  /** Pre-render formatting. */\n  preFormat(): void {\n    if (this.preFormatted) return;\n    const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        this.setWidth(ctx.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextJustification.CENTER) {\n      this.leftDisplacedHeadPx = this.width / 2;\n    } else if (this.justification === TextJustification.RIGHT) {\n      this.leftDisplacedHeadPx = this.width;\n    }\n\n    // We reposition to the center of the note head\n    this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n    this.preFormatted = true;\n  }\n\n  /**\n   * Renders the TextNote.\n   * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n   */\n  draw(): void {\n    const ctx = this.checkContext();\n    const stave = this.checkStave();\n    const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n\n    this.setRendered();\n\n    // Reposition to center of note head\n    let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n\n    // Align based on tick-context width.\n    const width = this.getWidth();\n\n    if (this.justification === TextJustification.CENTER) {\n      x -= width / 2;\n    } else if (this.justification === TextJustification.RIGHT) {\n      x -= width;\n    }\n\n    let y;\n    if (this.glyph) {\n      y = stave.getYForLine(this.line + -3);\n      this.glyph.render(ctx, x, y);\n    } else {\n      y = stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.textFont);\n      ctx.fillText(this.text, x, y);\n\n      const height = ctx.measureText(this.text).height;\n\n      // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n      // eslint-disable-next-line\n      const { family, size, weight, style } = this.textFont!;\n      // Scale the font size by 1/1.3.\n      const smallerFontSize = Font.scaleSize(size, 0.769231);\n\n      if (this.superscript) {\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n      }\n\n      if (this.subscript) {\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Stave } from './stave';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\n\nexport enum VoltaType {\n  NONE = 1,\n  BEGIN = 2,\n  MID = 3,\n  END = 4,\n  BEGIN_END = 5,\n}\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY(): string {\n    return Category.Volta;\n  }\n\n  static get type(): typeof VoltaType {\n    return VoltaType;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n  };\n\n  protected volta: number;\n  protected number: string;\n\n  protected y_shift: number;\n\n  constructor(type: number, number: string, x: number, y_shift: number) {\n    super();\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.resetFont();\n  }\n\n  setShiftY(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  draw(stave: Stave, x: number): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.getWidth() - x; // don't include x (offset) for width\n    const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n    const vert_height = 1.5 * stave.getSpacingBetweenLines();\n    switch (this.volta) {\n      case VoltaType.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case VoltaType.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case VoltaType.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.textFont);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport interface StringNumberMetrics {\n  verticalPadding: number;\n  stemPadding: number;\n  leftPadding: number;\n  rightPadding: number;\n}\n\nexport class StringNumber extends Modifier {\n  static get CATEGORY(): string {\n    return Category.StringNumber;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n  };\n\n  static get metrics(): StringNumberMetrics {\n    return (\n      Tables.currentMusicFont().getMetrics().stringNumber ?? {\n        verticalPadding: 0,\n        stemPadding: 0,\n        leftPadding: 0,\n        rightPadding: 0,\n      }\n    );\n  }\n\n  // ## Static Methods\n  // Arrange string numbers inside a `ModifierContext`\n  static format(nums: StringNumber[], state: ModifierContextState): boolean {\n    const left_shift = state.left_shift;\n    const right_shift = state.right_shift;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shift_left = 0;\n    let shift_right = 0;\n    const modLines = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote();\n      const pos = num.getPosition();\n      if (!isStaveNote(note)) {\n        throw new RuntimeError('NoStaveNote');\n      }\n      const index = num.checkIndex();\n      const props = note.getKeyProps()[index];\n      const mc = note.getModifierContext();\n      const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n\n      if (mc) {\n        if (pos === ModifierPosition.ABOVE) {\n          num.text_line = mc.getState().top_text_line;\n          state.top_text_line += verticalSpaceNeeded;\n        } else if (pos === ModifierPosition.BELOW) {\n          num.text_line = mc.getState().text_line;\n          state.text_line += verticalSpaceNeeded;\n        }\n      }\n\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          if (left_shift === 0) {\n            shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n          }\n          if (right_shift === 0) {\n            shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n          }\n        }\n        prev_note = note;\n      }\n\n      const glyphLine = modLines === 0 ? props.line : modLines;\n\n      nums_list.push({\n        pos,\n        note,\n        num,\n        line: glyphLine,\n        shiftL: shift_left,\n        shiftR: shift_right,\n      });\n    }\n\n    // Sort string numbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let num_shiftR = 0;\n    let x_widthL = 0;\n    let x_widthR = 0;\n    let last_line = null;\n    let last_note = null;\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const note = nums_list[i].note;\n      const pos = nums_list[i].pos;\n      const num = nums_list[i].num;\n      const line = nums_list[i].line;\n      const shiftR = nums_list[i].shiftR;\n      // Reset the position of the string number every line.\n      if (line !== last_line || note !== last_note) {\n        num_shiftR = right_shift + shiftR;\n      }\n\n      const num_width = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift);\n        num_shift = shift_left + num_width; // spacing\n        x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift += num_width; // spacing\n        x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  }\n\n  protected radius: number;\n  protected drawCircle: boolean;\n  protected last_note?: Note;\n  protected string_number: string;\n  protected x_offset: number;\n  protected y_offset: number;\n  protected text_line: number;\n  protected stem_offset: number;\n  protected dashed: boolean;\n  protected leg: number;\n\n  constructor(number: string) {\n    super();\n\n    this.string_number = number;\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.text_line = 0;\n    this.stem_offset = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.dashed = true; // true - draw dashed extension  false - no extension\n    this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n    this.radius = 8;\n    this.drawCircle = true;\n    this.setWidth(this.radius * 2 + 4);\n    this.resetFont();\n  }\n\n  setLineEndType(leg: number): this {\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n      this.leg = leg;\n    }\n    return this;\n  }\n\n  setStringNumber(number: string): this {\n    this.string_number = number;\n    return this;\n  }\n\n  setOffsetX(x: number): this {\n    this.x_offset = x;\n    return this;\n  }\n\n  setOffsetY(y: number): this {\n    this.y_offset = y;\n    return this;\n  }\n\n  setLastNote(note: Note): this {\n    this.last_note = note;\n    return this;\n  }\n\n  setDashed(dashed: boolean): this {\n    this.dashed = dashed;\n    return this;\n  }\n\n  setDrawCircle(drawCircle: boolean): this {\n    this.drawCircle = drawCircle;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n    const start = note.getModifierStartXY(this.position, this.index);\n    const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let stem_ext: Record<string, number> = {};\n    if (note.hasStem()) {\n      stem_ext = (note as StemmableNote).checkStem().getExtents();\n    }\n\n    let dot_y = start.y + this.y_shift + this.y_offset;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n        {\n          const ys = note.getYs();\n          dot_y = ys.reduce((a, b) => (a < b ? a : b));\n          if (note.hasStem() && stemDirection == Stem.UP) {\n            dot_y = stem_ext.topY + StringNumber.metrics.stemPadding;\n          }\n          dot_y -= this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n        }\n        break;\n      case Modifier.Position.BELOW:\n        {\n          const ys: number[] = note.getYs();\n          dot_y = ys.reduce((a, b) => (a > b ? a : b));\n          if (note.hasStem() && stemDirection == Stem.DOWN) {\n            dot_y = stem_ext.topY - StringNumber.metrics.stemPadding;\n          }\n          dot_y += this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n        }\n        break;\n      case Modifier.Position.LEFT:\n        dot_x -= this.radius / 2 + StringNumber.metrics.leftPadding;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += this.radius / 2 + StringNumber.metrics.rightPadding;\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    ctx.save();\n    if (this.drawCircle) {\n      ctx.beginPath();\n      ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n      ctx.setLineWidth(1.5);\n      ctx.stroke();\n    }\n    ctx.setFont(this.textFont);\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\n    const lastNote = this.last_note;\n    if (isStemmableNote(lastNote)) {\n      // Only StemmableNote objects have getStemX().\n      const end = lastNote.getStemX() - note.getX() + 5;\n      ctx.setStrokeStyle('#000000');\n      ctx.setLineCap('round');\n      ctx.setLineWidth(0.6);\n      if (this.dashed) {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n      } else {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n      }\n\n      let len;\n      let pattern;\n      switch (this.leg) {\n        case Renderer.LineEndType.UP:\n          len = -10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        case Renderer.LineEndType.DOWN:\n          len = 10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        default:\n          break;\n      }\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { ModifierContextState } from './modifiercontext';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport class Stroke extends Modifier {\n  static get CATEGORY(): string {\n    return Category.Stroke;\n  }\n\n  static readonly Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3, // Arpeggiated chord\n    ROLL_UP: 4, // Arpeggiated chord\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n  };\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n  };\n\n  // Arrange strokes inside `ModifierContext`\n  static format(strokes: Stroke[], state: ModifierContextState): boolean {\n    const left_shift = state.left_shift;\n    const stroke_spacing = 0;\n\n    if (!strokes || strokes.length === 0) return false;\n\n    const strokeList = strokes.map((stroke) => {\n      const note = stroke.getNote();\n      const index = stroke.checkIndex();\n      if (isStaveNote(note)) {\n        // Only StaveNote objects have getKeyProps().\n        const { line } = note.getKeyProps()[index];\n        const shift = note.getLeftDisplacedHeadPx();\n        return { line, shift, stroke };\n      } else if (isTabNote(note)) {\n        // Only TabNote objects have getPositions().\n        const { str: string } = note.getPositions()[index];\n        return { line: string, shift: 0, stroke };\n      } else {\n        throw new RuntimeError('Internal', 'Unexpected instance.');\n      }\n    });\n\n    const strokeShift = left_shift;\n\n    // There can only be one stroke .. if more than one, they overlay each other\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n      stroke.setXShift(strokeShift + shift);\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n    }, 0);\n\n    state.left_shift += xShift;\n\n    return true;\n  }\n\n  protected options: { all_voices: boolean };\n  protected all_voices: boolean;\n  protected type: number;\n  protected note_end?: Note;\n  public render_options: {\n    font_scale: number;\n  };\n\n  constructor(type: number, options?: { all_voices: boolean }) {\n    super();\n\n    this.options = { all_voices: true, ...options };\n\n    // multi voice - span stroke across all voices if true\n    this.all_voices = this.options.all_voices;\n\n    // multi voice - end note of stroke, set in draw()\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      font_scale: Tables.NOTATION_FONT_SCALE,\n    };\n\n    this.resetFont();\n\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n\n  getPosition(): number {\n    return this.position;\n  }\n\n  addEndNote(note: Note): this {\n    this.note_end = note;\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(this.position, this.index);\n    let ys = note.getYs();\n    let topY = start.y;\n    let botY = start.y;\n    const x = start.x - 5;\n    const line_space = note.checkStave().getSpacingBetweenLines();\n\n    const notes = this.checkModifierContext().getMembers(note.getCategory());\n    for (let i = 0; i < notes.length; i++) {\n      const note = notes[i];\n      if (isNote(note)) {\n        // Only Note objects have getYs().\n        // note is an instance of either StaveNote or TabNote.\n        ys = note.getYs();\n        for (let n = 0; n < ys.length; n++) {\n          if (this.note === notes[i] || this.all_voices) {\n            topY = Math.min(topY, ys[n]);\n            botY = Math.max(botY, ys[n]);\n          }\n        }\n      }\n    }\n\n    let arrow = '';\n    let arrow_shift_x = 0;\n    let arrow_y = 0;\n    let text_shift_x = 0;\n    let text_y = 0;\n\n    switch (this.type) {\n      case Stroke.Type.BRUSH_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        arrow_y = topY - line_space / 2 + 10;\n        botY += line_space / 2;\n        break;\n      case Stroke.Type.BRUSH_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = 0.5;\n        arrow_y = botY + line_space / 2;\n        topY -= line_space / 2;\n        break;\n      case Stroke.Type.ROLL_DOWN:\n      case Stroke.Type.RASQUEDO_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\n        if (isStaveNote(note)) {\n          topY += 1.5 * line_space;\n          if ((botY - topY) % 2 !== 0) {\n            botY += 0.5 * line_space;\n          } else {\n            botY += line_space;\n          }\n          arrow_y = topY - line_space;\n          text_y = botY + line_space + 2;\n        } else {\n          topY += 1.5 * line_space;\n          botY += line_space;\n          arrow_y = topY - 0.75 * line_space;\n          text_y = botY + 0.25 * line_space;\n        }\n        break;\n      case Stroke.Type.ROLL_UP:\n      case Stroke.Type.RASQUEDO_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = -4;\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\n        if (isStaveNote(note)) {\n          arrow_y = line_space / 2;\n          topY += 0.5 * line_space;\n          if ((botY - topY) % 2 === 0) {\n            botY += line_space / 2;\n          }\n          arrow_y = botY + 0.5 * line_space;\n          text_y = topY - 1.25 * line_space;\n        } else {\n          topY += 0.25 * line_space;\n          botY += 0.5 * line_space;\n          arrow_y = botY + 0.25 * line_space;\n          text_y = topY - line_space;\n        }\n        break;\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n        topY += 0.5 * line_space;\n        botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n        break;\n      default:\n        throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n    }\n\n    let strokeLine = 'straight';\n    // Draw the stroke\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n      ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n    } else {\n      strokeLine = 'wiggly';\n      if (isStaveNote(note)) {\n        for (let i = topY; i <= botY; i += line_space) {\n          Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n        }\n      } else {\n        let i;\n        for (i = topY; i <= botY; i += 10) {\n          Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n        }\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n          text_y = i + 0.25 * line_space;\n        }\n      }\n    }\n\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n      return; // skip drawing arrow heads or text\n    }\n\n    // Draw the arrow head\n    Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n      category: `stroke_${strokeLine}.${arrow}`,\n    });\n\n    // Draw the rasquedo \"R\"\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n      ctx.save();\n      ctx.setFont(this.textFont);\n      ctx.fillText('R', x + text_shift_x, text_y);\n      ctx.restore();\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { ModifierContext, ModifierContextState } from './modifiercontext';\nimport { RenderContext } from './rendercontext';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n\nexport interface VibratoRenderOptions {\n  wave_height: number;\n  wave_girth: number;\n  vibrato_width: number;\n  harsh: boolean;\n  wave_width: number;\n}\n\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n  static get CATEGORY(): string {\n    return Category.Vibrato;\n  }\n\n  public render_options: VibratoRenderOptions;\n\n  /** Arrange vibratos inside a `ModifierContext`. */\n  static format(vibratos: Vibrato[], state: ModifierContextState, context: ModifierContext): boolean {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getMembers(Bend.CATEGORY) as Bend[];\n    if (bends && bends.length > 0) {\n      const bendHeight =\n        bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n      text_line = text_line - (bendHeight + 1);\n    } else {\n      state.top_text_line += 1;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    return true;\n  }\n\n  constructor() {\n    super();\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n\n  /** Set harsh vibrato. */\n  setHarsh(harsh: boolean): this {\n    this.render_options.harsh = harsh;\n    return this;\n  }\n\n  /** Set vibrato width in pixels. */\n  setVibratoWidth(width: number): this {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  /** Draw the vibrato on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  /**\n   * Static rendering method that can be called from\n   * other classes (e.g. VibratoBracket).\n   */\n  static renderVibrato(ctx: RenderContext, x: number, y: number, opts: VibratoRenderOptions): void {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - wave_height / 2);\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + wave_height / 2);\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.).  The ModifierContext works with tickables\n// that are at the same tick to ensure that they and their modifiers\n// all have proper alignment.  (Note that the ModifierContext also\n// runs the spacing of the tickable).\n//\n// see https://github.com/0xfe/vexflow/wiki/How-Formatting-Works\n\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { TabNote } from './tabnote';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n\nexport interface ModifierContextState {\n  right_shift: number;\n  left_shift: number;\n  text_line: number;\n  top_text_line: number;\n}\n\nexport interface ModifierContextMetrics {\n  width: number;\n  spacing: number;\n}\n\nexport type ModifierContextMember = Tickable | Modifier | StaveNote | TabNote;\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (ModifierContext.DEBUG) log('Vex.Flow.ModifierContext', args);\n}\n\nexport class ModifierContext {\n  static DEBUG: boolean = false;\n\n  // Formatting data.\n  protected state: ModifierContextState = {\n    left_shift: 0,\n    right_shift: 0,\n    text_line: 0,\n    top_text_line: 0,\n  };\n\n  // Current members -- a mapping of Category (string) to a list of Tickables, Modifiers,\n  // StaveNotes, TabNotes, etc.\n  protected members: Record<string, ModifierContextMember[]> = {};\n\n  protected preFormatted: boolean = false;\n  protected postFormatted: boolean = false;\n  protected formatted: boolean = false;\n\n  protected width: number = 0;\n  protected spacing: number = 0;\n\n  addModifier(member: ModifierContextMember): this {\n    L('addModifier is deprecated, use addMember instead.');\n    return this.addMember(member);\n  }\n\n  /**\n   * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n   * Here we add a new member to this.members, and create a new array if needed.\n   * @param member\n   * @returns this\n   */\n  addMember(member: ModifierContextMember): this {\n    const category = member.getCategory();\n    if (!this.members[category]) {\n      this.members[category] = [];\n    }\n    this.members[category].push(member);\n    member.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  /**\n   * @deprecated\n   */\n  getModifiers(category: string): ModifierContextMember[] {\n    L('getModifiers is deprecated, use getMembers instead.');\n    return this.getMembers(category);\n  }\n\n  getMembers(category: string): ModifierContextMember[] {\n    return this.members[category] ?? [];\n  }\n\n  /**\n   * Get the width of the entire\n   */\n  getWidth(): number {\n    return this.width;\n  }\n\n  getLeftShift(): number {\n    return this.state.left_shift;\n  }\n\n  getRightShift(): number {\n    return this.state.right_shift;\n  }\n\n  getState(): ModifierContextState {\n    return this.state;\n  }\n\n  getMetrics(): ModifierContextMetrics {\n    if (!this.formatted) {\n      throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n    };\n  }\n\n  preFormat(): void {\n    if (this.preFormatted) return;\n    L('Preformatting ModifierContext');\n\n    const state = this.state;\n    const members = this.members;\n\n    // The ordering below determines when different members are formatted and rendered.\n    StaveNote.format(members[Category.StaveNote] as StaveNote[], state);\n    Parenthesis.format(members[Category.Parenthesis] as Parenthesis[], state);\n    Dot.format(members[Category.Dot] as Dot[], state);\n    FretHandFinger.format(members[Category.FretHandFinger] as FretHandFinger[], state);\n    Accidental.format(members[Category.Accidental] as Accidental[], state);\n    Stroke.format(members[Category.Stroke] as Stroke[], state);\n    GraceNoteGroup.format(members[Category.GraceNoteGroup] as GraceNoteGroup[], state);\n    NoteSubGroup.format(members[Category.NoteSubGroup] as NoteSubGroup[], state);\n    StringNumber.format(members[Category.StringNumber] as StringNumber[], state);\n    Articulation.format(members[Category.Articulation] as Articulation[], state);\n    Ornament.format(members[Category.Ornament] as Ornament[], state);\n    Annotation.format(members[Category.Annotation] as Annotation[], state);\n    ChordSymbol.format(members[Category.ChordSymbol] as ChordSymbol[], state);\n    Bend.format(members[Category.Bend] as Bend[], state);\n    Vibrato.format(members[Category.Vibrato] as Vibrato[], state, this);\n\n    // Update width of this member context\n    this.width = state.left_shift + state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat(): void {\n    if (this.postFormatted) return;\n    L('Postformatting ModifierContext');\n\n    // If post-formatting is required for an element, add more lines below.\n    StaveNote.postFormat(this.getMembers(Category.StaveNote) as Note[]);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\n\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n\nexport interface ClefType {\n  code: string;\n  line: number;\n}\n\nexport interface ClefAnnotatiomType extends ClefType {\n  x_shift: number;\n  point: number;\n}\n\nexport interface ClefMetrics {\n  width: number;\n  annotations: {\n    [key: string]: {\n      [type: string]: { line?: number; shiftX?: number } | number;\n    };\n  };\n}\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Clef.DEBUG) log('Vex.Flow.Clef', args);\n}\n\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n  /** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.Clef;\n  }\n\n  annotation?: ClefAnnotatiomType;\n\n  /**\n   * The attribute `clef` must be a key from\n   * `Clef.types`\n   */\n  clef: ClefType = Clef.types['treble'];\n\n  protected attachment?: Glyph;\n  protected size?: string;\n  protected type?: string;\n\n  /**\n   * Every clef name is associated with a glyph code from the font file\n   * and a default stave line number.\n   */\n  static get types(): Record<string, ClefType> {\n    return {\n      treble: {\n        code: 'gClef',\n        line: 3,\n      },\n      bass: {\n        code: 'fClef',\n        line: 1,\n      },\n      alto: {\n        code: 'cClef',\n        line: 2,\n      },\n      tenor: {\n        code: 'cClef',\n        line: 1,\n      },\n      percussion: {\n        code: 'unpitchedPercussionClef1',\n        line: 2,\n      },\n      soprano: {\n        code: 'cClef',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'cClef',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'cClef',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'fClef',\n        line: 2,\n      },\n      subbass: {\n        code: 'fClef',\n        line: 0,\n      },\n      french: {\n        code: 'gClef',\n        line: 4,\n      },\n      tab: {\n        code: '6stringTabClef',\n        line: 2.5,\n      },\n    };\n  }\n\n  static get annotationSmufl(): Record<string, string> {\n    return {\n      '8va': 'timeSig8',\n      '8vb': 'timeSig8',\n    };\n  }\n\n  /** Create a new clef. */\n  constructor(type: string, size?: string, annotation?: string) {\n    super();\n\n    this.setPosition(StaveModifierPosition.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clef_${this.size}`));\n    L('Creating clef:', type);\n  }\n\n  /** Set clef type, size and annotation. */\n  setType(type: string, size?: string, annotation?: string): this {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n\n    const musicFont = Tables.currentMusicFont();\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const code = Clef.annotationSmufl[annotation];\n      const point = (Clef.getPoint(this.size) / 5) * 3;\n      const line = musicFont.lookupMetric(`clef_${this.size}.annotations.${annotation}.${this.type}.line`);\n      const x_shift = musicFont.lookupMetric(`clef_${this.size}.annotations.${annotation}.${this.type}.shiftX`);\n\n      this.annotation = { code, point, line, x_shift };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  /** Get clef width. */\n  getWidth(): number {\n    if (this.type === 'tab') {\n      defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n    }\n    return this.width;\n  }\n\n  /** Get point for clefs. */\n  static getPoint(size?: string): number {\n    // for sizes other than 'default', clef is 2/3 of the default value\n    return size == 'default' ? Tables.NOTATION_FONT_SCALE : (Tables.NOTATION_FONT_SCALE / 3) * 2;\n  }\n\n  /** Set associated stave. */\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  /** Render clef. */\n  draw(): void {\n    const stave = this.checkStave();\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    this.applyStyle(ctx);\n    ctx.openGroup('clef', this.getAttribute('id'));\n    Glyph.renderGlyph(ctx, this.x, stave.getYForLine(this.clef.line), Clef.getPoint(this.size), this.clef.code, {\n      category: `clef_${this.size}`,\n    });\n    if (this.annotation !== undefined && this.attachment !== undefined) {\n      this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n      this.attachment.setStave(stave);\n      this.attachment.setContext(ctx);\n      this.attachment.renderToStave(this.x);\n    }\n    ctx.closeGroup();\n    this.restoreStyle(ctx);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY(): string {\n    return Category.KeySignature;\n  }\n\n  protected glyphFontScale: number;\n  protected glyphs: Glyph[];\n  protected xPositions: number[];\n  protected paddingForced: boolean;\n  protected formatted?: boolean;\n  protected cancelKeySpec?: string;\n  protected accList: { type: string; line: number }[] = [];\n  protected keySpec?: string;\n  protected alterKeySpec?: string[];\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static accidentalSpacing: Record<string, { above: number; below: number }> = {\n    '#': {\n      above: 6,\n      below: 4,\n    },\n    b: {\n      above: 4,\n      below: 7,\n    },\n    n: {\n      above: 4,\n      below: 1,\n    },\n    '##': {\n      above: 6,\n      below: 4,\n    },\n    bb: {\n      above: 4,\n      below: 7,\n    },\n    db: {\n      above: 4,\n      below: 7,\n    },\n    d: {\n      above: 4,\n      below: 7,\n    },\n    bbs: {\n      above: 4,\n      below: 7,\n    },\n    '++': {\n      above: 6,\n      below: 4,\n    },\n    '+': {\n      above: 6,\n      below: 4,\n    },\n    '+-': {\n      above: 6,\n      below: 4,\n    },\n    '++-': {\n      above: 6,\n      below: 4,\n    },\n    bs: {\n      above: 4,\n      below: 10,\n    },\n    bss: {\n      above: 4,\n      below: 10,\n    },\n  };\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec: string, cancelKeySpec?: string, alterKeySpec?: string[]) {\n    super();\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifierPosition.BEGIN);\n    this.glyphFontScale = Tables.NOTATION_FONT_SCALE;\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc: { type: string; line: number }, nextAcc: { type: string; line: number }): void {\n    const accGlyphData = Tables.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec: string): this {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec: string): { type: string; accList: { type: string; line: number }[] } | undefined {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Tables.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types =\n      this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return undefined;\n\n    // Get the line position for each natural\n    const cancelled: { type: string; line: number }[] = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n\n    return {\n      accList: cancelled,\n      type: cancel_accList[0].type,\n    };\n  }\n\n  // Deprecated\n  addToStave(stave: Stave): this {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef: string, type?: string, accList = this.accList): void {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index: number): number {\n    if (!this.formatted) this.format();\n\n    return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n  }\n\n  getWidth(): number {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec: string, cancelKeySpec?: string, alterKeySpec?: string[]): this {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec: string[]): this {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec: string[]): void {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format(): void {\n    const stave = this.checkStave();\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Tables.keySignature(defined(this.keySpec));\n    const accList = this.accList;\n    const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n    let cancelAccList;\n    if (this.cancelKeySpec) {\n      cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      const clef =\n        (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n      if (cancelAccList) {\n        this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n      }\n      this.convertAccLines(clef, firstAccidentalType, accList);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  /**\n   * Return the Glyph objects making up this KeySignature.\n   */\n  getGlyphs(): Glyph[] {\n    if (!this.formatted) this.format();\n    return this.glyphs;\n  }\n\n  draw(): void {\n    const stave = this.checkStave();\n    const ctx = stave.checkContext();\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    this.applyStyle(ctx);\n    ctx.openGroup('keysignature', this.getAttribute('id'));\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(stave);\n      glyph.setContext(ctx);\n      glyph.renderToStave(x);\n    }\n    ctx.closeGroup();\n    this.restoreStyle(ctx);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY(): string {\n    return Category.Repetition;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n  };\n\n  static readonly type = {\n    NONE: 1, // no coda or segno\n    CODA_LEFT: 2, // coda at beginning of stave\n    CODA_RIGHT: 3, // coda at end of stave\n    SEGNO_LEFT: 4, // segno at beginning of stave\n    SEGNO_RIGHT: 5, // segno at end of stave\n    DC: 6, // D.C. at end of stave\n    DC_AL_CODA: 7, // D.C. al coda at end of stave\n    DC_AL_FINE: 8, // D.C. al Fine end of stave\n    DS: 9, // D.S. at end of stave\n    DS_AL_CODA: 10, // D.S. al coda at end of stave\n    DS_AL_FINE: 11, // D.S. al Fine at end of stave\n    FINE: 12, // Fine at end of stave\n    TO_CODA: 13, // To Coda at end of stave\n  };\n\n  protected symbol_type: number;\n\n  protected x_shift: number;\n  protected y_shift: number;\n\n  constructor(type: number, x: number, y_shift: number) {\n    super();\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n\n    this.resetFont();\n  }\n\n  setShiftX(x: number): this {\n    this.x_shift = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.y_shift = y;\n    return this;\n  }\n\n  draw(stave: Stave, x: number): this {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.getWidth());\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.getWidth());\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      case Repetition.type.TO_CODA:\n        this.drawSymbolText(stave, x, 'To', true);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave: Stave, x: number): this {\n    const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n    Glyph.renderGlyph(\n      stave.checkContext(),\n      this.x + x + this.x_shift,\n      y + Tables.currentMusicFont().lookupMetric('staveRepetition.coda.offsetY'),\n      40,\n      'coda',\n      { category: 'coda' }\n    );\n    return this;\n  }\n\n  drawSignoFixed(stave: Stave, x: number): this {\n    const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n    Glyph.renderGlyph(\n      stave.checkContext(),\n      this.x + x + this.x_shift,\n      y + Tables.currentMusicFont().lookupMetric('staveRepetition.segno.offsetY'),\n      30,\n      'segno',\n      { category: 'segno' }\n    );\n    return this;\n  }\n\n  drawSymbolText(stave: Stave, x: number, text: string, draw_coda: boolean): this {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.textFont);\n\n    let text_x = 0;\n    let symbol_x = 0;\n    const modifierWidth = stave.getNoteStartX() - this.x;\n    switch (this.symbol_type) {\n      // To the left with symbol\n      case Repetition.type.CODA_LEFT:\n        // Offset Coda text to right of stave beginning\n        text_x = this.x + stave.getVerticalBarWidth();\n        symbol_x =\n          text_x +\n          ctx.measureText(text).width +\n          Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n        break;\n      // To the right without symbol\n      case Repetition.type.DC:\n      case Repetition.type.DC_AL_FINE:\n      case Repetition.type.DS:\n      case Repetition.type.DS_AL_FINE:\n      case Repetition.type.FINE:\n        text_x =\n          this.x +\n          x +\n          this.x_shift +\n          stave.getWidth() -\n          Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n          modifierWidth -\n          ctx.measureText(text).width;\n        break;\n      // To the right with symbol\n      default:\n        text_x =\n          this.x +\n          x +\n          this.x_shift +\n          stave.getWidth() -\n          Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n          modifierWidth -\n          ctx.measureText(text).width -\n          Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n        symbol_x =\n          text_x +\n          ctx.measureText(text).width +\n          Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n        break;\n    }\n\n    const y =\n      stave.getYForTopText(stave.getNumLines()) +\n      this.y_shift +\n      Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetY');\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', { category: 'coda' });\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Stave } from './stave';\nimport { StaveModifier } from './stavemodifier';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY(): string {\n    return Category.StaveSection;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n  };\n\n  protected section: string;\n  protected shift_x: number;\n  protected shift_y: number;\n  protected drawRect: boolean;\n\n  constructor(section: string, x: number, shift_y: number, drawRect = true) {\n    super();\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.drawRect = drawRect;\n    this.resetFont();\n  }\n\n  setStaveSection(section: string): this {\n    this.section = section;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  draw(stave: Stave, shift_x: number): this {\n    const borderWidth = 2;\n    const padding = 2;\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setLineWidth(borderWidth);\n    ctx.setFont(this.textFont);\n    const textFormatter = TextFormatter.create(this.textFont);\n\n    const textWidth = textFormatter.getWidthForTextInPx(this.section);\n    const textY = textFormatter.getYForStringInPx(this.section);\n    const textHeight = textY.height;\n    const headroom = -1 * textY.yMin;\n    const width = textWidth + 2 * padding; // add left & right padding\n    const height = textHeight + 2 * padding; // add top & bottom padding\n\n    //  Seems to be a good default y\n    const y = stave.getYForTopText(1.5) + this.shift_y;\n    const x = this.x + shift_x;\n    if (this.drawRect) {\n      ctx.beginPath();\n      ctx.rect(x, y - height + headroom, width, height);\n      ctx.stroke();\n    }\n    ctx.fillText(this.section, x + padding, y - padding);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\n\nexport interface StaveTempoOptions {\n  bpm?: number;\n  duration?: string;\n  dots?: number;\n  name?: string;\n}\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY(): string {\n    return Category.StaveTempo;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n  };\n\n  protected tempo: StaveTempoOptions;\n  protected shift_x: number;\n  protected shift_y: number;\n  /** Font size for note. */\n  public render_options = { glyph_font_scale: 30 };\n\n  constructor(tempo: StaveTempoOptions, x: number, shift_y: number) {\n    super();\n\n    this.tempo = tempo;\n    this.position = StaveModifierPosition.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.resetFont();\n  }\n\n  setTempo(tempo: StaveTempoOptions): this {\n    this.tempo = tempo;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  draw(stave: Stave, shift_x: number): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    const scale = options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots || 0;\n    const bpm = this.tempo.bpm;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n    const textFormatter = TextFormatter.create(this.textFont);\n\n    if (name) {\n      ctx.setFont(this.textFont);\n      ctx.fillText(name, x, y);\n      x += textFormatter.getWidthForTextInPx(name);\n    }\n\n    if (duration && bpm) {\n      // Override the weight and style.\n      const noteTextFont = { ...this.textFont, weight: 'normal', style: 'normal' };\n      ctx.setFont(noteTextFont);\n      const noteTextFormatter = TextFormatter.create(noteTextFont);\n\n      if (name) {\n        x += noteTextFormatter.getWidthForTextInPx('|');\n        ctx.fillText('(', x, y);\n        x += noteTextFormatter.getWidthForTextInPx('(');\n      }\n\n      const glyphProps = Tables.getGlyphProps(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, glyphProps.code_head);\n      x += Glyph.getWidth(glyphProps.code_head, options.glyph_font_scale);\n\n      // Draw stem and flags\n      if (glyphProps.stem) {\n        let stem_height = 30;\n\n        if (glyphProps.beam_count) stem_height += 3 * (glyphProps.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (glyphProps.code && glyphProps.code_flag_upstem) {\n          const flagMetrics = Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, glyphProps.code_flag_upstem, {\n            category: 'flag.staveTempo',\n          });\n          x += (flagMetrics.width * Tables.NOTATION_FONT_SCALE) / flagMetrics.font.getData().resolution;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Stave } from './stave';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY(): string {\n    return Category.StaveText;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n  };\n\n  protected options: {\n    shift_x: number;\n    shift_y: number;\n    justification: number;\n  };\n\n  protected text: string;\n  protected shift_x?: number;\n  protected shift_y?: number;\n\n  constructor(\n    text: string,\n    position: number,\n    options: { shift_x?: number; shift_y?: number; justification?: number } = {}\n  ) {\n    super();\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n      ...options,\n    };\n\n    this.resetFont();\n  }\n\n  setStaveText(text: string): this {\n    this.text = text;\n    return this;\n  }\n\n  setShiftX(x: number): this {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y: number): this {\n    this.shift_y = y;\n    return this;\n  }\n\n  setText(text: string): this {\n    this.text = text;\n    return this;\n  }\n\n  draw(stave: Stave): this {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setLineWidth(2);\n    ctx.setFont(this.textFont);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    switch (this.position) {\n      case StaveModifierPosition.LEFT:\n      case StaveModifierPosition.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === StaveModifierPosition.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case StaveModifierPosition.ABOVE:\n      case StaveModifierPosition.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === TextJustification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === TextJustification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === StaveModifierPosition.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\n\nimport { Glyph, GlyphMetrics } from './glyph';\nimport { TimeSignature } from './timesignature';\nimport { defined } from './util';\n\nexport class TimeSignatureGlyph extends Glyph {\n  timeSignature: TimeSignature;\n  topStartX: number;\n  botStartX: number;\n  width: number;\n  lineShift: number;\n  xMin: number;\n\n  constructor(\n    timeSignature: TimeSignature,\n    topDigits: string,\n    botDigits: string,\n    code: string,\n    point: number,\n    options?: { category: string }\n  ) {\n    super(code, point, options);\n    this.timeSignature = timeSignature;\n    this.topGlyphs = [];\n    this.botGlyphs = [];\n\n    let topWidth = 0;\n    let height = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      let timeSigType = topDigits[i];\n      switch (topDigits[i]) {\n        case '-':\n          timeSigType = 'Minus';\n          break;\n        case '+':\n          timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n          break;\n        case '(':\n          timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n          break;\n        case ')':\n          timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n          break;\n      }\n      const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n\n      this.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width ?? 0;\n      height = Math.max(height, topGlyph.getMetrics().height);\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      let timeSigType = botDigits[i];\n      switch (botDigits[i]) {\n        case '+':\n          timeSigType = 'PlusSmall';\n          break;\n        case '(':\n          timeSigType = 'ParensLeftSmall';\n          break;\n        case ')':\n          timeSigType = 'ParensRightSmall';\n          break;\n      }\n      const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n\n      this.botGlyphs.push(botGlyph);\n      botWidth += defined(botGlyph.getMetrics().width);\n      height = Math.max(height, botGlyph.getMetrics().height);\n    }\n\n    // If the height of the digits is more than two staff spaces (20), shift to the next line\n    // in order to center the digits on lines 1 and 5 rather than 2 and 4.\n    this.lineShift = height > 22 ? 1 : 0;\n\n    this.width = Math.max(topWidth, botWidth);\n    this.xMin = this.getMetrics().x_min;\n    this.topStartX = (this.width - topWidth) / 2.0;\n    this.botStartX = (this.width - botWidth) / 2.0;\n    this.reset();\n  }\n\n  getMetrics(): GlyphMetrics {\n    return {\n      x_min: this.xMin,\n      x_max: this.xMin + this.width,\n      width: this.width,\n    } as GlyphMetrics;\n  }\n\n  renderToStave(x: number): void {\n    const stave = this.checkStave();\n    const ctx = this.checkContext();\n\n    let start_x = x + this.topStartX;\n    let y = 0;\n    if (this.botGlyphs.length > 0) y = stave.getYForLine(this.timeSignature.topLine - this.lineShift);\n    else y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n    for (let i = 0; i < this.topGlyphs.length; ++i) {\n      const glyph = this.topGlyphs[i];\n      Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n      start_x += defined(glyph.getMetrics().width);\n    }\n\n    start_x = x + this.botStartX;\n    y = stave.getYForLine(this.timeSignature.bottomLine + this.lineShift);\n    for (let i = 0; i < this.botGlyphs.length; ++i) {\n      const glyph = this.botGlyphs[i];\n      this.timeSignature.placeGlyphOnLine(glyph, stave, this.timeSignature.getLine());\n      Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n      start_x += defined(glyph.getMetrics().width);\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n\nexport interface TimeSignatureInfo {\n  glyph: Glyph;\n  line: number;\n  num: boolean;\n}\n\nconst assertIsValidTimeSig = (timeSpec: string) => {\n  const numbers = timeSpec.split('/');\n\n  if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n    throw new RuntimeError(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach((number) => {\n    // Characters consisting in number 0..9, '+', '-', '(' or ')'\n    if (/^[0-9+\\-()]+$/.test(number) == false) {\n      throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n    }\n  });\n};\n\n/**\n * A TimeSignature is a StaveModifier that can make its appropriate Glyphs directly from\n * a provided \"timeSpec\" such as \"4/4\", \"C|\" (cut time), or even something more advanced\n * such as \"3/4(6/8)\" or \"2/4+5/8\".\n */\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY(): string {\n    return Category.TimeSignature;\n  }\n\n  static get glyphs(): Record<string, { code: string; line: number }> {\n    return {\n      C: {\n        code: 'timeSigCommon',\n        line: 2,\n      },\n      'C|': {\n        code: 'timeSigCutCommon',\n        line: 2,\n      },\n    };\n  }\n\n  point: number;\n  bottomLine: number; // bottomLine and topLine are used to calculate the position of the\n  topLine: number; // top row of digits in a numeric TimeSignature.\n\n  protected timeSpec: string = '4/4';\n  protected line: number = 0;\n  protected glyph!: Glyph;\n  protected is_numeric: boolean = true;\n  protected validate_args: boolean;\n\n  constructor(timeSpec: string = '4/4', customPadding = 15, validate_args = true) {\n    super();\n    this.validate_args = validate_args;\n\n    const padding = customPadding;\n\n    // point must be defined before parsing spec.\n    const musicFont = Tables.currentMusicFont();\n    this.point = musicFont.lookupMetric('digits.point') || Tables.NOTATION_FONT_SCALE;\n\n    const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n    this.topLine = 2 + fontLineShift;\n    this.bottomLine = 4 + fontLineShift;\n    this.setPosition(StaveModifierPosition.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setPadding(padding);\n  }\n\n  /**\n   * Return TimeSignatureInfo given a string, consisting of line (number),\n   * num (boolean: same as TimeSignature.getIsNumeric()), and glyph (a Glyph or\n   * TimeSignatureGlyph object).\n   */\n  parseTimeSpec(timeSpec: string): TimeSignatureInfo {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, Tables.NOTATION_FONT_SCALE),\n      };\n    }\n\n    if (this.validate_args) {\n      assertIsValidTimeSig(timeSpec);\n    }\n\n    const parts = timeSpec.split('/');\n\n    return {\n      line: 0,\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(parts[0] ?? '', parts[1] ?? ''),\n    };\n  }\n\n  /**\n   * Returns a new TimeSignatureGlyph (a Glyph subclass that knows how to draw both\n   * top and bottom digits along with plus signs etc.)\n   */\n  makeTimeSignatureGlyph(topDigits: string, botDigits: string): TimeSignatureGlyph {\n    // note that 'code' is ignored by TimeSignatureGlyph when rendering.\n    return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n  }\n\n  /**\n   * Returns {line, num (=getIsNumeric), glyph} --\n   * but these can also be accessed directly w/ getters and setters.\n   */\n  getInfo(): TimeSignatureInfo {\n    const { line, is_numeric, glyph } = this;\n    return { line, num: is_numeric, glyph };\n  }\n\n  /**\n   * Set a new time signature specification without changing customPadding, etc.\n   *\n   * The getter for this is `getTimeSpec` not `getTimeSig`.\n   */\n  setTimeSig(timeSpec: string): this {\n    this.timeSpec = timeSpec;\n    const info = this.parseTimeSpec(timeSpec);\n    this.setGlyph(info.glyph);\n    this.is_numeric = info.num;\n    this.line = info.line;\n    return this;\n  }\n\n  /**\n   * Return the timeSpec (such as '4/4' or 'C|' or even '2/4+3/8') of the TimeSignature\n   */\n  getTimeSpec(): string {\n    return this.timeSpec;\n  }\n\n  /**\n   * Return the staff line that the TimeSignature sits on.  Generally 0 for numerator/\n   * denominator time signatures such as 3/4 and 2 for cut/common.\n   */\n  getLine(): number {\n    return this.line;\n  }\n\n  /**\n   * Set the line number that the TimeSignature sits on.  Half-values are acceptable\n   * for spaces, etc. Can be altered, for instance, for signatures that sit above the\n   * staff in large orchestral scores.\n   */\n  setLine(line: number) {\n    this.line = line;\n  }\n\n  /**\n   * Get the Glyph object used to create the time signature.  Numeric time signatures\n   * such as 3/8 have a composite Glyph stored as a single Glyph object.\n   */\n  getGlyph(): Glyph {\n    return this.glyph;\n  }\n\n  /**\n   * Set the Glyph object used to draw the time signature, and update the width of the\n   * TimeSignature to match.  The Glyph must define width in its metrics.\n   */\n  setGlyph(glyph: Glyph) {\n    this.glyph = glyph;\n    this.setWidth(defined(this.glyph.getMetrics().width));\n  }\n\n  /**\n   * Return a boolean on whether this TimeSignature is drawn with one or more numbers\n   * (such as 4/4) or not (as in cut time).\n   */\n  getIsNumeric(): boolean {\n    return this.is_numeric;\n  }\n\n  /**\n   * Set whether this TimeSignature is drawn with one or more numbers.\n   */\n  setIsNumeric(isNumeric: boolean) {\n    this.is_numeric = isNumeric;\n  }\n\n  /**\n   * Draw the time signature on a Stave using its RenderContext.  Both setStave\n   * and setContext must already be run.\n   */\n  draw(): void {\n    const stave = this.checkStave();\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    this.applyStyle(ctx);\n    ctx.openGroup('timesignature', this.getAttribute('id'));\n    this.glyph.setStave(stave);\n    this.glyph.setContext(ctx);\n    this.placeGlyphOnLine(this.glyph, stave, this.line);\n    this.glyph.renderToStave(this.x);\n    ctx.closeGroup();\n    this.restoreStyle(ctx);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { BoundingBox, Bounds } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element, ElementStyle } from './element';\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo, StaveTempoOptions } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport interface StaveLineConfig {\n  visible?: boolean;\n}\n\nexport interface StaveOptions {\n  bottom_text_position?: number;\n  line_config?: StaveLineConfig[];\n  space_below_staff_ln?: number;\n  space_above_staff_ln?: number;\n  vertical_bar_width?: number;\n  fill_style?: string;\n  left_bar?: boolean;\n  right_bar?: boolean;\n  spacing_between_lines_px?: number;\n  top_text_position?: number;\n  num_lines?: number;\n}\n\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n  [Barline.CATEGORY]: 0,\n  [Clef.CATEGORY]: 1,\n  [KeySignature.CATEGORY]: 2,\n  [TimeSignature.CATEGORY]: 3,\n};\n\nconst SORT_ORDER_END_MODIFIERS = {\n  [TimeSignature.CATEGORY]: 0,\n  [KeySignature.CATEGORY]: 1,\n  [Barline.CATEGORY]: 2,\n  [Clef.CATEGORY]: 3,\n};\n\nexport class Stave extends Element {\n  static get CATEGORY(): string {\n    return Category.Stave;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n  };\n\n  readonly options: Required<StaveOptions>;\n\n  protected start_x: number;\n  protected clef: string;\n  protected endClef?: string;\n\n  protected x: number;\n  protected y: number;\n  protected width: number;\n  // Initialized by the constructor via this.resetLines().\n  protected height: number = 0;\n\n  protected formatted: boolean;\n  protected end_x: number;\n  protected measure: number;\n  protected bounds: Bounds;\n  protected readonly modifiers: StaveModifier[];\n\n  protected defaultLedgerLineStyle: ElementStyle;\n\n  // This is the sum of the padding that normally goes on left + right of a stave during\n  // drawing. Used to size staves correctly with content width.\n  static get defaultPadding(): number {\n    const musicFont = Tables.currentMusicFont();\n    return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n  }\n\n  // Right padding, used by system if startX is already determined.\n  static get rightPadding(): number {\n    const musicFont = Tables.currentMusicFont();\n    return musicFont.lookupMetric('stave.endPaddingMax');\n  }\n\n  constructor(x: number, y: number, width: number, options?: StaveOptions) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.endClef = undefined;\n    this.resetFont();\n\n    this.options = {\n      vertical_bar_width: 10, // Width around vertical bar end-marker\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true, // draw vertical bar on left\n      right_bar: true, // draw vertical bar on right\n      spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, // in pixels\n      space_above_staff_ln: 4, // in staff lines\n      space_below_staff_ln: 4, // in staff lines\n      top_text_position: 1, // in staff lines\n      bottom_text_position: 4, // in staff lines\n      line_config: [],\n      ...options,\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n\n    this.resetLines();\n\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n  }\n\n  /** Set default style for ledger lines. */\n  setDefaultLedgerLineStyle(style: ElementStyle): void {\n    this.defaultLedgerLineStyle = style;\n  }\n\n  /** Get default style for ledger lines. */\n  getDefaultLedgerLineStyle(): ElementStyle {\n    return { ...this.getStyle(), ...this.defaultLedgerLineStyle };\n  }\n\n  space(spacing: number): number {\n    return this.options.spacing_between_lines_px * spacing;\n  }\n\n  resetLines(): void {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  setNoteStartX(x: number): this {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    return this;\n  }\n\n  getNoteStartX(): number {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX(): number {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n\n  getTieStartX(): number {\n    return this.start_x;\n  }\n\n  getTieEndX(): number {\n    return this.end_x;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getNumLines(): number {\n    return this.options.num_lines;\n  }\n\n  setNumLines(n: number): this {\n    this.options.num_lines = n;\n    this.resetLines();\n    return this;\n  }\n\n  setY(y: number): this {\n    this.y = y;\n    return this;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getTopLineTopY(): number {\n    return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n  }\n\n  getBottomLineBottomY(): number {\n    return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n  }\n\n  setX(x: number): this {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      mod.setX(mod.getX() + shift);\n    }\n    return this;\n  }\n\n  setWidth(width: number): this {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getStyle(): ElementStyle {\n    return {\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: Tables.STAVE_LINE_THICKNESS,\n      ...super.getStyle(),\n    };\n  }\n\n  /**\n   * Set the measure number of this Stave.\n   */\n  setMeasure(measure: number): this {\n    this.measure = measure;\n    return this;\n  }\n\n  /**\n   * Return the measure number of this Stave.\n   */\n  getMeasure(): number {\n    return this.measure;\n  }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index: number = 0): number {\n    if (typeof index !== 'number') {\n      throw new RuntimeError('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n      return 0;\n    }\n\n    // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n    if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0] as Barline;\n    if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  /** Coda & Segno Symbol functions */\n  setRepetitionType(type: number, yShift: number = 0): this {\n    this.modifiers.push(new Repetition(type, this.x, yShift));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type: number, number_t: string, y: number): this {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section: string, y: number, xOffset = 0, fontSize?: number, drawRect = true) {\n    const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n    if (fontSize) staveSection.setFontSize(fontSize);\n    this.modifiers.push(staveSection);\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo: StaveTempoOptions, y: number): this {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(\n    text: string,\n    position: number,\n    options: {\n      shift_x?: number;\n      shift_y?: number;\n      justification?: number;\n    } = {}\n  ): this {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  getSpacingBetweenLines(): number {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox(): BoundingBox {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY(): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n\n    return score_bottom;\n  }\n\n  getBottomLineY(): number {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns\n  /** @returns the y for the *center* of a staff line */\n  getYForLine(line: number): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + line * spacing + headroom * spacing;\n\n    return y;\n  }\n\n  getLineForY(y: number): number {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return (y - this.y) / spacing - headroom;\n  }\n\n  getYForTopText(line: number = 0): number {\n    return this.getYForLine(-line - this.options.top_text_position);\n  }\n\n  getYForBottomText(line: number = 0): number {\n    return this.getYForLine(this.options.bottom_text_position + line);\n  }\n\n  getYForNote(line: number): number {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return this.y + headroom * spacing + 5 * spacing - line * spacing;\n  }\n\n  getYForGlyphs(): number {\n    return this.getYForLine(3);\n  }\n\n  // This method adds a stave modifier to the stave. Note that the first two\n  // modifiers (BarLines) are automatically added upon construction.\n  addModifier(modifier: StaveModifier, position?: number): this {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier: StaveModifier): this {\n    this.addModifier(modifier, StaveModifierPosition.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type: number | BarlineType): this {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      (this.modifiers[0] as Barline).setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type: number | BarlineType): this {\n    // Repeat end not valid at end of stave\n    if (type !== BarlineType.REPEAT_BEGIN) {\n      (this.modifiers[1] as Barline).setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n  /**\n   * treat the stave as if the clef is clefSpec, but don't display the clef\n   * @param clefSpec \n   */\n  setClefLines(clefSpec: string) {\n    this.clef = clefSpec;\n    return this;\n  }\n  setClef(clefSpec: string, size?: string, annotation?: string, position?: number): this {\n    if (position === undefined) {\n      position = StaveModifierPosition.BEGIN;\n    }\n\n    if (position === StaveModifierPosition.END) {\n      this.endClef = clefSpec;\n    } else {\n      this.clef = clefSpec;\n    }\n\n    const clefs = this.getModifiers(position, Clef.CATEGORY) as Clef[];\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  getClef(): string {\n    return this.clef;\n  }\n\n  setEndClef(clefSpec: string, size?: string, annotation?: string): this {\n    this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n    return this;\n  }\n\n  getEndClef(): string | undefined {\n    return this.endClef;\n  }\n\n  setKeySignature(keySpec: string, cancelKeySpec?: string, position?: number): this {\n    if (position === undefined) {\n      position = StaveModifierPosition.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY) as KeySignature[];\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec: string, cancelKeySpec?: string): this {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec: string, customPadding?: number, position?: number): this {\n    if (position === undefined) {\n      position = StaveModifierPosition.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY) as TimeSignature[];\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec: string, customPadding?: number): this {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n    return this;\n  }\n\n  /**\n   * Add a key signature to the stave.\n   *\n   * Example:\n   * `stave.addKeySignature('Db');`\n   * @param keySpec new key specification `[A-G][b|#]?`\n   * @param cancelKeySpec\n   * @param position\n   * @returns\n   */\n  addKeySignature(keySpec: string, cancelKeySpec?: string, position?: number): this {\n    if (position === undefined) {\n      position = StaveModifierPosition.BEGIN;\n    }\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n    return this;\n  }\n\n  /**\n   * Add a clef to the stave.\n   *\n   * Example:\n   *\n   * stave.addClef('treble')\n   * @param clef clef (treble|bass|...) see {@link Clef.types}\n   * @param size\n   * @param annotation\n   * @param position\n   * @returns\n   */\n  addClef(clef: string, size?: string, annotation?: string, position?: number): this {\n    if (position === undefined || position === StaveModifierPosition.BEGIN) {\n      this.clef = clef;\n    } else if (position === StaveModifierPosition.END) {\n      this.endClef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef: string, size?: string, annotation?: string): this {\n    this.addClef(clef, size, annotation, StaveModifierPosition.END);\n    return this;\n  }\n\n  /**\n   * Add a time signature to the stave\n   *\n   * Example:\n   *\n   * `stave.addTimeSignature('4/4');`\n   * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n   * @param customPadding\n   * @param position\n   * @returns\n   */\n  addTimeSignature(timeSpec: string, customPadding?: number, position?: number): this {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec: string, customPadding?: number): this {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph(): this {\n    this.addClef('treble');\n    return this;\n  }\n\n  /**\n   * @param position\n   * @param category\n   * @returns array of StaveModifiers that match the provided position and category.\n   */\n  getModifiers(position?: number, category?: string): StaveModifier[] {\n    const noPosition = position === undefined;\n    const noCategory = category === undefined;\n    if (noPosition && noCategory) {\n      return this.modifiers;\n    } else if (noPosition) {\n      // A category was provided.\n      return this.modifiers.filter((m: StaveModifier) => category === m.getCategory());\n    } else if (noCategory) {\n      // A position was provided.\n      return this.modifiers.filter((m: StaveModifier) => position === m.getPosition());\n    } else {\n      // Both position and category were provided!\n      return this.modifiers.filter((m: StaveModifier) => position === m.getPosition() && category === m.getCategory());\n    }\n  }\n\n  /**\n   * Use the modifier's `getCategory()` as a key for the `order` array.\n   * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n   */\n  sortByCategory(items: StaveModifier[], order: Record<string, number>): void {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format(): void {\n    const begBarline = this.modifiers[0] as Barline;\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifierPosition.END);\n\n    this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n    this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n\n    if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    const widths = {\n      left: 0,\n      right: 0,\n      paddingRight: 0,\n      paddingLeft: 0,\n    };\n\n    let lastBarlineIdx = 0;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n\n      widths.right = 0;\n      widths.left = 0;\n      widths.paddingRight = 0;\n      widths.paddingLeft = 0;\n      const layoutMetrics = modifier.getLayoutMetrics();\n\n      if (layoutMetrics) {\n        if (i !== 0) {\n          widths.right = layoutMetrics.xMax || 0;\n          widths.paddingRight = layoutMetrics.paddingRight || 0;\n        }\n        widths.left = -layoutMetrics.xMin || 0;\n        widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n\n        if (i === endModifiers.length - 1) {\n          widths.paddingLeft = 0;\n        }\n      } else {\n        widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n        if (i !== 0) {\n          widths.right = modifier.getWidth();\n        }\n        if (i === 0) {\n          widths.left = modifier.getWidth();\n        }\n      }\n      x -= widths.paddingRight;\n      x -= widths.right;\n\n      modifier.setX(x);\n\n      x -= widths.left;\n      x -= widths.paddingLeft;\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw(): this {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    this.applyStyle();\n    ctx.openGroup('stave', this.getAttribute('id'));\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      if (this.options.line_config[line].visible) {\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + width, y);\n        ctx.stroke();\n      }\n    }\n\n    ctx.closeGroup();\n    this.restoreStyle();\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      // Only draw modifier if it has a draw function\n      if (typeof modifier.draw === 'function') {\n        modifier.applyStyle(ctx);\n        modifier.draw(this, this.getModifierXShift(i));\n        modifier.restoreStyle(ctx);\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      ctx.save();\n      ctx.setFont(this.textFont);\n      const textWidth = ctx.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n      ctx.restore();\n    }\n    return this;\n  }\n\n  getVerticalBarWidth(): number {\n    return this.options.vertical_bar_width;\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines(): StaveLineConfig[] {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number: number, line_config: StaveLineConfig): this {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new RuntimeError(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n    }\n\n    if (typeof line_config.visible !== 'boolean') {\n      throw new RuntimeError(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration: StaveLineConfig[]): this {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new RuntimeError(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    // eslint-disable-next-line\n    for (const line_config in lines_configuration) {\n      // Allow '{}' to be used if the caller just wants the default for a particular node.\n      if (lines_configuration[line_config].visible == undefined) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      this.options.line_config[line_config] = {\n        ...this.options.line_config[line_config],\n        ...lines_configuration[line_config],\n      };\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n\n  static formatBegModifiers(staves: Stave[]): void {\n    const adjustCategoryStartX = (category: Category) => {\n      let minStartX = 0;\n      // Calculate min start X for the category\n      staves.forEach((stave) => {\n        const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n        // Consider only the first instance\n        if (modifiers.length > 0 && modifiers[0].getX() > minStartX) minStartX = modifiers[0].getX();\n      });\n      let adjustX = 0;\n      staves.forEach((stave) => {\n        adjustX = 0;\n        const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n        // Calculate adjustement required for the stave\n        modifiers.forEach((modifier) => {\n          if (minStartX - modifier.getX() > adjustX) adjustX = minStartX - modifier.getX();\n        });\n        const allModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        let bAdjust = false;\n        // Apply adjustment to all the modifiers in and beyond the category\n        allModifiers.forEach((modifier) => {\n          if (modifier.getCategory() === category) bAdjust = true;\n          if (bAdjust && adjustX > 0) modifier.setX(modifier.getX() + adjustX);\n        });\n        // Apply adjustment also to note start.\n        stave.setNoteStartX(stave.getNoteStartX() + adjustX);\n      });\n    };\n\n    // Make sure that staves are formatted\n    staves.forEach((stave) => {\n      if (!stave.formatted) stave.format();\n    });\n    // Align Clefs\n    adjustCategoryStartX(Category.Clef);\n    // Align key signatures\n    adjustCategoryStartX(Category.KeySignature);\n    // Align time signatures\n    adjustCategoryStartX(Category.TimeSignature);\n\n    let maxX = 0;\n    // align note start\n    staves.forEach((stave) => {\n      if (stave.getNoteStartX() > maxX) maxX = stave.getNoteStartX();\n    });\n    staves.forEach((stave) => {\n      stave.setNoteStartX(maxX);\n    });\n\n    maxX = 0;\n    // align REPEAT_BEGIN\n    staves.forEach((stave) => {\n      const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n      modifiers.forEach((modifier) => {\n        if ((modifier as Barline).getType() == BarlineType.REPEAT_BEGIN)\n          if (modifier.getX() > maxX) maxX = modifier.getX();\n      });\n    });\n    staves.forEach((stave) => {\n      const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n      modifiers.forEach((modifier) => {\n        if ((modifier as Barline).getType() == BarlineType.REPEAT_BEGIN) modifier.setX(maxX);\n      });\n    });\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Element } from './element';\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { RenderContext } from './rendercontext';\nimport { Stave } from './stave';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nfunction drawBoldDoubleLine(ctx: RenderContext, type: number, topX: number, topY: number, botY: number) {\n  if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\n/**\n * see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n */\nexport type StaveConnectorType =\n  | 'singleRight'\n  | 'singleLeft'\n  | 'single'\n  | 'double'\n  | 'brace'\n  | 'bracket'\n  | 'boldDoubleLeft'\n  | 'boldDoubleRight'\n  | 'thinDouble'\n  | 'none'\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8;\n\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n  static get CATEGORY(): string {\n    return Category.StaveConnector;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n  };\n\n  /**\n   * SINGLE_LEFT and SINGLE are the same value for compatibility\n   * with older versions of vexflow which didn't have right sided\n   * stave connectors.\n   */\n  static readonly type: Record<string, Exclude<StaveConnectorType, string>> = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n  } as const;\n\n  /**\n   * Connector type:\n   * * \"singleRight\"\n   * * \"singleLeft\"\n   * * \"single\"\n   * * \"double\"\n   * * \"brace\"\n   * * \"bracket\"\n   * * \"boldDoubleLeft\"\n   * * \"boldDoubleRight\"\n   * * \"thinDouble\"\n   * * \"none\"\n   */\n  static readonly typeString: Record<Exclude<StaveConnectorType, number>, Exclude<StaveConnectorType, string>> = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n  } as const;\n\n  protected width: number;\n  protected texts: {\n    content: string;\n    options: { shift_x: number; shift_y: number };\n  }[];\n\n  protected type: typeof StaveConnector['type'][keyof typeof StaveConnector['type']];\n\n  readonly top_stave: Stave;\n  readonly bottom_stave: Stave;\n  readonly thickness: number;\n\n  protected x_shift: number;\n\n  constructor(top_stave: Stave, bottom_stave: Stave) {\n    super();\n\n    this.thickness = Tables.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.resetFont();\n\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  /**\n   * Set type.\n   * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n   */\n  setType(type: StaveConnectorType): this {\n    const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n\n    // Be certain that the type is a valid type:\n    if (Object.values(StaveConnector.type).includes(newType)) {\n      this.type = newType;\n    }\n\n    return this;\n  }\n\n  /**\n   * Get type.\n   * @returns number {@link StaveConnector.type}\n   */\n  getType(): number {\n    return this.type;\n  }\n\n  /** Set optional associated Text. */\n  setText(text: string, options: { shift_x?: number; shift_y?: number } = {}): this {\n    this.texts.push({\n      content: text,\n      options: {\n        shift_x: 0,\n        shift_y: 0,\n        ...options,\n      },\n    });\n    return this;\n  }\n\n  setXShift(x_shift: number): this {\n    if (typeof x_shift !== 'number') {\n      throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  getXShift(): number {\n    return this.x_shift;\n  }\n\n  /** Render connector and associated text. */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector =\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE;\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.getWidth();\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= this.width + 2;\n        topY -= this.thickness;\n        attachment_height += 0.5;\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - 0.9 * width;\n        const cpy1 = y1 + 0.2 * attachment_height;\n        const cpx2 = x1 + 1.1 * width;\n        const cpy2 = y2 - 0.135 * attachment_height;\n        const cpx3 = cpx2;\n        const cpy3 = y2 + 0.135 * attachment_height;\n        const cpx4 = cpx1;\n        const cpy4 = y3 - 0.2 * attachment_height;\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + 0.4 * width;\n        const cpy6 = y2 + 0.135 * attachment_height;\n        const cpx7 = cpx6;\n        const cpy7 = y2 - 0.135 * attachment_height;\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      }\n      case StaveConnector.type.BRACKET:\n        topY -= 6;\n        botY += 6;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n        Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n        topX -= this.width + 2;\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        attachment_height -= this.thickness;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.setLineWidth(2);\n    ctx.setFont(this.textFont);\n\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Beam } from './beam';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { RenderContext } from './rendercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { Tickable } from './tickable';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError, sumArray } from './util';\nimport { Voice } from './voice';\n\ninterface Distance {\n  maxNegativeShiftPx: number;\n  expectedDistance: number;\n  fromTickable?: Tickable;\n  errorPx?: number;\n  fromTickablePx?: number;\n}\n\nexport interface FormatterOptions {\n  /** Defaults to Tables.SOFTMAX_FACTOR. */\n  softmaxFactor?: number;\n\n  /** Defaults to `false`. */\n  globalSoftmax?: boolean;\n\n  /** Defaults to 5. */\n  maxIterations?: number;\n}\n\nexport interface FormatParams {\n  align_rests?: boolean;\n  stave?: Stave;\n  context?: RenderContext;\n  auto_beam?: boolean;\n}\n\nexport interface AlignmentContexts<T> {\n  list: number[];\n  map: Record<number, T>;\n  array: T[];\n  resolutionMultiplier: number;\n}\n\nexport interface AlignmentModifierContexts {\n  map: Map<Stave | undefined, Record<number, ModifierContext>>;\n  array: ModifierContext[];\n  resolutionMultiplier: number;\n}\n\ntype addToContextFn<T> = (tickable: Tickable, context: T, voiceIndex: number) => void;\ntype makeContextFn<T> = (tick?: { tickID: number }) => T;\n\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts<T>(\n  voices: Voice[],\n  makeContext: makeContextFn<T>,\n  addToContext: addToContextFn<T>\n): AlignmentContexts<T> {\n  if (voices.length == 0)\n    return {\n      map: {},\n      array: [],\n      list: [],\n      resolutionMultiplier: 0,\n    };\n\n  // Initialize tick maps.\n  const tickToContextMap: Record<number, T> = {};\n  const tickList: number[] = [];\n  const contexts: T[] = [];\n  const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach((voice, voiceIndex) => {\n    // Use resolution multiplier as denominator so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach((tickable) => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = makeContext({ tickID: integerTicks });\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n        // Maintain a list of unique integerTicks.\n        tickList.push(integerTicks);\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: tickList.sort((a, b) => a - b),\n    resolutionMultiplier,\n  };\n}\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Formatter.DEBUG) log('Vex.Flow.Formatter', args);\n}\n\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(\n  notes: Tickable[],\n  currRestLine: number,\n  currNoteIndex: number,\n  compare: boolean\n): number {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = currRestLine;\n\n  // Start with the next note and keep going until we find a valid non-rest note group.\n  for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n    const note = notes[noteIndex];\n    if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && currRestLine !== nextRestLine) {\n    const top = Math.max(currRestLine, nextRestLine);\n    const bot = Math.min(currRestLine, nextRestLine);\n    nextRestLine = midLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n  // To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\n  static DEBUG: boolean = false;\n  protected hasMinTotalWidth: boolean;\n  protected minTotalWidth: number;\n  protected contextGaps: {\n    total: number;\n    gaps: { x1: number; x2: number }[];\n  };\n  protected justifyWidth: number;\n  protected totalCost: number;\n  protected totalShift: number;\n  protected tickContexts: AlignmentContexts<TickContext>;\n  protected formatterOptions: Required<FormatterOptions>;\n  protected modifierContexts: AlignmentModifierContexts[];\n  protected voices: Voice[];\n  protected lossHistory: number[];\n  protected durationStats: Record<string, { mean: number; count: number }>;\n\n  /**\n   * Helper function to layout \"notes\" one after the other without\n   * regard for proportions. Useful for tests and debugging.\n   */\n  static SimpleFormat(notes: Tickable[], x = 0, { paddingBetween = 10 } = {}): void {\n    notes.reduce((accumulator, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const metrics = tick.getMetrics();\n      tick.setX(accumulator + metrics.totalLeftPx);\n\n      return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n    }, x);\n  }\n\n  /** Helper function to plot formatter debug info. */\n  static plotDebugging(\n    ctx: RenderContext,\n    formatter: Formatter,\n    xPos: number,\n    y1: number,\n    y2: number,\n    options?: { stavePadding: number }\n  ): void {\n    options = {\n      stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding'),\n      ...options,\n    };\n\n    const x = xPos + options.stavePadding;\n    const contextGaps = formatter.contextGaps;\n\n    function stroke(x1: number, x2: number, color: string) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont(Font.SANS_SERIF, 8);\n\n    contextGaps.gaps.forEach((gap) => {\n      stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n      ctx.setFillStyle('green');\n      ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n    });\n\n    ctx.setFillStyle('red');\n    ctx.fillText(\n      `Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(\n        2\n      )} Gap: ${contextGaps.total.toFixed(2)}`,\n      x - 20,\n      y2 + 27\n    );\n    ctx.restore();\n  }\n\n  /**\n   * Helper function to format and draw a single voice. Returns a bounding\n   * box for the notation.\n   * @param ctx  the rendering context\n   * @param stave the stave to which to draw (`Stave` or `TabStave`)\n   * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n   * @param params one of below:\n   *    * Setting `autobeam` only `(context, stave, notes, true)` or\n   *      `(ctx, stave, notes, {autobeam: true})`\n   *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n   *    * Setting both a struct is needed `(context, stave, notes, {\n   *      autobeam: true, align_rests: true})`\n   *    * `autobeam` automatically generates beams for the notes.\n   *    * `align_rests` aligns rests with nearby notes.\n   */\n  static FormatAndDraw(\n    ctx: RenderContext,\n    stave: Stave,\n    notes: StemmableNote[],\n    params?: FormatParams | boolean\n  ): BoundingBox | undefined {\n    let options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      options = { ...options, ...params };\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice]) // , { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach((beam) => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  /**\n   * Helper function to format and draw aligned tab and stave notes in two\n   * separate staves.\n   * @param ctx the rendering context\n   * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n   * @param stave a `Stave` instance on which to render `Note`s.\n   * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n   * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n   * @param autobeam automatically generate beams.\n   * @param params a configuration object:\n   *    * `autobeam` automatically generates beams for the notes.\n   *    * `align_rests` aligns rests with nearby notes.\n   */\n  static FormatAndDrawTab(\n    ctx: RenderContext,\n    tabstave: TabStave,\n    stave: Stave,\n    tabnotes: TabNote[],\n    notes: Tickable[],\n    autobeam: boolean,\n    params: FormatParams\n  ): void {\n    let opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      opts = { ...opts, ...params };\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n\n    // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach((beam) => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  /**\n   * Automatically set the vertical position of rests based on previous/next note positions.\n   * @param tickables an array of Tickables.\n   * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n   * @param alignTuplets If `false`, ignores tuplets.\n   */\n  static AlignRestsToNotes(tickables: Tickable[], alignAllNotes: boolean, alignTuplets?: boolean): void {\n    tickables.forEach((currTickable: Tickable, index: number) => {\n      if (isStaveNote(currTickable) && currTickable.isRest()) {\n        if (currTickable.getTuplet() && !alignTuplets) {\n          return;\n        }\n\n        // If activated rests not on default can be rendered as specified.\n        const position = currTickable.getGlyphProps().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') {\n          return;\n        }\n\n        if (alignAllNotes || currTickable.getBeam()) {\n          // Align rests with previous/next notes.\n          const props = currTickable.getKeyProps()[0];\n          if (index === 0) {\n            props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n          } else if (index > 0 && index < tickables.length) {\n            // If previous tickable is a rest, use its line number.\n            const prevTickable = tickables[index - 1];\n            if (isStaveNote(prevTickable)) {\n              if (prevTickable.isRest()) {\n                props.line = prevTickable.getKeyProps()[0].line;\n              } else {\n                const restLine = prevTickable.getLineForRest();\n                // Get the rest line for next valid non-rest note group.\n                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n              }\n            }\n          }\n          currTickable.setKeyLine(0, props.line);\n        }\n      }\n    });\n  }\n\n  constructor(options?: FormatterOptions) {\n    this.formatterOptions = {\n      globalSoftmax: false,\n      softmaxFactor: Tables.SOFTMAX_FACTOR,\n      maxIterations: 5,\n      ...options,\n    };\n    this.justifyWidth = 0;\n    this.totalCost = 0;\n    this.totalShift = 0;\n    this.durationStats = {};\n\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = {\n      map: {},\n      array: [],\n      list: [],\n      resolutionMultiplier: 0,\n    };\n\n    this.modifierContexts = [];\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n    this.lossHistory = [];\n  }\n\n  /**\n   * Find all the rests in each of the `voices` and align them to neighboring notes.\n   *\n   * @param voices\n   * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n   */\n  alignRests(voices: Voice[], alignAllNotes: boolean): void {\n    if (!voices || !voices.length) {\n      throw new RuntimeError('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  /**\n   * Estimate the width required to render 'voices'.  This is done by:\n   * 1. Sum the widths of all the tick contexts\n   * 2. Estimate the padding.\n   * The latter is done by calculating the padding 3 different ways, and taking the\n   * greatest value:\n   * 1. the padding required for unaligned notes in different voices\n   * 2. the padding based on the stddev of the tickable widths\n   * 3. the padding based on the stddev of the tickable durations.\n   *\n   * The last 2 quantities estimate a 'width entropy', where notes might need more\n   * room than the proportional formatting gives them.  A measure of all same duration\n   * and width will need no extra padding, and all these quantities will be\n   * zero in that case.\n   *\n   * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n   *\n   * @param voices the voices that contain the notes\n   * @returns the estimated width in pixels\n   */\n  preCalculateMinTotalWidth(voices: Voice[]): number {\n    const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n    // Calculate additional padding based on 3 methods:\n    // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n    let unalignedCtxCount = 0;\n    let wsum = 0;\n    let dsum = 0;\n    const widths: number[] = [];\n    const durations: number[] = [];\n\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts.\n    if (!voices) {\n      throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n    }\n\n    this.createTickContexts(voices);\n\n    // eslint-disable-next-line\n    const { list: contextList, map: contextMap } = this.tickContexts!;\n    this.minTotalWidth = 0;\n\n    // Go through each tick context and calculate total width,\n    // and also accumulate values used in padding hints\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      context.preFormat();\n      // If this TC doesn't have all the voices on it, it's unaligned.\n      // so increment the unaligned padding accumulator\n      if (context.getTickables().length < voices.length) {\n        unalignedCtxCount += 1;\n      }\n      // Calculate the 'width entropy' over all the Tickables.\n      context.getTickables().forEach((t: Tickable) => {\n        wsum += t.getMetrics().width;\n        dsum += t.getTicks().value();\n        widths.push(t.getMetrics().width);\n        durations.push(t.getTicks().value());\n      });\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n    });\n\n    this.hasMinTotalWidth = true;\n    // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n    const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n    const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n    const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n\n    const davg = dsum / durations.length;\n    const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n    const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n\n    // Find max of 3 methods pad the width with that\n    const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n    const unalignedPad = unalignedPadding * unalignedCtxCount;\n\n    return this.minTotalWidth + Math.max(unalignedPad, padmax);\n  }\n\n  /**\n   * Get minimum width required to render all voices. Either `format` or\n   * `preCalculateMinTotalWidth` must be called before this method.\n   */\n  getMinTotalWidth(): number {\n    if (!this.hasMinTotalWidth) {\n      throw new RuntimeError(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  /** Calculate the resolution multiplier for `voices`. */\n  static getResolutionMultiplier(voices: Voice[]): number {\n    if (!voices || !voices.length) {\n      throw new RuntimeError('BadArgument', 'No voices to format');\n    }\n    const totalTicks = voices[0].getTotalTicks();\n    const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n      if (!voice.getTotalTicks().equals(totalTicks)) {\n        throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n      }\n\n      if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n        throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n      }\n\n      return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n    }, 1);\n    return resolutionMultiplier;\n  }\n\n  /** Create a `ModifierContext` for each tick in `voices`. */\n  createModifierContexts(voices: Voice[]) {\n    if (voices.length == 0) return;\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n\n    // Initialize tick maps.\n    const tickToContextMap: Map<Stave | undefined, Record<number, ModifierContext>> = new Map();\n    const contexts: ModifierContext[] = [];\n\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice) => {\n      // Use resolution multiplier as denominator so that no additional expansion\n      // of fractional tick values is needed.\n      const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n      voice.getTickables().forEach((tickable) => {\n        const integerTicks = ticksUsed.numerator;\n        let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n\n        // If we have no tick context for this tick, create one.\n        if (!staveTickToContextMap) {\n          tickToContextMap.set(tickable.getStave(), {});\n          staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n        }\n        if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n          const newContext = new ModifierContext();\n          contexts.push(newContext);\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          staveTickToContextMap![integerTicks] = newContext;\n        }\n\n        // Add this tickable to the TickContext.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tickable.addToModifierContext(staveTickToContextMap![integerTicks]);\n        ticksUsed.add(tickable.getTicks());\n      });\n    });\n\n    this.modifierContexts.push({\n      map: tickToContextMap,\n      array: contexts,\n      resolutionMultiplier,\n    });\n  }\n\n  /**\n   * Create a `TickContext` for each tick in `voices`. Also calculate the\n   * total number of ticks in voices.\n   */\n  createTickContexts(voices: Voice[]): AlignmentContexts<TickContext> {\n    const fn: addToContextFn<TickContext> = (tickable: Tickable, context: TickContext, voiceIndex: number) =>\n      context.addTickable(tickable, voiceIndex);\n    const contexts = createContexts(voices, (tick?: { tickID: number }) => new TickContext(tick), fn);\n    this.tickContexts = contexts;\n    const contextArray = this.tickContexts.array;\n\n    contextArray.forEach((context) => {\n      context.tContexts = contextArray;\n    });\n    return contexts;\n  }\n\n  /**\n   * Get the AlignmentContexts of TickContexts that were created by createTickContexts.\n   * Returns undefined if createTickContexts has not yet been run.\n   */\n  getTickContexts(): AlignmentContexts<TickContext> | undefined {\n    return this.tickContexts;\n  }\n\n  /**\n   * This is the core formatter logic. Format voices and justify them\n   * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n   * that can't retrieve widths without a canvas. This method sets the `x` positions\n   * of all the tickables/notes in the formatter.\n   */\n  preFormat(justifyWidth = 0, renderingContext?: RenderContext, voicesParam?: Voice[], stave?: Stave): number {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    if (!contexts) {\n      throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n    }\n\n    const { list: contextList, map: contextMap } = contexts;\n\n    // Reset loss history for evaluator.\n    this.lossHistory = [];\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voicesParam && stave) {\n      voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    this.minTotalWidth = 0;\n    let totalTicks = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const maxTicks = context.getMaxTicks().value();\n      totalTicks += maxTicks;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.totalLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.totalLeftPx;\n    });\n\n    // Use softmax based on all notes across all staves. (options.globalSoftmax)\n    const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n\n    const exp = (tick: number) => softmaxFactor ** (contextMap[tick].getMaxTicks().value() / totalTicks);\n    const expTicksUsed = sumArray(contextList.map(exp));\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return this.evaluate();\n\n    // Start justification. Subtract the right extra pixels of the final context because the formatter\n    // justifies based on the context's X position, which is the left-most part of the note head.\n    const firstContext = contextMap[contextList[0]];\n    const lastContext = contextMap[contextList[contextList.length - 1]];\n\n    // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n    // the softmax of the ticks.\n    function calculateIdealDistances(adjustedJustifyWidth: number): Distance[] {\n      const distances: Distance[] = contextList.map((tick: number, i: number) => {\n        const context: TickContext = contextMap[tick];\n        const voices = context.getTickablesByVoice();\n        let backTickable: Tickable | undefined;\n        if (i > 0) {\n          const prevContext: TickContext = contextMap[contextList[i - 1]];\n          // Go through each tickable and search backwards for another tickable\n          // in the same voice. If found, use that duration (ticks) to calculate\n          // the expected distance.\n          for (let j = i - 1; j >= 0; j--) {\n            const backTick: TickContext = contextMap[contextList[j]];\n            const backVoices = backTick.getTickablesByVoice();\n\n            // Look for matching voices between tick contexts.\n            const matchingVoices: string[] = [];\n            Object.keys(voices).forEach((v) => {\n              if (backVoices[v]) {\n                matchingVoices.push(v);\n              }\n            });\n\n            if (matchingVoices.length > 0) {\n              // Found matching voices, get largest duration\n              let maxTicks = 0;\n              let maxNegativeShiftPx = Infinity;\n              let expectedDistance = 0;\n\n              matchingVoices.forEach((v) => {\n                const ticks = backVoices[v].getTicks().value();\n                if (ticks > maxTicks) {\n                  backTickable = backVoices[v];\n                  maxTicks = ticks;\n                }\n\n                // Calculate the limits of the shift based on modifiers, etc.\n                const thisTickable = voices[v];\n                const insideLeftEdge =\n                  thisTickable.getX() -\n                  (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n\n                const backMetrics = backVoices[v].getMetrics();\n                const insideRightEdge =\n                  backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n\n                // Don't allow shifting if notes in the same voice can collide\n                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n              });\n\n              // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n              // so that two different tick contexts don't align across staves.\n              maxNegativeShiftPx = Math.min(\n                maxNegativeShiftPx,\n                context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05)\n              );\n\n              // Calculate the expected distance of the current context from the last matching tickable. The\n              // distance is scaled down by the softmax for the voice.\n              if (globalSoftmax) {\n                const t = totalTicks;\n                expectedDistance = (softmaxFactor ** (maxTicks / t) / expTicksUsed) * adjustedJustifyWidth;\n              } else if (typeof backTickable !== 'undefined') {\n                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n              }\n              return {\n                expectedDistance,\n                maxNegativeShiftPx,\n                fromTickable: backTickable,\n              };\n            }\n          }\n        }\n\n        return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n      });\n      return distances;\n    }\n\n    function shiftToIdealDistances(idealDistances: Distance[]): number {\n      // Distribute ticks to the contexts based on the calculated distance error.\n      const centerX = adjustedJustifyWidth / 2;\n      let spaceAccum = 0;\n\n      contextList.forEach((tick, index) => {\n        const context = contextMap[tick];\n        if (index > 0) {\n          const contextX = context.getX();\n          const ideal = idealDistances[index];\n          const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n\n          let negativeShiftPx = 0;\n          if (errorPx > 0) {\n            spaceAccum += errorPx;\n          } else if (errorPx < 0) {\n            negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n            spaceAccum += -negativeShiftPx;\n          }\n          context.setX(contextX + spaceAccum);\n        }\n        // Move center aligned tickables to middle\n        context.getCenterAlignedTickables().forEach((tickable: Tickable) => {\n          tickable.setCenterXShift(centerX - context.getX());\n        });\n      });\n\n      return lastContext.getX() - firstContext.getX();\n    }\n\n    const adjustedJustifyWidth =\n      justifyWidth -\n      lastContext.getMetrics().notePx -\n      lastContext.getMetrics().totalRightPx -\n      firstContext.getMetrics().totalLeftPx;\n    const musicFont = Tables.currentMusicFont();\n    const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n    const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n    const leftPadding = musicFont.lookupMetric('stave.padding');\n    let targetWidth = adjustedJustifyWidth;\n    const distances = calculateIdealDistances(targetWidth);\n    let actualWidth = shiftToIdealDistances(distances);\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return 0;\n    const calcMinDistance = (targetWidth: number, distances: Distance[]) => {\n      let mdCalc = targetWidth / 2;\n      if (distances.length > 1) {\n        for (let di = 1; di < distances.length; ++di) {\n          mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n        }\n      }\n      return mdCalc;\n    };\n    const minDistance = calcMinDistance(targetWidth, distances);\n\n    // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n    // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n    // existing visual regression tests.\n    const paddingMaxCalc = (curTargetWidth: number) => {\n      let lastTickablePadding = 0;\n      const lastTickable = lastContext && lastContext.getMaxTickable();\n      if (lastTickable) {\n        const voice = lastTickable.getVoice();\n        // If the number of actual ticks in the measure <> configured ticks, right-justify\n        // because the softmax won't yield the correct value\n        if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n          return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n        }\n        const tickWidth = lastTickable.getWidth();\n        lastTickablePadding =\n          voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n      }\n      return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n    };\n    let paddingMax = paddingMaxCalc(targetWidth);\n    let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n    const maxX = adjustedJustifyWidth - paddingMin;\n\n    let iterations = maxIterations;\n    // Adjust justification width until the right margin is as close as possible to the calculated padding,\n    // without going over\n    while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n      targetWidth -= actualWidth - maxX;\n      paddingMax = paddingMaxCalc(targetWidth);\n      paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n      actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n      iterations--;\n    }\n\n    this.justifyWidth = justifyWidth;\n    return this.evaluate();\n  }\n\n  /** Calculate the total cost of this formatting decision. */\n  evaluate(): number {\n    const contexts = this.tickContexts;\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    contexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = contexts.list[index - 1];\n      const prevContext = contexts.map[prevTick];\n      const context = contexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n      const currMetrics = context.getMetrics();\n\n      // Calculate X position of right edge of previous note\n      const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n      // Calculate X position of left edge of current note\n      const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    this.durationStats = {};\n    const durationStats = this.durationStats;\n\n    function updateStats(duration: string, space: number) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach((voice) => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n        let space = 0;\n\n        if (i < notes.length - 1) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach((voice) => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n\n        metrics.space.mean = durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - metrics.space.mean;\n\n        totalDeviation += metrics.space.deviation ** 2;\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this.totalCost;\n  }\n\n  /**\n   * Run a single iteration of rejustification. At a high level, this method calculates\n   * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n   * attempt to reduce the cost. You can call this method multiple times until it finds\n   * and oscillates around a global minimum.\n   * @param options[alpha] the \"learning rate\" for the formatter. It determines how much of a shift\n   * the formatter should make based on its cost function.\n   */\n  tune(options?: { alpha?: number }): number {\n    const contexts = this.tickContexts;\n    if (!contexts) {\n      return 0;\n    }\n\n    const alpha = options?.alpha ?? 0.5;\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current: TickContext, shift: number, prev?: TickContext, next?: TickContext) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.totalShift = 0;\n    contexts.list.forEach((tick, index, list) => {\n      const context = contexts.map[tick];\n      const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n      const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n\n      move(context, shift, prevContext, nextContext);\n\n      const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      shift *= alpha;\n      this.totalShift += shift;\n    });\n\n    return this.evaluate();\n  }\n\n  /**\n   * This is the top-level call for all formatting logic completed\n   * after `x` *and* `y` values have been computed for the notes\n   * in the voices.\n   */\n  postFormat(): this {\n    this.modifierContexts.forEach((modifierContexts) => {\n      modifierContexts.array.forEach((mc) => mc.postFormat());\n    });\n\n    this.tickContexts.list.forEach((tick) => {\n      this.tickContexts.map[tick].postFormat();\n    });\n\n    return this;\n  }\n\n  /**\n   * Take all `voices` and create `ModifierContext`s out of them. This tells\n   * the formatters that the voices belong on a single stave.\n   */\n  joinVoices(voices: Voice[]): this {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  /**\n   * Align rests in voices, justify the contexts, and position the notes\n   * so voices are aligned and ready to render onto the stave. This method\n   * mutates the `x` positions of all tickables in `voices`.\n   *\n   * Voices are full justified to fit in `justifyWidth` pixels.\n   *\n   * Set `options.context` to the rendering context. Set `options.align_rests`\n   * to true to enable rest alignment.\n   */\n  format(voices: Voice[], justifyWidth?: number, options?: FormatParams): this {\n    const opts = {\n      align_rests: false,\n      ...options,\n    };\n\n    this.voices = voices;\n    const softmaxFactor = this.formatterOptions.softmaxFactor;\n    if (softmaxFactor) {\n      this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n    }\n\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n  formatToStave(voices: Voice[], stave: Stave, optionsParam?: FormatParams): this {\n    const options: FormatParams = { context: stave.getContext(), ...optionsParam };\n\n    // eslint-disable-next-line\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n    L('Formatting voices to width: ', justifyWidth);\n    return this.format(voices, justifyWidth, options);\n  }\n\n  getTickContext(tick: number): TickContext | undefined {\n    return this.tickContexts?.map[tick];\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n\nexport interface TupletOptions {\n  beats_occupied?: number;\n  bracketed?: boolean;\n  location?: number;\n  notes_occupied?: number;\n  num_notes?: number;\n  ratioed?: boolean;\n  y_offset?: number;\n}\n\nexport interface TupletMetrics {\n  noteHeadOffset: number;\n  stemOffset: number;\n  bottomLine: number;\n  topModifierOffset: number;\n}\n\nexport const enum TupletLocation {\n  BOTTOM = -1,\n  TOP = +1,\n}\n\nexport class Tuplet extends Element {\n  static get CATEGORY(): string {\n    return Category.Tuplet;\n  }\n\n  notes: Note[];\n\n  protected options: TupletOptions;\n  protected num_notes: number;\n  protected point: number;\n\n  protected bracketed: boolean;\n  protected y_pos: number;\n  protected x_pos: number;\n  protected width: number;\n\n  // location is initialized by the constructor via setTupletLocation(...).\n  protected location!: number;\n\n  protected notes_occupied: number;\n  protected ratioed: boolean;\n  protected numerator_glyphs: Glyph[] = [];\n  protected denom_glyphs: Glyph[] = [];\n\n  static get LOCATION_TOP(): number {\n    return TupletLocation.TOP;\n  }\n  static get LOCATION_BOTTOM(): number {\n    return TupletLocation.BOTTOM;\n  }\n  static get NESTING_OFFSET(): number {\n    return 15;\n  }\n\n  static get metrics(): TupletMetrics {\n    const tupletMetrics = Tables.currentMusicFont().getMetrics().tuplet;\n\n    if (!tupletMetrics) throw new RuntimeError('BadMetrics', `tuplet missing`);\n    return tupletMetrics;\n  }\n\n  constructor(notes: Note[], options: TupletOptions = {}) {\n    super();\n    if (!notes || !notes.length) {\n      throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = options;\n    this.notes = notes;\n    this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n    if (this.options.bracketed != undefined) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed = notes.some((note) => !note.hasBeam());\n    }\n\n    this.ratioed =\n      this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n    this.point = (Tables.NOTATION_FONT_SCALE * 3) / 5;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n\n    this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach(): void {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach(): void {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed: boolean): this {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed: boolean): this {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n   */\n  setTupletLocation(location: number): this {\n    if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      // eslint-disable-next-line\n      console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n      location = Tuplet.LOCATION_TOP;\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes(): Note[] {\n    return this.notes;\n  }\n\n  getNoteCount(): number {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning(): void {\n    // eslint-disable-next-line\n    console.warn(\n      'beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.',\n      'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.',\n      'The old methods will be removed in VexFlow 5.0.'\n    );\n  }\n\n  getBeatsOccupied(): number {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats: number): void {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied(): number {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes: number): void {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs(): void {\n    this.numerator_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n      n = parseInt((n / 10).toString(), 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n      n = parseInt((n / 10).toString(), 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount(): number {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note: Note, location: number) {\n      return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n    }\n\n    this.notes.forEach((note) => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition(): number {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n\n      // check modifiers above note to see if they will collide with tuplet beam\n      for (let i = 0; i < this.notes.length; ++i) {\n        const note = this.notes[i];\n        let modLines = 0;\n        const mc = note.getModifierContext();\n        if (mc) {\n          modLines = Math.max(modLines, mc.getState().top_text_line);\n        }\n        const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n        if (note.hasStem() || note.isRest()) {\n          const top_y =\n            note.getStemDirection() === Stem.UP\n              ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n              : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n          y_pos = Math.min(top_y, y_pos);\n          if (modLines > 0) {\n            y_pos = Math.min(modY, y_pos);\n          }\n        }\n      }\n    } else {\n      let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n      // check modifiers below note to see if they will collide with tuplet beam\n      this.notes.forEach((nn) => {\n        const mc = nn.getModifierContext();\n        if (mc) {\n          lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n        }\n      });\n      y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n          const bottom_y =\n            this.notes[i].getStemDirection() === Stem.UP\n              ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n              : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n          if (bottom_y > y_pos) {\n            y_pos = bottom_y;\n          }\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0] as StemmableNote;\n    const last_note = this.notes[this.notes.length - 1] as StemmableNote;\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width: number, glyph: Glyph) => width + defined(glyph.getMetrics().width);\n\n    // calculate total width of tuplet notation\n    let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + this.width / 2;\n    const notation_start_x = notation_center_x - width / 2;\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n        ctx.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0),\n          1,\n          this.location * 10\n        );\n        ctx.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n\n    let x_offset = 0;\n    this.numerator_glyphs.forEach((glyph) => {\n      glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n      x_offset += defined(glyph.getMetrics().width);\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      ctx.beginPath();\n      ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n      ctx.beginPath();\n      ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach((glyph) => {\n        glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n        x_offset += defined(glyph.getMetrics().width);\n      });\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Note } from './note';\nimport { RenderContext } from './rendercontext';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Tuplet, TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nimport { Voice } from './voice';\n\nfunction calculateStemDirection(notes: StemmableNote[]) {\n  let lineSum = 0;\n  notes.forEach((note) => {\n    if (note.keyProps) {\n      note.keyProps.forEach((keyProp) => {\n        lineSum += keyProp.line - 3;\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nfunction getStemSlope(firstNote: StemmableNote, lastNote: StemmableNote) {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\n\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n\nexport type PartialBeamDirection = typeof BEAM_LEFT | typeof BEAM_RIGHT | typeof BEAM_BOTH;\n\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n  static get CATEGORY(): string {\n    return Category.Beam;\n  }\n\n  public render_options: {\n    flat_beam_offset?: number;\n    flat_beams: boolean;\n    secondary_break_ticks?: number;\n    show_stemlets: boolean;\n    beam_width: number;\n    max_slope: number;\n    min_slope: number;\n    slope_iterations: number;\n    slope_cost: number;\n    stemlet_extension: number;\n    partial_beam_length: number;\n    min_flat_beam_offset: number;\n  };\n\n  notes: StemmableNote[];\n  postFormatted: boolean;\n  slope: number = 0;\n\n  private readonly stem_direction: number;\n  private readonly ticks: number;\n\n  private y_shift: number = 0;\n  private break_on_indices: number[];\n  private beam_count: number;\n  private unbeamable?: boolean;\n\n  /**\n   * Overrides to default beam directions for secondary-level beams that do not\n   * connect to any other note. See further explanation at\n   * `setPartialBeamSideAt`\n   */\n  private forcedPartialDirections: {\n    [noteIndex: number]: PartialBeamDirection;\n  } = {};\n\n  /** Get the direction of the beam */\n  getStemDirection(): number {\n    return this.stem_direction;\n  }\n\n  /**\n   * Get the default beam groups for a provided time signature.\n   * Attempt to guess if the time signature is not found in table.\n   * Currently this is fairly naive.\n   */\n  static getDefaultBeamGroups(time_sig: string): Fraction[] {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults: { [key: string]: [string] } = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups: string[] = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map((group) => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  /**\n   * A helper function to automatically build basic beams for a voice. For more\n   * complex auto-beaming use `Beam.generateBeams()`.\n   * @param voice the voice to generate the beams for\n   * @param stem_direction a stem direction to apply to the entire voice\n   * @param groups an array of `Fraction` representing beat groupings for the beam\n   */\n  static applyAndGetBeams(voice: Voice, stem_direction?: number, groups?: Fraction[]): Beam[] {\n    return Beam.generateBeams(voice.getTickables() as StemmableNote[], { groups, stem_direction });\n  }\n\n  /**\n   * A helper function to autimatically build beams for a voice with\n   * configuration options.\n   *\n   * Example configuration object:\n   *\n   * ```\n   * config = {\n   *   groups: [new Vex.Flow.Fraction(2, 8)],\n   *   stem_direction: -1,\n   *   beam_rests: true,\n   *   beam_middle_only: true,\n   *   show_stemlets: false\n   * };\n   * ```\n   * @param notes an array of notes to create the beams for\n   * @param config the configuration object\n   * @param config.stem_direction set to apply the same direction to all notes\n   * @param config.beam_rests set to `true` to include rests in the beams\n   * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n   * @param config.show_stemlets set to `true` to draw stemlets for rests\n   * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n   * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n   *\n   */\n  static generateBeams(\n    notes: StemmableNote[],\n    config: {\n      flat_beam_offset?: number;\n      flat_beams?: boolean;\n      secondary_breaks?: string;\n      show_stemlets?: boolean;\n      maintain_stem_directions?: boolean;\n      beam_middle_only?: boolean;\n      beam_rests?: boolean;\n      groups?: Fraction[];\n      stem_direction?: number;\n    } = {}\n  ): Beam[] {\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map((group) => {\n      if (!group.multiply) {\n        throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Tables.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes: StemmableNote[] = notes;\n    let currentTickGroup = 0;\n    let noteGroups: StemmableNote[][] = [];\n    let currentGroup: StemmableNote[] = [];\n\n    function getTotalTicks(vf_notes: Note[]) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup: StemmableNote[] = [];\n      // number of ticks in current group\n      let currentGroupTotalTicks = new Fraction(0, 1);\n      unprocessedNotes.forEach((unprocessedNote) => {\n        nextGroup = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n        if (unbeamable && unprocessedNote.getTuplet()) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            const note = currentGroup.pop();\n            if (note) nextGroup.push(note);\n          }\n          noteGroups.push(currentGroup);\n\n          // We have overflown, so we're going to next tick group. As we might have\n          // overflown by more than 1 group, we need to go forward as many times as\n          // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n          // in current groups as we go forward.\n          do {\n            currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n            nextTickGroup();\n          } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n          currentGroup = nextGroup;\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroupTotalTicks = new Fraction(0, 1);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes beam\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n    function getBeamGroups() {\n      return noteGroups.filter((group) => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach((note) => {\n            if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups: StemmableNote[][] = [];\n      noteGroups.forEach((group) => {\n        let tempGroup: StemmableNote[] = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest =\n            config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach((group) => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group: StemmableNote[]) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group: StemmableNote[], direction: number) {\n      group.forEach((note) => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets: Tuplet[] = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach((group) => {\n        let tuplet: Tuplet;\n        group.forEach((note) => {\n          const noteTuplet = note.getTuplet();\n          if (noteTuplet && tuplet !== noteTuplet) {\n            tuplet = noteTuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams: Beam[] = [];\n    beamedNoteGroups.forEach((group) => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach((tuplet) => {\n      // Set the tuplet location based on the stem direction\n      const direction =\n        (tuplet.notes[0] as StemmableNote).stem_direction === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (!note.hasBeam()) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes: StemmableNote[], auto_stem: boolean = false) {\n    super();\n\n    if (!notes || notes.length === 0) {\n      throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Tables.durationToTicks('4')) {\n      throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = notes[0].getStemDirection();\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n\n    if (auto_stem && isStaveNote(notes[0])) {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && isTabNote(notes[0])) {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  /** Get the notes in this beam. */\n  getNotes(): StemmableNote[] {\n    return this.notes;\n  }\n\n  /** Get the max number of beams in the set of notes. */\n  getBeamCount(): number {\n    const beamCounts = this.notes.map((note) => note.getGlyphProps().beam_count);\n\n    const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n\n    return maxBeamCount;\n  }\n\n  /** Set which note `indices` to break the secondary beam at. */\n  breakSecondaryAt(indices: number[]): this {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  /**\n   * Forces the direction of a partial beam (a secondary-level beam that exists\n   * on one note only of the beam group). This is useful in rhythms such as 6/8\n   * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n   * first sixteenth note can help imply whether the rhythm is to be felt as\n   * three groups of eighth notes (typical) or as two groups of three-sixteenths\n   * (less common):\n   * ```\n   *  ┌───┬──┬──┐      ┌──┬──┬──┐\n   *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n   *  │   │  │  │      │  │  │  │\n   * ```\n   */\n  setPartialBeamSideAt(noteIndex: number, side: PartialBeamDirection) {\n    this.forcedPartialDirections[noteIndex] = side;\n    return this;\n  }\n\n  /**\n   * Restore the default direction of a partial beam (a secondary-level beam\n   * that does not connect to any other notes).\n   */\n  unsetPartialBeamSideAt(noteIndex: number) {\n    delete this.forcedPartialDirections[noteIndex];\n    return this;\n  }\n\n  /** Return the y coordinate for linear function. */\n  getSlopeY(x: number, first_x_px: number, first_y_px: number, slope: number): number {\n    return first_y_px + (x - first_x_px) * slope;\n  }\n\n  /** Calculate the best possible slope for the provided notes. */\n  calculateSlope(): void {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        if (note.hasStem() || note.isRest()) {\n          const adjustedStemTipY =\n            this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n\n          const stemTipY = note.getStemExtents().topY;\n          // beam needs to be shifted up to accommodate note\n          if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n            const diff = Math.abs(stemTipY - adjustedStemTipY);\n            yShiftTemp += diff * -stemDirection;\n            totalStemExtension += diff * i;\n          } else {\n            // beam overshoots note, account for the difference\n            totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n          }\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  /** Calculate a slope and y-shift for flat beams. */\n  calculateFlatSlope(): void {\n    const {\n      notes,\n      stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0; // Store the highest or lowest note here\n    let extremeBeamCount = 0; // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n    const newOffset = extremeY + extremeTest * -stem_direction;\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  /** Return the Beam y offset. */\n  getBeamYToDraw(): number {\n    const firstNote = this.notes[0];\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n    return beamY;\n  }\n\n  /**\n   * Create new stems for the notes in the beam, so that each stem\n   * extends into the beams.\n   */\n  applyStemExtensions(): void {\n    const {\n      notes,\n      slope,\n      y_shift,\n      beam_count,\n      render_options: { show_stemlets, stemlet_extension, beam_width },\n    } = this;\n\n    const firstNote = notes[0];\n    const firstStemTipY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stem = note.getStem();\n      if (stem) {\n        const stemX = note.getStemX();\n        const { topY: stemTipY } = note.getStemExtents();\n        const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n        const preBeamExtension = stem.getExtension();\n        const beamExtension =\n          note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n        // Determine necessary extension for cross-stave notes in the beam group\n        let crossStemExtension = 0;\n        if (note.getStemDirection() !== this.stem_direction) {\n          const beamCount = note.getGlyphProps().beam_count;\n          crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.render_options.beam_width;\n\n          /* This will be required if the partial beams are moved to the note side.\n          if (i > 0 && note.getGlyph().beam_count > 1) {\n            const prevBeamCount = this.notes[i - 1].getGlyph().beam_count;\n            const beamDiff = Math.abs(prevBeamCount - beamCount);\n            if (beamDiff > 0) crossStemExtension -= beamDiff * (this.render_options.beam_width * 1.5);\n          }\n          */\n        }\n\n        stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n        stem.adjustHeightForBeam();\n\n        if (note.isRest() && show_stemlets) {\n          const beamWidth = beam_width;\n          const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n          stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n        }\n      }\n    }\n  }\n\n  /** Return upper level beam direction. */\n  lookupBeamDirection(\n    duration: string,\n    prev_tick: number,\n    tick: number,\n    next_tick: number,\n    noteIndex: number\n  ): PartialBeamDirection {\n    if (duration === '4') {\n      return BEAM_LEFT;\n    }\n\n    const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n    if (forcedBeamDirection) return forcedBeamDirection;\n\n    const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n    const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n    const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n    const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n\n    if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_BOTH;\n    } else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n      return BEAM_LEFT;\n    } else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_RIGHT;\n    }\n\n    return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick, noteIndex);\n  }\n\n  /** Get the x coordinates for the beam lines of specific `duration`. */\n  getBeamLines(duration: string): { start: number; end?: number }[] {\n    const tick_of_duration = Tables.durationToTicks(duration);\n    let beam_started = false;\n\n    type BeamInfo = { start: number; end?: number };\n    const beam_lines: BeamInfo[] = [];\n    let current_beam: BeamInfo | undefined = undefined;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.getTicks().value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n\n      const stem_x = note.getStemX() - Stem.WIDTH / 2;\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const prev_note = this.notes[i - 1];\n      const next_note = this.notes[i + 1];\n      const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n      const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n      const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: undefined };\n          beam_started = true;\n\n          if (beam_alone) {\n            // previous and next beam exists and does not get a beam but current gets it.\n            const prev_tick = prev_note.getIntrinsicTicks();\n            const next_tick = next_note.getIntrinsicTicks();\n            const tick = note.getIntrinsicTicks();\n            const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick, i);\n\n            if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n              current_beam.end = current_beam.start - partial_beam_length;\n            } else {\n              current_beam.end = current_beam.start + partial_beam_length;\n            }\n          } else if (!next_note_gets_beam) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === undefined) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  /** Render the stems for each note. */\n  protected drawStems(ctx: RenderContext): void {\n    this.notes.forEach((note) => {\n      const stem = note.getStem();\n      if (stem) {\n        const stem_x = note.getStemX();\n        stem.setNoteHeadXBounds(stem_x, stem_x);\n        stem.setContext(ctx).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  protected drawBeamLines(ctx: RenderContext): void {\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n    let beamY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        if (lastBeamX) {\n          const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n          ctx.beginPath();\n          ctx.moveTo(startBeamX, startBeamY);\n          ctx.lineTo(startBeamX, startBeamY + beamThickness);\n          ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n          ctx.lineTo(lastBeamX + 1, lastBeamY);\n          ctx.closePath();\n          ctx.fill();\n        } else {\n          throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n        }\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  /** Pre-format the beam. */\n  preFormat(): this {\n    return this;\n  }\n\n  /**\n   * Post-format the beam. This can only be called after\n   * the notes in the beam have both `x` and `y` values. ie: they've\n   * been formatted and have staves.\n   */\n  postFormat(): void {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  /** Render the beam to the canvas context */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems(ctx);\n    this.applyStyle();\n    ctx.openGroup('beam', this.getAttribute('id'));\n    this.drawBeamLines(ctx);\n    ctx.closeGroup();\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\n\nimport { Clef, ClefAnnotatiomType, ClefType } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n  static get CATEGORY(): string {\n    return Category.ClefNote;\n  }\n\n  protected clef: ClefType;\n  protected annotation?: ClefAnnotatiomType;\n  protected type: string;\n  protected size: string;\n\n  constructor(type: string, size?: string, annotation?: string) {\n    super({ duration: 'b' });\n    this.type = type;\n    const clef = new Clef(type, size, annotation);\n    this.clef = clef.clef;\n    this.annotation = clef.annotation;\n    this.size = size === undefined ? 'default' : size;\n    this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clefNote_${this.size}`));\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  /** Set clef type, size and annotation. */\n  setType(type: string, size: string, annotation: string): this {\n    this.type = type;\n    this.size = size;\n    const clef = new Clef(type, size, annotation);\n    this.clef = clef.clef;\n    this.annotation = clef.annotation;\n    this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clefNote_${this.size}`));\n    return this;\n  }\n\n  /** Get associated clef. */\n  getClef(): ClefType {\n    return this.clef;\n  }\n\n  preFormat(): this {\n    this.preFormatted = true;\n    return this;\n  }\n\n  /** Render clef note. */\n  draw(): void {\n    const stave = this.checkStave();\n    const ctx = this.checkContext();\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    Glyph.renderGlyph(ctx, abs_x, stave.getYForLine(this.clef.line), Clef.getPoint(this.size), this.clef.code, {\n      category: `clefNote_${this.size}`,\n    });\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.annotation !== undefined) {\n      const attachment = new Glyph(this.annotation.code, this.annotation.point);\n      attachment.setContext(ctx);\n      attachment.setStave(stave);\n      attachment.setYShift(stave.getYForLine(this.annotation.line) - stave.getYForGlyphs());\n      attachment.setXShift(this.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Note, NoteStruct } from './note';\nimport { RenderContext } from './rendercontext';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n\nexport interface CrescendoParams {\n  reverse: boolean;\n  height: number;\n  y: number;\n  end_x: number;\n  begin_x: number;\n}\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Crescendo.DEBUG) log('Vex.Flow.Crescendo', args);\n}\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx: RenderContext, params: CrescendoParams) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height = params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x, y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x, y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x, y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  static DEBUG: boolean = false;\n\n  /** Crescendo category string. */\n  static get CATEGORY(): string {\n    return Category.Crescendo;\n  }\n\n  protected decrescendo: boolean;\n  protected height: number;\n  protected line: number;\n  protected options = {\n    // Extensions to the length of the crescendo on either side\n    extend_left: 0,\n    extend_right: 0,\n    // Vertical shift\n    y_shift: 0,\n  };\n\n  // Initialize the crescendo's properties\n  constructor(noteStruct: NoteStruct) {\n    super(noteStruct);\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = noteStruct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n  }\n\n  // Set the line to center the element on\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Set the full height at the open end\n  setHeight(height: number): this {\n    this.height = height;\n    return this;\n  }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc: boolean): this {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat(): this {\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the Crescendo object onto the canvas\n  draw(): void {\n    const ctx = this.checkContext();\n    const stave = this.checkStave();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n    const y = stave.getYForLine(this.line + -3) + 1;\n\n    L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n\n    renderHairpin(ctx, {\n      begin_x: begin_x - this.options.extend_left,\n      end_x: end_x + this.options.extend_right,\n      y: y + this.options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Element } from './element';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport interface CurveOptions {\n  /** Two control points for the bezier curves. */\n  cps?: { x: number; y: number }[];\n  thickness?: number;\n  x_shift?: number;\n  y_shift?: number;\n  position?: string | number;\n  position_end?: string | number;\n  invert?: boolean;\n}\n\nexport enum CurvePosition {\n  NEAR_HEAD = 1,\n  NEAR_TOP = 2,\n}\n\nexport class Curve extends Element {\n  static get CATEGORY(): string {\n    return Category.Curve;\n  }\n\n  public render_options: Required<CurveOptions>;\n  protected from: Note;\n  protected to: Note;\n\n  static get Position(): typeof CurvePosition {\n    return CurvePosition;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      nearHead: CurvePosition.NEAR_HEAD,\n      nearTop: CurvePosition.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from: Note, to: Note, options: CurveOptions) {\n    super();\n\n    this.render_options = {\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: CurvePosition.NEAR_HEAD,\n      position_end: CurvePosition.NEAR_HEAD,\n      invert: false,\n      cps: [\n        { x: 0, y: 10 },\n        { x: 0, y: 10 },\n      ],\n      ...options,\n    };\n\n    this.from = from;\n    this.to = to;\n  }\n\n  setNotes(from: Note, to: Note): this {\n    if (!from && !to) {\n      throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial(): boolean {\n    return !this.from || !this.to;\n  }\n\n  renderCurve(params: { last_y: number; last_x: number; first_y: number; first_x: number; direction: number }): void {\n    const ctx = this.checkContext();\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cps = this.render_options.cps;\n    const { x: cp0x, y: cp0y } = cps[0];\n    const { x: cp1x, y: cp1y } = cps[1];\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cp0x,\n      first_y + cp0y * params.direction,\n      last_x - cp_spacing + cp1x,\n      last_y + cp1y * params.direction,\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cp1x,\n      last_y + (cp1y + thickness) * params.direction,\n      first_x + cp_spacing + cp0x,\n      first_y + (cp0y + thickness) * params.direction,\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw(): boolean {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction = 0;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position: string | number) {\n      return typeof position === 'string' ? Curve.PositionString[position] : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === CurvePosition.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === CurvePosition.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === CurvePosition.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      const stave = last_note.checkStave();\n      first_x = stave.getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      const stave = first_note.checkStave();\n      last_x = stave.getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { log, RuntimeError } from './util';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]): void {\n  if (Parser.DEBUG) log('Vex.Flow.Parser', args);\n}\n\nconst NO_ERROR_POS = -1;\n\nexport type Match = string | Match[] | null;\nexport type RuleFunction = () => Rule;\nexport type TriggerFunction = (state?: { matches: Match[] }) => void;\n\nexport interface Rule {\n  // Lexer Rules\n  token?: string; // The token property is a string that is compiled into a RegExp.\n  noSpace?: boolean;\n\n  // Parser Rules\n  expect?: RuleFunction[];\n  zeroOrMore?: boolean;\n  oneOrMore?: boolean;\n  maybe?: boolean;\n  or?: boolean;\n  run?: TriggerFunction;\n}\n\nexport interface Result {\n  success: boolean;\n\n  // Lexer Results\n  pos?: number;\n  incrementPos?: number;\n  matchedString?: string;\n\n  // Parser Results\n  matches?: Match[];\n  numMatches?: number;\n  results?: GroupedResults;\n  errorPos?: number; // Set to NO_ERROR if successful. N if there is an error in the string.\n}\n\n// Represents a mixed array containing Result and/or Result[].\n// The grouping is determined by the structure of the Grammar.\nexport type GroupedResults = (Result | Result[])[];\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r: Result | Result[]): Match {\n  if ('matchedString' in r) return r.matchedString as string; // string\n  if ('results' in r) return flattenMatches(r.results as Result[]);\n  const results = r as Result[];\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches); // nested array\n}\n\nexport interface Grammar {\n  begin(): RuleFunction;\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  static DEBUG: boolean = false;\n\n  protected grammar: Grammar;\n\n  protected line: string; // Use RegExp to extract tokens from this line.\n  protected pos: number;\n  protected errorPos: number;\n\n  // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n  // the EasyScore grammar in easyscore.ts.\n  constructor(grammar: Grammar) {\n    this.grammar = grammar;\n    this.line = '';\n    this.pos = 0;\n    this.errorPos = NO_ERROR_POS;\n  }\n\n  // Parse `line` using current grammar. Returns `{success: true}` if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line: string): Result {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = NO_ERROR_POS;\n    const result = this.expect(this.grammar.begin());\n    result.errorPos = this.errorPos;\n    return result;\n  }\n\n  matchFail(returnPos: number): void {\n    if (this.errorPos === NO_ERROR_POS) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess(): void {\n    this.errorPos = NO_ERROR_POS;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token: string, noSpace: boolean = false): Result {\n    const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return { success: false, pos: this.pos };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  // TODO: expectOne(...) is never called with the `maybe` parameter.\n  expectOne(rule: Rule, maybe: boolean = false): Result {\n    const results: GroupedResults = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = maybe === true || rule.maybe === true;\n\n    // Execute all sub rules in sequence.\n    if (rule.expect) {\n      for (const next of rule.expect) {\n        const localPos = this.pos;\n        const result = this.expect(next);\n\n        // If `rule.or` is set, then return success if any one\n        // of the subrules match, else all subrules must match.\n        if (result.success) {\n          results.push(result);\n          oneMatch = true;\n          if (rule.or) break;\n        } else {\n          allMatches = false;\n          if (!rule.or) {\n            this.pos = localPos;\n            break;\n          }\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || maybe === true;\n    const numMatches = gotOne ? 1 : 0;\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) {\n      this.matchSuccess();\n    } else {\n      this.matchFail(pos);\n    }\n    return { success, results, numMatches };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule: Rule, maybe: boolean = false): Result {\n    const results: GroupedResults = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success && result.results) {\n        numMatches++;\n        results.push(result.results as Result[]);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = numMatches > 0 || maybe === true;\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) {\n      this.matchSuccess();\n    } else {\n      this.matchFail(pos);\n    }\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule: Rule): Result {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided `rules` function. This\n  // offloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(ruleFunc: RuleFunction): Result {\n    L('Evaluating rule function:', ruleFunc);\n    if (!ruleFunc) {\n      throw new RuntimeError('Invalid rule function');\n    }\n    let result: Result;\n\n    // Get rule from Grammar class.\n    // expect(...) handles both lexing & parsing:\n    // - lexer rules produce tokens.\n    // - parser rules produce expressions which may trigger code via the\n    //   { run: () => ... } trigger functions in easyscore.ts.\n    //   These functions build the VexFlow objects that are displayed on screen.\n    const rule: Rule = ruleFunc.bind(this.grammar)();\n    if (rule.token) {\n      // A lexer rule has a `token` property.\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, rule.noSpace === true);\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos as number;\n      }\n    } else if (rule.expect) {\n      // A parser rule has an `expect` property.\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      L(rule);\n      throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n    }\n\n    // If there's a trigger attached to this rule, then run it.\n    // Make the matches accessible through `state.matches` in the\n    // `run: (state) => ...` trigger.\n    const matches: Match[] = [];\n    result.matches = matches;\n    if (result.results) {\n      result.results.forEach((r) => matches.push(flattenMatches(r)));\n    }\n    if (rule.run && result.success) {\n      rule.run({ matches });\n    }\n    return result;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { PartialBeamDirection } from './beam';\nimport { Dot } from './dot';\nimport { Factory } from './factory';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { Grammar, Match, Parser, Result, Rule, RuleFunction } from './parser';\nimport { RenderContext } from './rendercontext';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { TupletOptions } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { Voice } from './voice';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]): void {\n  if (EasyScore.DEBUG) log('Vex.Flow.EasyScore', args);\n}\n\n// eslint-disable-next-line\nexport type CommitHook = (obj: any, note: StemmableNote, builder: Builder) => void;\n\nexport class EasyScoreGrammar implements Grammar {\n  builder: Builder;\n\n  constructor(builder: Builder) {\n    this.builder = builder;\n  }\n\n  begin(): RuleFunction {\n    return this.LINE;\n  }\n\n  LINE(): Rule {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE(): Rule {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES(): Rule {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS(): Rule {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE(): Rule {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD(): Rule {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      // eslint-disable-next-line\n      run: (state) => this.builder.addChord(state!.matches[1] as Match[]),\n    };\n  }\n  NOTES(): Rule {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE(): Rule {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE(): Rule {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) => {\n        // eslint-disable-next-line\n        const s = state!;\n        this.builder.addSingleNote(s.matches[0] as string, s.matches[1] as string, s.matches[2] as string);\n      },\n    };\n  }\n  ACCIDENTAL(): Rule {\n    return {\n      expect: [this.MICROTONES, this.ACCIDENTALS],\n      maybe: true,\n      or: true,\n    };\n  }\n  DOTS(): Rule {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      // eslint-disable-next-line\n      run: (state) => this.builder.setNoteDots(state!.matches),\n    };\n  }\n  TYPE(): Rule {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      // eslint-disable-next-line\n      run: (state) => this.builder.setNoteType(state!.matches[2] as string),\n    };\n  }\n  DURATION(): Rule {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      // eslint-disable-next-line\n      run: (state) => this.builder.setNoteDuration(state!.matches[1] as string),\n    };\n  }\n  OPTS(): Rule {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS(): Rule {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL(): Rule {\n    const unquote = (str: string) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      // eslint-disable-next-line\n      run: (state) => this.builder.addNoteOption(state!.matches[0] as string, unquote(state!.matches[2] as string)),\n    };\n  }\n  VAL(): Rule {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY(): Rule {\n    return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n  }\n  DVAL(): Rule {\n    return { token: '[\"][^\"]*[\"]' };\n  }\n  SVAL(): Rule {\n    return { token: \"['][^']*[']\" };\n  }\n  NOTENAME(): Rule {\n    return { token: '[a-gA-G]' };\n  }\n  OCTAVE(): Rule {\n    return { token: '[0-9]+' };\n  }\n  ACCIDENTALS(): Rule {\n    return { token: 'bb|b|##|#|n' };\n  }\n  MICROTONES(): Rule {\n    return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n  }\n  DURATIONS(): Rule {\n    return { token: '[0-9whq]+' };\n  }\n  TYPES(): Rule {\n    return { token: '[rRsSmMhHgG]' };\n  }\n  LPAREN(): Rule {\n    return { token: '[(]' };\n  }\n  RPAREN(): Rule {\n    return { token: '[)]' };\n  }\n  COMMA(): Rule {\n    return { token: '[,]' };\n  }\n  DOT(): Rule {\n    return { token: '[.]' };\n  }\n  SLASH(): Rule {\n    return { token: '[/]' };\n  }\n  MAYBESLASH(): Rule {\n    return { token: '[/]?' };\n  }\n  EQUALS(): Rule {\n    return { token: '[=]' };\n  }\n  LBRACKET(): Rule {\n    return { token: '\\\\[' };\n  }\n  RBRACKET(): Rule {\n    return { token: '\\\\]' };\n  }\n  EOL(): Rule {\n    return { token: '$' };\n  }\n}\n\nexport interface NotePiece {\n  key: string;\n  accid?: string | null;\n  octave?: string;\n}\n\nexport class Piece {\n  chord: NotePiece[] = [];\n  duration: string;\n  dots: number = 0;\n  type?: string;\n  options: { [x: string]: string } = {};\n  constructor(duration: string) {\n    this.duration = duration;\n  }\n}\n\nexport interface BuilderElements {\n  notes: StemmableNote[];\n  accidentals: (Accidental | undefined)[][];\n}\n\n// Extending Record<string, any> allows arbitrary properties via Builder.reset() & EasyScore.parse().\n// eslint-disable-next-line\nexport interface BuilderOptions extends Record<string, any> {\n  stem?: string;\n  clef?: string;\n}\n\nexport class Builder {\n  factory: Factory;\n  // Initialized by the constructor via this.reset().\n  elements!: BuilderElements;\n  // Initialized by the constructor via this.reset().\n  options!: BuilderOptions;\n  // Initialized by the constructor via this.resetPiece().\n  piece!: Piece;\n  commitHooks: CommitHook[] = [];\n  rollingDuration!: string;\n\n  constructor(factory: Factory) {\n    this.factory = factory;\n    this.reset();\n  }\n\n  reset(options?: BuilderOptions): void {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n      ...options,\n    };\n    this.elements = { notes: [], accidentals: [] };\n    this.rollingDuration = '8';\n    this.resetPiece();\n  }\n\n  getFactory(): Factory {\n    return this.factory;\n  }\n\n  getElements(): BuilderElements {\n    return this.elements;\n  }\n\n  addCommitHook(commitHook: CommitHook): void {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece(): void {\n    L('resetPiece');\n    this.piece = new Piece(this.rollingDuration);\n  }\n\n  setNoteDots(dots: Match[]): void {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration?: string): void {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type?: string): void {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key: string, value: string): void {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key?: string, accid?: string | null, octave?: string): void {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({\n      key: key as string,\n      accid,\n      octave,\n    });\n  }\n\n  addSingleNote(key: string, accid?: string | null, octave?: string): void {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  // notes is an array with 3 entries\n  addChord(notes: Match[]): void {\n    L('startChord');\n    if (typeof notes[0] !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach((n) => {\n        if (n) this.addNote(...(n as string[])); // n => [string, string | null, string]\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece(): void {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = { ...this.options, ...this.piece.options };\n\n    // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n    // e.g., auto | up | down\n    const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n    // e.g., treble | bass\n    const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n\n    const { chord, duration, dots, type } = this.piece;\n\n    // Create a string[] that will be assigned to the .keys property of the StaveNote.\n    // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n    // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n    const standardAccidentals = Music.accidentals;\n    const keys = chord.map(\n      (notePiece) =>\n        notePiece.key +\n        (standardAccidentals.includes(notePiece.accid ?? '') ? notePiece.accid : '') +\n        '/' +\n        notePiece.octave\n    );\n    const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n\n    // Build a GhostNote or StaveNote using the information we gathered.\n    const note =\n      type?.toLowerCase() == 'g'\n        ? factory.GhostNote({ duration, dots })\n        : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n    if (!auto_stem) note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n\n    // Attach accidentals.\n    const accidentals: (Accidental | undefined)[] = [];\n    chord.forEach((notePiece: NotePiece, index: number) => {\n      const accid = notePiece.accid;\n      if (typeof accid === 'string') {\n        const accidental = factory.Accidental({ type: accid });\n        note.addModifier(accidental, index);\n        accidentals.push(accidental);\n      } else {\n        accidentals.push(undefined);\n      }\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) Dot.buildAndAttach([note], { all: true });\n\n    this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.push(accidentals);\n    this.resetPiece();\n  }\n}\n\nexport interface EasyScoreOptions {\n  factory?: Factory;\n  builder?: Builder;\n  commitHooks?: CommitHook[];\n  throwOnError?: boolean;\n}\n\n// Extending Record<string, any> allows arbitrary properties via set(defaults).\n// eslint-disable-next-line\nexport interface EasyScoreDefaults extends Record<string, any> {\n  clef?: string;\n  time?: string;\n  stem?: string;\n}\n\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options: { id?: string }, note: StemmableNote) {\n  if (options.id === undefined) return;\n  note.setAttribute('id', options.id);\n}\n\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options: { class?: string }, note: StemmableNote) {\n  if (options.class === undefined) return;\n  options.class.split(commaSeparatedRegex).forEach((className: string) => note.addClass(className));\n}\n\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n  static DEBUG: boolean = false;\n\n  defaults: EasyScoreDefaults = {\n    clef: 'treble',\n    time: '4/4',\n    stem: 'auto',\n  };\n\n  // options, factory, builder, grammar, and parser are all\n  // initialized by the constructor via this.setOptions().\n  options!: EasyScoreOptions;\n  factory!: Factory;\n  builder!: Builder;\n  grammar!: EasyScoreGrammar;\n  parser!: Parser;\n\n  constructor(options: EasyScoreOptions = {}) {\n    this.setOptions(options);\n  }\n\n  /**\n   * Set the score defaults.\n   * clef must be set appropriately to avoid errors when adding Staves.\n   * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n   * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n   * @param defaults.stem default stem arrangement (auto | up | down)\n   * @returns this\n   */\n  set(defaults: EasyScoreDefaults): this {\n    this.defaults = { ...this.defaults, ...defaults };\n    return this;\n  }\n\n  /**\n   * @param options.factory is required.\n   * @returns this\n   */\n  setOptions(options: EasyScoreOptions): this {\n    // eslint-disable-next-line\n    const factory = options.factory!; // ! operator, because options.factory was set in Factory.EasyScore().\n    const builder = options.builder ?? new Builder(factory);\n\n    this.options = {\n      commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook],\n      throwOnError: false,\n      ...options,\n      factory,\n      builder,\n    };\n\n    this.factory = factory;\n    this.builder = builder;\n    this.grammar = new EasyScoreGrammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks?.forEach((commitHook) => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context: RenderContext): this {\n    this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line: string, options: BuilderOptions = {}): Result {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      L(result);\n      throw new RuntimeError('Error parsing line: ' + line);\n    }\n    return result;\n  }\n\n  beam(\n    notes: StemmableNote[],\n    options?: {\n      autoStem?: boolean;\n      secondaryBeamBreaks?: number[];\n      partialBeamDirections?: {\n        [noteIndex: number]: PartialBeamDirection;\n      };\n    }\n  ): StemmableNote[] {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes: StemmableNote[], options?: TupletOptions): StemmableNote[] {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line: string, options: BuilderOptions = {}): StemmableNote[] {\n    options = { clef: this.defaults.clef, stem: this.defaults.stem, ...options };\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes: Note[], options: { time?: string; options?: { softmaxFactor: number } } = {}): Voice {\n    options = { time: this.defaults.time, ...options };\n    return this.factory.Voice(options).addTickables(notes);\n  }\n\n  addCommitHook(commitHook: CommitHook): void {\n    this.builder.addCommitHook(commitHook);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { ModifierContext } from './modifiercontext';\nimport { NoteStruct } from './note';\nimport { Stave } from './stave';\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\n\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\n\nexport class GhostNote extends StemmableNote {\n  static get CATEGORY(): string {\n    return Category.GhostNote;\n  }\n\n  constructor(parameter: string | NoteStruct) {\n    if (!parameter) {\n      throw new RuntimeError('BadArguments', ERROR_MSG);\n    }\n\n    let noteStruct;\n    if (typeof parameter === 'string') {\n      // Preserve backwards-compatibility\n      noteStruct = { duration: parameter };\n    } else if (typeof parameter === 'object') {\n      noteStruct = parameter;\n    } else {\n      throw new RuntimeError('BadArguments', ERROR_MSG);\n    }\n\n    super(noteStruct);\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  /**\n   * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n   */\n  isRest(): boolean {\n    return true;\n  }\n\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n    return this;\n  }\n\n  /* Overridden to ignore */\n  // eslint-disable-next-line\n  addToModifierContext(mc: ModifierContext): this {\n    // DO NOTHING.\n    return this;\n  }\n\n  preFormat(): this {\n    this.preFormatted = true;\n    return this;\n  }\n\n  draw(): void {\n    // Draw Annotations\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      if (isAnnotation(modifier)) {\n        modifier.setContext(this.getContext());\n        modifier.drawWithStyle();\n      }\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Any glyph that is set to appear on a Stave and take up musical time and graphical space.\n\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note, NoteStruct } from './note';\nimport { Category } from './typeguard';\n\nexport interface GlyphNoteOptions {\n  ignoreTicks?: boolean;\n  line?: number;\n}\n\nexport class GlyphNote extends Note {\n  static get CATEGORY(): string {\n    return Category.GlyphNote;\n  }\n\n  protected options: Required<GlyphNoteOptions>;\n  protected glyph!: Glyph;\n\n  constructor(glyph: Glyph, noteStruct: NoteStruct, options?: GlyphNoteOptions) {\n    super(noteStruct);\n    this.options = {\n      ignoreTicks: false,\n      line: 2,\n      ...options,\n    };\n\n    // Note properties\n    this.ignore_ticks = this.options.ignoreTicks;\n      this.setGlyph(glyph);\n    }\n\n  setGlyph(glyph: Glyph): this {\n    this.glyph = glyph;\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getBoundingBox(): BoundingBox | undefined {\n    return this.glyph.getBoundingBox();\n  }\n\n  preFormat(): this {\n    if (!this.preFormatted && this.modifierContext) {\n      this.modifierContext.preFormat();\n    }\n    this.preFormatted = true;\n    return this;\n  }\n\n  drawModifiers(): void {\n    const ctx = this.checkContext();\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(ctx);\n      modifier.drawWithStyle();\n    }\n  }\n\n  /** Get the glyph width. */\n  getGlyphWidth(): number {\n    return this.glyph.getMetrics().width;\n  }\n\n  draw(): void {\n    const stave = this.checkStave();\n    const ctx = stave.checkContext();\n    this.setRendered();\n    this.applyStyle(ctx);\n    ctx.openGroup('glyphNote', this.getAttribute('id'));\n\n    // Context is set when setStave is called on Note\n    const glyph = this.glyph;\n    if (!glyph.getContext()) {\n      glyph.setContext(ctx);\n    }\n\n    glyph.setStave(stave);\n    glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n\n    const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n    glyph.renderToStave(x);\n    this.drawModifiers();\n    ctx.closeGroup();\n    this.restoreStyle(ctx);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote, StaveNoteStruct } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport interface GraceNoteStruct extends StaveNoteStruct {\n  slash?: boolean;\n}\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY(): string {\n    return Category.GraceNote;\n  }\n\n  static get LEDGER_LINE_OFFSET(): number {\n    return 2;\n  }\n\n  static get SCALE(): number {\n    return 0.66;\n  }\n\n  protected slash: boolean;\n  protected slur: boolean;\n\n  constructor(noteStruct: GraceNoteStruct) {\n    super({\n      glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n      ...noteStruct,\n    });\n\n    this.slash = noteStruct.slash || false;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension(): number {\n    if (this.stem_extension_override) {\n      return this.stem_extension_override;\n    }\n\n    const glyphProps = this.getGlyphProps();\n    if (glyphProps) {\n      let ret = super.getStemExtension();\n      if (glyphProps.stem) {\n        const staveNoteScale = this.getStaveNoteScale();\n        ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n      }\n      return ret;\n    }\n\n    return 0;\n  }\n\n  getStaveNoteScale(): number {\n    return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n  }\n\n  draw(): void {\n    super.draw();\n    this.setRendered();\n    const stem = this.stem;\n    if (this.slash && stem) {\n      const staveNoteScale = this.getStaveNoteScale();\n\n      // some magic numbers are based on the staveNoteScale 0.66.\n      const offsetScale = staveNoteScale / 0.66;\n      let slashBBox = undefined;\n      const beam = this.beam;\n      if (beam) {\n        // FIXME: should render slash after beam?\n        if (!beam.postFormatted) {\n          beam.postFormat();\n        }\n\n        slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n          stem: 6 * offsetScale,\n          beam: 5 * offsetScale,\n        });\n      } else {\n        const stem_direction = this.getStemDirection();\n        const noteHeadBounds = this.getNoteHeadBounds();\n        const noteStemHeight = stem.getHeight();\n        let x = this.getAbsoluteX();\n        let y =\n          stem_direction === Stem.DOWN\n            ? noteHeadBounds.y_top - noteStemHeight\n            : noteHeadBounds.y_bottom - noteStemHeight;\n\n        const defaultStemExtention =\n          stem_direction === Stem.DOWN ? this.glyphProps.stem_down_extension : this.glyphProps.stem_up_extension;\n\n        let defaultOffsetY = Tables.STEM_HEIGHT;\n        defaultOffsetY -= defaultOffsetY / 2.8;\n        defaultOffsetY += defaultStemExtention;\n        y += defaultOffsetY * staveNoteScale * stem_direction;\n\n        const offsets =\n          stem_direction === Stem.UP\n            ? {\n                x1: 1,\n                y1: 0,\n                x2: 13,\n                y2: -9,\n              }\n            : {\n                x1: -4,\n                y1: 1,\n                x2: 13,\n                y2: 9,\n              };\n\n        x += offsets.x1 * offsetScale;\n        y += offsets.y1 * offsetScale;\n        slashBBox = {\n          x1: x,\n          y1: y,\n          x2: x + offsets.x2 * offsetScale,\n          y2: y + offsets.y2 * offsetScale,\n        };\n      }\n\n      // FIXME: avoid staff lines, ledger lines or others.\n\n      const ctx = this.checkContext();\n      ctx.save();\n      ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n      ctx.beginPath();\n      ctx.moveTo(slashBBox.x1, slashBBox.y1);\n      ctx.lineTo(slashBBox.x2, slashBBox.y2);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  calcBeamedNotesSlashBBox(\n    slashStemOffset: number,\n    slashBeamOffset: number,\n    protrusions: { beam: number; stem: number }\n  ): Record<string, number> {\n    const beam = this.beam;\n    if (!beam) throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n\n    const beam_slope = beam.slope;\n    const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n    const scaleX = isBeamEndNote ? -1 : 1;\n    const beam_angle = Math.atan(beam_slope * scaleX);\n\n    // slash line intersecting point on beam.\n    const iPointOnBeam = {\n      dx: Math.cos(beam_angle) * slashBeamOffset,\n      dy: Math.sin(beam_angle) * slashBeamOffset,\n    };\n\n    slashStemOffset *= this.getStemDirection();\n    const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n    const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n    const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n    const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n    const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n\n    const stemX = this.getStemX();\n    const stem0X = beam.notes[0].getStemX();\n    const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n\n    const ret = {\n      x1: stemX - protrusion_stem_dx,\n      y1: stemY + slashStemOffset - protrusion_stem_dy,\n      x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n      y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n    };\n    return ret;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\n\nimport { KeySignature } from './keysignature';\nimport { ModifierContext } from './modifiercontext';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n\nexport class KeySigNote extends Note {\n  static get CATEGORY(): string {\n    return Category.KeySigNote;\n  }\n\n  protected keySignature: KeySignature;\n\n  constructor(keySpec: string, cancelKeySpec?: string, alterKeySpec?: string[]) {\n    super({ duration: 'b' });\n\n    this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  /* Overridden to ignore */\n  // eslint-disable-next-line\n  addToModifierContext(mc: ModifierContext): this {\n    // DO NOTHING.\n    return this;\n  }\n\n  preFormat(): this {\n    this.preFormatted = true;\n    this.keySignature.setStave(this.checkStave());\n    this.setWidth(this.keySignature.getWidth());\n    return this;\n  }\n\n  draw(): void {\n    const ctx = this.checkStave().checkContext();\n    this.setRendered();\n    this.keySignature.setX(this.getAbsoluteX());\n    this.keySignature.setContext(ctx);\n    this.keySignature.draw();\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\n\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { RenderContext } from './rendercontext';\nimport { Stave } from './stave';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\n\nexport interface MultimeasureRestRenderOptions {\n  /** Extracted by Factory.MultiMeasureRest() and passed to the MultiMeasureRest constructor. */\n  number_of_measures: number;\n\n  /** Use rest symbols. Defaults to `false`, which renders a thick horizontal line with serifs at both ends. */\n  use_symbols?: boolean;\n\n  /** Horizontal spacing between rest symbol glyphs (if `use_symbols` is `true`).*/\n  symbol_spacing?: number;\n\n  /** Show the number of measures at the top. Defaults to `true`. */\n  show_number?: boolean;\n\n  /** Vertical position of the \"number of measures\" text (measured in stave lines). Defaults to -0.5, which is above the stave. 6.5 is below the stave. */\n  number_line?: number;\n\n  /** Font size of the \"number of measures\" text. */\n  number_glyph_point?: number;\n\n  /** Left padding from `stave.getX()`. */\n  padding_left?: number;\n\n  /** Right padding from `stave.getX() + stave.getWidth()` */\n  padding_right?: number;\n\n  /** Vertical position of the rest line or symbols, expressed as stave lines. Default: 2. The top stave line is 1, and the bottom stave line is 5. */\n  line?: number;\n\n  /** Defaults to the number of vertical pixels between stave lines. Used for serif height or 2-bar / 4-bar symbol height. */\n  spacing_between_lines_px?: number;\n\n  /** Size of the semibreve (1-bar) rest symbol. Other symbols are scaled accordingly. */\n  semibreve_rest_glyph_scale?: number;\n\n  /** Thickness of the rest line. Used when `use_symbols` is false. Defaults to half the space between stave lines. */\n  line_thickness?: number;\n\n  /** Thickness of the rest line's serif. Used when `use_symbols` is false. */\n  serif_thickness?: number;\n}\n\nlet semibreve_rest: { glyph_font_scale: number; glyph_code: string; width: number } | undefined;\n\nfunction get_semibreve_rest() {\n  if (!semibreve_rest) {\n    const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n    semibreve_rest = {\n      glyph_font_scale: noteHead.render_options.glyph_font_scale,\n      glyph_code: noteHead.glyph_code,\n      width: noteHead.getWidth(),\n    };\n  }\n  return semibreve_rest;\n}\n\nexport class MultiMeasureRest extends Element {\n  static get CATEGORY(): string {\n    return Category.MultiMeasureRest;\n  }\n\n  public render_options: Required<MultimeasureRestRenderOptions>;\n  protected xs = { left: NaN, right: NaN };\n  protected number_of_measures: number;\n\n  protected stave?: Stave;\n\n  private hasPaddingLeft = false;\n  private hasPaddingRight = false;\n  private hasLineThickness = false;\n  private hasSymbolSpacing = false;\n\n  /**\n   *\n   * @param number_of_measures Number of measures.\n   * @param options The options object.\n   */\n  constructor(number_of_measures: number, options: MultimeasureRestRenderOptions) {\n    super();\n\n    this.number_of_measures = number_of_measures;\n\n    // Keep track of whether these four options were provided.\n    this.hasPaddingLeft = typeof options.padding_left === 'number';\n    this.hasPaddingRight = typeof options.padding_right === 'number';\n    this.hasLineThickness = typeof options.line_thickness === 'number';\n    this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n\n    const musicFont = Tables.currentMusicFont();\n    this.render_options = {\n      use_symbols: false,\n      show_number: true,\n      number_line: -0.5,\n      number_glyph_point: musicFont.lookupMetric('digits.point') ?? Tables.NOTATION_FONT_SCALE, // same as TimeSignature.\n      line: 2,\n      spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, // same as Stave.\n      serif_thickness: 2,\n      semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, // same as NoteHead.\n      padding_left: 0,\n      padding_right: 0,\n      line_thickness: 5,\n      symbol_spacing: 0,\n      ...options,\n    };\n\n    const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n    this.render_options.number_line += fontLineShift;\n  }\n\n  getXs(): { left: number; right: number } {\n    return this.xs;\n  }\n\n  setStave(stave: Stave): this {\n    this.stave = stave;\n    return this;\n  }\n\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  checkStave(): Stave {\n    return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n  }\n\n  drawLine(stave: Stave, ctx: RenderContext, left: number, right: number, spacingBetweenLines: number): void {\n    const options = this.render_options;\n\n    const y = stave.getYForLine(options.line);\n    const padding = (right - left) * 0.1;\n    left += padding;\n    right -= padding;\n\n    let lineThicknessHalf;\n    if (this.hasLineThickness) {\n      lineThicknessHalf = options.line_thickness * 0.5;\n    } else {\n      lineThicknessHalf = spacingBetweenLines * 0.25;\n    }\n    const serifThickness = options.serif_thickness;\n    const top = y - spacingBetweenLines;\n    const bot = y + spacingBetweenLines;\n    const leftIndented = left + serifThickness;\n    const rightIndented = right - serifThickness;\n    const lineTop = y - lineThicknessHalf;\n    const lineBottom = y + lineThicknessHalf;\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(left, top);\n    ctx.lineTo(leftIndented, top);\n    ctx.lineTo(leftIndented, lineTop);\n    ctx.lineTo(rightIndented, lineTop);\n    ctx.lineTo(rightIndented, top);\n    ctx.lineTo(right, top);\n    ctx.lineTo(right, bot);\n    ctx.lineTo(rightIndented, bot);\n    ctx.lineTo(rightIndented, lineBottom);\n    ctx.lineTo(leftIndented, lineBottom);\n    ctx.lineTo(leftIndented, bot);\n    ctx.lineTo(left, bot);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  drawSymbols(stave: Stave, ctx: RenderContext, left: number, right: number, spacingBetweenLines: number): void {\n    const n4 = Math.floor(this.number_of_measures / 4);\n    const n = this.number_of_measures % 4;\n    const n2 = Math.floor(n / 2);\n    const n1 = n % 2;\n\n    const options = this.render_options;\n\n    // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n    // (e.g., if the system font settings are changed).\n    semibreve_rest = undefined;\n\n    const rest = get_semibreve_rest();\n    const rest_scale = options.semibreve_rest_glyph_scale;\n    const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n    const glyphs = {\n      2: {\n        width: rest_width * 0.5,\n        height: spacingBetweenLines,\n      },\n      1: {\n        width: rest_width,\n      },\n    };\n\n    /* 10: normal spacingBetweenLines */\n    const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n\n    const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n    let x = left + (right - left) * 0.5 - width * 0.5;\n    const line = options.line;\n    const yTop = stave.getYForLine(line - 1);\n    const yMiddle = stave.getYForLine(line);\n    const yBottom = stave.getYForLine(line + 1);\n\n    ctx.save();\n    ctx.setStrokeStyle('none');\n    ctx.setLineWidth(0);\n\n    for (let i = 0; i < n4; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n2; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n1; ++i) {\n      Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n      x += glyphs[1].width + spacing;\n    }\n\n    ctx.restore();\n  }\n\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const stave = this.checkStave();\n\n    let left = stave.getNoteStartX();\n    let right = stave.getNoteEndX();\n\n    // FIXME: getNoteStartX() returns x + 5(barline width)\n    //        getNoteEndX() returns x + width(no barline width)\n    // See Stave constructor. How do we fix this?\n    // Here, we subtract the barline width.\n    const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n    if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n      left -= begModifiers[0].getWidth();\n    }\n\n    const options = this.render_options;\n    if (this.hasPaddingLeft) {\n      left = stave.getX() + options.padding_left;\n    }\n    if (this.hasPaddingRight) {\n      right = stave.getX() + stave.getWidth() - options.padding_right;\n    }\n\n    this.xs.left = left;\n    this.xs.right = right;\n\n    const spacingBetweenLines = options.spacing_between_lines_px;\n    if (options.use_symbols) {\n      this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n    } else {\n      this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n    }\n\n    if (options.show_number) {\n      const timeSpec = '/' + this.number_of_measures;\n      const timeSig = new TimeSignature(timeSpec, 0, false);\n      timeSig.point = options.number_glyph_point;\n      timeSig.setTimeSig(timeSpec);\n      timeSig.setStave(stave);\n      timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n      timeSig.bottomLine = options.number_line;\n      timeSig.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Element } from './element';\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { RenderContext } from './rendercontext';\nimport { StaveNote } from './stavenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (PedalMarking.DEBUG) log('Vex.Flow.PedalMarking', args);\n}\n\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name: string, context: RenderContext, x: number, y: number, point: number): void {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n  // Center the middle of the glyph with the middle of the note head (Tables.STAVE_LINE_DISTANCE / 2)\n  glyph.render(context, x - (glyph.getMetrics().width - Tables.STAVE_LINE_DISTANCE) / 2, y);\n}\n\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n  /** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.PedalMarking;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n  };\n\n  protected line: number;\n  protected type: number;\n  protected custom_depress_text: string;\n  protected custom_release_text: string;\n  public render_options: {\n    color: string;\n    bracket_height: number;\n    text_margin_right: number;\n    bracket_line_width: number;\n  };\n  protected notes: StaveNote[];\n\n  /** Glyph data */\n  static readonly GLYPHS: Record<string, { code: string }> = {\n    pedal_depress: {\n      code: 'keyboardPedalPed',\n    },\n    pedal_release: {\n      code: 'keyboardPedalUp',\n    },\n  };\n\n  /** Pedal type as number. */\n  static readonly type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n  };\n\n  /** Pedal type as string. */\n  static readonly typeString: Record<string, number> = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n  };\n\n  /**\n   * Create a sustain pedal marking. Returns the defaults PedalMarking.\n   * Which uses the traditional \"Ped\" and \"*\"\" markings.\n   */\n  static createSustain(notes: StaveNote[]): PedalMarking {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  /** Create a sostenuto pedal marking */\n  static createSostenuto(notes: StaveNote[]): PedalMarking {\n    const pedal = new PedalMarking(notes);\n    pedal.setType(PedalMarking.type.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  /** Create an una corda pedal marking */\n  static createUnaCorda(notes: StaveNote[]): PedalMarking {\n    const pedal = new PedalMarking(notes);\n    pedal.setType(PedalMarking.type.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  constructor(notes: StaveNote[]) {\n    super();\n\n    this.notes = notes;\n    this.type = PedalMarking.type.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.resetFont();\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      color: 'black',\n    };\n  }\n\n  /** Set pedal type. */\n  setType(type: string | number): this {\n    type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n\n    if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  /**\n   * Set custom text for the `depress`/`release` pedal markings. No text is\n   * set if the parameter is falsy.\n   */\n  setCustomText(depress: string, release?: string): this {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  /** Set the staff line to render the markings on. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Draw the bracket based pedal markings. */\n  drawBracketed(): void {\n    const ctx = this.checkContext();\n    let is_pedal_depressed = false;\n    let prev_x: number;\n    let prev_y: number;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.checkStave().getYForBottomText(this.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      const point =\n        Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`) ??\n        Tables.NOTATION_FONT_SCALE;\n\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift = prev_is_same ? 5 : 0;\n\n        if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (this.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(this.custom_depress_text).width;\n            ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n            x_shift = text_width / 2 + this.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, point);\n            x_shift = 20 + this.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - this.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - this.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  /**\n   * Draw the text based pedal markings. This defaults to the traditional\n   * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n   */\n  drawText(): void {\n    const ctx = this.checkContext();\n    let is_pedal_depressed = false;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach((note) => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.checkStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(this.line + 3);\n\n      const point =\n        Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`) ??\n        Tables.NOTATION_FONT_SCALE;\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (this.custom_depress_text) {\n          text_width = ctx.measureText(this.custom_depress_text).width;\n          ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (this.custom_release_text) {\n          text_width = ctx.measureText(this.custom_release_text).width;\n          ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  /** Render the pedal marking in position on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.textFont);\n\n    L('Rendering Pedal Marking');\n\n    if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.type === PedalMarking.type.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Glyph } from './glyph';\nimport { GlyphNote, GlyphNoteOptions } from './glyphnote';\nimport { NoteStruct } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n\n// Map `type` to SMuFL glyph code.\nconst CODES: Record<string, string> = {\n  '1': 'repeat1Bar',\n  '2': 'repeat2Bars',\n  '4': 'repeat4Bars',\n  slash: 'repeatBarSlash',\n};\n\nexport class RepeatNote extends GlyphNote {\n  static get CATEGORY(): string {\n    return Category.RepeatNote;\n  }\n\n  constructor(type: string, noteStruct?: NoteStruct, options?: GlyphNoteOptions) {\n    const glyphCode = CODES[type] || 'repeat1Bar';\n    const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n      category: 'repeatNote',\n    });\n    super(glyph, { duration: 'q', align_center: type !== 'slash', ...noteStruct }, options);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\n\nimport { Element } from './element';\nimport { FontInfo } from './font';\nimport { RenderContext } from './rendercontext';\nimport { StaveNote } from './stavenote';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport interface StaveLineNotes {\n  first_note: StaveNote;\n  first_indices: number[];\n  last_note: StaveNote;\n  last_indices: number[];\n}\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(\n  ctx: RenderContext,\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): void {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\nexport class StaveLine extends Element {\n  static get CATEGORY(): string {\n    return Category.StaveLine;\n  }\n\n  /** Default text font. */\n  static TEXT_FONT: Required<FontInfo> = { ...Element.TEXT_FONT };\n\n  // Text Positioning\n  static readonly TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n  };\n\n  static readonly TextJustification = TextJustification;\n\n  public render_options: {\n    padding_left: number;\n    padding_right: number;\n    line_width: number;\n    line_dash?: number[];\n    rounded_end: boolean;\n    color?: string;\n    draw_start_arrow: boolean;\n    draw_end_arrow: boolean;\n    arrowhead_length: number;\n    arrowhead_angle: number;\n    text_position_vertical: number;\n    text_justification: number;\n  };\n\n  protected text: string;\n\n  // These five instance variables are all initialized by the constructor via this.setNotes(notes).\n  protected notes!: StaveLineNotes;\n  protected first_note!: StaveNote;\n  protected first_indices!: number[];\n  protected last_note!: StaveNote;\n  protected last_indices!: number[];\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes: StaveLineNotes) {\n    super();\n\n    this.setNotes(notes);\n\n    this.text = '';\n    this.resetFont();\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n      line_dash: undefined,\n      // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: undefined,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n  }\n\n  // The the annotation for the `StaveLine`\n  setText(text: string): this {\n    this.text = text;\n    return this;\n  }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes: StaveLineNotes): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n    }\n\n    this.notes = notes;\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle(): void {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle(): void {\n    const ctx = this.checkContext();\n    ctx.setFont(this.textFont);\n\n    const render_options = this.render_options;\n    const color = render_options.color;\n    if (color) {\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n    }\n  }\n\n  // Helper function to draw a line with arrow heads\n  protected drawArrowLine(ctx: RenderContext, pt1: { x: number; y: number }, pt2: { x: number; y: number }): void {\n    const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n\n    const x1 = pt1.x;\n    const y1 = pt1.y;\n    const x2 = pt2.x;\n    const y2 = pt2.y;\n\n    // For ends with arrow we actually want to stop before we get to the arrow\n    // so that wide lines won't put a flat end on the arrow.\n    const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n    let end_x;\n    let end_y;\n    let start_x;\n    let start_y;\n    if (this.render_options.draw_end_arrow || both_arrows) {\n      end_x = Math.round(x1 + (x2 - x1) * ratio);\n      end_y = Math.round(y1 + (y2 - y1) * ratio);\n    } else {\n      end_x = x2;\n      end_y = y2;\n    }\n\n    if (this.render_options.draw_start_arrow || both_arrows) {\n      start_x = x1 + (x2 - x1) * (1 - ratio);\n      start_y = y1 + (y2 - y1) * (1 - ratio);\n    } else {\n      start_x = x1;\n      start_y = y1;\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n\n    // Draw the shaft of the arrow\n    ctx.beginPath();\n    ctx.moveTo(start_x, start_y);\n    ctx.lineTo(end_x, end_y);\n    ctx.stroke();\n    ctx.closePath();\n\n    // calculate the angle of the line\n    const line_angle = Math.atan2(y2 - y1, x2 - x1);\n    // h is the line length of a side of the arrow head\n    const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n\n    let angle1;\n    let angle2;\n    let top_x;\n    let top_y;\n    let bottom_x;\n    let bottom_y;\n\n    if (this.render_options.draw_end_arrow || both_arrows) {\n      angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n      top_x = x2 + Math.cos(angle1) * h;\n      top_y = y2 + Math.sin(angle1) * h;\n\n      angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n      bottom_x = x2 + Math.cos(angle2) * h;\n      bottom_y = y2 + Math.sin(angle2) * h;\n\n      drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n    }\n\n    if (this.render_options.draw_start_arrow || both_arrows) {\n      angle1 = line_angle + this.render_options.arrowhead_angle;\n      top_x = x1 + Math.cos(angle1) * h;\n      top_y = y1 + Math.sin(angle1) * h;\n\n      angle2 = line_angle - this.render_options.arrowhead_angle;\n      bottom_x = x1 + Math.cos(angle2) * h;\n      bottom_y = y1 + Math.sin(angle2) * h;\n\n      drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw(): this {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position = { x: 0, y: 0 };\n    let end_position = { x: 0, y: 0 };\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyphProps().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      this.drawArrowLine(ctx, start_position, end_position);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = end_position.x - start_position.x;\n      const center_x = delta_x / 2 + start_position.x;\n      x = center_x - text_width / 2;\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x - text_width;\n    }\n\n    // Determine the y value to start the text\n    let y = 0;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.checkStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { FormatParams, Formatter, FormatterOptions } from './formatter';\nimport { Note } from './note';\nimport { RenderContext } from './rendercontext';\nimport { Stave, StaveOptions } from './stave';\nimport { StaveConnector, StaveConnectorType } from './staveconnector';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nimport { Voice } from './voice';\n\nexport interface SystemFormatterOptions extends FormatterOptions {\n  alpha?: number;\n}\n\nexport interface SystemStave {\n  voices: Voice[];\n  stave?: Stave;\n  noJustification?: boolean;\n  options?: StaveOptions;\n  spaceAbove?: number;\n  spaceBelow?: number;\n  debugNoteMetrics?: boolean;\n}\n\ninterface StaveInfo {\n  noJustification: boolean;\n  options: StaveOptions;\n  spaceAbove: number;\n  spaceBelow: number;\n  debugNoteMetrics: boolean;\n}\n\n/**\n * Formatting for systems created/drawn from factory:\n *\n * If width is provided, the system will use the specified width.\n *\n * If noJustification flag is 'true', there is no justification between voices\n * Otherwise, autoWidth defaults to true.\n *\n * If autowidth is true, the system uses format.preCalculateMinWidth\n * for the width of all voices, and default stave padding\n */\nexport interface SystemOptions {\n  factory?: Factory;\n  noPadding?: boolean;\n  debugFormatter?: boolean;\n  spaceBetweenStaves?: number;\n  formatIterations?: number;\n  autoWidth?: boolean;\n  x?: number;\n  width?: number;\n  y?: number;\n  details?: SystemFormatterOptions;\n  formatOptions?: FormatParams;\n  noJustification?: boolean;\n}\n\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n  static get CATEGORY(): string {\n    return Category.System;\n  }\n\n  protected options!: Required<SystemOptions>;\n  protected factory!: Factory;\n  protected formatter?: Formatter;\n  protected startX?: number;\n  protected lastY?: number;\n  protected partStaves: Stave[];\n  protected partStaveInfos: StaveInfo[];\n  protected partVoices: Voice[];\n  protected connector?: StaveConnector;\n  protected debugNoteMetricsYs?: { y: number; stave: Stave }[];\n\n  constructor(params: SystemOptions = {}) {\n    super();\n    this.setOptions(params);\n    this.partStaves = [];\n    this.partStaveInfos = [];\n    this.partVoices = [];\n  }\n\n  /** Set formatting options. */\n  setOptions(options: SystemOptions = {}): void {\n    if (!options.factory) {\n      throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n    }\n    this.factory = options.factory;\n    this.options = {\n      factory: this.factory,\n      x: 10,\n      y: 10,\n      width: 500,\n      spaceBetweenStaves: 12, // stave spaces\n      autoWidth: false,\n      noJustification: false,\n      debugFormatter: false,\n      formatIterations: 0, // number of formatter tuning steps\n      noPadding: false,\n      ...options,\n      details: {\n        alpha: 0.5, // formatter tuner learning/shifting rate\n        ...options.details,\n      },\n      formatOptions: {\n        ...options.formatOptions,\n      },\n    };\n\n    if (this.options.noJustification === false && typeof options.width === 'undefined') {\n      this.options.autoWidth = true;\n    }\n  }\n\n  /** Get origin X. */\n  getX(): number {\n    return this.options.x;\n  }\n\n  /** Set origin X. */\n  setX(x: number) {\n    this.options.x = x;\n    this.partStaves.forEach((s) => {\n      s.setX(x);\n    });\n  }\n\n  /** Get origin y. */\n  getY(): number {\n    return this.options.y;\n  }\n\n  /** Set origin y. */\n  setY(y: number) {\n    this.options.y = y;\n    this.partStaves.forEach((s) => {\n      s.setY(y);\n    });\n  }\n\n  /** Get associated staves. */\n  getStaves(): Stave[] {\n    return this.partStaves;\n  }\n\n  /** Get associated voices. */\n  getVoices(): Voice[] {\n    return this.partVoices;\n  }\n\n  /** Set associated context. */\n  setContext(context: RenderContext): this {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  /**\n   * Add connector between staves.\n   * @param type see {@link StaveConnector.typeString}\n   */\n  addConnector(type: StaveConnectorType = 'double'): StaveConnector {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.partStaves[0],\n      bottom_stave: this.partStaves[this.partStaves.length - 1],\n      type,\n    });\n    return this.connector;\n  }\n\n  /**\n   * Add a stave to the system.\n   *\n   * Example (one voice):\n   *\n   * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n   *\n   * Example (two voices):\n   *\n   * `system.addStave({voices: [`\n   *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n   *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n   * `]});`\n   */\n  addStave(params: SystemStave): Stave {\n    const staveOptions: StaveOptions = { left_bar: false, ...params.options };\n\n    const stave =\n      params.stave ??\n      this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n\n    const p = {\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      noJustification: false,\n      ...params,\n      options: staveOptions, // this needs to go after ...params, so we can override the options field.\n    };\n\n    const ctx = this.getContext();\n    p.voices.forEach((voice) => {\n      voice\n        .setContext(ctx)\n        .setStave(stave)\n        .getTickables()\n        .forEach((tickable) => tickable.setStave(stave));\n      this.partVoices.push(voice);\n    });\n\n    this.partStaves.push(stave);\n    this.partStaveInfos.push(p);\n    return stave;\n  }\n\n  /**\n   * Add voices to the system with stave already assigned.\n   */\n  addVoices(voices: Voice[]) {\n    const ctx = this.getContext();\n    voices.forEach((voice) => {\n      voice.setContext(ctx);\n      this.partVoices.push(voice);\n    });\n  }\n\n  /** Format the system. */\n  format(): void {\n    const options_details = this.options.details;\n    let justifyWidth = 0;\n    const formatter = new Formatter(options_details);\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    const debugNoteMetricsYs: { y: number; stave: Stave }[] = [];\n\n    this.partStaves.forEach((part, index) => {\n      y = y + part.space(this.partStaveInfos[index].spaceAbove);\n      part.setY(y);\n      y = y + part.space(this.partStaveInfos[index].spaceBelow);\n      y = y + part.space(this.options.spaceBetweenStaves);\n      if (this.partStaveInfos[index].debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, stave: part });\n        y += 15;\n      }\n      startX = Math.max(startX, part.getNoteStartX());\n    });\n\n    // Re-assign Stave to update y position\n    this.partVoices.forEach((voice) => {\n      voice.getTickables().forEach((tickable) => {\n        const stave = tickable.getStave();\n        if (stave) tickable.setStave(stave);\n      });\n    });\n\n    // Join the voices\n    formatter.joinVoices(this.partVoices);\n\n    // Update the start position of all staves.\n    this.partStaves.forEach((part) => part.setNoteStartX(startX));\n    if (this.options.autoWidth && this.partVoices.length > 0) {\n      justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n      this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n      this.partStaves.forEach((part) => {\n        part.setWidth(this.options.width);\n      });\n    } else {\n      justifyWidth = this.options.noPadding\n        ? this.options.width - (startX - this.options.x)\n        : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n    }\n    if (this.partVoices.length > 0) {\n      formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n    }\n    formatter.postFormat();\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune(options_details);\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n    this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n    Stave.formatBegModifiers(this.partStaves);\n  }\n\n  /** Render the system. */\n  draw(): void {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n      throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n    }\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach((d) => {\n      this.partVoices.forEach((voice) => {\n        voice.getTickables().forEach((tickable) => {\n          if (tickable.getStave() === d.stave) Note.plotMetrics(ctx, tickable, d.y);\n        });\n      });\n    });\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\n\nimport { Font } from './font';\nimport { Glyph, GlyphProps } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stave } from './stave';\nimport { StaveNoteStruct } from './stavenote';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n\nexport interface TabNotePosition {\n  // For example, on a six stringed instrument, `str` ranges from 1 to 6.\n  str: number;\n\n  // fret: 'X' indicates an unused/muted string.\n  // fret: 3 indicates the third fret.\n  fret: number | string;\n}\n\nexport interface TabNoteStruct extends StaveNoteStruct {\n  positions: TabNotePosition[];\n}\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines: number, strings_used: number[]) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y: number, unused_strings: number[][], stave: Stave, stem_direction: number) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines: number[][] = [];\n\n  unused_strings.forEach((strings) => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString = strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys: number[] = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY(): string {\n    return Category.TabNote;\n  }\n\n  protected ghost: boolean;\n  protected glyphPropsArr: GlyphProps[] = [];\n  protected positions: TabNotePosition[];\n\n  // Initialize the TabNote with a `noteStruct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(noteStruct: TabNoteStruct, draw_stem: boolean = false) {\n    super(noteStruct);\n\n    this.ghost = false; // Renders parenthesis around notes\n\n    // Note properties\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = noteStruct.positions || [];\n\n    // Render Options\n    this.render_options = {\n      ...this.render_options,\n      // font size for note heads and rests\n      glyph_font_scale: Tables.TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: `${Font.SIZE}pt ${Font.SANS_SERIF}`,\n    };\n\n    this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n    defined(\n      this.glyphProps,\n      'BadArguments',\n      `No glyph found for duration '${this.duration}' and type '${this.noteType}'`\n    );\n\n    this.buildStem();\n\n    if (noteStruct.stem_direction) {\n      this.setStemDirection(noteStruct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n  // Return the number of the greatest string, which is the string lowest on the display\n  greatestString = (): number => {\n    return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n  };\n  // Return the number of the least string, which is the string highest on the display\n  leastString = (): number => {\n    return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n  };\n\n  reset(): this {\n    super.reset();\n    if (this.stave) this.setStave(this.stave);\n    return this;\n  }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost: boolean): this {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem(): boolean {\n    if (this.render_options.draw_stem) return true;\n    return false;\n  }\n\n  // Get the default stem extension for the note\n  getStemExtension(): number {\n    const glyphProps = this.getGlyphProps();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyphProps) {\n      return this.getStemDirection() === Stem.UP\n        ? glyphProps.tabnote_stem_up_extension\n        : glyphProps.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Calculate and store the width of the note\n  updateWidth(): void {\n    this.glyphPropsArr = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyphProps = Tables.tabToGlyphProps(fret.toString(), this.render_options.scale);\n      this.glyphPropsArr.push(glyphProps);\n      this.width = Math.max(glyphProps.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyphProps.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave: Stave): this {\n    super.setStave(stave);\n    const ctx = stave.getContext();\n    this.setContext(ctx);\n\n    // Calculate the fret number width based on font used\n    if (ctx) {\n      this.width = 0;\n      for (let i = 0; i < this.glyphPropsArr.length; ++i) {\n        const glyphProps = this.glyphPropsArr[i];\n        const text = '' + glyphProps.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setFont(this.render_options.font);\n          glyphProps.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyphProps.getWidth = () => glyphProps.width as number;\n        }\n        this.width = Math.max(glyphProps.getWidth(), this.width);\n      }\n      this.glyphProps.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions(): TabNotePosition[] {\n    return this.positions;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position: number, index: number): { x: number; y: number } {\n    if (!this.preFormatted) {\n      throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2; // FIXME: modifier padding, move to font file\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // FIXME: modifier padding, move to font file\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyphProps.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest(): number {\n    return Number(this.positions[0].str);\n  }\n\n  // Pre-render formatting\n  preFormat(): void {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.preFormatted = true;\n  }\n\n  // Get the x position for the stem\n  getStemX(): number {\n    return this.getCenterGlyphX();\n  }\n\n  // Get the y position for the stem\n  getStemY(): number {\n    const num_lines = this.checkStave().getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.checkStave().getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents(): { topY: number; baseY: number } {\n    return this.checkStem().getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag(): void {\n    const {\n      beam,\n      glyphProps,\n      render_options: { draw_stem },\n    } = this;\n    const context = this.checkContext();\n\n    const shouldDrawFlag = beam == undefined && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyphProps.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX();\n      const flag_y =\n        this.getStemDirection() === Stem.DOWN\n          ? // Down stems are below the note head and have flags on the right.\n            this.getStemY() - this.checkStem().getHeight() - (this.glyphProps ? this.glyphProps.stem_down_extension : 0)\n          : // Up stems are above the note head and have flags on the right.\n            this.getStemY() - this.checkStem().getHeight() + (this.glyphProps ? this.glyphProps.stem_up_extension : 0);\n\n      // Draw the Flag\n      //this.flag?.setOptions({ category: 'flag.tabStem' });\n      this.flag?.render(context, flag_x, flag_y);\n      //Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n    }\n  }\n\n  // Render the modifiers onto the context.\n  drawModifiers(): void {\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled.\n      if (isDot(modifier) && !this.render_options.draw_dots) {\n        return;\n      }\n\n      modifier.setContext(this.getContext());\n      modifier.drawWithStyle();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough(): void {\n    const stemX = this.getStemX();\n    const stemY = this.getStemY();\n    const ctx = this.checkContext();\n\n    const drawStem = this.render_options.draw_stem;\n    const stemThrough = this.render_options.draw_stem_through_stave;\n    if (drawStem && stemThrough) {\n      const numLines = this.checkStave().getNumLines();\n      const stringsUsed = this.positions.map((position) => Number(position.str));\n\n      const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n      const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stemLines.forEach((bounds) => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stemX, bounds[0]);\n        ctx.lineTo(stemX, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions(): void {\n    const ctx = this.checkContext();\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyphProps = this.glyphPropsArr[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyphProps.getWidth();\n      const tab_x = x + note_glyph_width / 2 - glyphProps.getWidth() / 2;\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyphProps.getWidth() + 4, 6);\n\n      if (glyphProps.code) {\n        Glyph.renderGlyph(\n          ctx,\n          tab_x,\n          y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyphProps.code\n        );\n      } else {\n        ctx.save();\n        ctx.setFont(this.render_options.font);\n        const text = glyphProps.text ?? '';\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note.\n  draw(): void {\n    const ctx = this.checkContext();\n\n    if (this.ys.length === 0) {\n      throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == undefined && this.render_options.draw_stem;\n\n    this.applyStyle();\n    ctx.openGroup('tabnote', this.getAttribute('id'), { pointerBBox: true });\n    this.drawPositions();\n    this.drawStemThrough();\n\n    if (this.stem && render_stem) {\n      const stem_x = this.getStemX();\n      this.stem.setNoteHeadXBounds(stem_x, stem_x);\n      this.stem.setContext(ctx).draw();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n    ctx.closeGroup();\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Stave, StaveOptions } from './stave';\nimport { Category } from './typeguard';\n\nexport class TabStave extends Stave {\n  static get CATEGORY(): string {\n    return Category.TabStave;\n  }\n\n  constructor(x: number, y: number, width: number, options?: StaveOptions) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n      ...options,\n    };\n\n    super(x, y, width, tab_options);\n  }\n\n  getYForGlyphs(): number {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph(): this {\n    this.addClef('tab');\n    return this;\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Element } from './element';\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { Note } from './note';\nimport { RenderContext } from './rendercontext';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n\nexport interface TextBracketParams {\n  start: Note;\n  stop: Note;\n  text?: string;\n  superscript?: string;\n  position?: number | string;\n}\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (TextBracket.DEBUG) log('Vex.Flow.TextBracket', args);\n}\n\nexport enum TextBracketPosition {\n  TOP = 1,\n  BOTTOM = -1,\n}\n\nexport class TextBracket extends Element {\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.TextBracket;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n  };\n\n  public render_options: {\n    dashed: boolean;\n    color: string;\n    line_width: number;\n    underline_superscript: boolean;\n    show_bracket: boolean;\n    dash: number[];\n    bracket_height: number;\n  };\n\n  protected readonly text: string;\n  protected readonly superscript: string;\n\n  protected line: number;\n\n  readonly position: TextBracketPosition;\n  readonly start: Note;\n  readonly stop: Note;\n\n  static get Position(): typeof TextBracketPosition {\n    return TextBracketPosition;\n  }\n\n  static get PositionString(): Record<string, number> {\n    return {\n      top: TextBracketPosition.TOP,\n      bottom: TextBracketPosition.BOTTOM,\n    };\n  }\n\n  /**\n   * @deprecated Use `TextBracket.Position` instead.\n   */\n  static get Positions(): typeof TextBracketPosition {\n    L('Positions is deprecated, use TextBracketPosition instead.');\n    return TextBracketPosition;\n  }\n\n  /**\n   * @deprecated Use `TextBracket.PositionString` instead.\n   */\n  static get PositionsString(): Record<string, number> {\n    L('PositionsString is deprecated, use PositionString instead.');\n    return TextBracket.PositionString;\n  }\n\n  constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }: TextBracketParams) {\n    super();\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n\n    this.line = 1;\n\n    this.resetFont();\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  /**\n   * Apply the text backet styling to the provided context.\n   * @param ctx\n   * @returns this\n   */\n  applyStyle(ctx: RenderContext): this {\n    ctx.setFont(this.font);\n    const options = this.render_options;\n    ctx.setStrokeStyle(options.color);\n    ctx.setFillStyle(options.color);\n    ctx.setLineWidth(options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed: boolean, dash?: number[]): this {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the rendering `context` for the octave bracket\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  // Draw the octave bracket on the rendering context\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracketPosition.TOP:\n        y = this.start.checkStave().getYForTopText(this.line);\n        break;\n      case TextBracketPosition.BOTTOM:\n        y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_measure = ctx.measureText(this.text);\n    const main_width = main_measure.width;\n    const main_height = main_measure.height;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - main_height / 2.5;\n\n    // We called this.resetFont() in the constructor, so we know this.textFont is available.\n    // eslint-disable-next-line\n    const { family, size, weight, style } = this.textFont!;\n    // To draw the superscript, we scale the font size by 1/1.4.\n    const smallerFontSize = Font.scaleSize(size, 0.714286);\n    ctx.setFont(family, smallerFontSize, weight, style);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const super_measure = ctx.measureText(this.superscript);\n    const super_width = super_measure.width;\n    const super_height = super_measure.height;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyphProps().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracketPosition.TOP) {\n      start_x += main_width + super_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracketPosition.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += super_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + 1 * this.position,\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { TextNoteStruct } from './textnote';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (TextDynamics.DEBUG) log('Vex.Flow.TextDynamics', args);\n}\n\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n  /** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.TextDynamics;\n  }\n\n  protected sequence: string;\n\n  protected line: number;\n  protected glyphs: Glyph[];\n\n  /** The glyph data for each dynamics letter. */\n  static get GLYPHS(): Record<string, { code: string; width: number }> {\n    return {\n      f: {\n        code: 'dynamicForte',\n        width: 12,\n      },\n      p: {\n        code: 'dynamicPiano',\n        width: 14,\n      },\n      m: {\n        code: 'dynamicMezzo',\n        width: 17,\n      },\n      s: {\n        code: 'dynamicSforzando',\n        width: 10,\n      },\n      z: {\n        code: 'dynamicZ',\n        width: 12,\n      },\n      r: {\n        code: 'dynamicRinforzando',\n        width: 12,\n      },\n    };\n  }\n\n  /**\n   * Create the dynamics marking.\n   *\n   * A `TextDynamics` object inherits from `Note` so that it can be formatted\n   * within a `Voice`.\n   *\n   * @param noteStruct an object that contains a `duration` property and a\n   * `sequence` of letters that represents the letters to render.\n   */\n  constructor(noteStruct: TextNoteStruct) {\n    super(noteStruct);\n\n    this.sequence = (noteStruct.text || '').toLowerCase();\n    this.line = noteStruct.line || 0;\n    this.glyphs = [];\n\n    this.render_options = { ...this.render_options, glyph_font_size: Tables.NOTATION_FONT_SCALE };\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  /** Set the Stave line on which the note should be placed. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Preformat the dynamics text. */\n  preFormat(): this {\n    let total_width = 0;\n    // length of this.glyphs must be <=\n    // length of this.sequence, so if we're formatted before\n    // create new glyphs.\n    this.glyphs = [];\n    // Iterate through each letter\n    this.sequence.split('').forEach((letter) => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new RuntimeError('Invalid dynamics character: ' + letter);\n\n      const size = defined(this.render_options.glyph_font_size);\n      const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  /** Draw the dynamics text on the rendering context. */\n  draw(): void {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.checkStave().getYForLine(this.line + -3);\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.checkContext(), letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { ModifierContext } from './modifiercontext';\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\n\nexport class TimeSigNote extends Note {\n  static get CATEGORY(): string {\n    return Category.TimeSigNote;\n  }\n\n  protected timeSig: TimeSignature;\n\n  constructor(timeSpec: string, customPadding?: number) {\n    super({ duration: 'b' });\n\n    this.timeSig = new TimeSignature(timeSpec, customPadding);\n    this.setWidth(this.timeSig.getGlyph().getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  /* Overridden to ignore */\n  // eslint-disable-next-line\n  addToModifierContext(mc: ModifierContext): this {\n    // DO NOTHING.\n    return this;\n  }\n\n  preFormat(): this {\n    this.preFormatted = true;\n    return this;\n  }\n\n  draw(): void {\n    const stave = this.checkStave();\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const tsGlyph = this.timeSig.getGlyph();\n    if (!tsGlyph.getContext()) {\n      tsGlyph.setContext(ctx);\n    }\n\n    tsGlyph.setStave(stave);\n    tsGlyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n    tsGlyph.renderToStave(this.getAbsoluteX());\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\n\nimport { Element } from './element';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (VibratoBracket.DEBUG) log('Vex.Flow.VibratoBracket', args);\n}\n\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n  /** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  static get CATEGORY(): string {\n    return Category.VibratoBracket;\n  }\n\n  protected line: number;\n\n  protected start?: Note;\n  protected stop?: Note;\n  public render_options: {\n    vibrato_width: number;\n    wave_height: number;\n    wave_girth: number;\n    harsh: boolean;\n    wave_width: number;\n  };\n\n  /**\n   * Either the stop or start note must be set, or both of them.\n   * An undefined value for the start or stop note indicates that the vibrato\n   * is drawn from the beginning or until the end of the stave accordingly.\n   */\n  constructor(bracket_data: { stop?: Note | null; start?: Note | null }) {\n    super();\n\n    if (bracket_data.start) this.start = bracket_data.start;\n    if (bracket_data.stop) this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n      vibrato_width: 0,\n    };\n  }\n\n  /** Set line position of the vibrato bracket. */\n  setLine(line: number): this {\n    this.line = line;\n    return this;\n  }\n\n  /** Set harsh vibrato bracket. */\n  setHarsh(harsh: boolean): this {\n    this.render_options.harsh = harsh;\n    return this;\n  }\n\n  /** Draw the vibrato bracket on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    this.setRendered();\n    const y: number =\n      (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n      (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n      0;\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x: number =\n      (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x: number =\n      (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n      (this.start && this.start.checkStave().getTieEndX() - 10) ||\n      0;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\n\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam, PartialBeamDirection } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve, CurveOptions } from './curve';\nimport { EasyScore, EasyScoreOptions } from './easyscore';\nimport { Element } from './element';\nimport { FontInfo } from './font';\nimport { Formatter, FormatterOptions } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote, GlyphNoteOptions } from './glyphnote';\nimport { GraceNote, GraceNoteStruct } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest, MultimeasureRestRenderOptions } from './multimeasurerest';\nimport { Note, NoteStruct } from './note';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { RenderContext } from './rendercontext';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave, StaveOptions } from './stave';\nimport { BarlineType } from './stavebarline';\nimport { StaveConnector, StaveConnectorType } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote, StaveNoteStruct } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StemmableNote } from './stemmablenote';\nimport { StringNumber } from './stringnumber';\nimport { System, SystemOptions } from './system';\nimport { TabNote, TabNoteStruct } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote, TextNoteStruct } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet, TupletOptions } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceTime } from './voice';\nimport { isHTMLCanvas } from './web';\n\nexport interface FactoryOptions {\n  stave?: {\n    space: number;\n  };\n  renderer?: {\n    elementId: string | null;\n    backend?: number;\n    width: number;\n    height: number;\n    background?: string;\n  };\n  font?: FontInfo;\n}\n\n// eslint-disable-next-line\nfunction L(...args: any[]) {\n  if (Factory.DEBUG) log('Vex.Flow.Factory', args);\n}\n\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n  /** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\n  static DEBUG: boolean = false;\n\n  /** Default text font. */\n  static TEXT_FONT: Required<FontInfo> = { ...Element.TEXT_FONT };\n\n  /**\n   * Static simplified function to access constructor without providing FactoryOptions\n   *\n   * Example:\n   *\n   * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n   *\n   * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n   */\n  static newFromElementId(elementId: string | null, width = 500, height = 200): Factory {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  protected options: Required<FactoryOptions>;\n\n  protected stave?: Stave;\n  protected context!: RenderContext;\n  protected staves!: Stave[];\n  protected voices!: Voice[];\n  protected renderQ!: Element[];\n  protected systems!: System[];\n\n  /**\n   * Example:\n   *\n   * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n   *\n   * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n   */\n  constructor(options: FactoryOptions = {}) {\n    L('New factory: ', options);\n    this.options = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        elementId: '',\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: Factory.TEXT_FONT,\n    };\n\n    this.setOptions(options);\n  }\n\n  reset(): void {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = undefined; // current stave\n  }\n\n  setOptions(options?: FactoryOptions): void {\n    this.options = { ...this.options, ...options };\n    this.initRenderer();\n    this.reset();\n  }\n\n  initRenderer(): void {\n    const { elementId, width, height, background } = this.options.renderer;\n    if (elementId == null) {\n      return;\n    }\n\n    if (elementId == '') {\n      L(this);\n      throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n    }\n\n    let backend = this.options.renderer.backend;\n    if (backend === undefined) {\n      const elem = document.getElementById(elementId);\n      // We use a custom type check here, because node-canvas mimics canvas,\n      // but is not an instance of window.HTMLCanvasElement.\n      // In fact, `window` might be undefined here.\n      // See: https://www.npmjs.com/package/canvas\n      if (isHTMLCanvas(elem)) {\n        backend = Renderer.Backends.CANVAS;\n      } else {\n        backend = Renderer.Backends.SVG;\n      }\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext(): RenderContext {\n    return this.context;\n  }\n\n  setContext(context: RenderContext): this {\n    this.context = context;\n    return this;\n  }\n\n  getStave(): Stave | undefined {\n    return this.stave;\n  }\n\n  getVoices(): Voice[] {\n    return this.voices;\n  }\n\n  /** Return pixels from current stave spacing. */\n\n  Stave(params?: { x?: number; y?: number; width?: number; options?: StaveOptions }): Stave {\n    const staveSpace = this.options.stave.space;\n    const p = {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - staveSpace * 1.0,\n      options: { spacing_between_lines_px: staveSpace * 1.0 },\n      ...params,\n    };\n\n    const stave: Stave = new Stave(p.x, p.y, p.width, p.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params?: { x?: number; y?: number; width?: number; options?: StaveOptions }): TabStave {\n    const staveSpace = this.options.stave.space;\n    const p = {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - staveSpace * 1.0,\n      options: { spacing_between_lines_px: staveSpace * 1.3 },\n      ...params,\n    };\n\n    const stave = new TabStave(p.x, p.y, p.width, p.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct: StaveNoteStruct): StaveNote {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GlyphNote(glyph: Glyph, noteStruct: NoteStruct, options?: GlyphNoteOptions): GlyphNote {\n    const note = new GlyphNote(glyph, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  RepeatNote(type: string, noteStruct?: NoteStruct, options?: GlyphNoteOptions): RepeatNote {\n    const note = new RepeatNote(type, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct: string | NoteStruct): GhostNote {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(noteStruct: TextNoteStruct): TextNote {\n    const textNote = new TextNote(noteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params: { type?: BarlineType | string } = {}): BarNote {\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params?: { type?: string; options?: { size?: string; annotation?: string } }): ClefNote {\n    const p = {\n      type: 'treble',\n      options: {\n        size: 'default',\n        annotation: undefined,\n      },\n      ...params,\n    };\n\n    const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params?: { time?: string }): TimeSigNote {\n    const p = {\n      time: '4/4',\n      ...params,\n    };\n\n    const timeSigNote = new TimeSigNote(p.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params: { key: string; cancelKey?: string; alterKey?: string[] }): KeySigNote {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct: TabNoteStruct): TabNote {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct: GraceNoteStruct): GraceNote {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params: { notes: StemmableNote[]; slur?: boolean }): GraceNoteGroup {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params: { type: string }): Accidental {\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params?: {\n    text?: string;\n    hJustify?: string | AnnotationHorizontalJustify;\n    vJustify?: string | AnnotationVerticalJustify;\n    font?: FontInfo;\n  }): Annotation {\n    const p = {\n      text: 'p',\n      hJustify: AnnotationHorizontalJustify.CENTER,\n      vJustify: AnnotationVerticalJustify.BOTTOM,\n      ...params,\n    };\n\n    const annotation = new Annotation(p.text);\n    annotation.setJustification(p.hJustify);\n    annotation.setVerticalJustification(p.vJustify);\n    annotation.setFont(p.font);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  ChordSymbol(params?: {\n    vJustify?: string;\n    hJustify?: string;\n    kerning?: boolean;\n    reportWidth?: boolean;\n    fontFamily?: string;\n    fontSize?: number;\n    fontWeight?: string;\n  }): ChordSymbol {\n    const p = {\n      vJustify: 'top',\n      hJustify: 'center',\n      kerning: true,\n      reportWidth: true,\n      ...params,\n    };\n\n    const chordSymbol = new ChordSymbol();\n    chordSymbol.setHorizontal(p.hJustify);\n    chordSymbol.setVertical(p.vJustify);\n    chordSymbol.setEnableKerning(p.kerning);\n    chordSymbol.setReportWidth(p.reportWidth);\n    // There is a default font based on the engraving font.  Only set then\n    // font if it is specific, else use the default\n    if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n      if (typeof p.fontWeight === 'string') chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n      else chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n    } else if (typeof p.fontSize === 'number') {\n      chordSymbol.setFontSize(p.fontSize);\n    }\n    chordSymbol.setContext(this.context);\n    return chordSymbol;\n  }\n\n  Articulation(params?: { betweenLines?: boolean; type?: string; position?: string | number }): Articulation {\n    const articulation = new Articulation(params?.type ?? 'a.');\n\n    if (params?.position != undefined) articulation.setPosition(params.position);\n    if (params?.betweenLines != undefined) articulation.setBetweenLines(params.betweenLines);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  Ornament(\n    type: string,\n    params?: { position?: string | number; upperAccidental?: string; lowerAccidental?: string; delayed?: boolean }\n  ) {\n    const options = {\n      type,\n      position: 0,\n      accidental: '',\n      ...params,\n    };\n    const ornament = new Ornament(type);\n    ornament.setPosition(options.position);\n    if (options.upperAccidental) {\n      ornament.setUpperAccidental(options.upperAccidental);\n    }\n    if (options.lowerAccidental) {\n      ornament.setLowerAccidental(options.lowerAccidental);\n    }\n    if (typeof options.delayed !== 'undefined') {\n      ornament.setDelayed(options.delayed);\n    }\n    ornament.setContext(this.context);\n    return ornament;\n  }\n\n  TextDynamics(params?: { text?: string; duration?: string; dots?: number; line?: number }): TextDynamics {\n    const p = {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      ...params,\n    };\n\n    const text = new TextDynamics({\n      text: p.text,\n      line: p.line,\n      duration: p.duration,\n      dots: p.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params: { number?: string; position?: string }): FretHandFinger {\n    const p = {\n      number: '0',\n      position: 'left',\n      ...params,\n    };\n\n    const fingering = new FretHandFinger(p.number);\n    fingering.setPosition(p.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params: { number: string; position: string }, drawCircle = true): StringNumber {\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    stringNumber.setDrawCircle(drawCircle);\n    return stringNumber;\n  }\n\n  TickContext(): TickContext {\n    return new TickContext();\n  }\n\n  ModifierContext(): ModifierContext {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params: MultimeasureRestRenderOptions): MultiMeasureRest {\n    const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n    const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n    multiMeasureRest.setContext(this.context);\n    this.renderQ.push(multiMeasureRest);\n    return multiMeasureRest;\n  }\n\n  Voice(params?: { time?: VoiceTime | string }): Voice {\n    const p = {\n      time: '4/4',\n      ...params,\n    };\n    const voice = new Voice(p.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params: { top_stave: Stave; bottom_stave: Stave; type: StaveConnectorType }): StaveConnector {\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter(options?: FormatterOptions): Formatter {\n    return new Formatter(options);\n  }\n\n  Tuplet(params?: { notes?: Note[]; options?: TupletOptions }): Tuplet {\n    const p = {\n      notes: [],\n      options: {},\n      ...params,\n    };\n\n    const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params: {\n    notes: StemmableNote[];\n    options?: {\n      autoStem?: boolean;\n      secondaryBeamBreaks?: number[];\n      partialBeamDirections?: {\n        [noteIndex: number]: PartialBeamDirection;\n      };\n    };\n  }): Beam {\n    const beam = new Beam(params.notes, params.options?.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options?.secondaryBeamBreaks ?? []);\n    if (params.options?.partialBeamDirections) {\n      Object.entries(params.options?.partialBeamDirections).forEach(([noteIndex, direction]) => {\n        beam.setPartialBeamSideAt(Number(noteIndex), direction);\n      });\n    }\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params: { from: Note; to: Note; options: CurveOptions }): Curve {\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params: {\n    from?: Note | null;\n    to?: Note | null;\n    first_indices?: number[];\n    last_indices?: number[];\n    text?: string;\n    options?: { direction?: number };\n  }): StaveTie {\n    const tie = new StaveTie(\n      {\n        first_note: params.from,\n        last_note: params.to,\n        first_indices: params.first_indices,\n        last_indices: params.last_indices,\n      },\n      params.text\n    );\n\n    if (params.options?.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params: {\n    from: StaveNote;\n    to: StaveNote;\n    first_indices: number[];\n    last_indices: number[];\n    options?: { text?: string; font?: FontInfo };\n  }): StaveLine {\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options?.text) line.setText(params.options.text);\n    if (params.options?.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params: {\n    from: Note | null;\n    to: Note | null;\n    options: {\n      harsh?: boolean;\n      line?: number;\n    };\n  }): VibratoBracket {\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params: {\n    from: Note;\n    to: Note;\n    text: string;\n    options: {\n      superscript: string;\n      position: string;\n      line?: number;\n      font?: FontInfo;\n    };\n  }): TextBracket {\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params: SystemOptions = {}): System {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  /**\n   * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n   * ```\n   * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n   * const score: EasyScore = vf.EasyScore();\n   * ```\n   * @param options.factory optional instance of Factory\n   * @param options.builder instance of Builder\n   * @param options.commitHooks function to call after a note element is created\n   * @param options.throwOnError throw error in case of parsing error\n   */\n  EasyScore(options: EasyScoreOptions = {}): EasyScore {\n    options.factory = this;\n    return new EasyScore(options);\n  }\n\n  PedalMarking(params?: { notes?: StaveNote[]; options?: { style: string } }): PedalMarking {\n    const p = {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n      ...params,\n    };\n\n    const pedal = new PedalMarking(p.notes);\n    pedal.setType(PedalMarking.typeString[p.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params?: { notes?: Note[] }): NoteSubGroup {\n    const p = {\n      notes: [],\n      ...params,\n    };\n\n    const group = new NoteSubGroup(p.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  /** Render the score. */\n  draw(): void {\n    const ctx = this.context;\n    this.systems.forEach((s) => s.setContext(ctx).format());\n    this.staves.forEach((s) => s.setContext(ctx).draw());\n    this.voices.forEach((v) => v.setContext(ctx).draw());\n    this.renderQ.forEach((e) => {\n      if (!e.isRendered()) e.setContext(ctx).draw();\n    });\n    this.systems.forEach((s) => s.setContext(ctx).draw());\n    this.reset();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\n\nimport { Font } from './font';\nimport { TabNote, TabNoteStruct } from './tabnote';\nimport { Category } from './typeguard';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY(): string {\n    return Category.GraceTabNote;\n  }\n\n  constructor(noteStruct: TabNoteStruct) {\n    super(noteStruct, false);\n\n    this.render_options = {\n      ...this.render_options,\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: `7.5pt ${Font.SANS_SERIF}`,\n    };\n\n    this.updateWidth();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { KeyParts, Music } from './music';\nimport { RuntimeError } from './util';\n\nexport class KeyManager {\n  protected music: Music;\n  // all attributes below are initialised in setKey which calls reset in the constructor\n  protected keyParts!: KeyParts;\n  protected keyString!: string;\n  protected key!: string;\n  protected scale!: number[];\n  protected scaleMap!: Record<string, string>;\n  protected scaleMapByValue!: Record<number, string>;\n  protected originalScaleMapByValue!: Record<number, string>;\n\n  constructor(key: string) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key: string): this {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey(): string {\n    return this.key;\n  }\n\n  reset(): this {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key: string): {\n    note: string;\n    accidental?: string;\n    change?: boolean;\n  } {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note: string): {\n    note: string;\n    accidental?: string;\n    change: boolean;\n  } {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        note: scaleNote,\n        accidental: parts.accidental,\n        change: false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        note: valueNote,\n        accidental: this.music.getNoteParts(valueNote).accidental,\n        change: false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        note: originalValueNote,\n        accidental: this.music.getNoteParts(originalValueNote).accidental,\n        change: true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        note: modparts.root,\n        accidental: undefined,\n        change: true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      accidental: parts.accidental,\n      change: true,\n    };\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\n\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { RenderContext } from './rendercontext';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport interface StaveHairpinRenderOptions {\n  right_shift_ticks?: number;\n  left_shift_ticks?: number;\n  left_shift_px: number;\n  right_shift_px: number;\n  height: number;\n  y_shift: number;\n}\n\nexport class StaveHairpin extends Element {\n  static get CATEGORY(): string {\n    return Category.StaveHairpin;\n  }\n\n  protected hairpin: number;\n\n  protected position: number;\n  public render_options: StaveHairpinRenderOptions;\n\n  // notes is initialized by the constructor via this.setNotes(notes).\n  protected notes!: Record<string, Note>;\n\n  protected first_note?: Note;\n  protected last_note?: Note;\n\n  static readonly type = {\n    CRESC: 1,\n    DECRESC: 2,\n  };\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px,         // vertical offset\n   *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(\n    ctx: RenderContext,\n    formatter: { pixelsPerTick: number },\n    notes: Record<string, Note>,\n    type: number,\n    position: number,\n    options: StaveHairpinRenderOptions\n  ): void {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n    }\n\n    const l_shift_px = ppt * (options.left_shift_ticks ?? 0);\n    const r_shift_px = ppt * (options.right_shift_ticks ?? 0);\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px,\n      right_shift_ticks: 0,\n      left_shift_ticks: 0,\n    };\n\n    new StaveHairpin(\n      {\n        first_note: notes.first_note,\n        last_note: notes.last_note,\n      },\n      type\n    )\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @param {!Object} notes The notes to tie up.\n   * Notes is a struct that has:\n   *\n   *  {\n   *    first_note: Note,\n   *    last_note: Note,\n   *  }\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes: Record<string, Note>, type: number) {\n    super();\n    this.setNotes(notes);\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n      right_shift_ticks: 0,\n      left_shift_ticks: 0,\n    };\n  }\n\n  setPosition(position: number): this {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options: StaveHairpinRenderOptions): this {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes: Record<string, Note>): this {\n    if (!notes.first_note && !notes.last_note) {\n      throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n    }\n\n    this.notes = notes;\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params: {\n    first_x: number;\n    last_x: number;\n    first_y: number;\n    last_y: number;\n    staff_height: number;\n  }): void {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw(): void {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n    if (!firstNote || !lastNote) throw new RuntimeError('NoNote', 'Notes required to draw');\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n      last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n      staff_height: firstNote.checkStave().getHeight(),\n    });\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Font, FontInfo, FontStyle, FontWeight } from './font';\nimport { TieNotes } from './stavetie';\nimport { TabNote } from './tabnote';\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n\nexport class TabSlide extends TabTie {\n  static get CATEGORY(): string {\n    return Category.TabSlide;\n  }\n\n  static TEXT_FONT: Required<FontInfo> = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n  };\n\n  static get SLIDE_UP(): number {\n    return 1;\n  }\n\n  static get SLIDE_DOWN(): number {\n    return -1;\n  }\n\n  static createSlideUp(notes: TieNotes): TabSlide {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes: TieNotes): TabSlide {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  /**\n   * @param notes is a struct of the form:\n   *  {\n   *    first_note: Note,\n   *    last_note: Note,\n   *    first_indices: [n1, n2, n3],\n   *    last_indices: [n1, n2, n3]\n   *  }\n   * @param notes.first_note the starting note of the slide\n   * @param notes.last_note the ending note of the slide\n   * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n   * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n   *\n   * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n   */\n  constructor(notes: TieNotes, direction?: number) {\n    super(notes, 'sl.');\n\n    // Determine the direction automatically if it is not provided.\n    if (!direction) {\n      let first_fret = (notes.first_note as TabNote).getPositions()[0].fret;\n      if (typeof first_fret === 'string') {\n        first_fret = parseInt(first_fret, 10);\n      }\n      let last_fret = (notes.last_note as TabNote).getPositions()[0].fret;\n      if (typeof last_fret === 'string') {\n        last_fret = parseInt(last_fret, 10);\n      }\n\n      // If either of the frets are 'X', parseInt() above will return NaN.\n      // Choose TabSlide.SLIDE_UP by default.\n      if (isNaN(first_fret) || isNaN(last_fret)) {\n        direction = TabSlide.SLIDE_UP;\n      } else {\n        direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n      }\n    }\n\n    this.direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.resetFont();\n  }\n\n  renderTie(params: {\n    direction: number;\n    first_x_px: number;\n    last_x_px: number;\n    last_ys: number[];\n    first_ys: number[];\n  }): void {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new RuntimeError('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.checkContext();\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = params.direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new RuntimeError('BadSlide', 'Invalid slide direction');\n    }\n\n    // eslint-disable-next-line\n    const first_indices = this.notes.first_indices!;\n    for (let i = 0; i < first_indices.length; ++i) {\n      const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + 3 * direction);\n      ctx.lineTo(last_x_px, slide_y - 3 * direction);\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\n\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n  static get CATEGORY(): string {\n    return Category.Tremolo;\n  }\n\n  protected readonly code: string;\n  protected readonly num: number;\n  /** Extra spacing required for big strokes. */\n  public y_spacing_scale: number;\n  /** Font scaling for big strokes. */\n  public extra_stroke_scale: number;\n\n  /**\n   * @param num number of bars\n   */\n  constructor(num: number) {\n    super();\n\n    this.num = num;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'tremolo1';\n    // big strokes scales initialised to 1 (no scale)\n    this.y_spacing_scale = 1;\n    this.extra_stroke_scale = 1;\n  }\n\n  /** Draw the tremolo on the rendering context. */\n  draw(): void {\n    const ctx = this.checkContext();\n    const note = this.checkAttachedNote();\n    this.setRendered();\n\n    const stemDirection = note.getStemDirection();\n\n    const start = note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n\n    const gn = isGraceNote(note);\n    const scale = gn ? GraceNote.SCALE : 1;\n    const category = `tremolo.${gn ? 'grace' : 'default'}`;\n\n    const musicFont = Tables.currentMusicFont();\n    let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n    // add y_spacing_scale for big strokes (#1258)\n    y_spacing *= this.y_spacing_scale;\n    const height = this.num * y_spacing;\n    let y = note.getStemExtents().baseY - height;\n\n    if (stemDirection < 0) {\n      y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n    } else {\n      y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n    }\n\n    const fontScale = musicFont.lookupMetric(`${category}.point`) ?? Note.getPoint(gn ? 'grace' : 'default');\n\n    x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n      y += y_spacing;\n    }\n  }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n  protected tuningValues: number[] = [];\n\n  static get names(): Record<string, string> {\n    return {\n      standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n      dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n      dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n      eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  /**\n   * Constructor.\n   * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n   */\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  /** Return the note number associated to the note string. */\n  noteToInteger(noteString: string): number {\n    return Tables.keyProperties(noteString).int_value ?? -1;\n  }\n\n  /**\n   * Set tuning identified by tuning name (eg. 'dagdad')\n   * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n   */\n  setTuning(tuningString: string): void {\n    if (Tuning.names[tuningString]) {\n      tuningString = Tuning.names[tuningString];\n    }\n\n    this.tuningValues = [];\n\n    const keys = tuningString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n    }\n\n    for (let i = 0; i < keys.length; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  /** Return the note number associated with a tablature string. */\n  getValueForString(stringNum: string | number): number {\n    const s = Number(stringNum);\n    if (s < 1 || s > this.tuningValues.length) {\n      throw new RuntimeError(\n        'BadArguments',\n        `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  /** Return the note number associated with a tablature string and fret. */\n  getValueForFret(fretNum: string | number, stringNum: string | number): number {\n    const stringValue = this.getValueForString(stringNum);\n    const f = Number(fretNum);\n\n    if (f < 0) {\n      throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n    }\n\n    return stringValue + f;\n  }\n\n  /** Return the note string associated with tablature string and fret. */\n  getNoteForFret(fretNum: string | number, stringNum: string | number): string {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return `${Tables.integerToNote(value)}/${octave}`;\n  }\n}\n","import { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport {\n  ChordSymbol,\n  ChordSymbolHorizontalJustify,\n  ChordSymbolVerticalJustify,\n  SymbolModifiers,\n  SymbolTypes,\n} from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontModule, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\n\nexport class Flow {\n  static get BUILD() {\n    return {\n      /** version number. */\n      VERSION: VERSION,\n      /** git commit ID that this library was built from. */\n      ID: ID,\n      /** The date when this library was compiled. */\n      DATE: DATE,\n    };\n  }\n\n  static Accidental = Accidental;\n  static Annotation = Annotation;\n  static Articulation = Articulation;\n  static Barline = Barline;\n  static BarNote = BarNote;\n  static Beam = Beam;\n  static Bend = Bend;\n  static BoundingBox = BoundingBox;\n  static BoundingBoxComputation = BoundingBoxComputation;\n  static CanvasContext = CanvasContext;\n  static ChordSymbol = ChordSymbol;\n  static Clef = Clef;\n  static ClefNote = ClefNote;\n  static Crescendo = Crescendo;\n  static Curve = Curve;\n  static Dot = Dot;\n  static EasyScore = EasyScore;\n  static Element = Element;\n  static Factory = Factory;\n  static Font = Font;\n  static Formatter = Formatter;\n  static Fraction = Fraction;\n  static FretHandFinger = FretHandFinger;\n  static GhostNote = GhostNote;\n  static Glyph = Glyph;\n  static GlyphNote = GlyphNote;\n  static GraceNote = GraceNote;\n  static GraceNoteGroup = GraceNoteGroup;\n  static GraceTabNote = GraceTabNote;\n  static KeyManager = KeyManager;\n  static KeySignature = KeySignature;\n  static KeySigNote = KeySigNote;\n  static Modifier = Modifier;\n  static ModifierContext = ModifierContext;\n  static MultiMeasureRest = MultiMeasureRest;\n  static Music = Music;\n  static Note = Note;\n  static NoteHead = NoteHead;\n  static NoteSubGroup = NoteSubGroup;\n  static Ornament = Ornament;\n  static Parenthesis = Parenthesis;\n  static Parser = Parser;\n  static PedalMarking = PedalMarking;\n  static Registry = Registry;\n  static RenderContext = RenderContext;\n  static Renderer = Renderer;\n  static RepeatNote = RepeatNote;\n  static Repetition = Repetition;\n  static Stave = Stave;\n  static StaveConnector = StaveConnector;\n  static StaveHairpin = StaveHairpin;\n  static StaveLine = StaveLine;\n  static StaveModifier = StaveModifier;\n  static StaveNote = StaveNote;\n  static StaveTempo = StaveTempo;\n  static StaveText = StaveText;\n  static StaveTie = StaveTie;\n  static Stem = Stem;\n  static StringNumber = StringNumber;\n  static Stroke = Stroke;\n  static SVGContext = SVGContext;\n  static System = System;\n  static TabNote = TabNote;\n  static TabSlide = TabSlide;\n  static TabStave = TabStave;\n  static TabTie = TabTie;\n  static TextBracket = TextBracket;\n  static TextDynamics = TextDynamics;\n  static TextFormatter = TextFormatter;\n  static TextNote = TextNote;\n  static TickContext = TickContext;\n  static TimeSignature = TimeSignature;\n  static TimeSigNote = TimeSigNote;\n  static Tremolo = Tremolo;\n  static Tuning = Tuning;\n  static Tuplet = Tuplet;\n  static Vibrato = Vibrato;\n  static VibratoBracket = VibratoBracket;\n  static Voice = Voice;\n  static Volta = Volta;\n\n  // Exported Enums.\n  // Sorted by the module / file they are exported from.\n  static AnnotationHorizontalJustify = AnnotationHorizontalJustify;\n  static AnnotationVerticalJustify = AnnotationVerticalJustify;\n  static ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\n  static ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\n  static SymbolTypes = SymbolTypes;\n  static SymbolModifiers = SymbolModifiers;\n  static CurvePosition = CurvePosition;\n  static FontWeight = FontWeight;\n  static FontStyle = FontStyle;\n  static ModifierPosition = ModifierPosition;\n  static RendererBackends = RendererBackends;\n  static RendererLineEndType = RendererLineEndType;\n  static BarlineType = BarlineType;\n  static StaveModifierPosition = StaveModifierPosition;\n  static VoltaType = VoltaType;\n  static TextBracketPosition = TextBracketPosition;\n  static TextJustification = TextJustification;\n  static VoiceMode = VoiceMode;\n\n  /**\n   * Examples:\n   * ```\n   * Vex.Flow.setMusicFont('Petaluma');\n   * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n   * ```\n   *\n   * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n   * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n   * 'Bravura', 'Gonville', 'Custom'.\n   *\n   * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n   * which includes a single music font. Calling this method is unnecessary.\n   *\n   * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n   * In this case, the default music font stack is empty.\n   * Example:\n   * ```\n   * await Vex.Flow.fetchMusicFont('Petaluma');\n   * Vex.Flow.setMusicFont('Petaluma');\n   * ... (do VexFlow stuff) ...\n   * ```\n   * See `demos/fonts/` for more examples.\n   *\n   * @returns an array of Font objects corresponding to the provided `fontNames`.\n   */\n  static setMusicFont(...fontNames: string[]): Font[] {\n    // Convert the array of font names into an array of Font objects.\n    const fonts = fontNames.map((fontName) => Font.load(fontName));\n    Tables.MUSIC_FONT_STACK = fonts;\n    Glyph.MUSIC_FONT_STACK = fonts.slice();\n    Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n    return fonts;\n  }\n\n  /**\n   * Used with vexflow-core which supports dynamic font loading.\n   */\n  // eslint-disable-next-line\n  static async fetchMusicFont(fontName: string, fontModuleOrPath?: string | FontModule): Promise<void> {\n    // The default implementation does nothing.\n    // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n  }\n\n  static getMusicFont(): string[] {\n    const fonts = Tables.MUSIC_FONT_STACK;\n    return fonts.map((font) => font.getName());\n  }\n\n  static get RENDER_PRECISION_PLACES(): number {\n    return Tables.RENDER_PRECISION_PLACES;\n  }\n\n  static set RENDER_PRECISION_PLACES(precision: number) {\n    Tables.RENDER_PRECISION_PLACES = precision;\n  }\n\n  static get SOFTMAX_FACTOR(): number {\n    return Tables.SOFTMAX_FACTOR;\n  }\n\n  static set SOFTMAX_FACTOR(factor: number) {\n    Tables.SOFTMAX_FACTOR = factor;\n  }\n\n  static get NOTATION_FONT_SCALE(): number {\n    return Tables.NOTATION_FONT_SCALE;\n  }\n  static set NOTATION_FONT_SCALE(value: number) {\n    Tables.NOTATION_FONT_SCALE = value;\n  }\n  static get TABLATURE_FONT_SCALE(): number {\n    return Tables.TABLATURE_FONT_SCALE;\n  }\n  static set TABLATURE_FONT_SCALE(value: number) {\n    Tables.TABLATURE_FONT_SCALE = value;\n  }\n  static get RESOLUTION(): number {\n    return Tables.RESOLUTION;\n  }\n  static set RESOLUTION(value: number) {\n    Tables.RESOLUTION = value;\n  }\n  static get SLASH_NOTEHEAD_WIDTH(): number {\n    return Tables.SLASH_NOTEHEAD_WIDTH;\n  }\n  static set SLASH_NOTEHEAD_WIDTH(value: number) {\n    Tables.SLASH_NOTEHEAD_WIDTH = value;\n  }\n  static get STAVE_LINE_DISTANCE(): number {\n    return Tables.STAVE_LINE_DISTANCE;\n  }\n  static set STAVE_LINE_DISTANCE(value: number) {\n    Tables.STAVE_LINE_DISTANCE = value;\n  }\n  static get STAVE_LINE_THICKNESS(): number {\n    return Tables.STAVE_LINE_THICKNESS;\n  }\n  static set STAVE_LINE_THICKNESS(value: number) {\n    Tables.STAVE_LINE_THICKNESS = value;\n  }\n  static get STEM_HEIGHT(): number {\n    return Tables.STEM_HEIGHT;\n  }\n  static set STEM_HEIGHT(value: number) {\n    Tables.STEM_HEIGHT = value;\n  }\n  static get STEM_WIDTH(): number {\n    return Tables.STEM_WIDTH;\n  }\n  static set STEM_WIDTH(value: number) {\n    Tables.STEM_WIDTH = value;\n  }\n  static get TIME4_4(): { num_beats: number; beat_value: number; resolution: number } {\n    return Tables.TIME4_4;\n  }\n  static get accidentalMap(): Record<string, { code: string; parenRightPaddingAdjustment: number }> {\n    return Tables.accidentalMap;\n  }\n  static get unicode(): Record<string, string> {\n    return Tables.unicode;\n  }\n  static keySignature(spec: string): { type: string; line: number }[] {\n    return Tables.keySignature(spec);\n  }\n  static hasKeySignature(spec: string): boolean {\n    return Tables.hasKeySignature(spec);\n  }\n  static getKeySignatures(): Record<string, { acc?: string; num: number }> {\n    return Tables.getKeySignatures();\n  }\n  static clefProperties(clef: string): { line_shift: number } {\n    return Tables.clefProperties(clef);\n  }\n  // eslint-disable-next-line\n  static keyProperties(key: string, clef?: string, params?: any): any {\n    return Tables.keyProperties(key, clef, params);\n  }\n  static durationToTicks(duration: string): number {\n    return Tables.durationToTicks(duration);\n  }\n}\n","export const VERSION: string = '__VF_VERSION__';\nexport const ID: string = '__VF_GIT_COMMIT_ID__';\nexport const DATE: string = '__VF_BUILD_DATE__';\n","export const BravuraFont = {\n  glyphs: {\n    bracketTop: {\n      x_min: 0,\n      x_max: 469,\n      y_min: 0,\n      y_max: 295,\n      ha: 295,\n      o: 'm 0 0 l 180 0 b 674 390 410 43 616 150 b 675 405 675 396 675 400 b 664 425 675 416 671 422 b 628 405 651 425 635 415 b 157 179 613 389 432 199 l 12 179 b 0 168 3 179 0 177 z',\n    },\n    bracketBottom: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -295,\n      y_max: 0,\n      ha: 295,\n      o: 'm 0 -168 b 12 -179 0 -177 3 -179 l 157 -179 b 628 -405 432 -199 613 -389 b 664 -425 635 -415 651 -425 b 675 -405 671 -422 675 -416 b 674 -390 675 -400 675 -396 b 180 0 616 -150 410 -43 l 0 0 z',\n    },\n    barlineTick: {\n      x_min: 0,\n      x_max: 36,\n      y_min: 868,\n      y_max: 1120,\n      ha: 252,\n      o: 'm 52 1250 l 52 1613 l 0 1613 l 0 1250 z',\n    },\n    breathMarkTick: {\n      x_min: 0,\n      x_max: 500,\n      y_min: 0,\n      y_max: 502,\n      ha: 502,\n      o: 'm 9 367 b 0 374 6 372 3 374 b 9 334 0 367 0 343 b 179 19 40 312 164 121 b 192 0 179 3 186 0 b 210 19 197 0 207 6 b 698 701 245 197 507 658 b 720 714 714 704 720 711 b 698 723 720 720 711 723 b 197 186 455 714 210 202 b 186 176 194 179 189 176 b 176 186 179 176 176 186 b 9 367 143 266 27 359 z',\n    },\n    segno: {\n      x_min: 4,\n      x_max: 550,\n      y_min: -27,\n      y_max: 759,\n      ha: 786,\n      o: 'm 194 958 b 217 939 203 958 213 955 l 220 929 b 325 805 230 890 252 805 b 425 901 384 805 425 840 b 413 969 425 923 420 946 b 220 1060 390 1035 294 1060 b 6 793 120 1060 6 936 b 29 687 6 759 13 723 b 295 449 75 582 284 454 b 304 438 301 446 304 444 b 295 415 304 432 301 425 b 78 22 285 395 78 22 b 73 3 75 16 73 9 b 114 -39 73 -20 91 -39 b 150 -17 128 -39 143 -30 b 377 395 150 -17 373 386 b 395 402 377 393 389 402 b 704 176 416 397 704 312 b 621 75 704 120 670 82 l 616 73 b 562 138 586 73 562 94 l 562 154 b 485 249 562 209 526 249 b 468 246 480 249 474 248 b 366 153 415 233 366 210 b 540 -12 366 65 455 -12 b 600 -1 559 -12 579 -9 b 792 251 716 37 792 131 b 789 292 792 264 791 278 b 523 588 768 451 540 579 b 498 611 505 598 498 603 b 501 619 498 613 500 616 b 732 1032 508 631 732 1032 b 737 1053 736 1040 737 1045 b 697 1093 737 1076 719 1093 b 661 1073 683 1093 668 1086 b 423 647 661 1073 432 660 b 410 635 419 639 416 635 b 396 639 406 635 402 636 b 128 792 383 644 166 727 b 108 868 120 808 108 838 b 186 958 108 907 125 948 z m 598 671 b 680 589 598 626 635 589 b 762 671 726 589 762 626 b 680 753 762 717 726 753 b 598 671 635 753 598 717 z m 202 380 b 120 462 202 425 166 462 b 37 380 75 462 37 425 b 120 298 37 334 75 298 b 202 380 166 298 202 334 z',\n    },\n    coda: {\n      x_min: -4,\n      x_max: 955,\n      y_min: -158,\n      y_max: 898,\n      ha: 1056,\n      o: 'm 1349 576 l 1178 576 b 729 1083 1164 847 962 1064 l 729 1269 b 694 1293 729 1287 713 1293 b 660 1269 675 1293 660 1287 l 660 1083 b 210 576 426 1064 226 848 l 20 576 b -6 541 0 576 -6 560 b 20 507 -6 523 0 507 l 210 507 b 660 0 226 238 426 19 l 660 -202 b 694 -228 660 -222 675 -228 b 729 -202 713 -228 729 -222 l 729 0 b 1178 507 962 19 1164 238 l 1349 507 b 1375 541 1369 507 1375 523 b 1349 576 1375 560 1369 576 z m 940 576 l 729 576 l 729 1002 b 940 576 930 985 940 809 z m 660 1002 l 660 576 l 455 576 b 660 1002 455 809 455 985 z m 455 507 l 660 507 l 660 69 b 455 507 474 91 456 285 z m 729 69 l 729 507 l 940 507 b 729 69 936 287 909 91 z',\n    },\n    gClef: {\n      x_min: 0,\n      x_max: 671,\n      y_min: -658,\n      y_max: 1098,\n      ha: 1756,\n      o: 'm 541 598 b 550 625 539 615 541 616 b 824 1174 706 770 824 953 b 730 1509 824 1299 789 1423 b 655 1581 708 1541 671 1581 b 562 1512 635 1581 590 1544 b 420 1064 455 1394 420 1214 b 441 828 420 981 431 887 b 428 793 444 811 445 808 b 0 125 220 622 0 416 b 524 -363 0 -125 171 -363 b 624 -354 557 -363 595 -360 b 645 -367 639 -351 642 -350 b 684 -657 662 -464 684 -589 b 455 -896 684 -870 540 -896 b 340 -854 377 -896 340 -873 b 386 -829 340 -844 353 -840 b 482 -694 431 -816 482 -778 b 344 -547 482 -615 432 -547 b 190 -713 248 -547 190 -624 b 464 -948 190 -806 246 -948 b 747 -660 560 -948 747 -904 b 706 -351 747 -577 721 -441 b 724 -327 703 -334 704 -336 b 966 16 870 -269 966 -147 b 619 363 966 200 831 363 b 577 389 582 363 582 363 z m 677 1358 b 763 1240 724 1358 763 1319 b 513 851 763 1080 626 950 b 494 863 503 842 497 844 b 485 995 488 900 485 949 b 677 1358 485 1220 589 1358 z m 520 377 b 498 343 524 350 524 351 b 289 63 372 300 289 186 b 455 -192 289 -66 357 -158 b 494 -200 467 -196 484 -200 b 511 -184 505 -200 511 -193 b 490 -166 511 -174 500 -170 b 386 -12 429 -140 386 -78 b 530 157 386 71 442 132 b 559 145 553 163 556 161 l 631 -284 b 611 -304 634 -300 632 -300 b 530 -311 588 -308 559 -311 b 115 29 278 -311 115 -171 b 249 363 115 114 130 228 b 469 567 336 459 402 513 b 490 562 484 579 487 577 z m 619 148 b 635 168 616 166 618 170 b 848 -66 752 158 848 60 b 713 -271 848 -157 793 -230 b 690 -262 696 -279 693 -279 z',\n    },\n    cClef: {\n      x_min: 0,\n      x_max: 699,\n      y_min: -506,\n      y_max: 506,\n      ha: 1012,\n      o: 'm 331 694 b 301 724 331 714 321 724 l 300 724 b 269 694 279 724 269 714 l 269 -694 b 300 -724 269 -714 279 -724 l 301 -724 b 331 -694 321 -724 331 -714 l 331 -63 b 344 -55 331 -52 338 -53 b 472 -265 382 -65 442 -102 b 500 -301 477 -288 485 -301 b 530 -262 516 -301 523 -287 b 684 -128 549 -199 582 -128 b 804 -409 778 -128 804 -220 b 651 -683 804 -598 770 -683 b 528 -644 631 -683 528 -674 b 567 -622 528 -636 552 -628 b 625 -528 596 -612 625 -583 b 527 -429 625 -465 583 -429 b 416 -547 465 -429 416 -471 b 667 -729 416 -638 495 -729 b 1007 -413 903 -729 1007 -563 b 706 -76 1007 -215 897 -76 b 618 -89 664 -76 636 -84 b 576 -88 603 -94 589 -96 b 524 0 556 -75 524 -29 b 576 88 524 29 556 75 b 618 89 589 96 603 94 b 706 76 636 84 664 76 b 1007 413 897 76 1007 215 b 667 729 1007 563 903 729 b 416 547 495 729 416 638 b 527 429 416 471 465 429 b 625 528 583 429 625 465 b 567 622 625 583 596 612 b 528 644 552 628 528 636 b 651 683 528 674 631 683 b 804 409 770 683 804 598 b 684 128 804 220 778 128 b 530 262 582 128 549 199 b 500 301 523 287 516 301 b 472 265 485 301 477 288 b 344 55 442 102 382 65 b 331 63 338 53 331 52 z m 30 724 b 0 694 10 724 0 714 l 0 -694 b 30 -724 0 -714 10 -724 l 154 -724 b 184 -694 174 -724 184 -714 l 184 694 b 154 724 184 714 174 724 z',\n    },\n    fClef: {\n      x_min: -5,\n      x_max: 684,\n      y_min: -635,\n      y_max: 262,\n      ha: 897,\n      o: 'm 363 377 b 0 56 112 377 0 194 b 177 -158 0 -59 60 -158 b 330 -6 268 -158 330 -95 b 192 144 330 86 262 144 b 120 134 153 144 138 134 b 96 160 101 134 96 145 b 330 323 96 217 183 323 b 549 -53 482 323 549 173 b 14 -871 549 -455 350 -680 b -7 -897 1 -878 -7 -886 b 12 -914 -7 -906 -1 -914 b 36 -907 19 -914 27 -912 b 765 -40 390 -734 765 -478 b 363 377 765 210 612 377 z m 906 259 b 827 180 861 259 827 225 b 906 101 827 135 861 101 b 985 180 950 101 985 135 b 906 259 985 225 950 259 z m 907 -102 b 829 -180 863 -102 829 -135 b 907 -258 829 -225 863 -258 b 985 -180 952 -258 985 -225 b 907 -102 985 -135 952 -102 z',\n    },\n    unpitchedPercussionClef1: {\n      x_min: 0,\n      x_max: 382,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 230 -338 l 230 338 b 210 360 230 350 222 360 l 20 360 b 0 338 9 360 0 350 l 0 -338 b 20 -360 0 -350 9 -360 l 210 -360 b 230 -338 222 -360 230 -350 z m 550 338 b 530 360 550 350 541 360 l 340 360 b 320 338 328 360 320 350 l 320 -338 b 340 -360 320 -350 328 -360 l 530 -360 b 550 -338 541 -360 550 -350 z',\n    },\n    '6stringTabClef': {\n      x_min: -3,\n      x_max: 408,\n      y_min: -748,\n      y_max: 764,\n      ha: 1512,\n      o: 'm 557 1024 l 557 1100 l 26 1100 l 26 1024 l 249 1024 l 249 422 l 336 422 l 336 1024 z m 588 -328 l 350 348 l 238 348 l -4 -328 l 88 -328 l 160 -125 l 420 -125 l 491 -328 z m 397 -52 l 181 -52 l 292 256 z m 544 -883 b 420 -719 544 -802 507 -752 b 514 -572 482 -690 514 -639 b 314 -399 514 -472 442 -399 l 39 -399 l 39 -1077 l 344 -1077 b 544 -883 467 -1077 544 -995 z m 428 -583 b 292 -691 428 -652 389 -691 l 125 -691 l 125 -475 l 292 -475 b 428 -583 389 -475 428 -514 z m 458 -884 b 337 -1001 458 -949 418 -1001 l 125 -1001 l 125 -768 l 337 -768 b 458 -884 418 -768 458 -818 z',\n    },\n    timeSig0: {\n      x_min: 20,\n      x_max: 450,\n      y_min: -250,\n      y_max: 251,\n      ha: 501,\n      o: 'm 648 0 b 338 361 648 200 510 361 b 29 0 167 361 29 200 b 338 -360 29 -199 167 -360 b 648 0 510 -360 648 -199 z m 338 317 b 446 10 397 317 446 180 b 338 -295 446 -158 397 -295 b 230 10 278 -295 230 -158 b 338 317 230 180 278 317 z',\n    },\n    timeSig1: {\n      x_min: 20,\n      x_max: 314,\n      y_min: -250,\n      y_max: 251,\n      ha: 501,\n      o: 'm 35 19 b 29 0 35 19 29 10 b 45 -20 29 -7 33 -16 b 58 -23 50 -22 56 -23 b 78 -10 72 -23 78 -10 b 156 117 78 -10 140 89 b 170 131 161 127 167 131 b 179 111 176 131 179 120 l 179 -261 b 115 -315 179 -294 145 -315 b 91 -337 105 -315 91 -320 b 122 -360 91 -353 104 -360 l 429 -360 b 452 -337 452 -360 452 -337 b 431 -315 452 -337 452 -315 b 384 -265 410 -315 384 -289 l 384 328 b 356 361 384 351 376 360 b 281 356 336 361 300 356 b 206 360 253 356 228 357 b 199 361 203 360 200 361 b 173 334 184 361 179 347 z',\n    },\n    timeSig2: {\n      x_min: 20,\n      x_max: 426,\n      y_min: -257,\n      y_max: 254,\n      ha: 511,\n      o: 'm 606 -131 b 589 -111 606 -114 599 -111 b 570 -127 577 -111 573 -117 l 569 -128 b 513 -192 554 -164 543 -192 b 488 -187 505 -192 498 -190 b 445 -171 469 -180 459 -179 b 289 -137 416 -160 348 -137 b 236 -145 271 -137 252 -140 b 422 -42 268 -94 390 -50 b 613 147 523 -14 613 27 b 330 366 613 300 464 366 b 69 275 229 366 140 357 b 29 170 45 245 29 209 b 42 108 29 150 33 130 b 160 29 63 63 108 29 b 261 156 248 29 261 120 b 161 275 261 242 161 246 b 275 330 164 295 190 330 b 405 192 403 330 405 233 b 193 -102 405 60 297 -39 b 33 -317 114 -153 58 -223 l 32 -321 b 69 -370 32 -340 48 -370 b 203 -282 101 -370 118 -282 b 410 -360 261 -282 282 -360 b 606 -131 472 -360 583 -354 z',\n    },\n    timeSig3: {\n      x_min: 20,\n      x_max: 401,\n      y_min: -251,\n      y_max: 249,\n      ha: 500,\n      o: 'm 307 357 b 301 357 305 357 304 357 l 291 359 b 285 359 289 359 287 359 b 37 200 161 359 37 276 b 154 84 37 153 65 89 l 161 84 b 256 177 225 84 256 130 l 256 189 b 209 248 252 242 216 245 b 180 268 202 251 180 248 l 180 274 b 240 310 183 298 228 310 b 374 199 363 310 374 233 l 374 189 b 199 36 374 82 289 40 b 164 12 184 35 164 27 b 200 -6 164 -6 189 -6 b 379 -137 366 -6 379 -118 b 269 -307 379 -289 301 -307 b 256 -305 264 -307 258 -305 b 216 -282 245 -304 217 -304 l 216 -275 b 249 -180 216 -243 248 -222 b 145 -76 249 -120 207 -76 b 130 -78 140 -76 135 -76 b 60 -115 105 -82 78 -96 b 29 -203 36 -137 29 -171 b 275 -361 32 -315 134 -359 l 288 -361 b 577 -161 431 -361 577 -288 l 577 -151 b 537 -50 575 -109 564 -82 b 503 -20 528 -39 517 -29 l 472 -3 l 425 10 b 410 17 418 12 413 12 b 409 24 409 20 409 22 b 415 37 409 30 410 36 b 459 50 431 42 446 43 b 547 181 517 78 547 115 b 307 357 547 314 367 353 z',\n    },\n    timeSig4: {\n      x_min: 20,\n      x_max: 450,\n      y_min: -250,\n      y_max: 251,\n      ha: 501,\n      o: 'm 521 -107 l 521 202 b 504 226 521 213 520 226 b 475 213 491 226 484 223 l 338 48 b 325 14 333 40 325 32 l 325 -107 l 131 -107 b 481 336 246 -9 477 318 l 482 340 b 461 361 482 353 472 361 b 363 359 448 361 389 359 b 261 361 337 359 272 361 b 228 334 248 361 228 357 b 43 -105 228 156 86 -45 l 35 -117 b 35 -118 35 -117 35 -118 l 33 -120 b 29 -137 30 -127 29 -132 b 58 -161 29 -151 40 -161 l 325 -161 l 325 -252 b 268 -302 325 -291 294 -302 b 235 -330 245 -302 235 -315 b 262 -360 235 -344 240 -360 l 569 -360 b 598 -330 583 -360 598 -350 b 566 -301 598 -310 580 -301 b 521 -246 552 -301 521 -292 l 521 -161 l 626 -161 b 648 -134 641 -161 648 -151 b 626 -107 648 -117 642 -107 z',\n    },\n    timeSig5: {\n      x_min: 20,\n      x_max: 383,\n      y_min: -251,\n      y_max: 246,\n      ha: 497,\n      o: 'm 109 85 b 117 179 109 85 115 166 b 138 197 118 190 125 197 l 144 197 b 285 184 158 194 226 184 b 492 323 485 184 492 300 b 472 353 492 341 488 353 b 295 340 454 353 341 340 b 101 354 249 340 125 351 b 66 330 75 354 68 341 l 50 10 l 50 7 b 79 -14 50 -12 65 -14 b 111 14 94 -14 95 -1 b 209 62 125 29 160 62 b 357 -125 258 62 357 35 b 235 -304 357 -284 272 -304 b 202 -300 223 -304 212 -304 b 184 -279 194 -295 186 -289 b 202 -259 184 -269 194 -264 b 256 -163 235 -239 256 -203 b 144 -50 256 -99 206 -50 b 30 -157 66 -50 35 -107 b 29 -183 29 -166 29 -174 b 284 -361 29 -302 107 -361 b 552 -125 456 -361 552 -255 b 314 112 552 6 445 112 b 122 71 230 112 168 98 b 115 69 120 69 117 69 b 109 79 109 69 109 75 z',\n    },\n    timeSig6: {\n      x_min: 20,\n      x_max: 414,\n      y_min: -249,\n      y_max: 251,\n      ha: 500,\n      o: 'm 439 120 b 554 229 500 120 554 167 b 553 245 554 235 554 239 b 348 361 539 337 426 361 b 85 209 239 360 137 307 b 29 4 53 148 29 72 l 29 -1 b 73 -200 30 -68 42 -143 b 324 -359 132 -307 203 -359 b 513 -307 389 -359 461 -348 b 596 -137 563 -266 596 -202 b 379 72 596 -24 490 72 b 248 22 333 72 285 55 b 239 19 245 19 242 19 b 226 53 230 19 226 30 b 346 327 230 320 315 327 b 393 305 374 327 393 320 b 357 251 393 285 366 268 b 347 209 350 238 347 223 b 369 150 347 187 354 166 b 439 120 379 131 420 120 z m 320 3 b 405 -158 366 3 405 -69 b 320 -320 405 -248 366 -320 b 236 -158 274 -320 236 -248 b 320 3 236 -69 274 3 z',\n    },\n    timeSig7: {\n      x_min: 20,\n      x_max: 421,\n      y_min: -250,\n      y_max: 249,\n      ha: 499,\n      o: 'm 606 294 b 582 351 606 333 606 351 b 552 336 580 351 557 346 b 485 236 541 318 521 236 b 262 359 449 236 382 359 b 137 307 179 359 157 325 b 98 281 117 288 108 282 b 60 315 86 281 68 301 b 43 325 58 321 50 325 b 29 308 36 325 29 321 l 29 71 b 45 48 29 71 30 48 b 66 76 56 48 60 60 b 164 196 81 112 99 196 b 374 88 222 196 291 88 b 446 118 415 88 435 109 b 459 124 451 121 456 124 b 469 111 465 124 468 120 b 272 -112 469 71 359 -10 b 173 -315 217 -176 173 -259 b 200 -360 173 -346 173 -360 b 294 -347 226 -360 258 -347 b 412 -360 330 -347 397 -360 b 435 -307 426 -360 435 -348 b 606 288 435 -66 606 140 z',\n    },\n    timeSig8: {\n      x_min: 20,\n      x_max: 416,\n      y_min: -259,\n      y_max: 259,\n      ha: 518,\n      o: 'm 481 52 b 567 204 533 85 567 132 b 317 373 567 351 356 373 b 36 176 150 373 36 297 b 161 -16 36 76 92 23 b 29 -190 86 -52 29 -99 b 301 -373 29 -315 158 -373 b 599 -117 445 -373 599 -311 b 481 52 599 -30 549 17 z m 406 85 b 168 240 291 125 168 150 b 314 331 168 301 251 331 b 482 207 360 331 482 308 b 406 85 482 150 454 112 z m 295 -325 b 111 -183 199 -325 111 -276 b 225 -48 111 -125 161 -72 b 436 -219 330 -94 436 -124 b 295 -325 436 -276 392 -325 z',\n    },\n    timeSig9: {\n      x_min: 20,\n      x_max: 414,\n      y_min: -249,\n      y_max: 251,\n      ha: 500,\n      o: 'm 186 -117 b 71 -226 125 -117 71 -164 b 72 -242 71 -232 71 -236 b 276 -359 86 -334 199 -359 b 540 -206 386 -357 488 -304 b 596 -1 572 -145 596 -69 l 596 4 b 552 203 595 71 583 145 b 301 361 492 310 422 361 b 112 310 236 361 164 351 b 29 140 62 269 29 204 b 246 -69 29 27 135 -69 b 377 -19 292 -69 340 -52 b 386 -16 380 -16 383 -16 b 399 -50 395 -16 399 -27 b 279 -324 395 -317 310 -324 b 232 -302 251 -324 232 -317 b 268 -248 232 -282 259 -265 b 278 -206 275 -235 278 -220 b 256 -147 278 -184 271 -163 b 186 -117 246 -128 204 -117 z m 305 0 b 220 161 259 0 220 72 b 305 323 220 251 259 323 b 389 161 351 323 389 251 b 305 0 389 72 351 0 z',\n    },\n    timeSigCommon: {\n      x_min: 5,\n      x_max: 424,\n      y_min: -249,\n      y_max: 251,\n      ha: 500,\n      o: 'm 336 361 b 7 -14 131 361 7 180 b 101 -262 7 -108 42 -190 b 321 -359 156 -328 235 -359 b 611 -88 573 -359 611 -130 b 589 -56 611 -56 595 -56 b 567 -82 577 -56 567 -58 b 363 -311 567 -268 409 -311 b 184 40 246 -311 184 -197 b 372 327 184 278 294 327 b 477 278 446 327 477 292 b 451 246 477 265 472 246 b 360 140 393 246 360 184 b 471 32 360 58 431 32 b 580 156 471 32 580 36 b 336 361 580 344 363 361 z',\n    },\n    timeSigCutCommon: {\n      x_min: 0,\n      x_max: 418,\n      y_min: -359,\n      y_max: 361,\n      ha: 720,\n      o: 'm 573 -58 b 559 -82 567 -58 559 -60 b 354 -310 559 -266 400 -310 b 317 -305 340 -310 328 -308 b 302 -284 311 -304 302 -295 l 302 287 b 338 323 302 297 328 321 b 363 324 347 324 356 324 b 468 275 436 324 468 289 b 442 243 468 264 464 243 b 351 137 384 243 351 181 b 462 30 351 56 422 30 b 572 154 462 30 572 35 b 318 357 572 295 441 357 b 302 390 310 359 302 383 l 302 495 b 276 520 302 507 292 520 b 252 495 265 520 252 507 l 252 369 b 235 346 252 359 238 346 l 196 331 b 0 -14 66 275 0 122 b 225 -346 0 -150 86 -310 b 252 -382 235 -350 252 -369 l 252 -492 b 276 -517 252 -505 265 -517 b 302 -492 292 -517 302 -505 l 302 -379 b 318 -359 302 -370 308 -363 b 602 -85 563 -354 602 -130 b 579 -58 600 -58 586 -58 z m 252 -235 b 243 -252 252 -248 248 -252 b 236 -248 240 -252 238 -251 b 177 37 197 -193 177 -96 b 232 259 177 147 200 215 b 236 262 233 262 235 262 b 252 239 243 262 252 251 z',\n    },\n    timeSigPlus: {\n      x_min: -1,\n      x_max: 499,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 432 53 b 413 79 420 53 413 65 l 413 340 b 392 360 413 350 405 360 l 325 360 b 305 340 312 360 305 350 l 305 79 b 284 53 305 66 292 53 l 19 53 b -1 33 9 53 -1 46 l -1 -33 b 19 -55 -1 -46 9 -55 l 284 -55 b 305 -75 298 -55 305 -68 l 305 -340 b 325 -360 305 -350 312 -360 l 392 -360 b 413 -340 405 -360 413 -350 l 413 -78 b 433 -55 413 -63 423 -55 l 698 -55 b 719 -33 708 -55 719 -46 l 719 33 b 698 53 719 46 708 53 z',\n    },\n    timeSigPlusSmall: {\n      x_min: -1,\n      x_max: 255,\n      y_min: -133,\n      y_max: 123,\n      ha: 256,\n      o: 'm 220 20 b 210 33 215 20 210 26 l 210 166 b 200 177 210 171 206 177 l 166 177 b 156 166 160 177 156 171 l 156 33 b 145 20 156 27 150 20 l 10 20 b -1 10 4 20 -1 16 l -1 -24 b 10 -35 -1 -30 4 -35 l 145 -35 b 156 -46 153 -35 156 -42 l 156 -180 b 166 -192 156 -186 160 -192 l 200 -192 b 210 -180 206 -192 210 -186 l 210 -48 b 222 -35 210 -39 216 -35 l 356 -35 b 367 -24 361 -35 367 -30 l 367 10 b 356 20 367 16 361 20 z',\n    },\n    timeSigMinus: {\n      x_min: 0,\n      x_max: 448,\n      y_min: -35,\n      y_max: 40,\n      ha: 75,\n      o: 'm 645 39 b 619 58 645 49 634 58 l 27 58 b 0 39 12 58 0 49 l 0 -32 b 27 -50 0 -42 12 -50 l 619 -50 b 645 -32 634 -50 645 -42 z',\n    },\n    timeSigParensRight: {\n      x_min: 0,\n      x_max: 184,\n      y_min: -489,\n      y_max: 491,\n      ha: 980,\n      o: 'm 0 -696 b 3 -704 0 -698 1 -704 b 7 -703 4 -704 6 -704 b 265 1 187 -530 265 -282 b 12 701 265 289 187 531 b 4 707 12 701 6 707 b 0 696 1 707 0 703 l 0 665 b 4 644 0 665 0 651 b 167 1 112 503 167 315 b 6 -641 167 -311 109 -497 b 0 -658 3 -644 0 -651 z',\n    },\n    timeSigParensRightSmall: {\n      x_min: 0,\n      x_max: 110,\n      y_min: -251,\n      y_max: 249,\n      ha: 500,\n      o: 'm 0 -356 b 3 -361 0 -357 1 -361 b 158 0 112 -272 158 -145 b 4 359 158 147 109 272 b 0 353 3 359 0 357 l 0 338 b 3 327 0 338 0 330 b 91 0 60 246 91 160 b 4 -328 91 -160 62 -249 b 0 -337 3 -330 0 -333 z',\n    },\n    timeSigParensLeft: {\n      x_min: 0,\n      x_max: 184,\n      y_min: -489,\n      y_max: 491,\n      ha: 980,\n      o: 'm 265 -658 b 259 -641 265 -651 262 -644 b 98 1 156 -497 98 -311 b 261 644 98 315 153 503 b 265 665 265 651 265 665 l 265 696 b 261 707 265 703 264 707 b 253 701 259 707 253 701 b 0 1 78 531 0 289 b 258 -703 0 -282 78 -530 b 262 -704 259 -704 261 -704 b 265 -696 264 -704 265 -698 z',\n    },\n    timeSigParensLeftSmall: {\n      x_min: 0,\n      x_max: 110,\n      y_min: -251,\n      y_max: 249,\n      ha: 500,\n      o: 'm 158 -337 b 154 -328 158 -333 156 -330 b 68 0 96 -249 68 -160 b 156 327 68 160 98 246 b 158 338 158 330 158 338 l 158 353 b 154 359 158 357 156 359 b 0 0 49 272 0 147 b 156 -361 0 -145 46 -272 b 158 -356 157 -361 158 -357 z',\n    },\n    noteheadDoubleWhole: {\n      x_min: 0,\n      x_max: 599,\n      y_min: -155,\n      y_max: 155,\n      ha: 310,\n      o: 'm 13 223 b 0 212 4 223 0 217 l 0 -213 b 13 -223 0 -219 4 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 z m 96 223 b 82 212 88 223 82 217 l 82 -213 b 96 -223 82 -219 88 -223 l 114 -223 b 128 -213 121 -223 128 -219 l 128 212 b 114 223 128 217 121 223 z m 747 223 b 733 212 740 223 733 217 l 733 -213 b 747 -223 733 -219 740 -223 l 766 -223 b 780 -213 773 -223 780 -219 l 780 212 b 766 223 780 217 773 223 z m 829 223 b 815 212 824 223 815 217 l 815 -213 b 829 -223 815 -219 824 -223 l 848 -223 b 863 -213 857 -223 863 -219 l 863 212 b 848 223 863 217 857 223 z m 438 180 b 130 1 248 180 130 101 b 423 -180 130 -92 210 -180 b 733 1 657 -180 733 -98 b 438 180 733 104 572 180 z m 469 -145 b 331 -71 409 -145 369 -112 b 284 58 305 -37 284 12 b 400 147 284 131 333 147 b 577 -45 498 147 577 42 b 469 -145 577 -115 533 -145 z',\n    },\n    noteheadWhole: {\n      x_min: 0,\n      x_max: 422,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 311 180 b 0 3 120 180 0 101 b 297 -180 0 -94 82 -180 b 608 3 533 -180 608 -98 b 311 180 608 105 445 180 z m 160 91 b 274 148 176 141 229 148 b 452 -45 373 148 452 42 b 386 -141 452 -89 433 -130 b 341 -147 372 -145 356 -147 b 206 -72 289 -147 236 -112 b 156 56 177 -39 156 10 b 160 91 156 68 157 79 z',\n    },\n    noteheadHalf: {\n      x_min: 0,\n      x_max: 295,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 140 -180 b 425 60 377 -180 425 13 b 282 180 425 134 366 180 b 0 -60 68 180 0 14 b 140 -180 0 -137 60 -180 z m 108 -125 b 50 -92 78 -125 60 -109 b 42 -63 46 -84 42 -73 b 318 121 42 7 251 121 b 372 91 346 121 361 108 b 380 63 376 82 380 73 b 108 -125 380 1 177 -125 z',\n    },\n    noteheadBlack: {\n      x_min: 0,\n      x_max: 295,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 140 -180 b 425 60 268 -180 425 -62 b 285 180 425 134 367 180 b 0 -60 127 180 0 63 b 140 -180 0 -135 62 -180 z',\n    },\n    noteheadXDoubleWhole: {\n      x_min: 0,\n      x_max: 546,\n      y_min: -155,\n      y_max: 155,\n      ha: 310,\n      o: 'm 43 213 b 30 223 43 217 39 223 l 13 223 b 0 213 6 223 0 217 l 0 -215 b 13 -223 0 -219 6 -223 l 30 -223 b 43 -215 39 -223 43 -219 z m 704 213 b 693 223 704 217 698 223 l 672 223 b 660 213 667 223 660 217 l 660 163 b 634 180 655 173 645 180 l 505 180 b 484 173 498 180 490 177 l 393 95 l 300 173 b 279 180 294 177 287 180 l 151 180 b 125 163 141 180 130 173 l 125 213 b 112 223 125 217 118 223 l 94 223 b 82 213 86 223 82 217 l 82 -215 b 94 -223 82 -219 86 -223 l 112 -223 b 125 -215 118 -223 125 -219 l 125 -163 b 151 -180 130 -173 140 -180 l 279 -180 b 300 -171 287 -180 294 -177 l 393 -95 l 485 -171 b 505 -180 491 -177 498 -180 l 632 -180 b 660 -163 645 -180 655 -173 l 660 -215 b 672 -223 660 -219 667 -223 l 693 -223 b 704 -215 698 -223 704 -219 z m 786 213 b 772 223 786 217 780 223 l 755 223 b 740 213 747 223 740 217 l 740 -215 b 755 -223 740 -219 747 -223 l 772 -223 b 786 -215 780 -223 786 -219 z m 507 -141 l 393 -45 l 276 -141 l 207 -141 l 364 0 l 207 141 l 276 141 l 393 45 l 507 141 l 577 141 l 420 0 l 577 -141 z m 660 -132 l 518 0 l 660 132 z m 125 131 l 266 0 l 125 -131 z',\n    },\n    noteheadXWhole: {\n      x_min: 0,\n      x_max: 377,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 272 -95 l 364 -171 b 384 -180 370 -177 377 -180 l 511 -180 b 543 -148 528 -180 543 -164 b 531 -124 543 -140 539 -131 l 412 0 l 531 124 b 541 148 539 131 541 140 b 513 180 541 164 528 180 l 384 180 b 364 171 377 180 370 177 l 272 94 l 179 171 b 158 180 173 177 166 180 l 30 180 b 0 148 16 180 0 164 b 12 124 0 140 4 131 l 132 0 l 12 -124 b 1 -148 4 -131 1 -140 b 32 -180 1 -164 14 -180 l 158 -180 b 179 -171 166 -180 173 -177 z m 386 -141 l 272 -45 l 157 -141 l 88 -141 l 245 0 l 88 141 l 157 141 l 272 45 l 386 141 l 456 141 l 300 0 l 456 -141 z',\n    },\n    noteheadXHalf: {\n      x_min: 0,\n      x_max: 334,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 295 180 b 271 170 287 180 278 177 l 209 98 l 115 171 b 95 180 109 177 104 180 l 36 180 b 4 148 19 180 4 164 b 14 124 4 140 7 132 l 140 22 l 7 -127 b 0 -148 3 -131 0 -138 b 32 -180 0 -166 14 -180 l 184 -180 b 209 -170 193 -180 203 -177 l 271 -99 l 363 -171 b 384 -180 370 -176 377 -180 l 445 -180 b 478 -147 461 -180 478 -163 b 465 -125 478 -138 474 -131 l 341 -22 l 474 127 b 481 148 480 131 481 138 b 448 180 481 166 468 180 z m 36 148 l 95 148 l 233 33 l 334 148 l 410 148 l 274 -6 l 445 -148 l 384 -148 l 248 -35 l 147 -148 l 71 -148 l 206 4 z',\n    },\n    noteheadXBlack: {\n      x_min: 0,\n      x_max: 290,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 410 -143 l 239 0 l 410 144 b 418 160 415 147 418 154 b 399 180 418 171 408 180 b 389 177 396 180 392 179 l 207 26 l 29 177 b 17 180 26 179 22 180 b 0 161 7 180 0 170 b 7 144 0 156 3 148 l 179 0 l 7 -143 b 0 -158 1 -147 0 -153 b 19 -180 0 -170 7 -180 b 29 -176 23 -180 26 -179 l 207 -24 l 389 -176 b 399 -180 392 -179 396 -180 b 418 -160 410 -180 418 -168 b 410 -143 418 -153 415 -147 z',\n    },\n    noteheadCircleXDoubleWhole: {\n      x_min: 0,\n      x_max: 422,\n      y_min: -155,\n      y_max: 155,\n      ha: 310,\n      o: 'm 576 223 b 563 213 570 223 563 219 l 563 -215 b 576 -223 563 -219 570 -223 l 595 -223 b 608 -215 602 -223 608 -219 l 608 213 b 595 223 608 219 602 223 z m 497 223 b 484 213 491 223 484 219 l 484 -215 b 497 -223 484 -219 491 -223 l 516 -223 b 528 -215 523 -223 528 -219 l 528 213 b 516 223 528 219 523 223 z m 94 223 b 81 213 86 223 81 219 l 81 -215 b 94 -223 81 -219 86 -223 l 111 -223 b 124 -215 118 -223 124 -219 l 124 213 b 111 223 124 219 118 223 z m 13 223 b 0 213 6 223 0 219 l 0 -215 b 13 -223 0 -219 6 -223 l 30 -223 b 45 -215 37 -223 45 -219 l 45 213 b 30 223 45 219 37 223 z m 304 180 b 127 0 206 180 127 101 b 304 -180 127 -99 206 -180 b 482 0 405 -180 482 -99 b 304 180 482 101 405 180 z m 305 32 l 225 112 b 304 140 248 130 275 140 b 387 112 336 140 364 130 z m 278 1 l 193 -82 b 216 0 199 -59 216 -30 b 194 85 216 33 203 50 z m 334 1 l 418 84 b 389 0 402 50 389 23 b 418 -81 389 -30 409 -60 z m 305 -27 l 389 -109 b 304 -138 364 -128 336 -138 b 222 -109 274 -138 246 -128 z',\n    },\n    noteheadCircleXWhole: {\n      x_min: 0,\n      x_max: 249,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 179 180 b 0 0 81 180 0 101 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 101 278 180 z m 180 32 l 99 112 b 179 140 121 130 150 140 b 262 112 210 140 238 130 z m 151 1 l 68 -82 b 86 0 73 -59 86 -30 b 68 85 86 33 78 50 z m 209 1 l 291 84 b 269 0 276 50 269 32 b 291 -79 269 -26 282 -58 z m 180 -27 l 264 -111 b 179 -138 239 -128 210 -138 b 96 -111 148 -138 120 -128 z',\n    },\n    noteheadCircleXHalf: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 179 180 b 0 0 81 180 0 101 b 179 -180 0 -99 81 -180 b 360 0 278 -180 360 -99 b 179 180 360 101 278 180 z m 186 37 l 131 92 b 220 124 153 109 189 124 b 262 112 236 124 249 121 z m 215 7 l 291 84 b 304 42 300 71 304 58 b 271 -49 304 10 288 -26 z m 145 -6 l 68 -82 b 56 -42 59 -71 56 -58 b 89 52 56 -9 72 27 z m 174 -33 l 230 -89 b 140 -124 206 -108 171 -124 b 96 -111 122 -124 109 -121 z',\n    },\n    noteheadCircleX: {\n      x_min: 0,\n      x_max: 249,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 179 180 b 0 0 81 180 0 99 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 99 278 180 z m 261 112 l 180 30 l 98 112 b 179 138 121 128 148 138 b 261 112 210 138 238 128 z m 317 0 b 292 -82 317 -30 308 -59 l 209 1 l 291 84 b 317 0 307 60 317 30 z m 40 0 b 69 84 40 32 50 60 l 151 1 l 68 -84 b 40 0 49 -60 40 -30 z m 95 -111 l 180 -27 l 262 -111 b 179 -138 239 -128 210 -138 b 95 -111 148 -138 120 -128 z',\n    },\n    noteheadCircledDoubleWhole: {\n      x_min: 0,\n      x_max: 603,\n      y_min: -218,\n      y_max: 213,\n      ha: 431,\n      o: 'm 770 223 l 752 223 b 737 213 744 223 737 219 l 737 59 b 435 307 710 203 582 307 b 128 48 281 307 156 197 l 128 213 b 115 223 128 219 122 223 l 96 223 b 84 213 89 223 84 219 l 84 -215 b 96 -223 84 -220 89 -223 l 115 -223 b 128 -215 122 -223 128 -220 l 128 -56 b 435 -314 156 -206 282 -314 b 654 -223 517 -314 595 -282 b 737 -66 697 -180 726 -125 l 737 -215 b 752 -223 737 -220 744 -223 l 770 -223 b 785 -215 778 -223 785 -220 l 785 213 b 770 223 785 219 778 223 z m 435 274 b 698 85 556 274 661 194 b 439 180 641 143 534 180 b 176 99 320 180 228 148 b 435 274 217 203 318 274 z m 32 223 l 13 223 b 0 213 6 223 0 219 l 0 -215 b 13 -223 0 -220 6 -223 l 32 -223 b 45 -215 40 -223 45 -220 l 45 213 b 32 223 45 219 40 223 z m 852 223 l 835 223 b 819 213 828 223 819 219 l 819 -215 b 835 -223 819 -220 828 -223 l 852 -223 b 868 -215 861 -223 868 -220 l 868 213 b 852 223 868 219 861 223 z m 580 -46 b 514 -143 580 -91 562 -131 b 472 -148 501 -147 487 -148 b 364 -105 433 -148 395 -131 l 334 -73 b 285 58 307 -39 285 10 b 289 91 285 69 287 79 b 403 145 305 140 357 145 b 580 -46 501 145 580 42 z m 435 -282 b 176 -108 318 -282 217 -209 b 425 -180 222 -151 301 -180 b 691 -109 563 -180 647 -153 b 435 -282 651 -210 550 -282 z',\n    },\n    noteheadCircledWhole: {\n      x_min: 0,\n      x_max: 437,\n      y_min: -225,\n      y_max: 211,\n      ha: 436,\n      o: 'm 314 304 b 0 -10 140 304 0 164 b 314 -324 0 -183 141 -324 b 629 -10 487 -324 629 -183 b 314 304 629 164 488 304 z m 314 275 b 588 73 441 275 549 193 b 321 180 536 137 420 180 b 48 88 190 180 95 143 b 314 275 85 199 199 275 z m 393 -141 b 350 -147 379 -145 364 -147 b 314 -141 337 -147 325 -145 b 167 55 235 -120 167 -26 b 173 91 167 66 168 79 b 284 145 187 138 239 145 b 459 -48 382 145 459 39 b 393 -141 459 -91 438 -131 z m 314 -294 b 40 -86 187 -294 75 -207 b 305 -180 81 -141 164 -180 b 588 -86 464 -180 550 -143 b 314 -294 554 -209 442 -294 z',\n    },\n    noteheadCircledHalf: {\n      x_min: -18,\n      x_max: 311,\n      y_min: -162,\n      y_max: 167,\n      ha: 329,\n      o: 'm 212 240 b -26 3 81 240 -26 134 b 212 -233 -26 -127 81 -233 b 448 3 341 -233 448 -127 b 212 240 448 134 341 240 z m 212 220 b 363 160 271 220 324 197 b 281 180 341 173 312 180 b 0 -52 76 180 6 26 b -6 3 -4 -35 -6 -16 b 212 220 -6 122 92 220 z m 50 -92 b 42 -63 46 -84 42 -73 b 173 63 42 -33 73 7 b 317 120 243 105 288 120 b 369 89 344 120 359 107 b 377 62 374 81 377 72 b 248 -66 377 33 348 -1 b 108 -125 183 -109 138 -125 b 50 -92 78 -125 60 -109 z m 212 -215 b 84 -171 164 -215 120 -199 b 138 -180 101 -179 120 -180 b 422 56 372 -180 420 7 b 429 3 426 40 429 22 b 212 -215 429 -117 333 -215 z',\n    },\n    noteheadCircledBlack: {\n      x_min: -21,\n      x_max: 321,\n      y_min: -171,\n      y_max: 167,\n      ha: 338,\n      o: 'm 216 240 b -30 -3 82 240 -30 131 b 216 -246 -30 -137 82 -246 b 462 -3 351 -246 462 -137 b 216 240 462 131 351 240 z m 216 220 b 372 160 276 220 331 197 b 284 180 348 174 317 180 b 0 -59 127 180 0 65 l 0 -66 b -10 -3 -6 -45 -10 -24 b 216 220 -10 120 92 220 z m 216 -226 b 56 -158 153 -226 96 -200 b 140 -180 79 -171 107 -180 b 425 60 268 -180 425 -60 b 422 88 425 71 425 79 b 442 -3 435 60 442 29 b 216 -226 442 -125 341 -226 z',\n    },\n    noteheadDoubleWholeSquare: {\n      x_min: 0,\n      x_max: 416,\n      y_min: -190,\n      y_max: 198,\n      ha: 388,\n      o: 'm 563 217 b 528 180 563 192 544 180 l 62 180 b 36 215 52 180 36 192 l 36 268 b 17 285 36 278 27 285 b 0 268 7 285 0 278 l 0 -255 b 17 -274 0 -264 7 -274 b 36 -255 27 -274 36 -264 l 36 -213 b 66 -180 36 -197 53 -180 l 528 -180 b 563 -209 549 -180 563 -196 l 563 -255 b 580 -274 563 -264 570 -274 b 599 -255 590 -274 599 -264 l 599 268 b 580 285 599 278 590 285 b 563 268 570 285 563 278 z m 36 23 b 111 71 36 55 58 71 l 487 71 b 563 30 533 71 563 53 l 563 -22 b 487 -68 563 -53 533 -68 l 117 -68 b 36 -22 66 -68 36 -49 z',\n    },\n    noteheadSquareWhite: {\n      x_min: 0,\n      x_max: 313,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 451 -180 l 451 180 l 0 180 l 0 -180 z m 40 -138 l 40 140 l 410 140 l 410 -138 z',\n    },\n    noteheadSquareBlack: {\n      x_min: 0,\n      x_max: 313,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 451 -180 l 451 180 l 0 180 l 0 -180 z',\n    },\n    noteheadTriangleDownDoubleWhole: {\n      x_min: 0,\n      x_max: 483,\n      y_min: -155,\n      y_max: 155,\n      ha: 310,\n      o: 'm 696 213 b 681 223 696 219 690 223 l 662 223 b 648 213 655 223 648 219 l 648 -213 b 662 -223 648 -217 655 -223 l 681 -223 b 696 -213 690 -223 696 -217 z m 619 213 b 605 223 619 219 613 223 l 588 223 b 573 213 580 223 573 219 l 573 174 b 562 180 570 177 566 180 l 134 180 b 122 174 130 180 125 177 l 122 213 b 108 223 122 219 117 223 l 91 223 b 76 213 84 223 76 219 l 76 -213 b 91 -223 76 -217 84 -223 l 108 -223 b 122 -213 117 -223 122 -217 l 122 154 l 334 -173 b 346 -180 337 -177 341 -180 b 357 -173 351 -180 354 -177 l 573 154 l 573 -213 b 588 -223 573 -217 580 -223 l 605 -223 b 619 -213 613 -223 619 -217 z m 32 -223 b 46 -213 40 -223 46 -217 l 46 213 b 32 223 46 219 40 223 l 14 223 b 0 213 7 223 0 219 l 0 -213 b 14 -223 0 -217 7 -223 z m 428 98 b 346 -107 428 17 377 -53 b 265 96 315 -55 265 17 b 289 137 265 109 275 137 l 406 137 b 428 98 419 137 428 111 z',\n    },\n    noteheadTriangleDownWhole: {\n      x_min: 0,\n      x_max: 319,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 14 180 b 0 166 6 180 0 173 b 1 158 0 163 1 160 l 216 -173 b 228 -180 219 -177 225 -180 b 239 -173 233 -180 238 -177 l 458 158 b 459 166 458 160 459 163 b 445 180 459 173 454 180 z m 288 137 b 310 98 301 137 310 111 b 228 -108 310 17 259 -55 b 145 96 197 -56 145 17 b 170 137 145 109 157 137 z',\n    },\n    noteheadTriangleDownHalf: {\n      x_min: 0,\n      x_max: 285,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 196 -180 b 209 -173 200 -180 206 -177 l 408 157 b 410 166 409 160 410 163 b 396 180 410 173 403 180 l 14 180 b 0 166 4 180 0 173 b 1 158 0 163 0 161 l 183 -173 b 196 -180 184 -174 190 -180 z m 164 138 l 295 138 l 179 -76 l 114 37 z',\n    },\n    noteheadTriangleDownBlack: {\n      x_min: 0,\n      x_max: 292,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 207 -180 l 420 180 l 0 180 z',\n    },\n    noteheadTriangleUpDoubleWhole: {\n      x_min: 0,\n      x_max: 483,\n      y_min: -155,\n      y_max: 155,\n      ha: 310,\n      o: 'm 696 213 b 681 223 696 217 690 223 l 662 223 b 648 213 655 223 648 217 l 648 -213 b 662 -223 648 -219 655 -223 l 681 -223 b 696 -213 690 -223 696 -219 z m 619 213 b 605 223 619 217 613 223 l 588 223 b 573 213 580 223 573 217 l 573 -154 l 357 173 b 346 180 354 177 351 180 b 334 173 341 180 337 177 l 122 -154 l 122 213 b 108 223 122 217 117 223 l 91 223 b 76 213 84 223 76 217 l 76 -213 b 91 -223 76 -219 84 -223 l 108 -223 b 122 -213 117 -223 122 -219 l 122 -174 b 134 -180 125 -177 130 -180 l 562 -180 b 573 -174 566 -180 570 -177 l 573 -213 b 588 -223 573 -219 580 -223 l 605 -223 b 619 -213 613 -223 619 -219 z m 32 223 l 14 223 b 0 213 7 223 0 217 l 0 -213 b 14 -223 0 -219 7 -223 l 32 -223 b 46 -213 40 -223 46 -219 l 46 213 b 32 223 46 217 40 223 z m 428 -98 b 406 -137 428 -111 419 -137 l 289 -137 b 265 -96 275 -137 265 -109 b 346 107 265 -17 315 55 b 428 -98 377 53 428 -17 z',\n    },\n    noteheadTriangleUpWhole: {\n      x_min: 0,\n      x_max: 319,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 445 -180 b 459 -166 454 -180 459 -173 b 458 -158 459 -163 458 -160 l 239 173 b 228 180 238 177 233 180 b 216 173 225 180 219 177 l 1 -158 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 6 -180 z m 170 -137 b 145 -96 157 -137 145 -109 b 228 108 145 -17 197 56 b 310 -98 259 55 310 -17 b 288 -137 310 -111 301 -137 z',\n    },\n    noteheadTriangleUpHalf: {\n      x_min: 0,\n      x_max: 285,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 215 180 b 202 173 210 180 204 177 l 3 -157 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 7 -180 l 396 -180 b 410 -166 406 -180 410 -173 b 409 -158 410 -163 410 -161 l 228 173 b 215 180 226 174 220 180 z m 246 -138 l 115 -138 l 232 76 l 297 -37 z',\n    },\n    noteheadTriangleUpBlack: {\n      x_min: 0,\n      x_max: 293,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 422 -180 l 207 180 l 0 -180 z',\n    },\n    noteheadSlashedDoubleWhole1: {\n      x_min: 0,\n      x_max: 596,\n      y_min: -179,\n      y_max: 168,\n      ha: 347,\n      o: 'm 618 135 l 697 206 b 704 222 703 210 704 216 b 698 236 704 226 703 232 b 683 242 694 239 688 242 b 670 238 677 242 674 240 l 575 153 b 435 180 531 168 481 180 b 128 0 246 180 128 98 b 236 -148 128 -58 160 -114 l 153 -222 b 145 -238 148 -226 145 -232 b 151 -252 145 -242 148 -248 b 167 -258 156 -256 161 -258 b 181 -253 171 -258 177 -256 l 282 -164 b 420 -180 320 -173 366 -180 b 729 0 654 -180 729 -98 b 618 135 729 55 681 104 z m 114 223 l 95 223 b 82 212 88 223 82 217 l 82 -215 b 95 -223 82 -219 88 -223 l 114 -223 b 127 -215 121 -223 127 -219 l 127 212 b 114 223 127 217 121 223 z m 32 223 l 13 223 b 0 212 6 223 0 217 l 0 -215 b 13 -223 0 -219 6 -223 l 32 -223 b 45 -215 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 z m 844 223 l 825 223 b 811 212 819 223 811 217 l 811 -215 b 825 -223 811 -219 819 -223 l 844 -223 b 858 -215 851 -223 858 -219 l 858 212 b 844 223 858 217 851 223 z m 763 223 l 743 223 b 730 212 736 223 730 217 l 730 -215 b 743 -223 730 -219 736 -223 l 763 -223 b 776 -215 769 -223 776 -219 l 776 212 b 763 223 776 217 769 223 z m 282 56 b 285 89 282 68 284 79 b 399 144 301 137 354 144 b 510 95 441 144 480 124 l 327 -68 b 282 56 301 -35 282 13 z m 572 -72 b 508 -141 564 -108 544 -132 b 467 -147 495 -145 481 -147 b 360 -104 428 -147 389 -128 l 356 -98 l 537 63 b 575 -46 560 30 575 -9 b 572 -72 575 -55 573 -65 z',\n    },\n    noteheadSlashedWhole1: {\n      x_min: -22,\n      x_max: 433,\n      y_min: -157,\n      y_max: 148,\n      ha: 305,\n      o: 'm 484 140 b 308 180 431 166 367 180 b 0 1 118 180 0 99 b 73 -128 0 -48 22 -95 l -22 -190 b -32 -206 -27 -194 -32 -200 b -27 -217 -32 -210 -30 -215 b -12 -226 -23 -223 -17 -226 b 0 -223 -7 -226 -4 -225 l 112 -150 b 294 -180 157 -168 217 -180 b 602 1 526 -180 602 -98 b 523 118 602 48 570 86 l 613 177 b 624 193 619 181 624 187 b 619 204 624 197 622 200 b 603 213 615 209 609 213 b 592 209 599 213 596 212 z m 190 -52 b 154 56 170 -20 154 19 b 160 91 154 68 156 79 b 271 147 174 138 226 147 b 396 82 321 147 364 121 z m 419 50 b 446 -48 436 19 446 -14 b 337 -147 446 -120 402 -147 b 301 -141 327 -147 314 -144 b 235 -104 276 -134 253 -120 b 215 -84 226 -98 220 -91 z',\n    },\n    noteheadSlashedHalf1: {\n      x_min: -67,\n      x_max: 386,\n      y_min: -142,\n      y_max: 160,\n      ha: 302,\n      o: 'm 552 222 b 536 230 549 228 543 230 b 524 228 533 230 528 230 l 389 140 b 281 180 364 164 327 180 b 0 -60 65 180 0 13 b 7 -105 0 -78 3 -92 l -88 -167 b -96 -184 -94 -171 -96 -177 b -94 -194 -96 -187 -95 -192 b -76 -204 -89 -202 -84 -204 b -66 -202 -73 -204 -69 -203 l 29 -140 b 137 -180 55 -167 92 -180 b 420 59 374 -180 420 13 b 412 107 420 76 419 92 l 546 194 b 556 210 552 197 556 204 b 552 222 556 213 554 217 z m 315 120 b 347 112 328 120 338 117 l 46 -82 b 42 -63 43 -76 42 -69 b 315 120 42 6 248 120 z m 108 -124 b 69 -114 91 -124 79 -120 l 372 81 b 376 63 374 75 376 69 b 108 -124 376 0 174 -124 z',\n    },\n    noteheadSlashedBlack1: {\n      x_min: -80,\n      x_max: 375,\n      y_min: -165,\n      y_max: 167,\n      ha: 332,\n      o: 'm 518 240 b 507 236 514 240 510 239 l 384 148 b 284 180 359 168 324 180 b 0 -62 127 180 0 63 b 13 -115 0 -82 4 -99 l -107 -202 b -115 -217 -111 -204 -115 -212 b -111 -229 -115 -222 -114 -225 b -95 -238 -108 -235 -101 -238 b -84 -235 -91 -238 -86 -236 l 39 -148 b 140 -180 63 -170 99 -180 b 425 59 268 -180 425 -62 b 410 117 425 81 420 101 l 530 203 b 540 219 536 207 540 213 b 518 240 540 229 528 240 z',\n    },\n    noteheadSlashedDoubleWhole2: {\n      x_min: 0,\n      x_max: 596,\n      y_min: -178,\n      y_max: 169,\n      ha: 347,\n      o: 'm 729 0 b 435 180 729 102 569 180 b 278 156 374 180 321 170 l 184 239 b 170 243 181 242 176 243 b 154 238 166 243 158 240 b 150 223 151 233 150 228 b 156 207 150 217 153 212 l 233 138 b 128 0 167 107 128 56 b 420 -180 128 -94 210 -180 b 575 -164 482 -180 533 -174 l 672 -252 b 687 -256 677 -255 681 -256 b 703 -251 691 -256 698 -255 b 707 -236 706 -246 707 -240 b 701 -220 707 -230 706 -225 l 619 -150 b 729 0 700 -117 729 -62 z m 114 223 l 95 223 b 82 213 88 223 82 217 l 82 -213 b 95 -223 82 -219 88 -223 l 114 -223 b 127 -213 121 -223 127 -219 l 127 213 b 114 223 127 217 121 223 z m 32 223 l 13 223 b 0 213 6 223 0 217 l 0 -213 b 13 -223 0 -219 6 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 213 b 32 223 45 217 39 223 z m 844 223 l 825 223 b 811 213 819 223 811 217 l 811 -213 b 825 -223 811 -219 819 -223 l 844 -223 b 858 -213 851 -223 858 -219 l 858 213 b 844 223 858 217 851 223 z m 763 223 l 743 223 b 730 213 736 223 730 217 l 730 -213 b 743 -223 730 -219 736 -223 l 763 -223 b 776 -213 769 -223 776 -219 l 776 213 b 763 223 776 217 769 223 z m 312 124 b 399 144 336 141 369 144 b 575 -46 495 144 575 40 b 563 -98 575 -65 570 -81 z m 508 -141 b 467 -147 495 -145 481 -147 b 360 -104 428 -147 389 -128 b 330 -72 350 -95 340 -82 b 282 56 304 -37 282 10 b 285 89 282 68 284 79 b 536 -130 287 89 304 75 z',\n    },\n    noteheadSlashedWhole2: {\n      x_min: -18,\n      x_max: 436,\n      y_min: -154,\n      y_max: 151,\n      ha: 305,\n      o: 'm 531 -128 b 602 1 582 -96 602 -49 b 308 180 602 104 441 180 b 114 144 230 180 164 166 l 4 215 b -6 217 1 217 -3 217 b -22 209 -13 217 -19 215 b -26 197 -24 204 -26 200 b -16 181 -26 192 -22 184 l 75 121 b 0 1 27 91 0 49 b 294 -180 0 -94 82 -180 b 491 -150 379 -180 444 -168 l 598 -219 b 608 -222 600 -222 605 -222 b 624 -213 615 -222 621 -219 b 628 -202 626 -209 628 -206 b 618 -186 628 -196 624 -189 z m 168 108 b 271 147 190 141 233 147 b 446 -48 369 147 446 40 b 445 -72 446 -56 446 -63 z m 154 69 l 429 -109 b 382 -141 419 -125 402 -135 b 337 -147 367 -144 351 -147 b 301 -141 327 -147 314 -144 b 235 -104 276 -134 253 -120 b 203 -72 223 -94 213 -82 b 154 58 177 -39 154 12 z',\n    },\n    noteheadSlashedHalf2: {\n      x_min: -73,\n      x_max: 380,\n      y_min: -134,\n      y_max: 168,\n      ha: 302,\n      o: 'm 537 -156 l 383 -58 b 422 60 413 -9 422 39 b 281 180 422 134 364 180 b 101 127 203 180 144 157 l -75 239 b -85 242 -78 242 -82 242 b -102 233 -92 242 -98 239 b -105 222 -104 229 -105 225 b -95 206 -105 216 -102 209 l 69 99 b 0 -59 19 46 0 -20 b 138 -180 0 -135 60 -180 b 359 -88 248 -180 317 -138 l 516 -190 b 527 -193 520 -192 524 -193 b 543 -183 534 -193 540 -190 b 547 -173 546 -180 547 -176 b 537 -156 547 -166 543 -160 z m 367 92 b 377 63 374 82 377 73 b 318 -14 377 43 361 20 l 184 72 b 317 121 248 108 289 121 b 367 92 344 121 357 109 z m 248 -66 b 108 -124 181 -108 138 -124 b 50 -92 78 -124 60 -109 b 42 -63 46 -84 42 -73 b 145 49 42 -35 68 0 l 285 -40 b 248 -66 274 -49 261 -56 z',\n    },\n    noteheadSlashedBlack2: {\n      x_min: -79,\n      x_max: 376,\n      y_min: -164,\n      y_max: 168,\n      ha: 332,\n      o: 'm 531 -200 l 363 -78 b 425 59 402 -37 425 10 b 285 180 425 132 367 180 b 92 114 210 180 144 154 l -81 238 b -94 242 -85 240 -89 242 b -111 232 -99 242 -107 238 b -114 220 -112 229 -114 225 b -105 204 -114 215 -111 207 l 62 85 b 0 -62 23 43 0 -9 b 140 -180 0 -137 62 -180 b 331 -108 204 -180 275 -153 l 507 -233 b 520 -236 511 -236 517 -236 b 537 -228 527 -236 533 -233 b 541 -216 540 -225 541 -220 b 531 -200 541 -210 537 -203 z',\n    },\n    noteheadDiamondDoubleWhole: {\n      x_min: 0,\n      x_max: 432,\n      y_min: -155,\n      y_max: 155,\n      ha: 310,\n      o: 'm 592 223 b 580 215 585 223 580 219 l 580 -215 b 592 -223 580 -219 585 -223 l 608 -223 b 622 -215 615 -223 622 -219 l 622 215 b 608 223 622 219 615 223 z m 517 223 b 504 215 510 223 504 219 l 504 -215 b 517 -223 504 -219 510 -223 l 533 -223 b 544 -215 540 -223 544 -219 l 544 215 b 533 223 544 219 540 223 z m 246 179 b 240 180 243 179 242 180 b 232 176 236 180 233 179 l 118 22 b 117 17 117 20 117 19 l 117 215 b 104 223 117 219 111 223 l 88 223 b 75 215 81 223 75 219 l 75 -215 b 88 -223 75 -219 81 -223 l 104 -223 b 117 -215 111 -223 117 -219 l 117 14 l 118 14 b 122 7 118 12 120 10 l 374 -179 b 382 -180 376 -180 379 -180 b 390 -177 384 -180 387 -180 l 503 -23 l 503 -17 b 500 -9 503 -13 503 -10 z m 12 223 b 0 215 4 223 0 219 l 0 -215 b 12 -223 0 -219 4 -223 l 29 -223 b 40 -215 36 -223 40 -219 l 40 215 b 29 223 40 219 36 223 z m 183 39 b 179 46 181 39 179 43 b 229 112 226 112 228 112 b 236 109 229 112 233 111 l 436 -39 b 439 -46 438 -39 439 -42 b 390 -112 393 -111 392 -112 b 383 -109 389 -112 386 -111 z',\n    },\n    noteheadDiamondWhole: {\n      x_min: 0,\n      x_max: 270,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 386 -23 b 389 -16 387 -20 389 -19 b 383 -7 389 -13 386 -9 l 130 179 b 122 180 128 180 125 180 b 115 177 120 180 117 180 l 3 23 b 0 17 1 20 0 19 b 4 7 0 16 3 10 l 258 -179 b 264 -180 261 -179 262 -180 b 272 -176 268 -180 271 -179 z m 66 40 b 62 48 65 42 62 45 l 109 111 b 112 112 109 112 111 112 b 118 111 115 112 117 111 l 320 -37 b 324 -46 323 -39 324 -42 b 275 -111 278 -111 276 -111 b 268 -108 272 -111 271 -109 z',\n    },\n    noteheadDiamondHalf: {\n      x_min: 0,\n      x_max: 251,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 359 -7 b 361 0 360 -6 361 -3 b 359 7 361 3 360 4 l 189 177 b 180 180 186 179 183 180 b 174 177 179 180 176 179 l 4 7 b 0 0 1 4 0 3 b 4 -7 0 -3 1 -6 l 174 -177 b 180 -180 176 -180 179 -180 b 189 -177 183 -180 186 -180 z m 266 26 b 138 -71 266 -12 176 -71 b 96 -50 121 -71 108 -63 b 88 -24 89 -43 88 -32 b 215 73 88 13 177 73 b 266 26 238 73 266 50 z',\n    },\n    noteheadDiamondBlack: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 357 -6 b 360 1 359 -4 360 -1 b 357 9 360 4 359 7 l 189 177 b 180 180 187 179 184 180 b 171 177 177 180 173 179 l 3 9 b 0 1 0 6 0 4 b 4 -7 0 -1 1 -4 l 173 -177 b 180 -180 176 -180 177 -180 b 187 -177 181 -180 184 -180 z',\n    },\n    noteheadParenthesis: {\n      x_min: -73,\n      x_max: 368,\n      y_min: -180,\n      y_max: 182,\n      ha: 362,\n      o: 'm 52 -249 b -30 -144 3 -212 -14 -190 b -52 4 -45 -102 -52 -56 b 52 252 -52 118 -36 179 l 46 262 b -105 3 -49 197 -105 124 b 45 -259 -105 -109 -48 -200 z m 382 -259 b 530 3 474 -202 530 -108 b 379 262 530 122 474 200 l 373 252 b 478 4 462 180 478 118 b 456 -144 478 -56 471 -102 b 373 -249 439 -190 422 -212 z',\n    },\n    noteheadParenthesisRight: {\n      x_min: -36,\n      x_max: 73,\n      y_min: -181,\n      y_max: 181,\n      ha: 362,\n      o: 'm -43 -261 b 105 1 49 -203 105 -109 b -46 261 105 121 49 199 l -52 251 b 53 3 37 179 53 117 b 32 -145 53 -58 46 -104 b -52 -251 14 -192 -3 -213 z',\n    },\n    noteheadParenthesisLeft: {\n      x_min: 0,\n      x_max: 109,\n      y_min: -181,\n      y_max: 181,\n      ha: 362,\n      o: 'm 157 -251 b 75 -145 108 -213 91 -192 b 53 3 60 -104 53 -58 b 157 251 53 117 69 177 l 151 261 b 0 1 56 196 0 122 b 150 -261 0 -111 58 -202 z',\n    },\n    noteheadMoonBlack: {\n      x_min: 0,\n      x_max: 315,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 228 -180 b 454 0 343 -180 454 -130 l 454 180 l 0 180 l 0 0 b 228 -180 0 -131 112 -180 z',\n    },\n    noteheadTriangleLeftBlack: {\n      x_min: 0,\n      x_max: 339,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 488 -180 l 0 180 l 0 -180 z',\n    },\n    noteheadTriangleRightBlack: {\n      x_min: 0,\n      x_max: 339,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 488 180 l 0 -180 l 488 -180 z',\n    },\n    noteheadTriangleRoundDownBlack: {\n      x_min: 0,\n      x_max: 278,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 200 -180 l 400 112 l 383 124 b 199 180 327 161 264 180 b 16 124 135 180 73 161 l 0 112 z',\n    },\n    augmentationDot: {\n      x_min: 0,\n      x_max: 100,\n      y_min: -50,\n      y_max: 50,\n      ha: 100,\n      o: 'm 144 0 b 72 72 144 40 112 72 b 0 0 32 72 0 40 b 72 -72 0 -40 32 -72 b 144 0 112 -72 144 -40 z',\n    },\n    tremolo1: {\n      x_min: -150,\n      x_max: 150,\n      y_min: -93,\n      y_max: 94,\n      ha: 187,\n      o: 'm 216 -45 l 216 135 l -216 46 l -216 -134 z',\n    },\n    flag8thUp: {\n      x_min: 0,\n      x_max: 264,\n      y_min: -810,\n      y_max: 9,\n      ha: 819,\n      o: 'm 343 -1138 b 380 -888 343 -1138 380 -1001 b 215 -395 380 -708 305 -539 b 58 -19 141 -281 81 -157 b 27 13 53 4 42 13 b 0 -9 12 13 0 9 l 0 -353 b 284 -688 95 -370 232 -566 b 318 -904 305 -737 318 -819 b 284 -1102 318 -969 308 -1037 b 279 -1123 281 -1110 279 -1117 b 302 -1165 279 -1146 294 -1159 b 343 -1138 311 -1171 336 -1162 z',\n    },\n    flag8thDown: {\n      x_min: 0,\n      x_max: 306,\n      y_min: -14,\n      y_max: 808,\n      ha: 822,\n      o: 'm 346 1094 b 376 897 366 1034 376 962 b 318 642 376 812 340 691 b 0 340 265 521 193 405 l 0 1 b 23 -20 0 -13 12 -20 b 58 12 36 -20 55 -12 b 262 387 82 148 189 274 b 441 881 353 530 441 701 b 400 1142 441 994 412 1096 b 377 1164 396 1158 387 1164 b 346 1094 356 1164 331 1136 z',\n    },\n    flag16thUp: {\n      x_min: 0,\n      x_max: 279,\n      y_min: -813,\n      y_max: 2,\n      ha: 815,\n      o: 'm 392 -1146 b 402 -988 397 -1139 402 -1057 l 402 -956 b 360 -783 402 -896 386 -837 b 359 -770 360 -779 359 -776 b 360 -760 359 -768 359 -765 b 396 -577 364 -752 396 -665 b 392 -526 396 -559 395 -543 b 236 -275 377 -428 340 -387 b 53 -16 158 -192 78 -168 b 24 3 50 0 33 3 b 0 -12 16 3 0 -1 l 0 -570 l 7 -570 b 298 -778 96 -573 199 -576 b 344 -992 331 -847 344 -917 b 333 -1120 344 -1034 340 -1077 b 331 -1133 331 -1126 331 -1129 b 363 -1171 331 -1152 343 -1171 b 392 -1146 373 -1171 383 -1165 z m 301 -661 b 223 -562 278 -625 253 -596 b 59 -331 156 -484 89 -449 b 58 -327 58 -330 58 -328 b 78 -312 58 -321 66 -312 l 89 -312 b 302 -464 177 -312 255 -393 b 341 -592 328 -501 341 -546 b 340 -621 341 -602 341 -611 b 330 -658 337 -632 337 -647 b 311 -667 328 -662 318 -667 b 301 -661 307 -667 304 -665 z',\n    },\n    flag16thDown: {\n      x_min: 0,\n      x_max: 291,\n      y_min: -9,\n      y_max: 812,\n      ha: 821,\n      o: 'm 346 1132 b 312 768 367 1011 367 880 b 7 559 213 566 96 562 l 0 559 l 0 1 b 24 -13 0 -6 10 -13 b 53 6 35 -13 50 -10 b 406 516 88 228 372 289 b 410 567 409 531 410 549 b 374 750 410 655 379 742 b 373 760 373 753 373 756 b 374 773 373 766 374 769 b 405 1138 426 881 428 1022 b 370 1169 397 1171 387 1169 b 346 1132 353 1168 341 1156 z m 325 657 b 344 647 333 657 343 652 b 354 611 351 636 351 622 b 356 582 356 600 356 590 b 317 454 356 534 343 491 b 89 302 269 383 177 302 l 78 302 b 58 317 66 302 58 310 b 59 321 58 318 58 320 b 238 552 89 439 170 472 b 315 651 268 585 292 613 b 325 657 318 655 321 657 z',\n    },\n    flag32ndUp: {\n      x_min: 0,\n      x_max: 261,\n      y_min: -812,\n      y_max: 149,\n      ha: 961,\n      o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 366 -289 369 -315 369 -302 b 220 -58 350 -202 317 -163 b 46 187 148 20 71 43 b 20 215 45 200 35 215 b 0 197 12 215 0 207 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 56 -390 147 -527 88 -495 b 73 -367 53 -380 60 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n    },\n    flag32ndDown: {\n      x_min: 0,\n      x_max: 273,\n      y_min: -172,\n      y_max: 812,\n      ha: 984,\n      o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -229 b 20 -248 0 -242 9 -248 b 48 -219 35 -248 46 -232 b 229 36 72 -69 154 -46 b 380 278 330 145 364 186 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z',\n    },\n    flag64thUp: {\n      x_min: 0,\n      x_max: 261,\n      y_min: -812,\n      y_max: 347,\n      ha: 1159,\n      o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 220 228 350 84 317 122 b 46 472 148 305 71 328 b 20 500 45 485 32 500 b 0 482 10 500 0 492 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 58 187 148 20 82 43 b 56 193 58 189 58 192 b 300 24 138 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 b 73 -367 52 -376 63 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n    },\n    flag64thDown: {\n      x_min: 0,\n      x_max: 273,\n      y_min: -376,\n      y_max: 812,\n      ha: 1188,\n      o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -523 b 20 -541 0 -534 9 -541 b 48 -513 35 -541 46 -526 b 229 -258 72 -363 154 -340 b 380 -16 330 -148 364 -108 b 384 27 383 -1 384 13 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z m 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 z',\n    },\n    flag128thUp: {\n      x_min: 0,\n      x_max: 261,\n      y_min: -812,\n      y_max: 533,\n      ha: 1345,\n      o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 341 75 360 26 353 50 b 369 222 354 111 369 167 b 366 264 369 236 369 251 b 220 495 350 351 317 390 b 46 740 148 573 71 596 b 22 768 45 753 35 768 b 0 750 10 768 0 760 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 292 b 321 223 315 264 321 242 b 317 193 321 212 318 203 b 301 135 314 180 308 158 b 220 228 281 161 255 190 b 55 461 151 304 79 327 b 300 292 134 461 220 426 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 56 187 148 20 81 43 b 55 193 56 189 56 192 b 300 24 137 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 b 73 -367 53 -376 62 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n    },\n    flag128thDown: {\n      x_min: 0,\n      x_max: 273,\n      y_min: -580,\n      y_max: 812,\n      ha: 1392,\n      o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -816 b 20 -835 0 -828 7 -835 b 48 -806 33 -835 46 -819 b 229 -552 72 -657 154 -634 b 380 -310 330 -442 364 -402 b 384 -266 383 -295 384 -281 b 351 -105 384 -206 366 -143 b 384 27 372 -66 384 -16 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z m 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 z m 330 -238 b 334 -268 331 -248 334 -256 b 311 -340 334 -287 328 -310 b 56 -516 229 -478 137 -516 b 229 -258 75 -380 145 -348 b 311 -166 264 -220 289 -192 z',\n    },\n    accidentalFlat: {\n      x_min: 0,\n      x_max: 226,\n      y_min: -175,\n      y_max: 439,\n      ha: 614,\n      o: 'm 17 -245 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 82 -225 117 -186 b 325 82 281 -72 325 16 b 196 220 325 164 262 216 b 117 196 171 220 137 209 b 85 176 108 189 92 176 b 78 177 82 176 81 176 b 62 202 68 181 62 192 b 72 608 63 233 72 579 b 45 632 72 624 59 632 b 0 592 24 632 1 618 b 17 -245 0 592 6 -230 z m 68 -117 b 63 27 68 -117 63 -30 b 66 73 63 50 65 68 b 167 144 76 102 134 144 b 226 60 209 144 226 96 b 98 -134 226 -17 160 -95 b 84 -138 92 -137 88 -138 b 68 -117 71 -138 68 -124 z',\n    },\n    accidentalNatural: {\n      x_min: 0,\n      x_max: 168,\n      y_min: -335,\n      y_max: 341,\n      ha: 676,\n      o: 'm 203 261 b 197 259 200 261 199 259 b 68 226 197 259 105 226 b 53 233 59 226 53 228 l 53 474 b 36 491 53 484 45 491 l 17 491 b 0 474 7 491 0 484 l 0 -268 b 13 -281 0 -276 4 -281 l 16 -279 b 22 -278 17 -279 20 -279 b 164 -235 42 -269 122 -235 b 189 -251 179 -235 189 -239 l 189 -465 b 206 -482 189 -475 196 -482 l 225 -482 b 242 -465 233 -482 242 -475 l 242 258 b 230 269 242 265 236 269 b 225 268 229 269 226 269 z m 53 56 b 176 114 53 76 141 114 b 189 107 184 114 189 112 l 189 -42 b 71 -101 189 -68 107 -101 b 53 -92 60 -101 53 -98 z',\n    },\n    accidentalSharp: {\n      x_min: 0,\n      x_max: 249,\n      y_min: -348,\n      y_max: 350,\n      ha: 698,\n      o: 'm 341 170 b 359 194 351 174 359 186 l 359 297 b 348 308 359 304 354 308 b 341 307 346 308 344 308 b 305 294 341 307 312 295 b 285 312 295 294 285 301 l 285 488 b 265 504 285 497 276 504 b 242 488 251 504 242 497 l 242 301 b 223 259 240 287 236 268 b 132 223 206 249 157 229 b 115 252 120 223 115 240 l 115 425 b 95 441 115 433 105 441 b 72 425 81 441 72 433 l 72 230 b 55 192 72 210 63 196 b 17 176 46 187 17 176 b 0 153 7 173 0 161 l 0 50 b 13 37 0 42 4 37 l 16 39 b 50 53 17 39 39 48 l 52 55 b 72 29 63 55 72 40 l 72 -114 b 56 -147 72 -130 65 -143 b 17 -163 48 -150 17 -163 b 0 -186 7 -166 0 -177 l 0 -288 b 13 -301 0 -297 4 -301 l 16 -300 b 50 -287 17 -300 37 -291 b 55 -285 52 -285 53 -285 b 72 -308 65 -285 72 -301 l 72 -485 b 91 -501 72 -494 81 -501 b 115 -485 105 -501 115 -494 l 115 -285 b 130 -253 115 -266 122 -256 l 217 -217 b 219 -217 217 -217 219 -217 l 222 -216 b 242 -242 235 -216 242 -233 l 242 -422 b 261 -438 242 -431 251 -438 b 285 -422 276 -438 285 -431 l 285 -217 b 301 -184 285 -206 291 -189 b 341 -168 311 -180 341 -168 b 359 -144 351 -164 359 -153 l 359 -42 b 348 -30 359 -35 354 -30 b 341 -32 346 -30 344 -30 l 304 -46 b 285 -20 295 -46 285 -37 l 285 114 b 304 156 285 124 292 151 z m 242 -65 b 132 -122 233 -94 166 -122 b 115 -115 124 -122 117 -120 b 111 -43 112 -109 111 -78 b 115 63 111 1 112 52 b 220 118 118 88 184 118 b 242 109 230 118 239 115 b 248 27 245 102 248 66 b 242 -65 248 -12 245 -52 z',\n    },\n    accidentalDoubleSharp: {\n      x_min: 0,\n      x_max: 247,\n      y_min: -125,\n      y_max: 127,\n      ha: 252,\n      o: 'm 274 -46 b 206 1 258 -37 206 -9 b 274 50 206 22 253 43 b 278 50 275 50 276 50 l 287 49 b 346 63 304 49 331 52 b 356 115 353 71 356 92 b 292 183 356 174 351 183 b 233 173 266 183 240 180 b 226 117 228 168 226 143 b 179 49 219 101 196 49 b 130 117 158 49 135 96 b 118 173 130 141 125 167 b 66 183 112 180 89 183 b 7 173 42 183 16 180 b 0 120 3 170 0 145 b 7 63 0 94 3 68 b 68 49 17 55 43 49 b 82 50 73 49 78 50 b 150 3 98 42 150 13 b 84 -46 150 -16 104 -39 l 69 -46 b 7 -56 43 -46 16 -49 b 0 -111 3 -60 0 -85 b 7 -166 0 -137 3 -163 b 65 -180 17 -174 40 -180 b 118 -166 86 -180 109 -176 b 130 -111 127 -158 130 -134 b 132 -105 130 -109 131 -107 b 177 -45 141 -85 158 -45 b 226 -111 196 -45 220 -91 b 233 -166 226 -137 228 -161 b 291 -180 243 -174 266 -180 b 356 -114 346 -180 356 -166 b 346 -56 356 -89 351 -63 b 288 -46 338 -49 312 -46 z',\n    },\n    accidentalDoubleFlat: {\n      x_min: 0,\n      x_max: 411,\n      y_min: -175,\n      y_max: 437,\n      ha: 612,\n      o: 'm 452 217 b 384 194 426 217 408 207 b 350 176 374 189 363 176 b 343 177 347 176 344 176 b 328 202 333 180 328 190 b 337 606 328 232 337 579 b 310 629 337 622 324 629 b 265 592 291 629 268 616 b 269 194 265 592 266 395 b 196 217 248 209 223 217 l 187 217 b 120 194 160 217 143 207 b 85 176 108 189 98 176 b 78 177 82 176 81 176 b 62 202 68 180 62 190 b 72 606 62 232 72 579 b 45 629 72 622 59 629 b 0 592 24 629 1 616 b 17 -245 0 592 7 -232 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 84 -226 120 -186 b 274 -50 206 -124 246 -85 b 284 -245 276 -158 279 -240 b 295 -252 288 -251 292 -252 b 304 -249 300 -252 304 -249 b 416 -163 348 -226 383 -186 b 592 82 546 -72 592 16 b 461 217 592 163 528 216 z m 96 -134 b 84 -138 92 -137 86 -138 b 68 -115 72 -138 68 -124 b 63 26 68 -115 63 -30 b 66 72 63 49 65 66 b 168 144 75 101 134 144 b 226 59 212 144 226 95 b 96 -134 226 -22 161 -94 z m 361 -134 b 348 -138 356 -137 351 -138 b 333 -115 337 -138 333 -124 b 328 39 333 -115 328 -16 b 330 72 328 55 328 68 b 433 144 338 101 399 144 b 468 130 448 144 459 140 b 490 59 481 112 490 88 b 361 -134 490 -22 426 -94 z',\n    },\n    accidentalParensLeft: {\n      x_min: 0,\n      x_max: 141,\n      y_min: -248,\n      y_max: 247,\n      ha: 495,\n      o: 'm 203 331 l 203 351 b 202 356 203 354 203 356 b 0 0 60 281 0 140 b 199 -357 0 -144 60 -269 b 203 -354 200 -357 203 -356 l 203 -333 b 200 -327 203 -330 202 -328 b 86 0 118 -253 86 -160 b 200 324 86 158 120 251 b 203 331 202 325 203 327 z',\n    },\n    accidentalParensRight: {\n      x_min: 0,\n      x_max: 141,\n      y_min: -248,\n      y_max: 247,\n      ha: 495,\n      o: 'm 0 331 b 3 324 0 327 1 325 b 117 0 84 251 117 158 b 3 -327 117 -160 85 -253 b 0 -333 1 -328 0 -330 l 0 -354 b 4 -357 0 -356 3 -357 b 203 0 143 -269 203 -144 b 1 356 203 140 143 281 b 0 351 0 356 0 354 z',\n    },\n    accidentalQuarterToneFlatStein: {\n      x_min: 1,\n      x_max: 227,\n      y_min: -175,\n      y_max: 439,\n      ha: 614,\n      o: 'm 310 -245 b 327 592 321 -230 327 592 b 282 632 325 618 302 632 b 255 608 268 632 255 624 b 265 202 255 579 264 233 b 249 177 265 192 259 181 b 242 176 246 176 245 176 b 210 196 235 176 219 189 b 131 220 190 209 156 220 b 1 85 65 216 1 164 b 174 -161 1 16 46 -72 b 288 -249 210 -186 245 -225 b 297 -252 288 -249 292 -252 b 310 -245 301 -252 305 -251 z m 259 -117 b 243 -138 259 -124 256 -138 b 229 -134 239 -138 235 -137 b 101 60 167 -95 101 -17 b 160 144 101 96 118 144 b 261 73 193 144 251 102 b 264 27 262 68 264 50 b 259 -117 264 -30 259 -117 z',\n    },\n    accidentalThreeQuarterTonesFlatZimmermann: {\n      x_min: 1,\n      x_max: 466,\n      y_min: -175,\n      y_max: 439,\n      ha: 614,\n      o: 'm 363 -245 b 376 -252 367 -251 372 -252 b 384 -249 380 -252 384 -249 b 497 -161 428 -226 464 -186 b 671 84 625 -72 671 16 b 541 220 671 164 606 217 b 513 217 531 220 523 219 b 464 196 495 212 480 206 b 431 176 452 189 442 176 b 423 177 428 176 426 176 b 408 202 413 180 408 190 l 419 608 b 392 632 419 625 406 632 b 346 592 372 632 347 618 b 363 -245 346 592 351 -230 z m 289 -249 b 297 -252 289 -249 292 -252 b 310 -245 300 -252 305 -251 b 328 592 321 -230 328 592 b 282 631 327 618 302 631 b 255 608 268 631 255 624 l 266 202 b 251 177 266 190 261 180 b 243 176 248 176 246 176 b 210 196 232 176 222 189 b 164 216 196 204 180 210 l 163 217 b 132 220 151 219 143 220 b 1 84 65 217 1 163 b 177 -163 1 16 48 -72 b 289 -249 210 -186 245 -226 z m 262 72 b 265 26 264 66 265 49 b 261 -115 265 -30 261 -115 b 245 -138 261 -124 258 -138 b 230 -134 240 -138 236 -137 b 102 60 166 -92 102 -20 b 124 128 102 88 111 112 b 161 144 134 138 147 144 b 199 134 173 144 184 141 b 262 72 219 122 256 92 z m 413 -115 b 409 26 413 -115 409 -30 b 412 72 409 49 410 66 b 514 144 420 102 480 144 b 570 60 557 144 570 96 b 442 -134 570 -23 508 -91 b 429 -138 436 -137 433 -138 b 413 -115 418 -138 413 -124 z',\n    },\n    accidentalQuarterToneSharpStein: {\n      x_min: 0,\n      x_max: 179,\n      y_min: -353,\n      y_max: 307,\n      ha: 660,\n      o: 'm 258 240 b 246 252 258 248 252 252 b 240 251 245 252 242 252 b 168 225 240 251 171 225 b 150 253 156 225 150 240 l 150 426 b 130 442 150 435 141 442 b 105 418 108 442 105 429 l 105 230 b 91 193 105 219 101 202 b 17 161 65 183 42 171 b 0 138 9 158 0 147 l 0 36 b 13 23 0 27 4 23 l 16 24 b 86 53 17 24 73 49 l 88 55 b 107 30 98 55 107 42 l 107 -114 b 92 -145 107 -130 101 -143 l 17 -177 b 0 -200 9 -180 0 -192 l 0 -302 b 13 -315 0 -311 4 -315 l 16 -314 b 85 -285 17 -314 72 -291 b 105 -312 92 -282 105 -301 l 105 -492 b 125 -508 105 -501 114 -508 b 150 -484 147 -508 150 -498 l 150 -285 b 151 -274 150 -281 150 -278 b 164 -253 153 -265 158 -256 b 240 -225 176 -251 240 -225 b 258 -202 249 -222 258 -210 l 258 -99 b 245 -86 258 -91 253 -86 l 242 -88 b 240 -88 242 -88 240 -88 l 240 -86 b 168 -115 240 -86 174 -114 b 148 -91 158 -115 148 -107 l 148 43 b 167 85 148 55 156 81 b 240 114 180 91 240 114 b 258 138 249 118 258 128 z',\n    },\n    accidentalThreeQuarterTonesSharpStein: {\n      x_min: 3,\n      x_max: 317,\n      y_min: -347,\n      y_max: 369,\n      ha: 716,\n      o: 'm 456 324 b 448 336 456 330 454 336 b 393 317 445 336 400 320 b 389 315 392 315 390 315 b 383 325 386 315 383 318 l 383 508 b 360 531 383 528 379 531 b 337 508 341 531 337 527 l 337 318 b 325 291 337 300 334 294 b 268 268 320 288 287 276 b 253 281 256 268 253 274 l 253 464 b 230 487 253 484 249 487 b 207 464 212 487 207 482 l 207 264 b 194 240 207 253 204 245 l 132 217 b 131 217 132 217 132 217 l 130 216 b 118 229 122 216 118 220 l 118 420 b 95 444 118 439 114 444 b 72 420 76 444 72 439 l 72 212 b 60 190 72 197 68 193 l 16 173 b 4 161 9 170 4 167 l 4 50 b 13 39 4 45 9 39 b 58 55 16 39 46 49 b 63 56 60 56 62 56 b 72 42 71 56 72 50 l 72 -125 b 58 -150 72 -137 65 -147 l 16 -166 b 4 -177 9 -168 4 -171 l 4 -289 b 14 -301 4 -295 9 -301 b 53 -287 16 -301 40 -291 b 62 -285 56 -285 59 -285 b 72 -298 69 -285 72 -289 l 72 -477 b 95 -500 72 -495 76 -500 b 118 -477 114 -500 118 -495 l 118 -278 b 127 -259 118 -269 121 -261 l 196 -232 b 207 -243 204 -232 207 -235 l 207 -432 b 230 -455 207 -452 212 -455 b 253 -432 249 -455 253 -451 l 253 -228 b 268 -204 253 -216 259 -207 l 320 -186 b 328 -183 323 -184 325 -183 b 337 -194 334 -183 337 -187 l 337 -387 b 360 -410 337 -408 341 -410 b 383 -387 379 -410 383 -406 l 383 -174 b 395 -157 383 -166 390 -158 l 445 -138 b 456 -127 452 -135 456 -132 l 456 -14 b 448 -3 456 -10 454 -3 b 397 -22 445 -3 408 -17 l 396 -23 b 383 -6 387 -23 383 -16 l 383 163 b 392 181 383 173 384 179 b 445 202 397 183 445 202 b 456 213 452 203 456 207 z m 337 -45 b 266 -78 333 -56 287 -78 b 258 -75 262 -78 259 -76 b 253 19 255 -71 253 -27 b 258 130 253 69 255 122 b 333 163 264 141 315 163 b 337 161 334 163 337 161 b 341 78 340 157 341 120 b 337 -45 341 24 340 -37 z m 118 -127 b 114 -48 114 -121 114 -86 b 118 78 114 6 115 68 b 200 114 122 91 180 114 b 207 111 204 114 206 112 b 212 22 210 107 212 66 b 207 -94 212 -29 210 -85 b 127 -130 203 -108 148 -130 b 118 -127 122 -130 120 -128 z',\n    },\n    accidentalBuyukMucennebFlat: {\n      x_min: 1,\n      x_max: 287,\n      y_min: -174,\n      y_max: 438,\n      ha: 612,\n      o: 'm 379 452 b 370 464 379 458 377 464 b 164 389 366 464 170 392 b 156 396 163 389 156 393 b 157 436 157 409 157 428 b 167 452 157 445 161 449 b 366 526 173 455 366 526 b 379 540 374 528 379 534 l 379 611 b 370 622 379 616 377 622 b 170 550 366 622 174 552 b 160 557 163 550 160 554 b 161 608 160 585 161 602 b 134 631 161 624 148 631 b 89 590 114 631 91 616 l 89 528 b 81 517 89 526 88 518 b 16 491 76 514 16 491 b 1 480 6 490 1 485 l 1 406 b 13 395 1 400 4 395 l 14 396 b 79 419 16 396 72 415 b 89 412 86 419 89 415 b 91 376 89 399 89 386 b 82 359 91 364 89 361 b 16 331 76 356 16 331 b 1 321 6 331 1 328 l 1 248 b 13 236 1 242 4 236 b 79 262 16 236 71 258 b 92 251 89 262 92 256 b 107 -242 95 23 101 -236 b 120 -251 111 -249 115 -251 b 128 -248 124 -251 128 -248 b 240 -160 171 -225 207 -184 b 413 84 367 -71 413 16 b 284 220 413 166 350 216 b 207 196 259 220 229 209 b 170 176 196 190 184 176 l 168 177 b 151 203 157 181 151 192 b 153 269 151 210 151 236 b 163 292 153 275 153 289 b 366 367 173 297 366 367 b 379 383 374 370 379 376 z m 186 -132 b 173 -137 180 -135 176 -137 b 157 -114 161 -137 157 -122 b 153 35 157 -114 153 -22 b 154 73 153 53 153 68 b 219 135 160 92 197 124 b 255 144 232 141 243 144 b 292 130 269 144 282 140 b 314 62 305 114 314 91 b 186 -132 314 -17 251 -94 z',\n    },\n    accidentalBuyukMucennebSharp: {\n      x_min: 0,\n      x_max: 341,\n      y_min: -350,\n      y_max: 348,\n      ha: 698,\n      o: 'm 403 167 b 420 192 413 171 420 183 l 420 294 b 410 305 420 301 416 305 b 403 304 408 305 406 305 b 367 291 403 304 374 292 b 347 310 357 291 347 298 l 347 485 b 327 501 347 494 338 501 b 304 485 312 501 304 494 l 304 298 b 285 256 302 284 298 265 b 194 220 268 246 219 226 b 177 249 181 220 177 238 l 177 422 b 157 438 177 431 167 438 b 134 422 143 438 134 431 l 134 228 b 117 189 134 207 125 193 b 79 173 108 184 79 173 b 62 150 69 170 62 158 l 62 48 b 75 35 62 39 66 35 l 78 36 b 111 50 79 36 101 45 b 127 55 117 52 122 55 b 132 50 130 55 132 53 l 132 29 b 128 22 132 26 132 23 b 17 -20 125 20 17 -20 b 0 -35 7 -23 0 -26 l 0 -130 b 13 -144 0 -137 4 -144 b 127 -104 17 -144 120 -107 l 128 -102 b 134 -109 134 -102 134 -107 l 134 -127 b 122 -147 134 -138 132 -143 b 79 -166 114 -151 79 -166 b 62 -189 69 -168 62 -180 l 62 -291 b 75 -304 62 -300 66 -304 l 78 -302 b 112 -289 79 -302 99 -294 b 117 -288 114 -288 115 -288 b 134 -311 127 -288 134 -304 l 134 -488 b 153 -504 134 -497 143 -504 b 177 -488 167 -504 177 -497 l 177 -288 b 192 -256 177 -269 184 -259 l 279 -220 b 281 -220 279 -220 281 -220 l 284 -219 b 304 -245 297 -219 304 -236 l 304 -425 b 323 -441 304 -433 312 -441 b 347 -425 338 -441 347 -433 l 347 -220 b 363 -187 347 -209 353 -192 b 403 -171 373 -183 403 -171 b 420 -147 413 -167 420 -156 l 420 -45 b 410 -33 420 -37 416 -33 b 403 -35 408 -33 406 -33 l 366 -49 b 353 -53 360 -52 356 -53 b 347 -40 348 -53 347 -49 l 347 -26 b 351 -19 347 -23 347 -20 l 474 27 b 491 46 485 30 491 37 l 491 137 b 478 153 491 143 488 153 l 475 150 b 474 150 475 150 474 150 l 474 151 b 351 105 474 151 354 107 b 347 109 348 105 347 107 b 346 128 347 117 346 127 b 366 153 346 143 348 145 z m 177 72 b 301 122 196 89 262 122 b 305 111 305 122 305 117 b 307 94 305 105 305 96 b 304 88 307 92 307 89 b 179 40 284 81 180 42 b 174 43 177 40 174 42 b 177 72 176 50 174 69 z m 305 -65 b 184 -121 301 -85 210 -121 b 177 -118 180 -121 179 -120 b 173 -92 174 -115 174 -105 b 179 -84 173 -86 174 -85 b 302 -37 180 -84 279 -46 b 307 -42 304 -37 307 -40 b 305 -65 307 -52 307 -59 z',\n    },\n    accidentalBakiyeFlat: {\n      x_min: -1,\n      x_max: 286,\n      y_min: -175,\n      y_max: 439,\n      ha: 614,\n      o: 'm 377 454 b 369 467 377 458 376 467 b 363 465 367 467 364 467 b 161 390 363 465 167 393 b 153 399 154 390 153 395 b 157 608 154 494 157 593 b 130 632 157 624 144 632 b 86 592 111 632 88 618 b 88 377 86 592 86 501 b 76 356 88 373 88 360 l 12 331 b -1 320 3 330 -1 327 l -1 248 b 9 236 -1 242 1 236 b 81 264 12 236 78 261 b 89 258 86 264 89 261 b 104 -245 92 30 96 -236 b 115 -252 108 -251 112 -252 b 124 -249 120 -252 124 -249 b 239 -161 167 -226 203 -186 b 412 84 367 -72 412 17 b 282 220 412 166 348 216 b 255 216 274 220 264 219 b 203 196 238 212 222 206 b 171 177 193 189 177 177 b 163 179 168 177 166 177 b 147 202 153 181 147 192 b 147 216 147 204 147 209 l 150 262 b 150 276 150 269 150 275 b 158 291 150 287 154 289 b 363 370 163 292 363 370 b 377 384 373 373 377 379 z m 181 -134 b 167 -138 176 -137 171 -138 b 153 -117 156 -138 153 -125 b 148 27 153 -117 148 -30 b 151 73 148 50 150 68 b 255 144 161 105 219 144 b 312 62 298 144 312 99 b 181 -134 312 -19 249 -96 z',\n    },\n    accidentalKomaSharp: {\n      x_min: 0,\n      x_max: 229,\n      y_min: -337,\n      y_max: 322,\n      ha: 659,\n      o: 'm 312 151 b 330 176 323 156 330 166 l 330 278 b 320 289 330 285 327 289 b 312 288 318 289 315 289 b 200 246 312 288 203 248 b 181 275 187 246 181 264 l 181 448 b 163 464 181 456 173 464 b 138 441 140 464 138 452 l 138 253 b 122 215 137 240 132 225 b 17 177 92 203 45 177 b 0 153 7 173 0 163 l 0 50 b 10 39 0 43 4 39 b 17 40 13 39 14 39 l 128 81 b 138 52 138 81 138 63 l 138 -91 b 124 -124 138 -107 132 -120 b 17 -167 115 -127 17 -167 b 0 -192 7 -171 0 -181 l 0 -294 b 10 -305 0 -301 4 -305 b 17 -304 13 -305 14 -305 b 128 -261 17 -304 117 -264 l 130 -259 b 138 -276 137 -259 138 -268 l 138 -469 b 157 -485 138 -478 147 -485 b 181 -462 179 -485 181 -475 l 181 -262 b 183 -252 181 -258 181 -255 b 197 -232 186 -243 190 -235 b 312 -187 207 -228 312 -187 b 330 -163 323 -183 330 -173 l 330 -60 b 320 -49 330 -53 327 -49 b 312 -50 318 -49 315 -49 l 200 -94 b 193 -95 197 -95 194 -95 b 181 -68 183 -95 181 -85 l 181 66 b 200 108 181 92 189 104 z',\n    },\n    accidentalKucukMucennebSharp: {\n      x_min: -1,\n      x_max: 339,\n      y_min: -338,\n      y_max: 321,\n      ha: 659,\n      o: 'm 264 92 b 271 102 264 98 265 99 l 395 150 b 412 174 405 154 412 164 l 412 276 b 402 288 412 284 409 288 b 395 287 400 288 397 288 b 282 245 395 287 285 246 b 264 274 269 245 264 262 l 264 446 b 245 462 264 455 255 462 b 220 439 222 462 220 451 l 220 252 b 204 213 219 239 215 223 b 99 176 174 202 127 176 b 82 151 89 171 82 161 l 82 49 b 92 37 82 42 86 37 b 99 39 95 37 96 37 l 210 79 b 216 81 212 81 215 81 b 220 78 219 81 220 79 l 220 56 b 216 46 220 52 220 48 b 16 -29 210 45 16 -29 b -1 -45 4 -32 -1 -36 l -1 -138 b 12 -154 -1 -145 3 -154 l 215 -79 b 220 -84 219 -79 220 -81 l 220 -105 b 210 -122 220 -115 219 -120 b 99 -168 202 -127 99 -168 b 82 -193 89 -173 82 -183 l 82 -295 b 92 -307 82 -302 86 -307 b 99 -305 95 -307 96 -307 b 210 -262 99 -305 199 -265 l 212 -261 b 220 -278 219 -261 220 -269 l 220 -471 b 239 -487 220 -480 229 -487 b 264 -464 261 -487 264 -477 l 264 -264 b 265 -253 264 -259 264 -256 b 279 -233 268 -245 272 -236 b 395 -189 289 -229 395 -189 b 412 -164 405 -184 412 -174 l 412 -62 b 402 -50 412 -55 409 -50 b 395 -52 400 -50 397 -50 l 278 -96 b 264 -86 268 -96 264 -94 l 264 -68 b 269 -59 264 -62 265 -60 b 471 17 274 -58 471 17 b 488 36 484 22 488 27 l 488 127 b 475 144 488 134 487 144 l 472 141 b 471 141 472 141 471 141 l 471 143 b 272 68 471 143 282 71 l 269 66 b 264 71 264 66 264 69 z',\n    },\n    accidentalKoron: {\n      x_min: 0,\n      x_max: 300,\n      y_min: -472,\n      y_max: 157,\n      ha: 629,\n      o: 'm 432 -4 b 415 10 432 1 418 9 l 4 226 b 0 223 1 226 0 225 l 0 -672 b 7 -680 0 -677 3 -680 l 45 -680 b 52 -672 49 -680 52 -677 l 52 -193 l 415 -22 b 432 -4 418 -20 432 -13 z m 52 -137 l 52 144 l 327 -7 z',\n    },\n    accidentalSori: {\n      x_min: 0,\n      x_max: 421,\n      y_min: -318,\n      y_max: 328,\n      ha: 646,\n      o: 'm 606 10 b 589 23 606 16 592 22 l 382 109 l 382 465 b 374 472 382 469 379 472 l 337 472 b 330 465 333 472 330 469 l 330 132 l 183 194 l 183 425 b 176 432 183 429 180 432 l 138 432 b 131 425 134 432 131 429 l 131 216 l 3 269 b 0 265 0 269 0 266 l 0 223 b 3 213 0 216 0 215 l 131 160 l 131 -150 l 3 -203 b 0 -212 0 -204 0 -206 l 0 -255 b 3 -259 0 -258 1 -259 l 131 -204 l 131 -451 b 138 -458 131 -455 134 -458 l 176 -458 b 183 -451 180 -458 183 -455 l 183 -183 l 330 -120 l 330 -410 b 337 -418 330 -415 333 -418 l 374 -418 b 382 -410 379 -418 382 -415 l 382 -98 l 589 -9 b 606 10 592 -9 606 0 z m 183 -128 l 183 138 l 330 76 l 330 -66 z m 382 -45 l 382 55 l 501 6 z',\n    },\n    articAccentAbove: {\n      x_min: 0,\n      x_max: 339,\n      y_min: 1,\n      y_max: 245,\n      ha: 244,\n      o: 'm 469 151 b 488 177 488 156 488 166 b 469 203 488 189 488 197 l 37 350 b 24 353 32 351 26 353 b 3 333 12 353 7 344 b 0 318 1 327 0 323 b 20 298 0 311 4 304 b 346 187 20 298 331 193 b 356 177 353 186 356 181 b 344 167 356 173 353 170 b 20 58 328 163 20 58 b 0 36 4 50 0 43 b 3 23 0 32 1 27 b 23 1 7 13 13 1 b 29 3 24 1 27 1 z',\n    },\n    articAccentBelow: {\n      x_min: 0,\n      x_max: 339,\n      y_min: -244,\n      y_max: 0,\n      ha: 244,\n      o: 'm 469 -202 b 488 -176 488 -197 488 -187 b 469 -150 488 -164 488 -156 l 37 -3 b 24 0 32 -1 26 0 b 3 -20 12 0 7 -9 b 0 -35 1 -26 0 -30 b 20 -55 0 -42 4 -49 b 346 -166 20 -55 331 -160 b 356 -176 353 -167 356 -171 b 344 -186 356 -180 353 -183 b 20 -295 328 -190 20 -295 b 0 -317 4 -302 0 -310 b 3 -330 0 -321 1 -325 b 23 -351 7 -340 13 -351 b 29 -350 24 -351 27 -351 z',\n    },\n    articTenutoAbove: {\n      x_min: -1,\n      x_max: 338,\n      y_min: 0,\n      y_max: 48,\n      ha: 48,\n      o: 'm 452 0 b 487 35 485 0 487 16 b 452 69 487 53 487 69 l 33 69 b -1 35 -1 69 -1 53 b 33 0 -1 16 -1 0 z',\n    },\n    articTenutoBelow: {\n      x_min: -1,\n      x_max: 338,\n      y_min: -48,\n      y_max: 0,\n      ha: 48,\n      o: 'm 452 -69 b 487 -35 485 -69 487 -53 b 452 0 487 -16 487 0 l 33 0 b -1 -35 -1 0 -1 -16 b 33 -69 -1 -53 -1 -69 z',\n    },\n    articStaccatoAbove: {\n      x_min: 0,\n      x_max: 84,\n      y_min: 0,\n      y_max: 84,\n      ha: 84,\n      o: 'm 121 60 b 60 121 121 94 94 121 b 0 60 27 121 0 94 b 60 0 0 27 27 0 b 121 60 94 0 121 27 z',\n    },\n    articStaccatoBelow: {\n      x_min: 0,\n      x_max: 84,\n      y_min: -84,\n      y_max: 0,\n      ha: 84,\n      o: 'm 121 -60 b 60 0 121 -27 94 0 b 0 -60 27 0 0 -27 b 60 -121 0 -94 27 -121 b 121 -60 94 -121 121 -94 z',\n    },\n    articStaccatissimoAbove: {\n      x_min: 1,\n      x_max: 100,\n      y_min: -2,\n      y_max: 293,\n      ha: 295,\n      o: 'm 72 422 b 1 390 35 422 3 409 b 72 -3 1 369 39 -3 b 144 389 108 -3 144 356 b 72 422 144 410 111 422 z',\n    },\n    articStaccatissimoBelow: {\n      x_min: 1,\n      x_max: 100,\n      y_min: -295,\n      y_max: 0,\n      ha: 295,\n      o: 'm 72 -425 b 144 -392 111 -425 144 -413 b 72 0 144 -359 108 0 b 1 -393 39 0 1 -372 b 72 -425 3 -412 35 -425 z',\n    },\n    articMarcatoAbove: {\n      x_min: -1,\n      x_max: 235,\n      y_min: -1,\n      y_max: 253,\n      ha: 254,\n      o: 'm 181 356 b 167 364 177 361 173 364 b 153 356 157 364 153 356 l 0 23 b -1 16 -1 20 -1 19 b 9 0 -1 9 1 1 b 16 -1 10 -1 14 -1 b 32 9 22 -1 29 1 b 112 186 32 9 109 180 b 118 190 114 189 115 190 b 127 186 121 190 124 189 b 209 9 128 180 209 9 b 225 0 213 3 219 0 l 323 0 b 338 16 333 1 338 7 b 337 23 338 19 338 22 z',\n    },\n    articMarcatoBelow: {\n      x_min: -1,\n      x_max: 235,\n      y_min: -254,\n      y_max: 0,\n      ha: 254,\n      o: 'm 156 -357 b 170 -366 160 -363 164 -366 b 184 -357 180 -366 184 -357 l 337 -24 b 338 -17 338 -22 338 -20 b 328 -1 338 -10 336 -3 b 321 0 327 0 323 0 b 305 -10 315 0 308 -3 b 225 -187 305 -10 228 -181 b 219 -192 223 -190 222 -192 b 210 -187 216 -192 213 -190 b 128 -10 209 -181 128 -10 b 112 -1 124 -4 118 -1 l 14 -1 b -1 -17 4 -3 -1 -9 b 0 -24 -1 -20 -1 -23 z',\n    },\n    fermataAbove: {\n      x_min: 3,\n      x_max: 605,\n      y_min: -3,\n      y_max: 329,\n      ha: 332,\n      o: 'm 435 318 b 818 36 742 318 804 91 b 821 26 819 32 819 27 b 851 -4 831 6 837 -4 b 871 16 864 -4 871 1 b 870 30 871 20 871 24 b 438 474 780 471 480 474 b 6 30 392 474 94 471 b 4 14 4 24 4 19 b 23 -4 4 0 12 -4 b 52 26 36 -4 43 6 b 56 39 53 27 55 33 b 435 318 73 98 138 318 z m 516 75 b 436 153 516 117 480 153 b 359 75 395 153 359 117 b 436 -4 359 32 395 -4 b 516 75 480 -4 516 32 z',\n    },\n    fermataBelow: {\n      x_min: 3,\n      x_max: 605,\n      y_min: -332,\n      y_max: 0,\n      ha: 332,\n      o: 'm 435 -323 b 56 -43 138 -323 73 -102 b 52 -30 55 -37 53 -32 b 23 0 43 -10 36 0 b 4 -19 12 0 4 -4 b 6 -35 4 -23 4 -29 b 438 -478 94 -475 392 -478 b 870 -35 480 -478 780 -475 b 871 -20 871 -29 871 -24 b 851 0 871 -6 864 0 b 821 -30 837 0 831 -10 b 818 -40 819 -32 819 -36 b 435 -323 804 -95 742 -323 z m 516 -79 b 436 0 516 -36 480 0 b 359 -79 395 0 359 -36 b 436 -157 359 -121 395 -157 b 516 -79 480 -157 516 -121 z',\n    },\n    fermataLongAbove: {\n      x_min: 0,\n      x_max: 603,\n      y_min: -1,\n      y_max: 333,\n      ha: 334,\n      o: 'm 72 480 b 0 441 32 480 0 462 l 0 19 b 35 0 0 9 16 0 b 71 19 55 0 71 9 l 71 289 b 433 315 71 307 252 315 b 798 289 615 315 798 307 l 798 19 b 832 0 798 9 814 0 b 868 19 852 0 868 9 l 868 441 b 796 480 868 462 837 480 z m 513 78 b 433 156 513 121 478 156 b 356 78 390 156 356 121 b 433 -1 356 35 390 -1 b 513 78 478 -1 513 35 z',\n    },\n    fermataLongBelow: {\n      x_min: 0,\n      x_max: 603,\n      y_min: -333,\n      y_max: 1,\n      ha: 334,\n      o: 'm 513 -78 b 433 1 513 -35 478 1 b 356 -78 390 1 356 -35 b 433 -156 356 -121 390 -156 b 513 -78 478 -156 513 -121 z m 796 -480 b 868 -441 837 -480 868 -462 l 868 -19 b 832 0 868 -9 852 0 b 798 -19 814 0 798 -9 l 798 -289 b 433 -315 798 -307 615 -315 b 71 -289 252 -315 71 -307 l 71 -19 b 35 0 71 -9 55 0 b 0 -19 16 0 0 -9 l 0 -441 b 72 -480 0 -462 32 -480 z',\n    },\n    fermataVeryLongAbove: {\n      x_min: 0,\n      x_max: 715,\n      y_min: 0,\n      y_max: 408,\n      ha: 408,\n      o: 'm 76 588 b 0 546 35 588 0 569 l 0 22 b 37 1 0 10 17 1 b 75 22 59 1 75 10 l 75 431 b 514 458 75 449 294 458 b 955 431 734 458 955 449 l 955 22 b 991 1 955 10 971 1 b 1030 22 1012 1 1030 10 l 1030 546 b 953 588 1030 569 995 588 z m 215 389 b 138 347 171 389 138 370 l 138 22 b 174 1 138 10 154 1 b 213 22 196 1 213 10 l 213 217 b 514 245 213 235 363 245 b 816 217 665 245 816 235 l 816 22 b 854 1 816 10 834 1 b 891 22 876 1 891 10 l 891 347 b 815 389 891 370 858 389 z m 606 84 b 521 167 606 130 569 167 b 439 84 475 167 439 130 b 521 0 439 39 475 0 b 606 84 569 0 606 39 z',\n    },\n    fermataVeryLongBelow: {\n      x_min: 0,\n      x_max: 715,\n      y_min: -408,\n      y_max: 0,\n      ha: 408,\n      o: 'm 606 -84 b 521 0 606 -39 569 0 b 439 -84 475 0 439 -39 b 521 -167 439 -130 475 -167 b 606 -84 569 -167 606 -130 z m 815 -389 b 891 -347 858 -389 891 -370 l 891 -22 b 854 -1 891 -10 876 -1 b 816 -22 834 -1 816 -10 l 816 -217 b 514 -245 816 -235 665 -245 b 213 -217 363 -245 213 -235 l 213 -22 b 174 -1 213 -10 196 -1 b 138 -22 154 -1 138 -10 l 138 -347 b 215 -389 138 -370 171 -389 z m 953 -588 b 1030 -546 995 -588 1030 -569 l 1030 -22 b 991 -1 1030 -10 1012 -1 b 955 -22 971 -1 955 -10 l 955 -431 b 514 -458 955 -449 734 -458 b 75 -431 294 -458 75 -449 l 75 -22 b 37 -1 75 -10 59 -1 b 0 -22 17 -1 0 -10 l 0 -546 b 76 -588 0 -569 35 -588 z',\n    },\n    fermataVeryShortAbove: {\n      x_min: 0,\n      x_max: 726,\n      y_min: 0,\n      y_max: 449,\n      ha: 449,\n      o: 'm 46 0 b 59 7 50 0 52 4 b 516 517 120 59 507 517 b 975 4 527 517 920 52 b 988 0 979 1 988 0 l 1041 0 b 1045 6 1041 0 1045 1 b 1043 13 1045 7 1045 10 b 516 647 962 91 536 647 b 3 13 504 647 91 98 b 0 7 0 10 0 9 b 6 0 0 3 6 0 z m 238 0 b 248 6 240 0 242 3 b 516 236 292 43 494 236 b 786 3 539 236 746 37 b 796 0 789 1 796 0 l 865 0 b 870 4 865 0 870 1 b 867 10 870 6 868 9 b 516 409 806 68 531 409 b 166 10 497 409 229 73 b 163 4 164 9 163 6 b 167 0 163 1 167 0 z m 592 91 b 516 167 592 132 557 167 b 438 91 472 167 438 132 b 516 13 438 48 472 13 b 592 91 557 13 592 48 z',\n    },\n    fermataVeryShortBelow: {\n      x_min: 0,\n      x_max: 726,\n      y_min: -449,\n      y_max: 0,\n      ha: 449,\n      o: 'm 167 0 b 163 -4 167 0 163 -1 b 166 -10 163 -6 164 -9 b 516 -409 229 -73 497 -409 b 867 -10 531 -409 806 -68 b 870 -4 868 -9 870 -6 b 865 0 870 -1 865 0 l 796 0 b 786 -3 796 0 789 -1 b 516 -236 746 -37 539 -236 b 248 -6 494 -236 292 -43 b 238 0 242 -3 240 0 z m 6 0 b 0 -7 6 0 0 -3 b 3 -13 0 -9 0 -10 b 516 -647 91 -98 504 -647 b 1043 -13 536 -647 962 -91 b 1045 -6 1045 -10 1045 -7 b 1041 0 1045 -1 1041 0 l 988 0 b 975 -4 988 0 979 -1 b 516 -517 920 -52 527 -517 b 59 -7 507 -517 120 -59 b 46 0 52 -4 50 0 z m 592 -91 b 516 -13 592 -48 557 -13 b 438 -91 472 -13 438 -48 b 516 -167 438 -132 472 -167 b 592 -91 557 -167 592 -132 z',\n    },\n    fermataShortAbove: {\n      x_min: 0,\n      x_max: 604,\n      y_min: 0,\n      y_max: 341,\n      ha: 341,\n      o: 'm 78 0 b 88 6 81 0 82 3 b 435 328 134 45 412 328 b 783 3 458 328 742 39 b 793 0 786 1 793 0 l 865 0 b 870 4 865 0 870 1 b 867 10 870 6 868 9 b 435 491 805 69 474 491 b 3 10 397 491 69 75 b 0 4 1 9 0 6 b 4 0 0 1 4 0 z m 513 94 b 433 171 513 135 477 171 b 354 94 390 171 354 135 b 433 13 354 49 390 13 b 513 94 477 13 513 49 z',\n    },\n    fermataShortBelow: {\n      x_min: 0,\n      x_max: 604,\n      y_min: -341,\n      y_max: 0,\n      ha: 341,\n      o: 'm 4 0 b 0 -4 4 0 0 -1 b 3 -10 0 -6 1 -9 b 435 -491 69 -75 397 -491 b 867 -10 474 -491 805 -69 b 870 -4 868 -9 870 -6 b 865 0 870 -1 865 0 l 793 0 b 783 -3 793 0 786 -1 b 435 -328 742 -39 458 -328 b 88 -6 412 -328 134 -45 b 78 0 82 -3 81 0 z m 513 -94 b 433 -13 513 -49 477 -13 b 354 -94 390 -13 354 -49 b 433 -171 354 -135 390 -171 b 513 -94 477 -171 513 -135 z',\n    },\n    breathMarkComma: {\n      x_min: 1,\n      x_max: 152,\n      y_min: 2,\n      y_max: 251,\n      ha: 249,\n      o: 'm 104 361 b 1 271 42 361 1 321 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 17 32 29 26 26 l 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 z',\n    },\n    breathMarkUpbow: {\n      x_min: 1,\n      x_max: 249,\n      y_min: 1,\n      y_max: 495,\n      ha: 494,\n      o: 'm 181 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 z',\n    },\n    caesura: {\n      x_min: 0,\n      x_max: 384,\n      y_min: -1,\n      y_max: 532,\n      ha: 533,\n      o: 'm 40 -1 b 78 26 58 -1 72 9 l 321 713 b 323 726 323 717 323 721 b 282 766 323 747 304 766 b 245 739 265 766 251 756 l 3 52 b 0 37 1 48 0 42 b 27 1 0 22 10 7 b 40 -1 32 -1 36 -1 z m 308 26 l 552 713 b 553 726 553 717 553 721 b 513 766 553 747 534 766 b 475 739 495 766 481 756 l 232 52 b 230 39 230 48 230 43 b 258 1 230 23 240 7 b 271 -1 262 -1 266 -1 b 308 26 287 -1 302 9 z',\n    },\n    caesuraCurved: {\n      x_min: 0,\n      x_max: 373,\n      y_min: 0,\n      y_max: 530,\n      ha: 530,\n      o: 'm 491 763 b 445 719 468 763 446 744 b 252 98 432 507 340 295 l 226 39 b 223 27 225 35 223 32 b 252 0 223 13 233 0 b 276 16 262 0 272 6 b 537 716 386 230 537 478 b 491 763 537 742 518 763 z m 29 0 b 53 16 39 0 48 6 l 82 69 b 314 716 187 264 314 498 b 268 763 314 742 295 763 b 222 719 245 763 223 744 b 29 98 209 507 117 295 l 3 39 b 0 29 1 36 0 33 b 29 0 0 14 12 0 z',\n    },\n    restMaxima: {\n      x_min: 0,\n      x_max: 381,\n      y_min: -249,\n      y_max: 250,\n      ha: 499,\n      o: 'm 180 -330 l 180 331 b 156 360 180 356 170 360 l 23 360 b 0 331 10 360 0 356 l 0 -330 b 23 -359 0 -354 10 -359 l 156 -359 b 180 -330 170 -359 180 -354 z m 549 -330 l 549 331 b 524 360 549 356 539 360 l 392 360 b 369 331 379 360 369 356 l 369 -330 b 392 -359 369 -354 379 -359 l 524 -359 b 549 -330 539 -359 549 -354 z',\n    },\n    restDoubleWhole: {\n      x_min: 0,\n      x_max: 125,\n      y_min: 0,\n      y_max: 250,\n      ha: 250,\n      o: 'm 180 22 l 180 338 b 156 360 180 350 170 360 l 23 360 b 0 338 10 360 0 350 l 0 22 b 23 0 0 10 10 0 l 156 0 b 180 22 170 0 180 10 z',\n    },\n    restWhole: {\n      x_min: 0,\n      x_max: 282,\n      y_min: -135,\n      y_max: 9,\n      ha: 144,\n      o: 'm 406 -157 l 406 -24 b 369 13 406 -3 389 13 l 37 13 b 0 -24 16 13 0 -3 l 0 -157 b 37 -194 0 -177 16 -194 l 369 -194 b 406 -157 389 -194 406 -177 z',\n    },\n    restWholeLegerLine: {\n      x_min: -117,\n      x_max: 399,\n      y_min: -135,\n      y_max: 20,\n      ha: 155,\n      o: 'm -143 29 b -168 3 -157 29 -168 17 b -143 -23 -168 -12 -157 -23 l 0 -23 l 0 -157 b 37 -194 0 -177 16 -194 l 369 -194 b 406 -157 389 -194 406 -177 l 406 -24 b 549 -23 406 -23 406 -23 b 575 3 563 -23 575 -12 b 549 29 575 17 563 29 z',\n    },\n    restHalf: {\n      x_min: 0,\n      x_max: 282,\n      y_min: -2,\n      y_max: 142,\n      ha: 144,\n      o: 'm 406 35 l 406 167 b 369 204 406 189 389 204 l 37 204 b 0 167 16 204 0 189 l 0 35 b 37 -3 0 14 16 -3 l 369 -3 b 406 35 389 -3 406 14 z',\n    },\n    restHalfLegerLine: {\n      x_min: -117,\n      x_max: 399,\n      y_min: -13,\n      y_max: 142,\n      ha: 155,\n      o: 'm 549 -19 b 575 7 563 -19 575 -7 b 549 33 575 22 563 33 b 406 35 406 33 406 33 l 406 167 b 369 204 406 187 389 204 l 37 204 b 0 167 16 204 0 187 l 0 33 l -143 33 b -168 7 -157 33 -168 22 b -143 -19 -168 -7 -157 -19 z',\n    },\n    restQuarter: {\n      x_min: 1,\n      x_max: 270,\n      y_min: -375,\n      y_max: 373,\n      ha: 748,\n      o: 'm 112 -55 b 174 -141 135 -84 156 -111 b 183 -161 177 -147 183 -158 b 181 -167 183 -163 183 -166 b 166 -174 179 -173 173 -174 b 143 -170 160 -174 148 -171 b 137 -170 141 -170 138 -170 l 125 -166 b 1 -304 50 -166 1 -233 b 168 -527 1 -376 63 -446 b 206 -540 180 -536 194 -540 b 228 -531 216 -540 226 -537 b 230 -521 229 -527 230 -524 b 207 -487 230 -508 219 -497 b 170 -435 189 -487 173 -448 b 164 -397 166 -423 164 -410 b 255 -292 164 -338 194 -292 b 369 -317 297 -292 344 -308 l 370 -318 b 382 -320 376 -320 379 -320 b 389 -314 386 -320 389 -318 b 336 -232 389 -297 351 -249 b 236 -32 281 -166 236 -112 b 236 -27 236 -30 236 -29 l 238 -17 b 238 -13 238 -16 238 -14 b 333 199 243 71 295 140 b 338 220 337 206 338 213 b 333 248 338 235 333 248 b 95 526 333 248 120 501 b 69 537 88 533 78 537 b 40 507 55 537 40 527 b 46 484 40 500 42 492 b 134 291 52 468 134 395 b 48 108 134 238 112 176 b 27 66 33 94 27 78 b 42 32 27 46 42 32 z',\n    },\n    rest8th: {\n      x_min: 0,\n      x_max: 247,\n      y_min: -251,\n      y_max: 174,\n      ha: 425,\n      o: 'm 193 154 b 96 251 193 207 150 251 b 0 154 43 251 0 207 b 39 81 0 124 17 98 b 117 56 62 65 89 56 b 173 66 137 56 157 60 b 225 88 193 72 206 78 b 232 89 228 89 230 89 b 239 76 238 89 239 84 b 238 60 239 72 239 66 b 104 -343 233 39 130 -248 b 145 -361 104 -360 137 -361 b 196 -347 161 -361 181 -359 b 341 161 200 -344 341 161 b 356 217 347 187 354 210 b 338 240 356 232 341 239 b 323 235 336 240 331 240 b 193 140 312 226 240 140 z',\n    },\n    rest16th: {\n      x_min: 0,\n      x_max: 320,\n      y_min: -500,\n      y_max: 179,\n      ha: 679,\n      o: 'm 300 160 b 202 258 300 215 256 258 b 104 160 148 258 104 215 b 219 62 104 101 164 62 b 331 94 258 62 298 75 b 341 96 336 95 338 96 b 348 86 346 96 348 94 b 265 -173 348 63 275 -151 b 194 -217 253 -200 215 -217 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 151 -105 b 0 -203 43 -105 0 -148 b 115 -301 0 -262 60 -301 b 223 -271 153 -301 190 -288 b 229 -279 226 -271 229 -274 l 228 -281 b 228 -282 228 -282 228 -282 l 91 -690 b 91 -691 91 -690 91 -691 l 89 -693 b 134 -720 89 -706 102 -720 b 189 -687 176 -720 183 -703 l 356 -138 b 420 81 393 -16 420 81 b 459 226 420 81 456 207 b 461 232 459 229 461 230 b 446 248 461 240 449 246 b 431 242 439 248 435 245 b 300 145 420 233 348 147 z',\n    },\n    rest32nd: {\n      x_min: 0,\n      x_max: 363,\n      y_min: -500,\n      y_max: 426,\n      ha: 926,\n      o: 'm 508 603 b 492 598 501 603 497 600 b 361 503 482 590 410 503 l 361 516 b 264 613 361 570 318 613 b 166 516 210 613 166 570 b 206 444 166 487 183 461 b 246 423 217 433 232 428 b 284 418 258 420 269 418 b 393 449 321 418 360 432 b 399 451 395 451 397 451 b 415 426 409 451 415 436 l 413 423 b 413 422 413 423 413 422 l 357 192 b 279 140 350 168 302 140 b 281 153 281 144 281 148 b 183 251 281 207 236 251 b 85 153 128 251 85 207 b 125 81 85 124 102 98 b 164 60 137 71 150 65 b 203 55 176 58 189 55 b 311 86 240 55 278 69 b 315 88 312 88 314 88 b 325 69 323 88 325 76 l 268 -167 b 194 -217 261 -197 216 -216 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 153 -105 b 0 -203 45 -105 0 -148 b 115 -301 0 -262 60 -301 b 228 -269 154 -301 194 -288 b 232 -268 229 -268 230 -268 b 240 -276 236 -268 240 -272 b 138 -688 240 -282 141 -678 b 137 -697 137 -691 137 -694 b 176 -720 137 -708 145 -720 b 232 -690 222 -720 226 -706 b 484 436 236 -672 484 436 b 521 582 484 436 518 564 b 523 588 521 585 523 586 b 508 603 523 600 511 603 z',\n    },\n    rest64th: {\n      x_min: 0,\n      x_max: 423,\n      y_min: -753,\n      y_max: 430,\n      ha: 1183,\n      o: 'm 596 609 b 580 603 589 609 585 606 b 448 507 569 595 497 507 b 449 521 449 511 449 516 b 351 619 449 575 405 619 b 253 521 297 619 253 575 b 372 422 253 461 317 422 b 481 454 410 422 446 438 b 491 456 484 455 488 456 b 504 441 498 456 504 451 b 501 426 504 436 503 432 b 445 202 500 422 451 217 b 359 144 435 174 383 144 l 359 158 b 261 256 359 212 315 256 b 163 158 207 256 163 212 b 243 65 163 112 202 78 b 279 60 255 62 266 60 b 397 91 320 60 360 73 b 403 92 400 92 402 92 b 412 79 409 92 412 86 b 410 72 412 76 412 75 b 351 -161 408 59 356 -150 b 281 -212 340 -199 301 -212 l 281 -197 b 183 -99 281 -144 238 -99 b 85 -197 130 -99 85 -144 b 125 -271 85 -228 102 -253 b 166 -291 138 -279 151 -287 b 204 -297 177 -294 192 -297 b 262 -287 225 -297 245 -292 b 305 -265 282 -279 287 -274 b 310 -264 307 -264 308 -264 b 318 -284 317 -264 318 -275 b 317 -295 318 -288 317 -294 b 259 -524 315 -302 265 -508 b 194 -567 251 -554 213 -567 b 196 -554 196 -563 196 -559 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 40 -626 0 -583 17 -609 b 118 -652 60 -644 92 -652 b 210 -629 145 -652 186 -642 b 216 -628 213 -628 215 -628 b 228 -647 226 -628 228 -639 l 226 -651 b 226 -652 226 -651 226 -652 l 122 -1054 b 121 -1064 121 -1058 121 -1061 b 167 -1084 121 -1077 134 -1084 b 215 -1060 202 -1084 209 -1076 b 402 -278 217 -1047 229 -1021 b 436 -135 403 -278 431 -161 l 570 441 b 609 588 570 441 605 569 b 596 609 609 603 602 608 z',\n    },\n    rest128th: {\n      x_min: 0,\n      x_max: 485,\n      y_min: -750,\n      y_max: 689,\n      ha: 1439,\n      o: 'm 537 894 b 439 992 537 949 494 992 b 341 894 386 992 341 949 b 382 822 341 865 359 840 b 459 796 402 805 433 796 b 518 806 480 796 501 801 l 520 808 b 569 828 539 814 552 819 b 580 831 572 829 577 831 b 598 812 589 831 598 825 b 596 801 598 809 598 805 b 540 575 590 773 546 595 b 448 510 534 553 475 510 l 448 524 b 350 622 448 577 405 622 b 252 524 297 622 252 577 b 292 451 252 494 269 468 b 369 426 318 433 337 426 b 429 435 389 426 412 429 b 494 464 449 442 475 455 b 498 465 495 465 497 465 b 505 446 504 465 505 456 b 503 426 505 439 504 432 l 446 202 b 366 144 439 173 389 144 l 366 158 b 268 256 366 212 323 256 b 170 158 215 256 170 212 b 289 59 170 98 235 59 b 347 69 310 59 330 63 b 397 91 367 76 379 82 b 406 94 400 92 403 94 b 415 79 412 94 415 88 b 412 63 415 75 413 69 b 357 -157 408 42 364 -134 b 281 -212 346 -196 302 -212 b 282 -197 281 -207 282 -203 b 184 -99 282 -144 238 -99 b 86 -197 130 -99 86 -144 b 204 -297 86 -258 150 -297 b 262 -287 225 -297 245 -292 b 312 -265 282 -279 294 -274 b 318 -264 314 -264 317 -264 b 327 -275 324 -264 327 -269 b 266 -517 324 -287 278 -490 b 200 -569 248 -566 220 -567 l 196 -554 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 118 -652 0 -615 63 -652 b 177 -642 138 -652 160 -648 l 179 -641 b 229 -621 197 -635 210 -629 l 230 -619 b 239 -626 236 -619 239 -622 b 238 -632 239 -628 239 -631 b 131 -1057 235 -642 134 -1050 b 173 -1080 131 -1071 140 -1080 b 230 -1057 219 -1080 225 -1074 l 658 815 b 697 960 658 815 694 942 b 698 966 697 963 698 965 b 684 982 698 975 687 981 b 668 976 677 982 672 979 b 537 880 658 969 586 881 z',\n    },\n    dynamicPiano: {\n      x_min: -89,\n      x_max: 366,\n      y_min: -142,\n      y_max: 274,\n      ha: 416,\n      o: 'm 395 395 b 292 357 350 395 318 380 b 262 328 272 340 268 328 b 246 363 255 328 259 338 b 177 393 236 380 215 393 b 1 251 92 393 46 333 b -9 223 -6 238 -9 230 b 7 207 -9 213 -1 207 b 30 229 17 207 23 216 b 127 338 72 301 101 338 b 143 321 138 338 143 331 b 134 285 143 310 138 295 l -43 -154 b -65 -168 -48 -166 -50 -168 l -109 -168 b -128 -187 -122 -168 -128 -174 b -111 -204 -128 -199 -122 -204 l 167 -204 b 186 -186 180 -204 186 -199 b 168 -168 186 -174 180 -168 l 111 -168 b 98 -164 102 -168 98 -168 b 101 -154 98 -163 99 -158 l 166 7 b 179 24 168 14 171 24 b 213 -1 186 24 190 10 b 276 -14 233 -12 252 -14 b 527 266 415 -14 527 130 b 395 395 527 350 475 395 z m 356 341 b 389 288 380 341 389 320 b 243 35 389 217 312 35 b 207 81 219 35 207 50 b 235 180 207 111 219 140 l 264 251 b 356 341 284 300 321 341 z',\n    },\n    dynamicMezzo: {\n      x_min: -20,\n      x_max: 446,\n      y_min: -10,\n      y_max: 274,\n      ha: 284,\n      o: 'm 528 395 b 431 350 487 395 454 374 b 409 330 416 336 415 330 b 397 360 402 330 406 341 b 334 395 389 379 370 395 b 236 350 292 395 259 374 b 215 330 222 336 220 330 b 203 360 207 330 212 340 b 147 393 194 379 174 393 b -19 251 71 393 26 331 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 b 9 226 -3 207 1 215 b 107 338 52 300 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 287 323 225 292 255 323 b 308 302 304 323 308 314 b 294 249 308 285 302 269 b 203 24 294 248 292 248 b 199 9 200 17 199 13 b 215 0 199 3 203 0 l 285 0 b 308 17 298 0 302 3 l 402 251 b 481 323 419 292 449 323 b 503 302 498 323 503 314 b 413 43 503 252 413 104 b 478 -14 413 6 436 -14 b 629 102 533 -14 583 26 b 642 132 638 117 642 125 b 629 145 642 141 636 145 b 608 127 619 145 615 138 b 534 49 580 84 553 49 b 523 62 526 49 523 53 b 606 317 523 112 606 238 b 528 395 606 353 588 395 z',\n    },\n    dynamicForte: {\n      x_min: -141,\n      x_max: 364,\n      y_min: -152,\n      y_max: 444,\n      ha: 596,\n      o: 'm 23 380 b 0 357 7 380 0 373 b 22 336 0 343 7 336 l 105 336 b 117 330 114 336 117 336 b 114 315 117 327 115 323 l 23 0 b -101 -187 -17 -141 -43 -187 b -127 -174 -120 -187 -127 -181 b -92 -156 -127 -163 -114 -170 b -63 -102 -75 -144 -63 -125 b -128 -43 -63 -65 -89 -43 b -203 -122 -171 -43 -203 -78 b -95 -219 -203 -186 -156 -219 b 161 17 14 -219 82 -145 b 269 317 203 105 235 194 l 271 318 b 289 336 271 323 282 336 l 383 336 b 406 359 399 336 406 343 b 384 380 406 373 399 380 l 298 380 b 284 387 288 380 284 380 b 287 405 284 392 285 396 b 419 606 315 530 347 606 b 442 595 431 606 442 603 b 419 580 442 586 435 588 b 389 526 400 572 389 552 b 454 465 389 485 418 465 b 524 543 491 465 524 490 b 400 639 524 596 491 639 b 135 402 261 639 183 540 b 107 380 128 380 127 380 z',\n    },\n    dynamicRinforzando: {\n      x_min: -20,\n      x_max: 277,\n      y_min: 0,\n      y_max: 274,\n      ha: 274,\n      o: 'm 324 395 b 235 350 287 395 256 374 b 215 330 222 336 220 330 b 203 360 207 330 213 337 b 145 393 194 379 174 393 b -19 251 75 393 27 337 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 b 9 226 -3 207 3 215 b 107 338 52 301 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 304 351 226 298 272 351 b 318 343 312 351 318 348 b 287 285 318 330 287 325 b 338 239 287 256 308 239 b 399 318 373 239 399 268 b 324 395 399 360 377 395 z',\n    },\n    dynamicSforzando: {\n      x_min: 0,\n      x_max: 229,\n      y_min: -10,\n      y_max: 273,\n      ha: 283,\n      o: 'm 212 393 b 68 274 127 393 68 350 b 145 161 68 223 95 196 b 200 85 187 132 200 114 b 127 20 200 53 173 20 b 66 42 91 20 66 32 b 91 56 66 49 75 46 b 111 98 104 65 111 79 b 59 145 111 127 86 145 b 0 78 24 145 0 117 b 125 -14 0 30 49 -14 b 291 120 219 -14 291 36 b 220 232 291 160 276 190 b 151 314 168 271 151 287 b 213 361 151 337 168 361 b 258 346 238 361 258 356 b 240 333 258 340 251 340 b 226 298 232 325 226 314 b 276 252 226 269 248 252 b 330 307 311 252 330 279 b 212 393 330 360 285 393 z',\n    },\n    dynamicZ: {\n      x_min: -30,\n      x_max: 244,\n      y_min: -10,\n      y_max: 268,\n      ha: 278,\n      o: 'm 333 386 b 298 377 321 386 314 382 b 239 370 282 373 259 370 b 94 383 153 370 111 383 b 68 364 79 383 72 377 l 33 264 b 29 242 30 255 29 248 b 45 228 29 232 36 228 b 66 249 55 228 60 236 l 81 279 b 96 297 85 288 88 297 b 168 292 102 297 127 292 b 223 302 194 292 215 302 b 196 269 229 302 197 271 l -26 45 b -43 16 -37 33 -43 27 b -24 -1 -43 6 -36 -1 b 4 16 -12 -1 -3 10 b 39 30 16 24 27 30 b 179 -14 79 30 108 -14 b 297 102 259 -14 297 43 b 245 166 297 147 271 166 b 197 115 219 166 197 145 b 236 72 197 88 216 72 b 259 79 251 72 255 79 b 264 75 262 79 264 78 b 258 60 264 72 261 66 b 229 45 252 50 242 45 b 117 95 186 45 173 95 b 85 86 98 95 89 86 b 102 111 85 86 95 104 l 333 338 b 351 370 344 350 351 359 b 333 386 351 380 343 386 z',\n    },\n    ornamentTrill: {\n      x_min: 0,\n      x_max: 521,\n      y_min: -10,\n      y_max: 390,\n      ha: 400,\n      o: 'm 383 562 b 364 557 377 562 369 559 l 294 534 b 269 511 281 530 275 526 l 217 384 b 206 367 212 370 210 367 b 179 380 200 367 192 374 b 118 393 158 389 140 393 b 0 292 50 393 0 353 b 95 210 0 248 30 210 b 140 213 112 210 131 213 b 144 209 143 213 144 212 b 140 194 144 206 143 202 l 124 156 b 96 58 108 117 96 88 b 179 -14 96 17 124 -14 b 325 153 253 -14 325 46 b 307 251 325 187 320 219 b 302 265 304 258 302 261 b 334 294 302 274 311 281 l 343 298 b 455 348 393 328 428 348 b 474 327 468 348 474 344 b 465 285 474 312 469 295 l 360 24 b 356 9 357 17 356 13 b 372 0 356 3 360 0 l 442 0 b 465 17 455 0 459 3 l 559 251 b 655 351 577 298 624 351 b 670 343 664 351 670 348 b 638 285 670 330 638 325 b 690 239 638 256 660 239 b 750 318 724 239 750 268 b 675 395 750 360 729 395 b 586 350 638 395 608 374 b 566 330 573 336 572 330 b 553 361 559 330 564 340 b 490 393 543 380 521 393 b 347 348 432 393 377 364 b 312 333 328 338 320 333 b 308 337 310 333 308 334 b 315 359 308 343 312 351 l 387 537 b 392 553 390 544 392 549 b 383 562 392 559 389 562 z m 118 360 b 192 325 134 360 192 347 b 186 307 192 321 189 314 l 180 292 b 148 265 173 274 167 269 b 98 258 130 261 112 258 b 39 301 50 258 39 281 b 118 360 39 327 60 360 z m 272 240 b 292 151 285 240 292 164 b 212 30 292 88 253 30 b 196 48 200 30 196 37 b 207 92 196 59 202 78 b 264 230 207 94 209 94 b 272 240 266 238 268 240 z',\n    },\n    ornamentTurn: {\n      x_min: 0,\n      x_max: 460,\n      y_min: 0,\n      y_max: 218,\n      ha: 218,\n      o: 'm 534 314 b 454 251 490 314 454 294 b 505 199 454 219 475 199 b 579 232 547 199 549 232 b 626 164 603 232 626 202 b 533 72 626 102 583 72 b 377 180 487 72 439 111 b 150 312 307 258 243 312 b 0 148 55 312 0 240 b 128 0 0 45 66 0 b 209 63 173 0 209 20 b 157 115 209 95 187 115 b 84 82 115 115 114 82 b 36 150 59 82 36 112 b 130 242 36 212 79 242 b 285 134 176 242 223 203 b 513 1 356 56 419 1 b 662 166 608 1 662 73 b 534 314 662 269 596 314 z',\n    },\n    ornamentTurnSlash: {\n      x_min: 0,\n      x_max: 460,\n      y_min: -90,\n      y_max: 306,\n      ha: 396,\n      o: 'm 333 441 b 310 418 315 441 310 433 l 310 274 b 302 252 310 258 308 252 b 261 278 294 252 287 262 b 150 311 228 298 192 311 b 0 147 55 311 0 239 b 128 -1 0 43 66 -1 b 209 62 173 -1 209 19 b 157 114 209 94 187 114 b 84 81 115 114 114 81 b 36 148 59 81 36 111 b 130 240 36 210 79 240 b 285 128 176 240 222 197 b 307 79 304 108 307 105 l 307 -107 b 330 -130 307 -122 312 -130 b 353 -107 347 -130 353 -122 l 353 37 b 360 59 353 53 353 59 b 402 33 369 59 376 49 b 513 0 435 13 471 0 b 662 164 608 0 662 72 b 534 312 662 268 596 312 b 454 249 490 312 454 292 b 505 197 454 217 475 197 b 579 230 547 197 549 230 b 626 163 603 230 626 200 b 533 71 626 101 583 71 b 377 183 487 71 441 114 b 356 232 359 203 356 206 l 356 418 b 333 441 356 433 350 441 z',\n    },\n    ornamentMordent: {\n      x_min: 1,\n      x_max: 729,\n      y_min: -73,\n      y_max: 319,\n      ha: 392,\n      o: 'm 546 265 l 546 459 l 501 459 l 501 216 l 459 167 b 439 167 454 160 445 160 b 302 327 387 228 310 317 b 258 353 291 338 282 351 b 226 340 245 353 238 348 l 20 107 b 1 73 12 98 1 84 b 30 59 1 65 9 59 b 88 94 53 59 73 79 b 144 143 107 109 124 127 b 176 161 158 154 168 161 b 197 144 183 161 189 156 l 323 10 b 351 0 328 3 340 0 b 377 9 361 0 372 3 b 498 114 392 17 475 94 l 498 -105 l 544 -105 l 544 153 b 562 160 550 157 556 160 b 585 144 569 160 576 156 b 710 10 590 135 697 24 b 737 0 716 3 727 0 b 765 9 749 0 759 3 b 1030 295 776 17 1011 274 l 1032 300 b 1050 328 1041 308 1050 318 b 1012 353 1050 343 1024 353 b 986 343 1002 353 994 348 b 854 190 971 330 871 206 b 828 176 842 180 835 176 b 802 190 818 176 809 183 b 681 333 791 202 696 320 b 645 353 668 344 657 353 b 613 340 634 353 626 350 b 580 304 600 330 590 315 z',\n    },\n    ornamentShortTrill: {\n      x_min: 0,\n      x_max: 725,\n      y_min: 0,\n      y_max: 245,\n      ha: 245,\n      o: 'm 429 167 l 301 325 b 256 353 291 338 282 350 b 225 340 246 353 238 350 b 16 105 158 268 88 186 b 0 72 9 96 0 86 b 29 58 0 63 7 58 b 71 76 42 58 55 62 l 158 154 b 174 160 163 158 168 160 b 197 143 181 160 187 154 b 321 10 203 135 310 24 b 350 0 327 3 338 0 b 377 7 361 0 372 3 l 533 148 b 554 160 543 158 550 160 b 577 143 562 160 566 156 b 703 10 585 135 690 24 b 732 0 708 3 720 0 b 759 7 743 0 753 3 b 1024 294 769 16 1005 272 b 1044 327 1032 305 1044 321 b 1005 353 1044 341 1018 353 b 979 343 996 353 988 348 b 848 189 963 330 864 204 b 821 174 837 179 828 174 b 796 189 811 174 804 181 b 674 331 783 202 688 318 b 641 351 662 343 651 351 b 606 340 628 351 619 350 b 573 304 593 328 583 315 b 444 167 533 259 491 213 b 429 167 439 161 433 161 z',\n    },\n    ornamentTremblement: {\n      x_min: 1,\n      x_max: 985,\n      y_min: 0,\n      y_max: 244,\n      ha: 244,\n      o: 'm 678 325 b 634 351 667 338 657 350 b 602 338 621 351 613 348 l 448 167 b 439 167 446 164 441 164 l 302 325 b 258 351 291 338 281 350 b 228 338 245 351 238 348 b 193 304 215 328 204 315 l 19 107 b 1 72 13 96 1 76 b 30 58 1 63 9 58 b 89 92 52 58 73 78 l 144 141 b 148 144 145 143 147 143 b 176 160 160 153 170 160 b 199 143 183 160 189 154 b 324 10 204 134 311 23 b 351 0 330 3 340 0 b 379 7 363 0 373 3 l 530 148 b 552 160 536 154 546 160 b 575 143 559 160 564 154 b 698 10 580 134 687 23 b 727 0 704 3 716 0 b 755 7 739 0 749 3 l 907 147 b 930 160 922 158 923 160 b 952 143 937 160 943 154 l 1077 10 b 1107 0 1084 3 1096 0 b 1133 7 1117 0 1128 3 b 1398 294 1143 16 1380 272 b 1418 327 1407 305 1418 321 b 1381 351 1418 343 1394 351 b 1354 341 1371 351 1362 348 b 1223 189 1338 328 1238 204 b 1195 174 1211 179 1202 174 b 1171 189 1185 174 1178 181 b 1048 331 1158 200 1063 318 b 1012 351 1035 343 1024 351 b 981 338 1002 351 994 350 b 948 304 968 328 958 315 b 827 166 907 258 865 212 b 815 166 824 163 818 163 b 678 325 760 226 732 264 z',\n    },\n    ornamentPrecompAppoggTrill: {\n      x_min: 0,\n      x_max: 1119,\n      y_min: 0,\n      y_max: 481,\n      ha: 481,\n      o: 'm 1015 163 b 873 328 963 223 880 318 b 828 354 860 344 847 353 b 796 341 816 354 809 351 b 763 305 783 331 773 317 b 642 168 721 261 681 215 b 636 163 641 167 639 164 b 494 328 585 223 501 318 b 449 354 481 344 468 353 b 418 341 438 354 431 351 b 384 305 405 331 395 317 b 264 168 343 261 302 215 l 242 144 b 144 88 232 124 171 88 b 79 197 81 88 79 189 l 79 648 b 60 693 79 683 71 693 b 52 691 58 693 55 693 b 0 616 3 672 0 625 l 0 207 b 121 0 0 40 68 0 b 249 68 168 0 232 53 b 279 94 262 75 271 86 b 336 144 298 111 315 128 b 367 163 350 156 360 163 b 389 145 374 163 380 157 b 514 12 395 137 501 26 b 543 1 520 4 531 1 b 569 9 553 1 563 4 b 636 73 576 14 605 43 l 658 94 b 714 144 677 111 694 128 b 746 163 729 156 739 163 b 768 145 753 163 759 157 b 893 12 773 137 880 26 b 922 1 899 4 910 1 b 948 9 932 1 942 4 l 1012 71 b 1037 94 1022 78 1030 86 b 1092 144 1054 111 1073 128 b 1123 161 1106 156 1115 161 b 1146 145 1130 161 1136 157 b 1270 12 1152 137 1259 26 b 1299 1 1276 4 1287 1 b 1326 9 1310 1 1320 4 b 1591 297 1336 19 1572 275 b 1611 328 1600 307 1611 320 b 1574 354 1611 343 1585 354 b 1548 344 1565 354 1555 350 b 1416 192 1532 331 1431 206 b 1388 177 1404 181 1395 177 b 1365 190 1380 177 1371 184 b 1243 333 1352 203 1256 321 b 1205 354 1228 346 1217 354 b 1174 341 1195 354 1187 351 b 1140 305 1161 330 1152 317 z',\n    },\n    ornamentPrecompSlideTrillDAnglebert: {\n      x_min: 2,\n      x_max: 1150,\n      y_min: -367,\n      y_max: 245,\n      ha: 612,\n      o: 'm 1058 160 b 916 327 1007 220 923 317 b 871 353 903 343 890 351 b 840 340 860 353 852 350 b 806 304 827 330 816 315 b 685 167 765 259 724 213 l 680 160 l 615 235 b 419 344 582 275 523 344 b 3 -144 258 344 3 26 b 4 -168 3 -153 3 -160 b 246 -482 24 -315 99 -422 b 458 -528 340 -521 410 -528 b 514 -526 485 -528 504 -526 b 552 -508 531 -526 552 -517 b 514 -497 552 -503 541 -498 l 503 -497 b 194 -390 432 -494 298 -488 b 69 -151 194 -390 69 -279 b 184 96 69 -60 128 27 b 328 183 202 118 258 183 b 477 96 413 183 454 118 b 559 10 510 62 552 19 b 588 0 566 3 576 0 b 613 7 598 0 609 3 b 723 112 622 14 681 73 b 789 161 733 122 776 161 b 811 144 796 161 802 156 b 936 10 816 135 923 24 b 965 0 942 3 953 0 b 991 7 975 0 985 3 b 1051 66 996 12 1022 37 b 1081 92 1063 73 1073 84 b 1136 143 1099 109 1117 127 b 1168 160 1151 154 1159 160 b 1191 144 1175 160 1181 156 b 1315 10 1197 135 1303 24 b 1344 0 1320 3 1332 0 b 1371 7 1355 0 1365 3 b 1636 295 1381 17 1617 274 b 1656 327 1644 305 1656 318 b 1619 353 1656 341 1630 353 b 1593 343 1610 353 1600 348 b 1460 190 1577 330 1476 204 b 1433 176 1449 180 1440 176 b 1410 189 1424 176 1416 183 b 1287 331 1397 202 1300 320 b 1250 353 1273 344 1261 353 b 1218 340 1240 353 1231 350 b 1185 304 1205 328 1197 315 z',\n    },\n    ornamentPrecompSlideTrillBach: {\n      x_min: 0,\n      x_max: 1048,\n      y_min: -367,\n      y_max: 331,\n      ha: 698,\n      o: 'm 1038 477 l 979 477 l 979 238 l 912 160 b 769 327 858 220 775 317 b 724 353 756 343 743 351 b 693 340 713 353 706 350 b 660 304 680 330 670 315 b 539 167 618 259 577 213 b 533 161 536 166 534 163 b 390 327 480 220 396 317 b 346 353 377 343 364 351 l 340 353 b 308 340 330 353 321 350 b 275 304 295 330 285 315 b 117 122 220 243 168 186 b 0 -144 68 62 0 -48 b 1 -168 0 -153 0 -160 b 243 -482 22 -315 96 -422 b 455 -528 337 -521 408 -528 b 511 -526 482 -528 501 -526 b 549 -508 528 -526 549 -517 b 511 -497 549 -503 539 -498 l 500 -497 b 192 -390 429 -494 295 -488 b 68 -177 192 -390 84 -298 b 66 -151 66 -168 66 -160 b 189 105 66 -58 127 35 b 232 143 203 118 216 131 b 264 161 246 154 256 161 b 285 144 271 161 276 156 b 410 10 291 135 397 24 b 439 0 416 3 428 0 b 465 7 449 0 459 3 l 531 72 b 554 92 540 78 547 86 b 611 143 573 109 590 127 b 642 161 625 154 635 161 b 664 144 649 161 655 156 b 789 10 670 135 776 24 b 818 0 795 3 806 0 b 844 7 828 0 838 3 b 904 66 850 12 876 37 b 935 92 916 73 924 84 b 979 134 949 107 963 121 l 979 -88 l 1037 -88 l 1037 151 l 1044 144 b 1168 10 1050 135 1156 24 b 1197 0 1174 3 1185 0 b 1224 7 1208 0 1218 3 b 1489 295 1234 17 1470 274 b 1509 327 1498 305 1509 318 b 1472 353 1509 341 1483 353 b 1446 343 1463 353 1453 348 b 1313 190 1430 330 1329 204 b 1286 176 1302 180 1293 176 b 1263 189 1277 176 1269 183 b 1140 331 1250 202 1153 320 b 1103 353 1126 344 1115 353 b 1071 340 1093 353 1084 350 b 1038 304 1058 328 1050 315 z',\n    },\n    ornamentPrecompTrillSuffixDandrieu: {\n      x_min: 0,\n      x_max: 949,\n      y_min: 0,\n      y_max: 381,\n      ha: 381,\n      o: 'm 1367 314 b 1250 521 1367 419 1318 482 b 1107 549 1211 537 1145 549 b 1083 546 1096 549 1087 549 b 1066 528 1071 540 1066 534 b 1079 520 1066 524 1070 520 b 1323 351 1187 517 1323 487 b 1201 171 1323 269 1260 219 b 1194 166 1201 171 1198 168 b 1056 327 1142 226 1063 317 b 1011 353 1043 343 1030 351 b 979 340 999 353 992 350 b 946 304 966 330 956 315 b 825 167 904 259 864 213 l 821 161 b 678 327 768 222 685 317 b 634 353 665 343 652 351 b 602 340 622 353 615 350 b 569 304 589 330 579 315 b 448 167 527 259 487 213 l 444 161 b 301 327 390 222 308 317 b 256 353 288 343 275 351 b 225 340 245 353 238 350 b 192 304 212 330 202 315 b 71 167 150 259 109 213 b 17 105 52 147 36 127 b 0 73 10 98 0 84 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 174 161 157 154 167 161 b 196 144 181 161 187 156 b 321 10 202 135 308 24 b 350 0 327 3 338 0 b 376 7 360 0 370 3 b 485 112 384 14 444 73 b 552 161 495 122 539 161 b 573 144 559 161 564 156 b 698 10 579 135 685 24 b 727 0 704 3 716 0 b 753 7 737 0 747 3 b 863 112 762 14 821 73 b 929 161 873 122 916 161 b 950 144 936 161 942 156 b 1076 10 956 135 1063 24 b 1104 0 1081 3 1093 0 b 1130 7 1115 0 1125 3 b 1236 108 1139 14 1195 69 b 1367 314 1297 160 1367 233 z',\n    },\n    ornamentPrecompDoubleCadenceUpperPrefix: {\n      x_min: 0,\n      x_max: 1278,\n      y_min: 0,\n      y_max: 247,\n      ha: 247,\n      o: 'm 1801 356 b 1776 346 1793 356 1783 351 b 1642 192 1760 333 1659 206 b 1614 177 1630 181 1621 177 b 1591 190 1606 177 1597 184 b 1469 334 1578 203 1482 323 b 1430 356 1453 347 1441 356 b 1398 343 1420 356 1411 353 b 1365 307 1385 331 1377 318 l 1240 164 b 1097 330 1187 226 1104 320 b 1053 356 1084 346 1071 354 b 1021 343 1041 356 1034 353 b 988 307 1008 333 998 318 b 865 168 946 262 904 216 l 861 163 b 717 330 808 223 724 320 b 672 356 704 346 691 354 b 641 343 661 356 654 353 b 608 307 628 333 618 318 b 485 168 566 262 524 216 l 455 134 b 284 46 409 88 351 46 b 16 285 148 46 32 265 b 3 295 9 292 4 295 b 0 291 1 295 0 292 b 1 285 0 288 1 285 b 308 0 42 190 157 0 b 530 120 415 1 482 63 b 559 144 539 128 549 137 b 590 163 573 156 583 163 b 612 145 598 163 603 157 b 739 10 618 137 724 24 b 768 0 744 3 756 0 b 793 7 778 0 788 3 b 903 114 802 14 861 75 l 939 144 b 971 163 953 156 963 163 b 992 145 978 163 984 157 b 1119 10 998 137 1106 24 b 1148 0 1125 3 1136 0 b 1174 7 1158 0 1168 3 b 1284 114 1182 14 1241 75 b 1316 144 1282 115 1312 141 b 1348 161 1331 156 1339 161 b 1371 145 1355 161 1361 157 b 1496 10 1377 137 1485 24 b 1525 0 1502 3 1513 0 b 1552 7 1536 0 1547 3 b 1819 298 1562 17 1800 276 b 1840 330 1829 308 1840 320 b 1832 344 1840 334 1837 340 b 1801 356 1820 351 1810 356 z',\n    },\n    ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n      x_min: 0,\n      x_max: 1277,\n      y_min: -62,\n      y_max: 333,\n      ha: 395,\n      o: 'm 1273 202 l 1273 480 l 1230 480 l 1230 174 l 1097 328 b 1053 354 1084 344 1071 353 b 1021 341 1041 354 1034 351 b 988 305 1008 331 998 317 b 865 167 945 261 904 215 l 861 161 b 717 328 808 222 724 318 b 672 354 704 344 691 353 b 641 341 661 354 654 351 b 608 305 628 331 618 317 b 485 167 564 261 524 215 b 455 132 474 156 465 144 b 284 45 410 88 350 45 b 14 284 148 45 30 264 b 3 294 9 291 4 294 b 0 289 1 294 0 291 b 1 284 0 287 1 284 b 308 -1 42 189 157 -1 b 530 118 415 0 481 62 b 557 143 539 127 547 135 b 590 161 572 154 582 161 b 612 144 598 161 603 156 b 737 9 618 135 724 24 b 768 -1 743 1 755 -1 b 793 6 778 -1 788 1 b 903 112 802 13 861 73 l 937 143 b 971 161 953 154 963 161 b 992 144 978 161 984 156 b 1117 9 998 135 1104 24 b 1148 -1 1123 1 1136 -1 b 1174 6 1158 -1 1168 1 l 1230 60 l 1230 -89 l 1273 -89 l 1273 102 l 1283 112 b 1348 160 1295 125 1332 160 b 1371 144 1355 160 1361 156 b 1496 9 1377 135 1483 24 b 1525 -1 1502 1 1513 -1 b 1552 6 1536 -1 1547 1 b 1819 297 1562 16 1800 275 b 1839 328 1827 307 1839 320 b 1801 354 1839 343 1813 354 b 1776 344 1793 354 1783 350 b 1642 190 1760 331 1657 206 b 1614 176 1630 180 1621 176 b 1591 189 1606 176 1597 183 b 1467 333 1578 203 1480 321 b 1430 354 1453 346 1441 354 b 1398 341 1420 354 1411 351 b 1365 305 1385 330 1377 317 z',\n    },\n    ornamentPrecompTrillLowerSuffix: {\n      x_min: 0,\n      x_max: 859,\n      y_min: -222,\n      y_max: 246,\n      ha: 468,\n      o: 'm 1164 217 b 1031 351 1138 259 1063 351 b 1011 337 1020 351 1024 347 b 828 167 952 291 886 217 l 824 164 b 683 328 772 225 690 318 b 638 354 670 344 657 353 b 606 341 626 354 619 351 b 573 305 593 331 583 317 b 451 167 530 261 490 215 l 446 161 b 302 328 393 222 310 318 b 258 354 289 344 276 353 b 226 341 246 354 239 351 b 193 305 213 331 203 317 b 71 167 150 261 109 215 b 17 105 52 147 36 127 b 0 73 10 98 0 84 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 176 161 157 154 168 161 b 197 144 183 161 189 156 b 323 9 203 135 310 23 b 353 -1 328 1 340 -1 b 379 6 363 -1 373 1 b 488 112 387 13 446 73 l 523 143 b 556 161 539 154 549 161 b 577 144 563 161 569 156 b 703 9 583 135 690 23 b 733 -1 708 1 721 -1 b 759 6 743 -1 753 1 b 868 112 768 13 827 73 b 955 183 878 122 943 183 b 1081 107 965 183 1031 153 b 1156 -89 1128 63 1156 6 l 1156 -102 b 948 -297 1156 -204 1048 -297 b 806 -271 904 -297 850 -282 l 792 -266 b 801 -288 792 -268 795 -282 b 948 -320 809 -297 880 -320 b 1237 -50 1092 -320 1237 -199 b 1164 217 1237 75 1218 122 z',\n    },\n    brassScoop: {\n      x_min: 1,\n      x_max: 320,\n      y_min: -373,\n      y_max: 13,\n      ha: 386,\n      o: 'm 35 -537 b 461 -12 194 -518 461 -289 b 438 19 461 13 451 19 b 410 -9 425 19 413 9 b 35 -425 357 -366 92 -403 b 1 -482 13 -433 1 -438 l 1 -505 b 26 -537 1 -526 3 -537 z',\n    },\n    brassDoitMedium: {\n      x_min: 0,\n      x_max: 489,\n      y_min: -40,\n      y_max: 346,\n      ha: 386,\n      o: 'm 33 -58 b 704 468 255 -58 683 186 b 681 498 704 494 693 498 b 654 471 668 498 658 488 b 33 55 550 118 91 76 b 0 -3 12 46 0 42 l 0 -26 b 24 -58 0 -46 1 -58 z',\n    },\n    brassFallLipShort: {\n      x_min: 1,\n      x_max: 293,\n      y_min: -345,\n      y_max: 42,\n      ha: 387,\n      o: 'm 22 60 b 1 35 4 60 1 52 l 1 6 b 26 -50 3 -40 10 -43 b 32 -52 27 -50 30 -50 b 376 -469 85 -73 327 -111 b 400 -497 379 -487 387 -497 b 422 -467 412 -497 422 -491 b 32 60 422 -187 177 40 z',\n    },\n    brassLiftMedium: {\n      x_min: 0,\n      x_max: 811,\n      y_min: 0,\n      y_max: 852,\n      ha: 852,\n      o: 'm 1138 1220 b 1135 1225 1135 1223 1135 1224 b 1129 1227 1133 1227 1130 1227 b 1117 1207 1122 1227 1117 1212 l 1117 1201 b 1109 1164 1117 1187 1117 1172 b 1100 1156 1107 1161 1104 1158 b 959 1104 1058 1128 995 1140 b 929 1032 936 1081 929 1056 b 932 1007 929 1024 930 1015 b 923 976 932 995 930 985 l 914 971 b 773 919 873 942 809 955 b 743 847 750 896 743 870 b 746 821 743 838 744 829 b 737 791 746 809 744 799 l 729 783 b 588 733 687 756 624 769 b 557 661 564 710 557 684 b 560 635 557 652 559 644 b 552 605 560 624 559 612 l 543 598 b 402 547 501 570 438 583 b 372 475 379 524 372 498 b 374 449 372 467 373 458 b 366 419 374 438 373 426 l 357 412 b 216 361 315 384 252 397 b 186 289 193 338 186 312 b 189 264 186 281 187 272 b 180 233 189 252 187 240 b 171 226 177 232 174 229 b 30 176 130 199 66 212 b 0 104 7 153 0 128 b 33 0 0 88 14 0 b 49 17 40 0 49 10 b 71 63 52 35 56 49 b 212 115 102 95 154 59 b 239 186 230 134 239 160 b 236 210 239 194 238 202 b 256 249 239 225 243 236 b 397 301 288 281 340 245 b 425 372 416 320 425 346 b 422 396 425 380 423 387 b 442 435 425 410 429 422 b 583 487 474 467 526 431 b 611 557 602 505 611 531 b 608 582 611 566 609 573 b 628 621 611 596 615 608 b 769 672 660 652 711 618 b 796 743 788 691 796 717 b 793 768 796 752 795 759 b 814 806 796 782 801 793 b 955 858 845 838 897 804 b 982 929 973 877 982 903 b 979 953 982 937 981 945 b 999 992 982 968 986 979 b 1140 1045 1031 1024 1083 989 b 1168 1116 1161 1066 1168 1090 b 1138 1220 1168 1162 1145 1207 z',\n    },\n    brassFallRoughMedium: {\n      x_min: 0,\n      x_max: 811,\n      y_min: 0,\n      y_max: 852,\n      ha: 852,\n      o: 'm 30 1220 b 0 1116 23 1207 0 1162 b 27 1045 0 1090 7 1066 b 168 992 85 989 137 1024 b 189 953 181 979 186 968 b 186 929 187 945 186 937 b 213 858 186 903 194 877 b 354 806 271 804 323 838 b 374 768 367 793 372 782 b 372 743 373 759 372 752 b 399 672 372 717 380 691 b 540 621 456 618 508 652 b 560 582 553 608 557 596 b 557 557 559 573 557 566 b 585 487 557 531 566 505 b 726 435 642 431 694 467 b 746 396 739 422 743 410 b 743 372 744 387 743 380 b 770 301 743 346 752 320 b 912 249 828 245 880 281 b 932 210 924 236 929 225 b 929 186 930 202 929 194 b 956 115 929 160 937 134 b 1097 63 1014 59 1066 95 b 1119 17 1112 49 1116 35 b 1135 0 1119 10 1128 0 b 1168 104 1153 0 1168 91 b 1138 176 1168 128 1161 153 b 996 226 1102 212 1038 199 b 988 233 994 229 991 232 b 979 264 981 240 979 252 b 982 289 981 272 982 281 b 952 361 982 312 975 338 b 811 412 916 397 852 384 l 802 419 b 793 449 795 426 793 438 b 796 475 795 458 796 467 b 766 547 796 498 789 524 b 625 598 730 583 667 570 l 616 605 b 608 635 609 612 608 624 b 611 661 609 644 611 652 b 580 733 611 684 603 710 b 439 783 544 769 481 756 l 431 791 b 422 821 423 799 422 809 b 425 847 423 829 425 838 b 395 919 425 870 418 896 b 253 971 359 955 295 942 l 245 976 b 236 1007 238 985 236 995 b 239 1032 238 1015 239 1024 b 209 1104 239 1056 232 1081 b 68 1156 173 1140 109 1128 b 59 1164 63 1158 60 1161 b 50 1201 50 1172 50 1187 l 50 1207 b 39 1227 50 1212 46 1227 b 33 1225 37 1227 35 1227 b 30 1220 33 1224 33 1223 z',\n    },\n    brassBend: {\n      x_min: 0,\n      x_max: 392,\n      y_min: 0,\n      y_max: 282,\n      ha: 282,\n      o: 'm 282 0 b 552 72 369 0 456 23 b 564 92 560 75 564 84 l 564 383 b 541 406 564 395 554 406 b 518 383 528 406 518 395 l 518 107 b 282 46 435 65 357 46 b 46 107 207 46 130 65 l 46 383 b 23 406 46 395 36 406 b 0 383 10 406 0 395 l 0 92 b 13 72 0 84 4 75 b 282 0 108 23 196 0 z',\n    },\n    brassMuteClosed: {\n      x_min: 0,\n      x_max: 272,\n      y_min: 0,\n      y_max: 272,\n      ha: 272,\n      o: 'm 392 219 l 219 219 l 219 392 l 173 392 l 173 219 l 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 z',\n    },\n    brassMuteOpen: {\n      x_min: 0,\n      x_max: 304,\n      y_min: 0,\n      y_max: 304,\n      ha: 304,\n      o: 'm 219 0 b 438 219 340 0 438 98 b 219 438 438 340 340 438 b 0 219 98 438 0 340 b 219 0 0 98 98 0 z m 219 392 b 392 219 314 392 392 314 b 219 46 392 124 314 46 b 46 219 124 46 46 124 b 219 392 46 314 124 392 z',\n    },\n    brassFlip: {\n      x_min: 0,\n      x_max: 379,\n      y_min: 0,\n      y_max: 282,\n      ha: 282,\n      o: 'm 523 0 b 541 9 530 0 536 3 b 546 22 544 13 546 17 b 536 42 546 29 541 36 l 36 402 b 23 406 33 405 27 406 b 0 383 12 406 0 395 l 0 23 b 23 0 0 10 10 0 b 46 23 36 0 46 10 l 46 337 l 508 4 b 523 0 513 1 517 0 z',\n    },\n    brassJazzTurn: {\n      x_min: 0,\n      x_max: 620,\n      y_min: 0,\n      y_max: 245,\n      ha: 245,\n      o: 'm 792 190 b 765 176 780 179 772 176 b 740 190 755 176 747 183 b 629 325 727 202 644 312 b 593 347 616 338 605 347 b 562 334 583 346 575 344 b 528 298 549 323 539 310 l 406 176 b 389 168 406 176 399 168 b 374 176 384 168 379 170 b 245 325 360 192 245 325 b 200 353 232 343 219 351 b 168 340 190 353 181 350 l 17 156 b 0 121 10 147 0 132 b 16 107 0 114 4 108 b 84 143 26 107 76 137 b 118 160 92 150 108 160 b 141 143 125 160 131 154 b 265 10 147 135 253 24 b 294 0 271 3 282 0 b 321 7 305 0 315 3 b 498 160 321 7 478 158 b 521 143 505 160 513 154 b 647 10 528 135 635 24 b 675 0 652 3 664 0 b 703 7 687 0 697 3 b 874 186 713 16 855 164 b 893 220 881 196 893 212 b 873 245 890 235 883 243 b 796 194 847 245 815 213 z',\n    },\n    brassSmear: {\n      x_min: 1,\n      x_max: 306,\n      y_min: 0,\n      y_max: 170,\n      ha: 170,\n      o: 'm 193 79 b 308 0 219 50 264 0 b 439 117 396 0 438 102 b 439 120 439 118 439 118 l 441 125 b 441 128 441 127 441 127 b 433 141 441 135 439 141 b 416 130 429 141 423 137 b 343 94 390 107 370 94 b 269 153 315 94 294 121 l 265 158 b 144 245 239 190 180 245 b 6 134 62 245 10 143 b 1 114 3 125 1 118 b 7 107 1 108 4 107 b 36 122 13 107 22 112 b 92 151 55 137 65 151 b 183 89 125 151 161 112 b 189 84 184 88 187 86 z',\n    },\n    stringsDownBow: {\n      x_min: 0,\n      x_max: 312,\n      y_min: 0,\n      y_max: 318,\n      ha: 318,\n      o: 'm 37 458 b 0 420 17 458 0 441 l 0 17 b 17 0 0 7 9 0 l 37 0 b 55 17 46 0 55 7 l 55 253 b 225 278 55 269 140 278 b 395 253 310 278 395 269 l 395 17 b 413 0 395 7 403 0 l 432 0 b 449 17 441 0 449 7 l 449 420 b 412 458 449 441 432 458 z',\n    },\n    stringsUpBow: {\n      x_min: 1,\n      x_max: 249,\n      y_min: 1,\n      y_max: 495,\n      ha: 494,\n      o: 'm 181 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 z',\n    },\n    stringsHarmonic: {\n      x_min: 0,\n      x_max: 200,\n      y_min: 0,\n      y_max: 200,\n      ha: 200,\n      o: 'm 288 144 b 144 288 288 225 223 288 b 0 144 65 288 0 225 b 144 0 0 65 65 0 b 288 144 223 0 288 65 z m 144 249 b 249 144 203 249 249 203 b 144 39 249 86 203 39 b 39 144 86 39 39 86 b 144 249 39 203 86 249 z',\n    },\n    pluckedSnapPizzicatoAbove: {\n      x_min: 0,\n      x_max: 200,\n      y_min: 0,\n      y_max: 300,\n      ha: 300,\n      o: 'm 0 144 b 144 0 0 63 65 0 b 288 144 223 0 288 63 b 167 285 288 215 235 275 l 167 432 l 121 432 l 121 285 b 0 144 52 275 0 215 z m 121 246 l 121 144 l 167 144 l 167 246 b 249 144 213 236 249 193 b 144 39 249 85 202 39 b 39 144 85 39 39 85 b 121 246 39 193 73 236 z',\n    },\n    pluckedSnapPizzicatoBelow: {\n      x_min: 0,\n      x_max: 200,\n      y_min: 0,\n      y_max: 300,\n      ha: 300,\n      o: 'm 288 288 b 144 432 288 369 223 432 b 0 288 65 432 0 369 b 121 145 0 216 52 157 l 121 0 l 167 0 l 167 145 b 288 288 235 157 288 216 z m 167 186 l 167 288 l 121 288 l 121 186 b 39 288 75 196 39 238 b 144 393 39 347 86 393 b 249 288 203 393 249 347 b 167 186 249 238 215 196 z',\n    },\n    pluckedLeftHandPizzicato: {\n      x_min: 0,\n      x_max: 272,\n      y_min: 0,\n      y_max: 272,\n      ha: 272,\n      o: 'm 392 219 l 219 219 l 219 392 l 173 392 l 173 219 l 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 z',\n    },\n    keyboardPedalPed: {\n      x_min: 0,\n      x_max: 1019,\n      y_min: -8,\n      y_max: 555,\n      ha: 563,\n      o: 'm 413 799 b 179 749 327 798 261 789 b 0 517 107 713 0 632 b 122 376 0 454 37 376 b 240 540 189 376 240 452 b 225 586 240 579 233 586 b 204 549 213 586 212 573 b 138 480 199 527 181 480 b 85 549 96 480 85 517 l 85 554 b 353 762 89 690 230 762 b 373 752 364 762 373 760 b 351 708 373 740 360 723 b 274 546 330 675 274 585 b 353 416 274 508 333 444 b 412 304 372 390 412 351 b 382 228 412 275 403 256 b 334 190 363 202 361 200 b 147 29 271 167 147 88 b 196 -12 147 4 171 -12 b 343 108 239 -12 279 33 l 363 132 b 387 150 370 141 376 150 b 543 -4 445 150 467 -4 b 631 42 567 -4 586 0 l 668 78 b 685 89 674 84 680 89 b 696 75 688 89 690 86 b 809 -9 717 29 753 -9 b 946 66 854 -9 894 13 b 988 107 971 92 981 107 b 1002 89 994 107 996 99 b 1152 -4 1030 36 1077 -4 b 1329 248 1238 -4 1329 82 b 792 717 1329 556 1047 665 b 766 720 785 719 775 720 b 747 703 752 720 747 711 b 780 680 747 693 756 685 b 1223 222 1028 621 1223 504 b 1152 39 1223 122 1205 39 b 1073 229 1104 39 1073 132 b 1132 423 1073 314 1086 377 b 1142 442 1140 432 1142 436 b 1126 458 1142 451 1136 458 b 1093 446 1119 458 1109 455 b 975 216 1022 408 975 337 l 975 190 b 943 121 975 160 972 150 b 852 69 899 76 877 69 b 776 148 816 69 786 117 b 773 163 775 154 773 158 b 786 177 773 167 776 170 l 801 187 b 937 366 867 235 937 284 b 844 454 937 422 900 454 b 665 217 711 454 665 331 b 671 153 665 197 667 176 l 671 147 b 662 134 671 143 670 140 b 605 111 639 118 625 111 b 521 160 572 111 546 135 b 451 203 497 184 474 197 b 426 212 435 207 426 206 b 436 230 426 216 429 220 b 510 389 464 269 510 340 b 429 521 510 435 480 462 b 369 629 387 570 369 599 b 402 720 369 648 384 691 b 462 763 425 759 446 763 b 611 624 540 763 611 704 b 564 575 611 592 590 575 b 501 602 540 575 520 582 b 474 622 492 611 487 622 b 459 603 465 622 459 615 b 603 471 459 570 510 471 b 711 588 670 471 711 524 b 422 799 711 742 554 799 z m 815 403 b 848 343 838 403 848 383 b 780 226 848 295 824 261 b 765 217 773 220 768 217 b 759 228 762 217 759 220 b 756 282 757 245 756 262 b 815 403 756 346 772 403 z m 1405 124 b 1344 62 1369 124 1344 98 b 1405 0 1344 26 1369 0 b 1467 62 1441 0 1467 26 b 1405 124 1467 98 1441 124 z',\n    },\n    keyboardPedalUp: {\n      x_min: 0,\n      x_max: 450,\n      y_min: 0,\n      y_max: 450,\n      ha: 450,\n      o: 'm 582 396 b 516 367 554 396 533 384 b 465 340 495 347 487 340 l 458 340 b 412 377 432 340 412 348 b 432 409 412 387 419 396 l 438 415 b 490 429 451 428 464 429 b 575 501 534 429 575 452 b 501 575 575 541 541 575 b 429 490 452 575 429 534 b 415 438 429 464 428 451 l 409 432 b 377 412 396 419 387 412 b 340 458 348 412 340 432 l 340 465 b 367 516 340 487 347 495 b 396 582 384 533 396 554 b 324 648 396 625 363 648 b 252 582 285 648 252 625 b 281 516 252 554 264 533 b 308 465 301 495 308 487 l 308 458 b 271 412 308 432 300 412 b 239 432 261 412 252 419 l 233 438 b 219 490 220 451 219 464 b 147 575 219 534 196 575 b 73 501 107 575 73 541 b 158 429 73 452 114 429 b 210 415 184 429 197 428 l 216 409 b 236 377 229 396 236 387 b 190 340 236 348 216 340 l 183 340 b 132 367 161 340 153 347 b 66 396 115 384 94 396 b 0 324 23 396 0 363 b 66 252 0 285 23 252 b 132 281 94 252 115 264 b 183 308 153 301 161 308 l 190 308 b 236 271 216 308 236 300 b 216 239 236 261 229 252 l 210 233 b 158 219 197 220 184 219 b 73 147 114 219 73 196 b 147 73 73 107 107 73 b 219 158 196 73 219 114 b 233 210 219 184 220 197 l 239 216 b 271 236 252 229 261 236 b 308 190 300 236 308 216 l 308 183 b 281 132 308 161 301 153 b 252 66 264 115 252 94 b 324 0 252 23 285 0 b 396 66 363 0 396 23 b 367 132 396 94 384 115 b 340 183 347 153 340 161 l 340 190 b 377 236 340 216 348 236 b 409 216 387 236 396 229 l 415 210 b 429 158 428 197 429 184 b 501 73 429 114 452 73 b 575 147 541 73 575 107 b 490 219 575 196 534 219 b 438 233 464 219 451 220 l 432 239 b 412 271 419 252 412 261 b 458 308 412 300 432 308 l 465 308 b 516 281 487 308 495 301 b 582 252 533 264 554 252 b 648 324 625 252 648 285 b 582 396 648 363 625 396 z m 324 271 b 271 324 291 271 271 291 b 324 377 271 357 291 377 b 377 324 357 377 377 357 b 324 271 377 291 357 271 z',\n    },\n    pictChokeCymbal: {\n      x_min: 1,\n      x_max: 152,\n      y_min: 2,\n      y_max: 251,\n      ha: 249,\n      o: 'm 104 361 b 1 271 42 361 1 321 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 17 32 29 26 26 l 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 z',\n    },\n    wiggleArpeggiatoUp: {\n      x_min: -33,\n      x_max: 292,\n      y_min: 0,\n      y_max: 119,\n      ha: 119,\n      o: 'm 130 171 b -39 68 16 171 -14 91 b -48 53 -45 62 -48 58 b -29 42 -48 46 -39 42 b -10 46 -23 42 -16 43 b 56 63 12 56 29 63 b 248 0 121 63 135 0 b 419 127 361 0 410 104 b 420 132 420 130 420 131 b 412 140 420 137 416 140 b 386 130 403 140 392 134 b 334 107 367 117 353 107 b 318 108 330 107 324 107 b 240 138 289 112 265 128 b 130 171 209 153 168 171 z',\n    },\n    arrowheadBlackUp: {\n      x_min: 0,\n      x_max: 228,\n      y_min: 0,\n      y_max: 299,\n      ha: 299,\n      o: 'm 166 431 b 0 20 111 274 0 30 b 16 0 0 12 6 0 l 17 1 b 166 50 43 16 160 50 b 310 1 171 50 289 13 l 311 0 b 328 20 321 0 328 12 b 166 431 328 30 220 274 z',\n    },\n    arrowheadBlackDown: {\n      x_min: 0,\n      x_max: 228,\n      y_min: 0,\n      y_max: 299,\n      ha: 299,\n      o: 'm 166 0 b 328 410 220 157 328 400 b 311 431 328 419 321 431 l 310 429 b 166 380 289 418 171 380 b 17 429 160 380 43 415 l 16 431 b 0 410 6 431 0 419 b 166 0 0 400 111 157 z',\n    },\n    arpeggiatoUp: {\n      x_min: 1,\n      x_max: 229,\n      y_min: 7,\n      y_max: 1511,\n      ha: 1504,\n      o: 'm 219 1848 l 330 1848 l 164 2176 l 1 1848 l 121 1848 b 92 1778 115 1822 101 1800 l 89 1773 b 59 1668 75 1741 59 1702 b 96 1555 59 1614 76 1580 b 99 1551 98 1554 99 1551 l 102 1547 b 124 1496 115 1531 124 1515 b 122 1482 124 1492 124 1488 b 92 1404 118 1453 102 1428 b 59 1293 78 1372 59 1332 b 105 1172 59 1234 81 1198 b 124 1120 118 1155 124 1143 l 122 1113 b 122 1110 122 1113 122 1112 b 92 1032 118 1081 102 1057 b 59 922 78 1001 59 960 b 115 792 59 855 86 816 b 124 760 121 782 124 773 b 122 744 124 756 124 750 b 92 667 118 716 102 693 b 59 556 78 635 59 595 b 108 433 59 495 82 458 b 124 389 117 420 124 408 b 122 374 124 384 124 379 b 92 298 118 346 102 323 l 89 292 b 59 186 75 261 59 222 b 163 19 59 73 140 42 b 177 10 168 13 173 10 b 189 29 184 10 189 19 b 184 48 189 35 187 42 b 167 114 174 69 167 85 b 230 305 167 179 229 193 b 181 423 230 357 209 396 b 167 484 173 442 167 458 b 230 675 167 547 229 563 b 179 796 230 729 206 769 b 167 850 171 812 167 827 b 230 1040 167 913 229 929 b 183 1158 230 1092 209 1130 b 167 1220 173 1178 167 1194 b 230 1411 167 1284 229 1300 b 186 1526 230 1462 210 1499 b 167 1594 176 1529 167 1584 b 230 1786 167 1659 229 1673 b 219 1848 230 1809 226 1829 z',\n    },\n    arpeggiatoDown: {\n      x_min: 1,\n      x_max: 229,\n      y_min: -4,\n      y_max: 1500,\n      ha: 1504,\n      o: 'm 219 323 b 230 384 226 341 230 361 b 167 576 229 497 167 511 b 186 644 167 586 176 641 b 230 759 210 671 230 708 b 167 950 229 870 167 886 b 183 1012 167 976 173 992 b 230 1130 209 1040 230 1079 b 167 1320 229 1241 167 1257 b 179 1374 167 1344 171 1358 b 230 1495 206 1401 230 1441 b 167 1686 229 1607 167 1623 b 181 1747 167 1712 173 1728 b 230 1865 209 1774 230 1813 b 167 2056 229 1977 167 1992 b 184 2123 167 2085 174 2101 b 189 2141 187 2128 189 2136 b 177 2160 189 2151 184 2160 b 163 2151 173 2160 168 2157 b 59 1984 140 2128 59 2097 b 89 1878 59 1948 75 1909 l 92 1872 b 122 1796 102 1848 118 1824 b 124 1781 124 1791 124 1786 b 108 1737 124 1763 117 1750 b 59 1614 82 1712 59 1675 b 92 1503 59 1575 78 1535 b 122 1426 102 1477 118 1454 b 124 1410 124 1420 124 1414 b 115 1378 124 1397 121 1388 b 59 1248 86 1354 59 1315 b 92 1138 59 1210 78 1169 b 122 1060 102 1113 118 1089 b 122 1057 122 1058 122 1058 l 124 1050 b 105 998 124 1027 118 1015 b 59 877 81 972 59 936 b 92 766 59 838 78 798 b 122 688 102 742 118 717 b 124 674 124 683 124 678 b 102 624 124 655 115 639 l 99 619 b 96 615 99 619 98 616 b 59 503 76 590 59 556 b 89 397 59 468 75 429 l 92 392 b 121 323 101 370 115 348 l 1 323 l 164 -6 l 330 323 z',\n    },\n    repeat1Bar: {\n      x_min: 0,\n      x_max: 532,\n      y_min: -250,\n      y_max: 279,\n      ha: 529,\n      o: 'm 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 675 -71 b 586 -161 626 -71 586 -111 b 675 -251 586 -210 626 -251 b 766 -161 726 -251 766 -210 b 675 -71 766 -111 726 -71 z',\n    },\n    repeat2Bars: {\n      x_min: 0,\n      x_max: 762,\n      y_min: -250,\n      y_max: 279,\n      ha: 529,\n      o: 'm 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 z m 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 1007 -71 b 917 -161 958 -71 917 -111 b 1007 -251 917 -210 958 -251 b 1097 -161 1057 -251 1097 -210 b 1007 -71 1097 -111 1057 -71 z',\n    },\n    repeat4Bars: {\n      x_min: 0,\n      x_max: 1232,\n      y_min: -250,\n      y_max: 279,\n      ha: 529,\n      o: 'm 1767 380 b 1774 395 1771 386 1774 390 b 1765 402 1774 399 1771 402 l 1613 402 b 1587 380 1604 402 1597 393 l 1012 -340 b 1008 -350 1009 -343 1008 -347 b 1020 -360 1008 -356 1012 -360 l 1162 -360 b 1192 -340 1175 -360 1185 -348 z m 1436 380 b 1443 395 1440 386 1443 390 b 1434 402 1443 399 1440 402 l 1282 402 b 1256 380 1273 402 1266 393 l 681 -340 b 677 -350 678 -343 677 -347 b 688 -360 677 -356 681 -360 l 831 -360 b 861 -340 844 -360 854 -348 z m 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 z m 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 1683 -71 b 1594 -161 1634 -71 1594 -111 b 1683 -251 1594 -210 1634 -251 b 1774 -161 1734 -251 1774 -210 b 1683 -71 1774 -111 1734 -71 z',\n    },\n    repeatBarSlash: {\n      x_min: 0,\n      x_max: 532,\n      y_min: -250,\n      y_max: 279,\n      ha: 529,\n      o: 'm 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z',\n    },\n    csymDiminished: {\n      x_min: 0,\n      x_max: 473,\n      y_min: 0,\n      y_max: 473,\n      ha: 473,\n      o: 'm 341 681 b 0 341 153 681 0 530 b 341 0 0 153 153 0 b 681 341 530 0 681 153 b 341 681 681 530 530 681 z m 341 618 b 618 341 495 618 618 495 b 341 63 618 189 494 63 b 63 341 187 63 63 187 b 341 618 63 494 189 618 z',\n    },\n    csymHalfDiminished: {\n      x_min: -16,\n      x_max: 488,\n      y_min: -15,\n      y_max: 489,\n      ha: 504,\n      o: 'm 703 660 l 658 704 l 557 603 b 340 681 498 652 422 681 b -1 341 151 681 -1 530 b 78 124 -1 259 29 183 l -23 23 l 22 -22 l 122 79 b 340 0 181 30 258 0 b 680 341 528 0 680 153 b 602 559 680 423 651 500 z m 62 341 b 340 618 62 494 187 618 b 513 559 403 618 464 598 l 122 168 b 62 341 84 217 62 278 z m 616 341 b 340 63 616 189 492 63 b 167 124 276 63 216 85 l 557 514 b 616 341 596 465 616 405 z',\n    },\n    csymAugmented: {\n      x_min: 0,\n      x_max: 395,\n      y_min: 1,\n      y_max: 396,\n      ha: 395,\n      o: 'm 569 318 l 317 318 l 317 570 l 253 570 l 253 318 l 0 318 l 0 255 l 253 255 l 253 1 l 317 1 l 317 255 l 569 255 z',\n    },\n    csymMajorSeventh: {\n      x_min: 0,\n      x_max: 558,\n      y_min: 1,\n      y_max: 477,\n      ha: 476,\n      o: 'm 402 687 l 0 1 l 804 1 z m 402 562 l 693 65 l 111 65 z',\n    },\n    csymMinor: {\n      x_min: 0,\n      x_max: 325,\n      y_min: 216,\n      y_max: 260,\n      ha: 44,\n      o: 'm 468 374 l 0 374 l 0 311 l 468 311 z',\n    },\n    csymParensLeftTall: {\n      x_min: 1,\n      x_max: 185,\n      y_min: 0,\n      y_max: 997,\n      ha: 997,\n      o: 'm 266 48 b 261 65 266 55 264 62 b 92 719 157 212 92 400 b 262 1371 92 1037 154 1228 b 266 1394 266 1378 266 1394 l 266 1424 b 264 1436 266 1431 266 1436 b 259 1434 262 1436 259 1434 b 1 719 84 1261 1 1011 b 259 1 1 429 79 177 b 264 0 261 0 262 0 b 266 9 265 0 266 6 z',\n    },\n    csymParensRightTall: {\n      x_min: -20,\n      x_max: 164,\n      y_min: 0,\n      y_max: 997,\n      ha: 997,\n      o: 'm -29 9 b -26 0 -29 6 -27 0 b -22 1 -24 0 -23 0 b 236 719 158 177 236 429 b -22 1434 236 1011 154 1261 b -26 1436 -22 1434 -24 1436 b -29 1424 -29 1436 -29 1431 l -29 1394 b -24 1371 -29 1394 -29 1378 b 145 719 84 1228 145 1037 b -23 65 145 400 81 212 b -29 48 -26 62 -29 55 z',\n    },\n    csymBracketLeftTall: {\n      x_min: 0,\n      x_max: 155,\n      y_min: 0,\n      y_max: 1000,\n      ha: 1000,\n      o: 'm 217 0 b 223 9 220 0 223 4 l 223 37 b 217 46 223 42 220 46 l 92 46 l 92 1394 l 217 1394 b 223 1403 220 1394 223 1398 l 223 1431 b 217 1440 223 1436 220 1440 l 6 1440 b 0 1436 3 1440 0 1439 l 0 4 b 6 0 0 1 3 0 z',\n    },\n    csymBracketRightTall: {\n      x_min: 1,\n      x_max: 156,\n      y_min: 0,\n      y_max: 1000,\n      ha: 1000,\n      o: 'm 219 0 b 225 4 222 0 225 1 l 225 1436 b 219 1440 225 1439 222 1440 l 7 1440 b 1 1431 4 1440 1 1436 l 1 1403 b 7 1394 1 1398 4 1394 l 132 1394 l 132 46 l 7 46 b 1 37 4 46 1 42 l 1 9 b 7 0 1 4 4 0 z',\n    },\n    csymParensLeftVeryTall: {\n      x_min: 0,\n      x_max: 122,\n      y_min: 0,\n      y_max: 993,\n      ha: 993,\n      o: 'm 176 32 b 171 49 176 39 174 46 b 60 716 104 194 60 399 b 173 1382 60 1032 101 1241 b 176 1405 176 1390 176 1405 l 176 1427 b 173 1430 176 1428 174 1430 b 0 716 40 1297 0 978 b 170 3 0 428 50 179 b 171 0 170 1 170 0 b 176 6 173 0 176 4 z',\n    },\n    csymParensRightVeryTall: {\n      x_min: -15,\n      x_max: 107,\n      y_min: 0,\n      y_max: 993,\n      ha: 993,\n      o: 'm -22 6 b -17 0 -22 4 -19 0 b -16 3 -16 0 -16 1 b 154 716 104 179 154 428 b -19 1430 154 978 114 1297 b -22 1427 -20 1430 -22 1428 l -22 1405 b -19 1382 -22 1405 -22 1390 b 94 716 53 1241 94 1032 b -17 49 94 399 50 194 b -22 32 -20 46 -22 39 z',\n    },\n    csymDiagonalArrangementSlash: {\n      x_min: 0,\n      x_max: 999,\n      y_min: 0,\n      y_max: 1000,\n      ha: 1000,\n      o: 'm 1439 1380 l 1377 1440 l 0 60 l 62 0 z',\n    },\n    accSagittal5v7KleismaUp: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 -35 b 135 -112 68 -86 99 -112 b 225 68 194 -112 225 -53 l 180 68 b 144 -4 180 20 168 -4 b 122 0 138 -4 131 -3 b 23 248 86 14 52 96 l 0 248 z',\n    },\n    accSagittal5v7KleismaDown: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 23 -248 b 122 0 52 -96 86 -14 b 144 4 131 3 138 4 b 180 -68 168 4 180 -20 l 225 -68 b 135 112 225 53 194 112 b 45 35 99 112 68 86 l 45 517 l 0 517 z',\n    },\n    accSagittal5CommaUp: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 225 -517 l 225 248 l 203 248 l 0 -112 l 0 -284 l 180 33 l 180 -517 z',\n    },\n    accSagittal5CommaDown: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 180 517 l 180 -33 l 0 284 l 0 112 l 203 -248 l 225 -248 l 225 517 z',\n    },\n    accSagittal7CommaUp: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 248 l 0 -517 l 45 -517 l 45 112 l 89 112 b 180 -68 150 112 180 53 l 180 -248 l 225 -248 l 225 68 b 135 248 225 187 194 248 z',\n    },\n    accSagittal7CommaDown: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 135 -248 b 225 -68 194 -248 225 -187 l 225 248 l 180 248 l 180 68 b 89 -112 180 -53 150 -112 l 45 -112 l 45 517 l 0 517 l 0 -248 z',\n    },\n    accSagittal25SmallDiesisUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -157 l 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 68 l 0 -33 l 315 135 l 315 10 z',\n    },\n    accSagittal25SmallDiesisDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 315 -10 l 315 -135 l 0 33 l 0 -68 l 337 -248 l 360 -248 l 360 517 l 315 517 l 315 89 l 0 259 l 0 157 z',\n    },\n    accSagittal35MediumDiesisUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 l 0 -112 z',\n    },\n    accSagittal35MediumDiesisDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 112 l 203 -248 l 315 -248 b 405 -68 374 -248 405 -187 l 405 248 l 360 248 l 360 68 b 271 -112 360 -53 330 -112 l 225 -112 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n    },\n    accSagittal11MediumDiesisUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 l 0 -89 l 0 -248 z',\n    },\n    accSagittal11MediumDiesisDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 248 l 0 89 l 248 -248 l 495 89 l 495 248 l 271 -53 l 271 517 l 225 517 l 225 -53 z',\n    },\n    accSagittal11LargeDiesisUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 112 l 315 112 b 449 -68 405 112 449 53 l 449 -248 l 495 -248 l 495 68 b 360 248 495 187 449 248 l 135 248 b 0 68 45 248 0 187 z',\n    },\n    accSagittal11LargeDiesisDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 360 -248 b 495 -68 449 -248 495 -187 l 495 248 l 449 248 l 449 68 b 315 -112 449 -53 405 -112 l 271 -112 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n    },\n    accSagittal35LargeDiesisUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 l 540 112 l 540 274 l 271 -58 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n    },\n    accSagittal35LargeDiesisDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 l 540 112 l 540 274 l 269 -58 l 269 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n    },\n    accSagittalSharp25SDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 b 112 -112 0 -53 36 -112 l 135 -112 l 135 -517 l 180 -517 l 180 -89 b 248 26 206 -65 229 -27 b 315 -89 264 -27 287 -65 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 122 0 216 96 176 14 b 94 -4 112 -3 102 -4 b 45 68 60 -4 45 20 z',\n    },\n    accSagittalFlat25SUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 45 -68 b 94 4 45 -20 60 4 b 122 0 102 4 112 3 b 248 -248 176 -14 216 -96 b 399 4 261 -171 297 4 b 449 -68 433 4 449 -20 l 495 -68 b 383 112 495 53 458 112 l 360 112 l 360 517 l 315 517 l 315 89 b 248 -26 287 65 264 27 b 180 89 229 27 206 65 l 180 517 l 135 517 l 135 112 l 112 112 b 0 -68 36 112 0 53 z',\n    },\n    accSagittalSharp7CDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 112 l 89 112 b 180 104 124 112 154 109 l 180 -517 l 225 -517 l 225 89 b 315 -68 285 60 315 9 l 315 -248 l 360 -248 l 360 68 b 135 248 360 187 285 248 l 0 248 z',\n    },\n    accSagittalFlat7CUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 135 -248 b 360 -68 285 -248 360 -187 l 360 248 l 315 248 l 315 68 b 225 -89 315 -9 285 -60 l 225 517 l 180 517 l 180 -104 b 89 -112 154 -109 124 -112 l 45 -112 l 45 517 l 0 517 z',\n    },\n    accSagittalSharp5CDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -517 l 45 71 l 180 -56 l 180 -517 l 225 -517 l 225 -98 l 405 -268 l 405 -112 l 23 248 l 0 248 l 0 -517 z',\n    },\n    accSagittalFlat5CUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 517 l 0 -248 l 23 -248 l 405 112 l 405 268 l 225 98 l 225 517 l 180 517 l 180 56 l 45 -71 l 45 517 z',\n    },\n    accSagittalSharp5v7kDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -112 l 0 -276 l 135 -82 l 135 -517 l 180 -517 l 180 -17 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 z',\n    },\n    accSagittalFlat5v7kUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 248 -248 l 360 -248 b 495 -68 449 -248 495 -189 l 495 248 l 449 248 l 449 68 b 360 -107 449 -30 420 -89 l 360 517 l 315 517 l 315 -112 l 271 -112 l 180 17 l 180 517 l 135 517 l 135 82 l 0 276 l 0 112 z',\n    },\n    accSagittalSharp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 180 -53 l 180 -517 l 225 -517 l 225 0 l 292 85 l 360 0 l 360 -517 l 405 -517 l 405 -53 l 585 -274 l 585 -112 l 292 248 l 0 -112 l 0 -274 z',\n    },\n    accSagittalFlat: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 274 l 0 112 l 292 -248 l 585 112 l 585 274 l 405 53 l 405 517 l 360 517 l 360 0 l 292 -85 l 225 0 l 225 517 l 180 517 l 180 53 z',\n    },\n    accSagittalSharp5v7kUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -361,\n      y_max: 172,\n      ha: 533,\n      o: 'm 45 -517 l 45 -10 b 135 -92 68 -48 98 -75 l 135 -520 l 180 -520 l 180 -108 b 248 -115 203 -112 225 -115 b 271 -112 256 -115 264 -115 l 271 -517 l 315 -517 l 315 -107 b 449 68 405 -89 449 -30 l 405 68 b 297 -4 405 19 369 -4 b 23 248 131 -4 56 85 l 0 248 l 0 -517 z',\n    },\n    accSagittalFlat5v7kDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 361,\n      ha: 533,\n      o: 'm 0 517 l 0 -248 l 23 -248 b 297 4 56 -85 131 4 b 405 -68 369 4 405 -19 l 449 -68 b 315 107 449 30 405 89 l 315 517 l 271 517 l 271 112 b 248 115 264 115 256 115 b 180 108 225 115 203 112 l 180 520 l 135 520 l 135 92 b 45 10 98 75 68 48 l 45 517 z',\n    },\n    accSagittalSharp5CUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 -112 z',\n    },\n    accSagittalFlat5CDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 112 l 428 -248 l 449 -248 l 449 517 l 405 517 l 405 -75 l 315 0 l 315 517 l 271 517 l 271 39 l 180 115 l 180 517 l 135 517 l 135 153 l 0 266 z',\n    },\n    accSagittalSharp7CUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 112 l 135 112 l 135 -517 l 180 -517 l 180 108 b 271 89 213 105 243 99 l 271 -517 l 315 -517 l 315 73 b 405 -68 374 45 405 -3 l 405 -248 l 449 -248 l 449 68 b 135 248 449 187 346 248 l 0 248 z',\n    },\n    accSagittalFlat7CDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 135 -248 b 449 -68 346 -248 449 -187 l 449 248 l 405 248 l 405 68 b 315 -73 405 3 374 -45 l 315 517 l 271 517 l 271 -89 b 180 -108 243 -99 213 -105 l 180 517 l 135 517 l 135 -112 l 45 -112 l 45 517 l 0 517 z',\n    },\n    accSagittalSharp25SUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -30 l 495 143 l 495 14 l 0 -157 l 0 -255 l 225 -177 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 l 0 68 z',\n    },\n    accSagittalFlat25SDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 l 517 -248 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 115 l 405 517 l 360 517 l 360 130 l 271 161 l 271 517 l 225 517 l 225 177 l 0 255 l 0 157 l 495 -14 l 495 -143 l 0 30 z',\n    },\n    accSagittalSharp35MUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -112 l 0 -274 l 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 z',\n    },\n    accSagittalFlat35MDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 292 -248 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 449 -96 540 -17 510 -72 l 449 517 l 405 517 l 405 -109 b 360 -112 390 -112 376 -112 l 315 -112 l 315 517 l 271 517 l 271 -58 l 180 53 l 180 517 l 135 517 l 135 108 l 0 274 l 0 112 z',\n    },\n    accSagittalSharp11MUp: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -112 l 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 z',\n    },\n    accSagittalFlat11MDown: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 337 -248 l 675 112 l 675 271 l 495 79 l 495 517 l 449 517 l 449 30 l 360 -65 l 360 517 l 315 517 l 315 -65 l 225 30 l 225 517 l 180 517 l 180 79 l 0 271 l 0 112 z',\n    },\n    accSagittalSharp11LUp: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 112 l 449 112 l 449 -517 l 495 -517 l 495 104 b 631 -68 585 82 631 26 l 631 -248 l 675 -248 l 675 68 b 449 248 675 187 600 248 l 225 248 b 0 68 75 248 0 187 z',\n    },\n    accSagittalFlat11LDown: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 449 -248 b 675 -68 600 -248 675 -187 l 675 248 l 631 248 l 631 68 b 495 -104 631 -26 585 -82 l 495 517 l 449 517 l 449 -112 l 360 -112 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n    },\n    accSagittalSharp35LUp: {\n      x_min: 0,\n      x_max: 500,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 71 l 452 -17 l 452 -517 l 495 -517 l 495 -56 l 720 -268 l 720 -112 l 337 248 l 225 248 b 0 68 75 248 0 187 z',\n    },\n    accSagittalFlat35LDown: {\n      x_min: 0,\n      x_max: 500,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 l 720 112 l 720 268 l 495 56 l 495 517 l 452 517 l 452 17 l 360 -71 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n    },\n    accSagittalDoubleSharp25SDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 b 135 -112 0 -53 45 -112 b 243 -62 180 -112 215 -95 l 89 -503 l 143 -517 l 292 -82 l 445 -517 l 495 -503 l 343 -62 b 449 -112 372 -95 408 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 z',\n    },\n    accSagittalDoubleFlat25SUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 45 -68 b 112 4 45 -20 68 4 b 292 -248 236 4 274 -148 b 475 4 315 -148 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 b 343 62 408 112 372 95 l 495 503 l 445 517 l 292 82 l 143 517 l 89 503 l 243 62 b 135 112 215 95 180 112 b 0 -68 45 112 0 53 z',\n    },\n    accSagittalDoubleSharp7CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -503 l 52 -517 l 203 -82 l 354 -517 l 405 -503 l 230 0 l 271 108 b 495 -68 420 92 495 35 l 495 -248 l 540 -248 l 540 68 b 225 248 540 187 435 248 l 89 248 l 89 112 l 135 112 l 174 0 z m 213 112 l 203 82 l 192 112 z',\n    },\n    accSagittalDoubleFlat7CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 174 0 l 135 -112 l 89 -112 l 89 -248 l 225 -248 b 540 -68 435 -248 540 -187 l 540 248 l 495 248 l 495 68 b 271 -108 495 -35 420 -92 l 230 0 l 405 503 l 354 517 l 203 82 l 52 517 l 0 503 z m 192 -112 l 203 -82 l 213 -112 z',\n    },\n    accSagittalDoubleSharp5CDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 405 -503 l 230 0 l 232 4 l 585 -264 l 585 -112 l 112 248 l 89 248 l 89 112 l 151 68 l 174 0 l 0 -503 l 52 -517 l 203 -82 l 354 -517 z',\n    },\n    accSagittalDoubleFlat5CUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 354 517 l 203 82 l 52 517 l 0 503 l 174 0 l 151 -68 l 89 -112 l 89 -248 l 112 -248 l 585 112 l 585 264 l 232 -4 l 230 0 l 405 503 z',\n    },\n    accSagittalDoubleSharp5v7kDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -274 l 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 l 0 -112 z',\n    },\n    accSagittalDoubleFlat5v7kUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 112 l 292 -248 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 360 -112 540 -53 480 -112 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 252 -35 l 0 274 z',\n    },\n    accSagittalDoubleSharp: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 540 -503 l 366 0 l 380 45 l 675 -271 l 675 -112 l 337 248 l 0 -112 l 0 -271 l 295 45 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 z',\n    },\n    accSagittalDoubleFlat: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 295 -45 l 0 271 l 0 112 l 337 -248 l 675 112 l 675 271 l 380 -45 l 366 0 l 540 503 z',\n    },\n    accSagittal7v11KleismaUp: {\n      x_min: 0,\n      x_max: 219,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -45 b 248 -112 200 -89 225 -112 b 315 68 292 -112 315 -53 l 271 68 b 248 -4 271 20 264 -4 b 236 0 245 -4 240 -3 b 157 248 213 14 187 96 b 78 0 127 96 101 14 b 65 -4 73 -3 68 -4 b 45 68 50 -4 45 20 l 0 68 b 68 -112 0 -53 23 -112 z',\n    },\n    accSagittal7v11KleismaDown: {\n      x_min: 0,\n      x_max: 219,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 68 112 b 0 -68 23 112 0 53 l 45 -68 b 65 4 45 -20 50 4 b 78 0 68 4 73 3 b 157 -248 101 -14 127 -96 b 236 0 187 -96 213 -14 b 248 4 240 3 245 4 b 271 -68 264 4 271 -20 l 315 -68 b 248 112 315 53 292 112 b 180 45 225 112 200 89 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 z',\n    },\n    accSagittal17CommaUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 -40 b 315 -118 248 -92 279 -118 b 405 62 374 -118 405 -59 l 360 62 b 324 -10 360 14 348 -10 b 302 -6 318 -10 311 -9 b 206 217 268 9 235 84 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n    },\n    accSagittal17CommaDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 206 -217 b 302 6 235 -84 268 -9 b 324 10 311 9 318 10 b 360 -62 348 10 360 -14 l 405 -62 b 315 118 405 59 374 118 b 225 40 279 118 248 92 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n    },\n    accSagittal55CommaUp: {\n      x_min: 0,\n      x_max: 219,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 248 l 0 -517 l 45 -517 l 45 58 l 315 -274 l 315 -112 l 23 248 z',\n    },\n    accSagittal55CommaDown: {\n      x_min: 0,\n      x_max: 219,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 23 -248 l 315 112 l 315 274 l 45 -58 l 45 517 l 0 517 l 0 -248 z',\n    },\n    accSagittal7v11CommaUp: {\n      x_min: 0,\n      x_max: 188,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 248 l 135 248 b 0 68 45 248 0 187 z',\n    },\n    accSagittal7v11CommaDown: {\n      x_min: 0,\n      x_max: 188,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 271 -248 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n    },\n    accSagittal5v11SmallDiesisUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 73 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -40 b 360 -118 295 -92 325 -118 b 449 62 420 -118 449 -59 l 405 62 b 369 -10 405 14 393 -10 b 348 -6 363 -10 356 -9 b 251 217 312 9 279 84 l 248 248 l 135 248 b 0 73 45 248 0 189 z',\n    },\n    accSagittal5v11SmallDiesisDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -73 b 135 -248 0 -189 45 -248 l 248 -248 l 251 -217 b 348 6 279 -84 312 -9 b 369 10 356 9 363 10 b 405 -62 393 10 405 -14 l 449 -62 b 360 118 449 59 420 118 b 271 40 325 118 295 92 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n    },\n    accSagittalSharp5v11SDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 242 37 203 -23 225 -3 b 315 -89 262 -23 285 -63 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n    },\n    accSagittalFlat5v11SUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -127 b 399 4 261 -171 297 4 b 449 -68 433 4 449 -20 l 495 -68 b 383 112 495 53 458 112 l 360 112 l 360 517 l 315 517 l 315 89 b 242 -37 285 63 262 23 b 180 23 225 3 203 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n    },\n    accSagittalSharp7v11CDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 89 -112 l 89 -517 l 135 -517 l 135 -95 b 206 37 163 -73 187 -30 b 271 -23 225 -3 248 -23 l 271 -517 l 315 -517 l 315 -23 l 383 -23 b 449 -203 428 -23 449 -84 l 495 -203 b 405 68 495 -23 465 68 l 292 68 b 203 248 258 68 228 127 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 l 0 68 b 89 -112 0 -52 30 -112 z',\n    },\n    accSagittalFlat7v11CUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 89 112 b 0 -68 30 112 0 52 l 45 -68 b 81 3 45 -20 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 b 292 -68 228 -127 258 -68 l 405 -68 b 495 203 465 -68 495 23 l 449 203 b 383 23 449 84 428 23 l 315 23 l 315 517 l 271 517 l 271 23 b 206 -37 248 23 225 3 b 135 95 187 30 163 73 l 135 517 l 89 517 z',\n    },\n    accSagittalSharp55CDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 -112 z',\n    },\n    accSagittalFlat55CUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 112 l 337 -248 l 360 -248 l 360 517 l 315 517 l 315 -65 l 180 78 l 180 517 l 135 517 l 135 125 l 0 271 z',\n    },\n    accSagittalSharp17CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -89 292 13 321 -55 l 360 -517 l 405 -517 l 405 -112 l 428 -112 b 540 68 504 -112 540 -53 l 495 68 b 445 -4 495 20 480 -4 b 292 248 343 -4 307 171 l 180 248 b 0 68 60 248 0 187 l 0 -248 z',\n    },\n    accSagittalFlat17CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 248 l 0 -68 b 180 -248 0 -187 60 -248 l 292 -248 b 445 4 307 -171 343 4 b 495 -68 480 4 495 -20 l 540 -68 b 428 112 540 53 504 112 l 405 112 l 405 517 l 360 517 l 360 89 b 271 -112 321 55 292 -13 l 225 -112 l 225 517 l 180 517 l 180 -109 b 45 68 89 -95 45 -36 l 45 248 z',\n    },\n    accSagittalSharp7v11kDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -32 l 405 138 l 405 13 l 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 68 z',\n    },\n    accSagittalFlat7v11kUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 l 428 -248 l 449 -248 l 449 517 l 405 517 l 405 86 l 271 144 l 271 517 l 225 517 l 225 161 l 0 256 l 0 157 l 405 -13 l 405 -138 l 0 32 z',\n    },\n    accSagittalSharp7v11kUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 135 -112 l 135 -517 l 180 -517 l 180 -105 b 271 -23 217 -94 248 -65 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 l 0 68 b 135 -112 0 -53 45 -112 z',\n    },\n    accSagittalFlat7v11kDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 135 112 b 0 -68 45 112 0 53 l 45 -68 b 112 4 45 -20 68 4 b 292 -248 236 4 274 -148 b 475 4 315 -148 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 l 449 517 l 405 517 l 405 105 b 315 23 369 94 337 65 l 315 517 l 271 517 l 271 23 b 180 105 248 65 217 94 l 180 517 l 135 517 z',\n    },\n    accSagittalSharp17CUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n    },\n    accSagittalFlat17CDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 b 475 4 312 -150 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 l 449 517 l 405 517 l 405 105 b 315 23 369 94 337 65 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n    },\n    accSagittalSharp55CUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -517 l 45 78 l 135 10 l 135 -517 l 180 -517 l 180 -23 l 271 -92 l 271 -517 l 315 -517 l 315 -127 l 495 -264 l 495 -112 l 23 248 l 0 248 l 0 -517 z',\n    },\n    accSagittalFlat55CDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 517 l 0 -248 l 23 -248 l 495 112 l 495 264 l 315 127 l 315 517 l 271 517 l 271 92 l 180 23 l 180 517 l 135 517 l 135 -10 l 45 -78 l 45 517 z',\n    },\n    accSagittalSharp7v11CUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 86 45 6 89 58 l 180 -517 l 225 -517 l 225 98 b 315 109 252 104 282 108 l 315 -517 l 360 -517 l 360 112 l 449 112 l 449 -517 l 495 -517 l 495 248 l 360 248 b 0 68 121 248 0 189 z',\n    },\n    accSagittalFlat7v11CDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 360 -248 0 -189 121 -248 l 495 -248 l 495 517 l 449 517 l 449 -112 l 360 -112 l 360 517 l 315 517 l 315 -109 b 225 -98 282 -108 252 -104 l 225 517 l 180 517 l 180 -86 b 45 68 89 -58 45 -6 l 45 248 l 0 248 z',\n    },\n    accSagittalSharp5v11SUp: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 -23 b 449 -105 383 -65 415 -94 l 449 -517 l 495 -517 l 495 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 z',\n    },\n    accSagittalFlat5v11SDown: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 225 -248 0 -187 76 -248 l 337 -248 b 520 4 360 -150 396 4 b 585 -68 563 4 585 -20 l 631 -68 b 495 112 631 53 585 112 l 495 517 l 449 517 l 449 105 b 360 23 415 94 383 65 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n    },\n    accSagittalDoubleSharp5v11SDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 341 -60 b 449 -112 370 -95 405 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n    },\n    accSagittalDoubleFlat5v11SUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 b 475 4 312 -150 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 b 341 60 405 112 370 95 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n    },\n    accSagittalDoubleSharp7v11CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 112 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -503 l 275 0 l 278 4 b 337 -23 295 -13 315 -23 l 405 -23 b 495 -203 465 -23 495 -84 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 127 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 112 -112 0 -52 36 -112 z',\n    },\n    accSagittalDoubleFlat7v11CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 112 112 b 0 -68 36 112 0 52 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 b 360 -68 271 -127 310 -68 l 428 -68 b 540 203 503 -68 540 23 l 495 203 b 405 23 495 84 465 23 l 337 23 b 278 -4 315 23 295 13 l 275 0 l 449 503 l 397 517 l 248 81 l 95 517 l 45 501 l 193 73 b 112 112 170 99 143 112 z',\n    },\n    accSagittalDoubleSharp55CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 428 248 l 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 z',\n    },\n    accSagittalDoubleFlat55CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 449 -248 l 449 -112 l 386 -59 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 307 7 l 0 266 l 0 112 l 428 -248 z',\n    },\n    accSagittalDoubleSharp17CDown: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 387 -62 b 495 -112 416 -95 452 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 l 0 -248 z',\n    },\n    accSagittalDoubleFlat17CUp: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 248 l 0 -68 b 225 -248 0 -187 76 -248 l 337 -248 b 520 4 360 -150 396 4 b 585 -68 563 4 585 -20 l 631 -68 b 495 112 631 53 585 112 b 387 62 452 112 416 95 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 271 -112 b 45 68 120 -112 45 -53 l 45 248 z',\n    },\n    accSagittalDoubleSharp7v11kDown: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 l 0 -30 l 366 96 l 399 0 l 392 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 276 -517 l 428 -82 l 579 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 z m 416 115 l 442 124 l 428 82 z',\n    },\n    accSagittalDoubleFlat7v11kUp: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 517 -248 l 540 -248 l 540 -157 l 507 -145 l 455 0 l 631 503 l 579 517 l 428 82 l 276 517 l 225 503 l 353 135 l 0 255 l 0 157 l 392 23 l 399 0 l 366 -96 l 0 30 l 0 -68 z m 428 -82 l 442 -124 l 416 -115 z',\n    },\n    accSagittal23CommaUp: {\n      x_min: 0,\n      x_max: 188,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 -4 b 68 -23 53 -17 60 -23 l 180 -23 b 225 -203 210 -23 225 -82 l 271 -203 b 206 68 271 -23 248 68 l 89 68 b 23 248 71 68 48 127 l 0 248 z',\n    },\n    accSagittal23CommaDown: {\n      x_min: 0,\n      x_max: 188,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 23 -248 b 89 -68 48 -127 71 -68 l 206 -68 b 271 203 248 -68 271 23 l 225 203 b 180 23 225 82 210 23 l 68 23 b 45 4 60 23 53 17 l 45 517 l 0 517 z',\n    },\n    accSagittal5v19CommaUp: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 248 l 203 248 b 86 112 151 157 112 112 b 45 157 59 112 45 127 l 0 157 b 76 23 0 72 26 27 l 0 -112 z',\n    },\n    accSagittal5v19CommaDown: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 112 l 76 -23 b 0 -157 26 -27 0 -72 l 45 -157 b 86 -112 45 -127 59 -112 b 203 -248 112 -112 151 -157 l 225 -248 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n    },\n    accSagittal5v23SmallDiesisUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 -4 b 248 -23 233 -17 240 -23 l 360 -23 b 405 -203 390 -23 405 -82 l 449 -203 b 386 68 449 -23 428 68 l 271 68 b 203 248 251 68 228 127 l 0 -112 z',\n    },\n    accSagittal5v23SmallDiesisDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 112 l 203 -248 b 271 -68 228 -127 251 -68 l 386 -68 b 449 203 428 -68 449 23 l 405 203 b 360 23 405 82 390 23 l 248 23 b 225 4 240 23 233 17 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n    },\n    accSagittalSharp5v23SDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 6 b 89 -23 59 -13 73 -23 l 180 -23 l 180 -517 l 225 -517 l 225 -23 l 292 -23 b 360 -203 337 -23 360 -84 l 405 -203 b 315 68 405 -23 374 68 l 112 68 b 23 248 78 68 48 127 l 0 248 z',\n    },\n    accSagittalFlat5v23SUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 23 -248 b 112 -68 48 -127 78 -68 l 315 -68 b 405 203 374 -68 405 23 l 360 203 b 292 23 360 84 337 23 l 225 23 l 225 517 l 180 517 l 180 23 l 89 23 b 45 -6 73 23 59 13 l 45 517 l 0 517 z',\n    },\n    accSagittalSharp5v19CDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 b 89 -112 0 -52 30 -112 l 89 -517 l 135 -517 l 135 -95 b 225 112 173 -65 203 4 l 271 112 l 271 -517 l 315 -517 l 315 107 b 405 -68 374 89 405 30 l 405 -248 l 449 -248 l 449 68 b 315 248 449 189 405 248 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 23 z',\n    },\n    accSagittalFlat5v19CUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 45 -68 b 81 3 45 -23 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 l 315 -248 b 449 -68 405 -248 449 -189 l 449 248 l 405 248 l 405 68 b 315 -107 405 -30 374 -89 l 315 517 l 271 517 l 271 -112 l 225 -112 b 135 95 203 -4 173 65 l 135 517 l 89 517 l 89 112 b 0 -68 30 112 0 52 z',\n    },\n    accSagittalSharp23CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 135 -82 l 135 -517 l 180 -517 l 180 -17 l 239 68 b 315 -23 261 7 287 -23 l 315 -517 l 360 -517 l 360 -23 l 428 -23 b 495 -203 472 -23 495 -84 l 540 -203 b 449 68 540 -23 510 68 l 337 68 b 248 248 302 68 271 127 l 0 -112 l 0 -276 z',\n    },\n    accSagittalFlat23CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 276 l 0 112 l 248 -248 b 337 -68 271 -127 302 -68 l 449 -68 b 540 203 510 -68 540 23 l 495 203 b 428 23 495 84 472 23 l 360 23 l 360 517 l 315 517 l 315 23 b 239 -68 287 23 261 -7 l 180 17 l 180 517 l 135 517 l 135 82 z',\n    },\n    accSagittalSharp23CUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 14 b 112 -23 63 -10 86 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 360 -23 b 449 -203 420 -23 449 -84 l 495 -203 b 383 68 495 -23 458 68 l 135 68 b 23 248 85 68 48 127 l 0 248 z',\n    },\n    accSagittalFlat23CDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 23 -248 b 135 -68 48 -127 85 -68 l 383 -68 b 495 203 458 -68 495 23 l 449 203 b 360 23 449 84 420 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 -14 86 23 63 10 l 45 517 l 0 517 z',\n    },\n    accSagittalSharp5v19CUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -112 l 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z',\n    },\n    accSagittalFlat5v19CDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 112 20 b 0 -157 37 6 0 -53 l 45 -157 b 130 -68 45 -98 73 -68 b 428 -248 186 -68 285 -127 l 449 -248 l 449 517 l 405 517 l 405 -75 l 315 0 l 315 517 l 271 517 l 271 39 l 180 115 l 180 517 l 135 517 l 135 153 l 0 266 l 0 112 z',\n    },\n    accSagittalSharp5v23SUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 14 b 383 -23 334 -10 357 -23 l 405 -23 l 405 -517 l 449 -517 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z',\n    },\n    accSagittalFlat5v23SDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 274 l 0 112 l 292 -248 b 405 -68 318 -127 356 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 449 517 l 405 517 l 405 23 l 383 23 b 315 -14 357 23 334 10 l 315 517 l 271 517 l 271 -58 l 180 53 l 180 517 l 135 517 l 135 108 z',\n    },\n    accSagittalDoubleSharp5v23SDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 52 -517 l 203 -81 l 354 -517 l 405 -503 l 239 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 225 68 b 112 248 176 68 138 127 l 89 248 l 89 112 b 170 -14 109 45 135 0 l 0 -501 z',\n    },\n    accSagittalDoubleFlat5v23SUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 501 l 170 14 b 89 -112 135 0 109 -45 l 89 -248 l 112 -248 b 225 -68 138 -127 176 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 239 23 l 405 503 l 354 517 l 203 81 l 52 517 z',\n    },\n    accSagittalDoubleSharp5v19CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 b 112 -112 0 -52 36 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -501 l 275 0 l 315 112 b 495 -68 435 112 495 53 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 z',\n    },\n    accSagittalDoubleFlat5v19CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 360 -248 b 540 -68 480 -248 540 -189 l 540 248 l 495 248 l 495 68 b 315 -112 495 -53 435 -112 l 275 0 l 449 501 l 397 517 l 248 81 l 95 517 l 45 501 l 193 73 b 112 112 170 99 143 112 b 0 -68 36 112 0 52 z',\n    },\n    accSagittalDoubleSharp23CDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 323 4 b 383 -23 340 -13 360 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z',\n    },\n    accSagittalDoubleFlat23CUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 274 l 0 112 l 292 -248 b 405 -68 318 -127 356 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 383 23 b 323 -4 360 23 340 13 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 252 -35 z',\n    },\n    accSagittal19SchismaUp: {\n      x_min: 0,\n      x_max: 125,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 l 0 68 b 68 -112 0 -52 23 -112 z',\n    },\n    accSagittal19SchismaDown: {\n      x_min: 0,\n      x_max: 125,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 68 112 b 0 -68 23 112 0 52 l 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 l 180 -248 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 z',\n    },\n    accSagittal17KleismaUp: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n    },\n    accSagittal17KleismaDown: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 225 -248 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n    },\n    accSagittal143CommaUp: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 105 68 b 45 157 65 68 45 98 l 0 157 b 23 20 0 95 7 50 b 0 -203 7 -23 0 -98 z',\n    },\n    accSagittal143CommaDown: {\n      x_min: 0,\n      x_max: 156,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 23 -20 0 98 7 23 b 0 -157 7 -50 0 -95 l 45 -157 b 105 -68 45 -98 65 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 225 -248 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n    },\n    accSagittal11v49CommaUp: {\n      x_min: 0,\n      x_max: 188,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -292 b 89 -157 45 -203 60 -157 l 203 -157 b 225 -143 210 -157 217 -153 l 225 -517 l 271 -517 l 271 248 l 248 248 b 180 157 233 187 210 157 l 68 157 b 0 -68 23 157 0 82 l 45 -68 b 89 68 45 23 60 68 l 203 68 b 225 84 209 68 216 72 l 225 -36 b 180 -68 213 -58 199 -68 l 68 -68 b 0 -292 23 -68 0 -143 z',\n    },\n    accSagittal11v49CommaDown: {\n      x_min: 0,\n      x_max: 188,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 292 b 68 68 0 143 23 68 l 180 68 b 225 36 199 68 213 58 l 225 -84 b 203 -68 216 -72 209 -68 l 89 -68 b 45 68 60 -68 45 -23 l 0 68 b 68 -157 0 -82 23 -157 l 180 -157 b 248 -248 210 -157 233 -187 l 271 -248 l 271 517 l 225 517 l 225 143 b 203 157 217 153 210 157 l 89 157 b 45 292 60 157 45 203 z',\n    },\n    accSagittal19CommaUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -4 b 203 -23 187 -17 196 -23 l 315 -23 b 360 -203 346 -23 360 -82 l 405 -203 b 341 68 405 -23 383 68 l 225 68 b 157 248 206 68 183 127 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z',\n    },\n    accSagittal19CommaDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 b 225 -68 183 -127 206 -68 l 341 -68 b 405 203 383 -68 405 23 l 360 203 b 315 23 360 82 346 23 l 203 23 b 180 4 196 23 187 17 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 b 0 -68 23 112 0 52 z',\n    },\n    accSagittal7v19CommaUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 112 l 225 112 b 315 -68 285 112 315 53 l 315 -248 l 360 -248 l 360 68 b 271 248 360 187 330 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z',\n    },\n    accSagittal7v19CommaDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 l 271 -248 b 360 -68 330 -248 360 -187 l 360 248 l 315 248 l 315 68 b 225 -112 315 -53 285 -112 l 180 -112 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 b 0 -68 23 112 0 52 z',\n    },\n    accSagittal49SmallDiesisUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n    },\n    accSagittal49SmallDiesisDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 315 -248 b 405 -68 374 -248 405 -187 l 405 248 l 360 248 l 360 68 b 271 -112 360 -53 330 -112 l 225 -112 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n    },\n    accSagittal23SmallDiesisUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 58 l 495 -274 l 495 -112 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n    },\n    accSagittal23SmallDiesisDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 495 112 l 495 274 l 225 -58 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n    },\n    accSagittal5v13MediumDiesisUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 b 128 180 253 203 184 180 b 45 248 73 180 45 203 l 0 248 b 52 95 0 170 17 120 l 0 68 l 0 -33 l 315 135 l 315 10 l 0 -157 z',\n    },\n    accSagittal5v13MediumDiesisDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 157 l 315 -10 l 315 -135 l 0 33 l 0 -68 l 52 -95 b 0 -248 17 -120 0 -170 l 45 -248 b 128 -180 45 -203 73 -180 b 337 -248 184 -180 253 -203 l 360 -248 l 360 517 l 315 517 l 315 89 l 0 259 z',\n    },\n    accSagittal11v19MediumDiesisUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -4 b 292 -23 278 -17 285 -23 l 405 -23 b 449 -203 435 -23 449 -82 l 495 -203 b 431 68 495 -23 472 68 l 315 68 b 248 248 295 68 271 127 l 135 248 b 0 68 45 248 0 187 l 0 -248 z',\n    },\n    accSagittal11v19MediumDiesisDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 248 l 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 b 315 -68 271 -127 295 -68 l 431 -68 b 495 203 472 -68 495 23 l 449 203 b 405 23 449 82 435 23 l 292 23 b 271 4 285 23 278 17 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 z',\n    },\n    accSagittal49MediumDiesisUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -68 l 0 -248 l 45 -248 l 315 -94 l 315 -517 l 360 -517 l 360 248 l 225 248 b 0 -68 75 248 0 143 z m 45 -68 b 225 112 45 53 105 112 l 315 112 l 315 10 l 45 -145 z',\n    },\n    accSagittal49MediumDiesisDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 68 b 225 -248 0 -143 75 -248 l 360 -248 l 360 517 l 315 517 l 315 94 l 45 248 l 0 248 z m 45 145 l 315 -10 l 315 -112 l 225 -112 b 45 68 105 -112 45 -53 z',\n    },\n    accSagittal5v49MediumDiesisUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -89 l 0 -248 l 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 b 89 89 170 143 118 89 b 45 157 60 89 45 112 l 0 157 b 68 3 0 68 23 16 z',\n    },\n    accSagittal5v49MediumDiesisDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 68 -3 b 0 -157 23 -16 0 -68 l 45 -157 b 89 -89 45 -112 60 -89 b 248 -248 118 -89 170 -143 l 495 89 l 495 248 l 271 -53 l 271 517 l 225 517 l 225 -53 l 0 248 l 0 89 z',\n    },\n    accSagittal49LargeDiesisUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 -89 l 360 -248 l 405 -248 l 405 -68 b 180 248 405 143 330 248 l 0 248 z m 45 12 l 45 112 l 180 112 b 360 -68 300 112 360 53 l 360 -147 z',\n    },\n    accSagittal49LargeDiesisDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 180 -248 b 405 68 330 -248 405 -143 l 405 248 l 360 248 l 45 89 l 45 517 l 0 517 z m 360 147 l 360 68 b 180 -112 360 -53 300 -112 l 45 -112 l 45 -12 z',\n    },\n    accSagittal11v19LargeDiesisUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 -86 l 449 -256 l 449 -157 l 45 13 l 45 138 l 449 -30 l 449 68 l 23 248 l 0 248 z',\n    },\n    accSagittal11v19LargeDiesisDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 23 -248 l 449 -68 l 449 30 l 45 -138 l 45 -13 l 449 157 l 449 256 l 45 86 l 45 517 l 0 517 z',\n    },\n    accSagittal5v13LargeDiesisUp: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 b 89 -112 0 -52 30 -112 b 180 -35 125 -112 157 -86 l 180 -517 l 225 -517 l 225 -86 l 631 -256 l 631 -157 l 225 13 l 225 138 l 631 -30 l 631 68 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 z',\n    },\n    accSagittal5v13LargeDiesisDown: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 45 -68 b 81 3 45 -20 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 l 631 -68 l 631 30 l 225 -138 l 225 -13 l 631 157 l 631 256 l 225 86 l 225 517 l 180 517 l 180 35 b 89 112 157 86 125 112 b 0 -68 30 112 0 52 z',\n    },\n    accSagittalSharp23SDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -203 l 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 b 315 6 287 -23 301 -13 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 68 312 127 282 68 l 194 68 b 89 157 125 68 89 98 l 45 157 b 60 59 45 118 50 85 b 0 -203 20 30 0 -56 z',\n    },\n    accSagittalFlat23SUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 60 -59 0 56 20 -30 b 45 -157 50 -85 45 -118 l 89 -157 b 194 -68 89 -98 125 -68 l 248 -68 b 337 -248 282 -68 312 -127 l 360 -248 l 360 517 l 315 517 l 315 -6 b 271 23 301 13 287 23 l 180 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n    },\n    accSagittalSharp49SDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 135 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 b 315 -135 285 -157 300 -150 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 157 323 187 292 157 l 89 157 b 0 -68 30 157 0 82 l 45 -68 b 112 68 45 23 68 68 l 271 68 b 315 89 284 68 300 75 l 315 -32 b 248 -68 298 -56 275 -68 l 89 -68 b 0 -292 29 -68 0 -143 z',\n    },\n    accSagittalFlat49SUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 292 b 89 68 0 143 29 68 l 248 68 b 315 32 275 68 298 56 l 315 -89 b 271 -68 300 -75 284 -68 l 112 -68 b 45 68 68 -68 45 -23 l 0 68 b 89 -157 0 -82 30 -157 l 248 -157 b 337 -248 292 -157 323 -187 l 360 -248 l 360 517 l 315 517 l 315 135 b 271 157 300 150 285 157 l 180 157 l 180 517 l 135 517 l 135 157 l 112 157 b 45 292 68 157 45 203 z',\n    },\n    accSagittalSharp7v19CDown: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -112 l 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 89 -20 0 53 29 -6 z',\n    },\n    accSagittalFlat7v19CUp: {\n      x_min: 0,\n      x_max: 250,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 89 20 b 0 -157 29 6 0 -53 l 45 -157 b 118 -89 45 -112 68 -89 b 337 -248 166 -89 239 -143 l 360 -248 l 360 517 l 315 517 l 315 -65 l 180 78 l 180 517 l 135 517 l 135 125 l 0 271 l 0 112 z',\n    },\n    accSagittalSharp19CDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -248 l 45 -248 l 45 -68 b 180 96 45 17 89 72 l 180 -517 l 225 -517 l 225 107 b 315 112 252 112 282 112 l 360 112 l 360 -517 l 405 -517 l 405 248 l 271 248 b 0 68 89 248 0 187 z',\n    },\n    accSagittalFlat19CUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 271 -248 0 -187 89 -248 l 405 -248 l 405 517 l 360 517 l 360 -112 l 315 -112 b 225 -107 282 -112 252 -112 l 225 517 l 180 517 l 180 -96 b 45 68 89 -72 45 -17 l 45 248 l 0 248 z',\n    },\n    accSagittalSharp11v49CDown: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 112 -23 45 -82 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 271 112 215 -23 245 23 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 b 157 68 222 128 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n    },\n    accSagittalFlat11v49CUp: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -128 l 360 -248 b 495 -68 449 -248 495 -189 l 495 248 l 449 248 l 449 68 b 360 -107 449 -30 420 -89 l 360 517 l 315 517 l 315 -112 l 271 -112 b 180 23 245 -23 215 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 82 z',\n    },\n    accSagittalSharp143CDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 259 76 210 -23 236 10 l 315 17 l 315 -517 l 360 -517 l 360 -30 l 585 -271 l 585 -112 l 248 248 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n    },\n    accSagittalFlat143CUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -127 l 585 112 l 585 271 l 360 30 l 360 517 l 315 517 l 315 -17 l 259 -76 b 180 23 236 -10 210 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n    },\n    accSagittalSharp17kDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 b 145 171 305 196 210 171 b 45 248 78 171 45 196 l 0 248 b 79 101 0 170 26 121 l 0 68 l 0 -32 l 405 138 l 405 13 z',\n    },\n    accSagittalFlat17kUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 405 -13 l 405 -138 l 0 32 l 0 -68 l 79 -101 b 0 -248 26 -121 0 -170 l 45 -248 b 145 -171 45 -196 78 -171 b 428 -248 210 -171 305 -196 l 449 -248 l 449 517 l 405 517 l 405 86 l 271 144 l 271 517 l 225 517 l 225 161 l 0 256 l 0 157 z',\n    },\n    accSagittalSharp19sDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -248 l 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -23 295 23 325 -23 l 360 -517 l 405 -517 l 405 -23 l 472 -23 b 540 -203 517 -23 540 -84 l 585 -203 b 495 68 585 -23 554 68 l 383 68 b 292 248 348 68 318 127 l 180 248 b 0 68 60 248 0 187 z',\n    },\n    accSagittalFlat19sUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 180 -248 0 -187 60 -248 l 292 -248 b 383 -68 318 -127 348 -68 l 495 -68 b 585 203 554 -68 585 23 l 540 203 b 472 23 540 84 517 23 l 405 23 l 405 517 l 360 517 l 360 23 b 271 -112 325 23 295 -23 l 225 -112 l 225 517 l 180 517 l 180 -109 b 45 68 89 -95 45 -36 l 45 248 l 0 248 z',\n    },\n    accSagittalSharp19sUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 89 -96 l 89 -517 l 135 -517 l 135 -108 b 180 -112 148 -112 163 -112 b 225 -108 196 -112 210 -112 l 225 -517 l 271 -517 l 271 -94 b 360 -12 305 -78 337 -50 l 360 -517 l 405 -517 l 405 248 l 383 248 b 190 0 353 98 288 16 b 138 -3 171 0 153 -3 b 45 68 75 -3 45 20 l 0 68 b 89 -96 0 -17 30 -72 z',\n    },\n    accSagittalFlat19sDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 89 96 b 0 -68 30 72 0 17 l 45 -68 b 138 3 45 -20 75 3 b 190 0 153 3 171 0 b 383 -248 288 -16 353 -98 l 405 -248 l 405 517 l 360 517 l 360 12 b 271 94 337 50 305 78 l 271 517 l 225 517 l 225 108 b 180 112 210 112 196 112 b 135 108 163 112 148 112 l 135 517 l 89 517 z',\n    },\n    accSagittalSharp17kUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 112 68 b 0 -203 37 68 0 -23 z',\n    },\n    accSagittalFlat17kDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 112 -68 0 23 37 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 517 l 405 517 l 405 -14 b 337 23 386 10 363 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n    },\n    accSagittalSharp143CUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z',\n    },\n    accSagittalFlat143CDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 68 -53 0 63 23 -23 b 45 -157 52 -81 45 -115 l 89 -157 b 240 -68 89 -98 140 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 517 l 405 517 l 405 -14 b 337 23 386 10 363 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n    },\n    accSagittalSharp11v49CUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -68 b 135 68 45 23 76 68 l 337 68 b 405 95 363 68 386 76 l 405 -27 b 315 -68 386 -55 356 -68 l 112 -68 b 0 -292 37 -68 0 -143 l 45 -292 b 135 -157 45 -203 75 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 l 271 -517 l 315 -517 l 315 -157 l 337 -157 b 405 -130 360 -157 383 -148 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 37 157 0 82 z',\n    },\n    accSagittalFlat11v49CDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 68 b 112 -157 0 -82 37 -157 l 315 -157 b 428 -248 376 -157 413 -187 l 449 -248 l 449 517 l 405 517 l 405 130 b 337 157 383 148 360 157 l 315 157 l 315 517 l 271 517 l 271 157 l 180 157 l 180 517 l 135 517 l 135 157 b 45 292 75 157 45 203 l 0 292 b 112 68 0 143 37 68 l 315 68 b 405 27 356 68 386 55 l 405 -95 b 337 -68 386 -76 363 -68 l 135 -68 b 45 68 76 -68 45 -23 z',\n    },\n    accSagittalSharp19CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 14 b 337 -23 289 -10 311 -23 l 360 -23 l 360 -517 l 405 -517 l 405 -23 b 495 -203 465 -23 495 -82 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 128 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n    },\n    accSagittalFlat19CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 b 360 -68 271 -128 310 -68 l 428 -68 b 540 203 503 -68 540 23 l 495 203 b 405 23 495 82 465 23 l 405 517 l 360 517 l 360 23 l 337 23 b 271 -14 311 23 289 10 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n    },\n    accSagittalSharp7v19CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 112 l 315 112 b 360 109 331 112 346 112 l 360 -517 l 405 -517 l 405 98 b 495 -68 465 73 495 19 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n    },\n    accSagittalFlat7v19CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 360 -248 b 540 -68 480 -248 540 -189 l 540 248 l 495 248 l 495 68 b 405 -98 495 -19 465 -73 l 405 517 l 360 517 l 360 -109 b 315 -112 346 -112 331 -112 l 271 -112 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n    },\n    accSagittalSharp49SUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n    },\n    accSagittalFlat49SDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 449 -96 540 -17 510 -72 l 449 517 l 405 517 l 405 -109 b 360 -112 390 -112 376 -112 l 315 -112 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n    },\n    accSagittalSharp23SUp: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 71 l 405 -14 l 405 -517 l 449 -517 l 449 -56 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n    },\n    accSagittalFlat23SDown: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 675 112 l 675 268 l 449 56 l 449 517 l 405 517 l 405 14 l 315 -71 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n    },\n    accSagittalSharp5v13MUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 495 141 l 495 14 l 0 -157 l 0 -256 l 225 -180 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 l 0 248 b 95 99 0 170 30 120 l 0 68 l 0 -30 z',\n    },\n    accSagittalFlat5v13MDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 30 l 0 -68 l 95 -99 b 0 -248 30 -120 0 -170 l 45 -248 b 167 -168 45 -194 85 -168 b 517 -248 248 -168 366 -194 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 115 l 405 517 l 360 517 l 360 130 l 271 161 l 271 517 l 225 517 l 225 180 l 0 256 l 0 157 l 495 -14 l 495 -141 z',\n    },\n    accSagittalSharp11v19MUp: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 14 b 428 -23 379 -10 402 -23 l 449 -23 l 449 -517 l 495 -517 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z',\n    },\n    accSagittalFlat11v19MDown: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 b 449 -68 363 -127 400 -68 l 517 -68 b 631 203 593 -68 631 23 l 585 203 b 495 23 585 84 554 23 l 495 517 l 449 517 l 449 23 l 428 23 b 360 -14 402 23 379 10 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n    },\n    accSagittalSharp49MUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -248 l 45 -248 l 225 -180 l 225 -517 l 271 -517 l 271 -166 l 360 -132 l 360 -517 l 405 -517 l 405 -117 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 360 248 b 0 -68 120 248 0 143 z m 45 -145 l 45 -68 b 360 112 45 53 150 112 l 495 112 l 495 14 z',\n    },\n    accSagittalFlat49MDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 68 b 360 -248 0 -143 120 -248 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 117 l 405 517 l 360 517 l 360 132 l 271 166 l 271 517 l 225 517 l 225 180 l 45 248 l 0 248 z m 495 -14 l 495 -112 l 360 -112 b 45 68 150 -112 45 -53 l 45 145 z',\n    },\n    accSagittalSharp5v49MUp: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 107 0 0 62 36 10 l 0 -112 z',\n    },\n    accSagittalFlat5v49MDown: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 112 l 107 0 b 0 -157 36 -10 0 -62 l 45 -157 b 118 -89 45 -112 68 -89 b 337 -248 166 -89 239 -143 l 675 112 l 675 271 l 495 79 l 495 517 l 449 517 l 449 30 l 360 -65 l 360 517 l 315 517 l 315 -65 l 225 30 l 225 517 l 180 517 l 180 79 l 0 271 z',\n    },\n    accSagittalSharp49LUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 -82 l 135 -112 l 135 -517 l 180 -517 l 180 -127 l 271 -157 l 271 -517 l 315 -517 l 315 -173 l 540 -248 l 585 -248 l 585 -68 b 180 248 585 143 449 248 l 0 248 z m 45 112 l 180 112 b 540 -68 420 112 540 53 l 540 -145 l 45 16 z',\n    },\n    accSagittalFlat49LDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 180 -248 b 585 68 449 -248 585 -143 l 585 248 l 540 248 l 315 173 l 315 517 l 271 517 l 271 157 l 180 127 l 180 517 l 135 517 l 135 112 l 45 82 l 45 517 l 0 517 z m 45 -16 l 540 145 l 540 68 b 180 -112 540 -53 420 -112 l 45 -112 z',\n    },\n    accSagittalSharp11v19LUp: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -517 l 45 -517 l 45 -81 l 135 -108 l 135 -517 l 180 -517 l 180 -121 l 271 -148 l 271 -517 l 315 -517 l 315 -161 l 631 -255 l 631 -157 l 45 16 l 45 144 l 631 -30 l 631 68 l 23 248 l 0 248 z',\n    },\n    accSagittalFlat11v19LDown: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -248 l 23 -248 l 631 -68 l 631 30 l 45 -144 l 45 -16 l 631 157 l 631 255 l 315 161 l 315 517 l 271 517 l 271 148 l 180 121 l 180 517 l 135 517 l 135 108 l 45 81 l 45 517 l 0 517 z',\n    },\n    accSagittalSharp5v13LUp: {\n      x_min: 0,\n      x_max: 500,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 -85 l 360 -120 l 360 -517 l 405 -517 l 405 -135 l 720 -256 l 720 -157 l 271 14 l 271 141 l 720 -30 l 720 68 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n    },\n    accSagittalFlat5v13LDown: {\n      x_min: 0,\n      x_max: 500,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 720 -68 l 720 30 l 271 -141 l 271 -14 l 720 157 l 720 256 l 405 135 l 405 517 l 360 517 l 360 120 l 271 85 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n    },\n    accSagittalDoubleSharp23SDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -203 l 45 -203 b 135 -23 45 -82 76 -23 l 301 -23 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 370 -14 b 449 112 423 10 449 53 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z',\n    },\n    accSagittalDoubleFlat23SUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 68 -53 0 63 23 -23 b 45 -157 52 -81 45 -115 l 89 -157 b 240 -68 89 -98 140 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 -112 b 370 14 449 -53 423 -10 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 301 23 l 135 23 b 45 203 76 23 45 82 z',\n    },\n    accSagittalDoubleSharp49SDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 256 -157 l 135 -503 l 187 -517 l 337 -82 l 490 -517 l 540 -503 l 366 0 l 396 89 b 449 157 416 102 435 125 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 39 157 0 82 l 45 -68 b 135 68 45 23 76 68 l 287 68 l 311 0 l 288 -68 l 89 -68 b 0 -292 32 -68 0 -144 z',\n    },\n    accSagittalDoubleFlat49SUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 292 b 89 68 0 144 32 68 l 288 68 l 311 0 l 287 -68 l 135 -68 b 45 68 76 -68 45 -23 l 0 68 b 112 -157 0 -82 39 -157 l 315 -157 b 428 -248 376 -157 413 -187 l 449 -248 l 449 -157 b 396 -89 435 -125 416 -102 l 366 0 l 540 503 l 490 517 l 337 82 l 187 517 l 135 503 l 256 157 l 112 157 b 45 292 68 157 45 203 z',\n    },\n    accSagittalDoubleSharp7v19CDown: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z',\n    },\n    accSagittalDoubleFlat7v19CUp: {\n      x_min: 0,\n      x_max: 375,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 112 20 b 0 -157 37 6 0 -53 l 45 -157 b 130 -68 45 -98 73 -68 b 428 -248 186 -68 285 -127 l 449 -248 l 449 -112 l 386 -59 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 307 7 l 0 266 l 0 112 z',\n    },\n    accSagittalDoubleSharp19CDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 315 109 45 36 135 95 l 354 0 l 180 -503 l 232 -517 l 383 -82 l 534 -517 l 585 -503 l 410 0 l 449 112 l 495 112 l 495 248 l 360 248 b 0 68 120 248 0 187 z m 372 112 l 393 112 l 383 82 z',\n    },\n    accSagittalDoubleFlat19CUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 360 -248 0 -187 120 -248 l 495 -248 l 495 -112 l 449 -112 l 410 0 l 585 503 l 534 517 l 383 82 l 232 517 l 180 503 l 354 0 l 315 -109 b 45 68 135 -95 45 -36 l 45 248 l 0 248 z m 383 -82 l 393 -112 l 372 -112 z',\n    },\n    accSagittalDoubleSharp11v49CDown: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n    },\n    accSagittalDoubleFlat11v49CUp: {\n      x_min: 0,\n      x_max: 406,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 360 -112 540 -53 480 -112 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n    },\n    accSagittalDoubleSharp143CDown: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 337 49 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n    },\n    accSagittalDoubleFlat143CUp: {\n      x_min: 0,\n      x_max: 469,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 675 112 l 675 268 l 337 -49 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n    },\n    accSagittalDoubleSharp17kDown: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 248 b 95 101 0 170 30 121 l 0 68 l 0 -30 l 364 96 l 399 0 l 390 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 275 -517 l 428 -82 l 577 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 z m 416 115 l 442 124 l 428 82 z',\n    },\n    accSagittalDoubleFlat17kUp: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 45 -248 b 167 -168 45 -194 85 -168 b 517 -248 248 -168 366 -194 l 540 -248 l 540 -157 l 507 -145 l 455 0 l 631 503 l 577 517 l 428 82 l 275 517 l 225 503 l 353 135 l 0 255 l 0 157 l 390 23 l 399 0 l 364 -96 l 0 30 l 0 -68 l 95 -101 b 0 -248 30 -121 0 -170 z m 428 -82 l 442 -124 l 416 -115 z',\n    },\n    accSagittalDoubleSharp19sDown: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 -248 l 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 367 4 b 428 -23 386 -13 405 -23 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z',\n    },\n    accSagittalDoubleFlat19sUp: {\n      x_min: 0,\n      x_max: 438,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 b 449 -68 363 -127 400 -68 l 517 -68 b 631 203 593 -68 631 23 l 585 203 b 495 23 585 84 554 23 l 428 23 b 367 -4 405 23 386 13 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 271 -112 b 45 68 120 -112 45 -53 l 45 248 l 0 248 z',\n    },\n    accSagittalShaftUp: {\n      x_min: 0,\n      x_max: 31,\n      y_min: -359,\n      y_max: 172,\n      ha: 531,\n      o: 'm 0 112 l 0 -517 l 45 -517 l 45 112 l 23 248 z',\n    },\n    accSagittalShaftDown: {\n      x_min: 0,\n      x_max: 31,\n      y_min: -172,\n      y_max: 359,\n      ha: 531,\n      o: 'm 23 -248 l 45 -112 l 45 517 l 0 517 l 0 -112 z',\n    },\n    accSagittalAcute: {\n      x_min: 0,\n      x_max: 125,\n      y_min: -62,\n      y_max: 125,\n      ha: 187,\n      o: 'm 0 0 l 0 -89 l 180 89 l 180 180 z',\n    },\n    accSagittalGrave: {\n      x_min: 0,\n      x_max: 125,\n      y_min: -125,\n      y_max: 62,\n      ha: 187,\n      o: 'm 180 -180 l 180 -89 l 0 89 l 0 0 z',\n    },\n    accSagittal1MinaUp: {\n      x_min: -7,\n      x_max: 124,\n      y_min: 16,\n      y_max: 106,\n      ha: 90,\n      o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 134 150 179 112 163 135 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n    },\n    accSagittal1MinaDown: {\n      x_min: -7,\n      x_max: 124,\n      y_min: -106,\n      y_max: -16,\n      ha: 90,\n      o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 179 -23 163 -135 179 -112 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n    },\n    accSagittal2MinasUp: {\n      x_min: -7,\n      x_max: 218,\n      y_min: 16,\n      y_max: 106,\n      ha: 90,\n      o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 269 150 314 112 298 135 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n    },\n    accSagittal2MinasDown: {\n      x_min: -7,\n      x_max: 218,\n      y_min: -106,\n      y_max: -16,\n      ha: 90,\n      o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n    },\n    accSagittal1TinaUp: {\n      x_min: 0,\n      x_max: 93,\n      y_min: 16,\n      y_max: 107,\n      ha: 91,\n      o: 'm 134 154 l 91 154 b 81 76 91 101 91 86 b 0 68 73 69 48 68 l 0 23 b 134 154 122 23 134 36 z',\n    },\n    accSagittal1TinaDown: {\n      x_min: 0,\n      x_max: 93,\n      y_min: -107,\n      y_max: -16,\n      ha: 91,\n      o: 'm 134 -154 b 0 -23 134 -36 122 -23 l 0 -68 b 81 -76 48 -68 73 -69 b 91 -154 91 -86 91 -101 z',\n    },\n    accSagittal2TinasUp: {\n      x_min: 0,\n      x_max: 94,\n      y_min: 16,\n      y_max: 107,\n      ha: 91,\n      o: 'm 135 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n    },\n    accSagittal2TinasDown: {\n      x_min: 0,\n      x_max: 94,\n      y_min: -107,\n      y_max: -16,\n      ha: 91,\n      o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 z',\n    },\n    accSagittal3TinasUp: {\n      x_min: -7,\n      x_max: 124,\n      y_min: 16,\n      y_max: 106,\n      ha: 90,\n      o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 134 150 179 112 163 135 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n    },\n    accSagittal3TinasDown: {\n      x_min: -7,\n      x_max: 124,\n      y_min: -106,\n      y_max: -16,\n      ha: 90,\n      o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 179 -23 163 -135 179 -112 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n    },\n    accSagittal4TinasUp: {\n      x_min: 0,\n      x_max: 187,\n      y_min: 16,\n      y_max: 107,\n      ha: 91,\n      o: 'm 0 68 l 0 23 b 143 45 105 23 124 26 b 203 107 153 55 183 107 b 226 23 216 107 226 86 l 269 23 b 225 150 269 112 253 135 b 160 132 207 158 181 153 b 115 81 138 112 124 88 b 0 68 104 71 94 68 z',\n    },\n    accSagittal4TinasDown: {\n      x_min: 0,\n      x_max: 187,\n      y_min: -107,\n      y_max: -16,\n      ha: 91,\n      o: 'm 0 -68 b 115 -81 94 -68 104 -71 b 160 -132 124 -88 138 -112 b 225 -150 181 -153 207 -158 b 269 -23 253 -135 269 -112 l 226 -23 b 203 -107 226 -86 216 -107 b 143 -45 183 -107 153 -55 b 0 -23 124 -26 105 -23 z',\n    },\n    accSagittal5TinasUp: {\n      x_min: 0,\n      x_max: 218,\n      y_min: 16,\n      y_max: 107,\n      ha: 91,\n      o: 'm 135 23 b 187 45 156 23 168 26 b 249 107 197 55 228 107 b 271 23 262 107 271 86 l 314 23 b 269 150 314 112 298 135 b 204 132 252 158 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n    },\n    accSagittal5TinasDown: {\n      x_min: 0,\n      x_max: 218,\n      y_min: -107,\n      y_max: -16,\n      ha: 91,\n      o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 b 160 -81 147 -68 148 -71 b 204 -132 168 -88 183 -112 b 269 -150 226 -153 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 249 -107 271 -86 262 -107 b 187 -45 228 -107 197 -55 b 135 -23 168 -26 156 -23 z',\n    },\n    accSagittal6TinasUp: {\n      x_min: -7,\n      x_max: 218,\n      y_min: 16,\n      y_max: 106,\n      ha: 90,\n      o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 269 150 314 112 298 135 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n    },\n    accSagittal6TinasDown: {\n      x_min: -7,\n      x_max: 218,\n      y_min: -106,\n      y_max: -16,\n      ha: 90,\n      o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n    },\n    accSagittal7TinasUp: {\n      x_min: 0,\n      x_max: 281,\n      y_min: 16,\n      y_max: 107,\n      ha: 91,\n      o: 'm 0 68 l 0 23 b 143 45 105 23 124 26 b 203 107 153 55 183 107 b 226 23 216 107 226 86 l 269 23 b 298 65 269 23 291 55 b 343 107 314 86 331 107 b 361 23 354 107 363 86 l 405 23 b 360 150 405 112 389 135 b 294 130 343 158 311 150 b 264 92 281 115 272 104 b 225 150 258 127 245 140 b 160 132 207 158 181 153 b 115 81 138 112 124 88 b 0 68 104 71 94 68 z',\n    },\n    accSagittal7TinasDown: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -107,\n      y_max: -16,\n      ha: 91,\n      o: 'm 0 -68 b 115 -81 94 -68 104 -71 b 160 -132 124 -88 138 -112 b 225 -150 181 -153 207 -158 b 264 -92 245 -140 258 -127 b 294 -130 272 -104 281 -115 b 360 -150 311 -150 343 -158 b 405 -23 389 -135 405 -112 l 361 -23 b 343 -107 363 -86 354 -107 b 298 -65 331 -107 314 -86 b 269 -23 291 -55 269 -23 l 226 -23 b 203 -107 226 -86 216 -107 b 143 -45 183 -107 153 -55 b 0 -23 124 -26 105 -23 z',\n    },\n    accSagittal8TinasUp: {\n      x_min: 0,\n      x_max: 312,\n      y_min: 16,\n      y_max: 107,\n      ha: 91,\n      o: 'm 135 23 b 187 45 156 23 168 26 b 249 107 197 55 228 107 b 271 23 262 107 271 86 l 314 23 b 343 65 314 23 336 55 b 387 107 359 86 376 107 b 406 23 399 107 408 86 l 449 23 b 405 150 449 112 433 135 b 338 130 387 158 356 150 b 308 92 325 115 317 104 b 269 150 302 127 289 140 b 204 132 252 158 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n    },\n    accSagittal8TinasDown: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -107,\n      y_max: -16,\n      ha: 91,\n      o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 b 160 -81 147 -68 148 -71 b 204 -132 168 -88 183 -112 b 269 -150 226 -153 252 -158 b 308 -92 289 -140 302 -127 b 338 -130 317 -104 325 -115 b 405 -150 356 -150 387 -158 b 449 -23 433 -135 449 -112 l 406 -23 b 387 -107 408 -86 399 -107 b 343 -65 376 -107 359 -86 b 314 -23 336 -55 314 -23 l 271 -23 b 249 -107 271 -86 262 -107 b 187 -45 228 -107 197 -55 b 135 -23 168 -26 156 -23 z',\n    },\n    accSagittal9TinasUp: {\n      x_min: -7,\n      x_max: 312,\n      y_min: 16,\n      y_max: 106,\n      ha: 90,\n      o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 343 65 314 23 336 55 b 387 107 359 86 376 107 b 406 23 399 107 408 86 l 449 23 b 405 150 449 112 433 135 b 338 130 387 158 356 150 b 308 92 325 115 317 104 b 269 150 302 127 289 140 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n    },\n    accSagittal9TinasDown: {\n      x_min: -7,\n      x_max: 312,\n      y_min: -106,\n      y_max: -16,\n      ha: 90,\n      o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 308 -92 289 -140 302 -127 b 338 -130 317 -104 325 -115 b 405 -150 356 -150 387 -158 b 449 -23 433 -135 449 -112 l 406 -23 b 387 -107 408 -86 399 -107 b 343 -65 376 -107 359 -86 b 314 -23 336 -55 314 -23 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n    },\n    accSagittalFractionalTinaUp: {\n      x_min: -3,\n      x_max: 35,\n      y_min: 73,\n      y_max: 111,\n      ha: 38,\n      o: 'm -4 132 b 23 105 -4 118 9 105 b 50 132 37 105 50 118 b 23 160 50 147 37 160 b -4 132 9 160 -4 147 z',\n    },\n    accSagittalFractionalTinaDown: {\n      x_min: -3,\n      x_max: 35,\n      y_min: -111,\n      y_max: -73,\n      ha: 38,\n      o: 'm -4 -132 b 23 -160 -4 -147 9 -160 b 50 -132 37 -160 50 -147 b 23 -105 50 -118 37 -105 b -4 -132 9 -105 -4 -118 z',\n    },\n    accidentalNarrowReversedFlat: {\n      x_min: 0,\n      x_max: 164,\n      y_min: -194,\n      y_max: 421,\n      ha: 615,\n      o: 'm 236 -279 l 236 606 l 192 606 l 192 179 b 85 243 150 222 114 243 b 0 84 23 243 0 134 b 112 -158 0 3 37 -78 z m 192 112 l 192 -163 l 135 -98 b 82 40 101 -50 82 -3 b 138 144 82 73 96 144 b 192 112 153 144 170 132 z',\n    },\n    accidentalNarrowReversedFlatAndFlat: {\n      x_min: 0,\n      x_max: 414,\n      y_min: -194,\n      y_max: 421,\n      ha: 615,\n      o: 'm 281 606 l 281 -268 l 438 -158 b 596 84 547 -82 596 3 b 475 243 596 154 556 243 b 325 179 435 243 384 222 l 325 606 z m 235 -279 l 235 606 l 190 606 l 190 179 b 85 243 148 222 114 243 b 12 158 52 243 27 215 b 0 84 3 134 0 108 b 112 -158 0 3 37 -78 z m 325 111 b 410 144 359 132 386 144 b 498 36 462 144 498 84 b 413 -107 498 -9 469 -58 l 325 -173 z m 192 112 l 192 -163 l 135 -98 b 81 40 99 -50 81 -3 b 91 94 81 59 84 76 b 137 144 102 127 118 144 b 192 112 153 144 170 132 z',\n    },\n    accidentalWilsonPlus: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -203,\n      y_max: 203,\n      ha: 406,\n      o: 'm 405 268 l 225 98 l 225 292 l 180 292 l 180 56 l 0 -112 l 0 -268 l 180 -98 l 180 -292 l 225 -292 l 225 -56 l 405 112 z',\n    },\n    accidentalWilsonMinus: {\n      x_min: 0,\n      x_max: 281,\n      y_min: -186,\n      y_max: 186,\n      ha: 372,\n      o: 'm 0 112 l 405 -268 l 405 -112 l 0 268 z',\n    },\n  },\n  fontFamily: 'Bravura',\n  resolution: 1000,\n  generatedOn: '2022-12-18T09:06:51.407Z',\n};\n","export const CommonMetrics = {\n  smufl: true,\n\n  stave: {\n    padding: 12,\n    endPaddingMax: 10,\n    endPaddingMin: 5,\n    unalignedNotePadding: 10,\n  },\n\n  accidental: {\n    noteheadAccidentalPadding: 1,\n    leftPadding: 2,\n    accidentalSpacing: 3,\n  },\n\n  chordSymbol: {\n    global: {\n      superscriptOffset: -400,\n      subscriptOffset: 300,\n      kerningOffset: -250,\n      lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n      upperKerningText: ['A', 'L'],\n      spacing: 100,\n      superSubRatio: 0.66,\n    },\n    glyphs: {\n      csymDiminished: {\n        scale: 0.8,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0,\n      },\n      csymHalfDiminished: {\n        scale: 0.8,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0,\n      },\n      csymAugmented: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 530,\n        yOffset: 0,\n      },\n      csymParensLeftTall: {\n        scale: 0.8,\n        leftSideBearing: -20,\n        advanceWidth: 184,\n        yOffset: 250,\n      },\n      csymParensRightTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 189,\n        yOffset: 250,\n      },\n      csymBracketLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 328,\n        yOffset: 0,\n      },\n      csymBracketRightTall: {\n        scale: 0.8,\n        leftSideBearing: 1,\n        advanceWidth: 600,\n        yOffset: 0,\n      },\n      csymParensLeftVeryTall: {\n        scale: 0.8,\n        leftSideBearing: 50,\n        advanceWidth: 121,\n        yOffset: 350,\n      },\n      csymParensRightVeryTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 111,\n        yOffset: 350,\n      },\n      csymDiagonalArrangementSlash: {\n        scale: 0.8,\n        leftSideBearing: 250,\n        advanceWidth: 990,\n        yOffset: 300,\n      },\n      csymMinor: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 482,\n        yOffset: 0,\n      },\n      csymMajorSeventh: {\n        scale: 0.8,\n        leftSideBearing: 200,\n        yOffset: 0,\n        advanceWidth: 600,\n      },\n      accidentalSharp: {\n        scale: 0.8,\n        leftSideBearing: 20,\n        advanceWidth: 250,\n        yOffset: -302,\n      },\n      accidentalFlat: {\n        scale: 0.8,\n        leftSideBearing: -20,\n        advanceWidth: 226,\n        yOffset: -184,\n      },\n    },\n  },\n\n  clef_default: {\n    width: 26,\n    annotations: {\n      '8va': {\n        treble: {\n          line: -2,\n          shiftX: 12,\n        },\n      },\n      '8vb': {\n        treble: {\n          line: 6.5,\n          shiftX: 10,\n        },\n        bass: {\n          line: 4,\n          shiftX: 1,\n        },\n      },\n    },\n  },\n\n  clef_small: {\n    width: 20,\n    annotations: {\n      '8va': {\n        treble: {\n          line: -0.2,\n          shiftX: 8,\n        },\n      },\n      '8vb': {\n        treble: {\n          line: 5.3,\n          shiftX: 6,\n        },\n        bass: {\n          line: 3.1,\n          shiftX: 0.5,\n        },\n      },\n    },\n  },\n\n  ornament: {\n    brassScoop: {\n      xOffset: -12,\n      yOffset: 0,\n      stemUpYOffset: 0,\n      reportedWidth: 20,\n    },\n    brassDoitMedium: {\n      xOffset: 16,\n      yOffset: 0,\n      stemUpYOffset: 0,\n      reportedWidth: 22,\n    },\n    brassFallLipShort: {\n      xOffset: 16,\n      yOffset: 0,\n      stemUpYOffset: 0,\n      reportedWidth: 15,\n    },\n    brassLiftMedium: {\n      xOffset: 16,\n      yOffset: 5,\n      stemUpYOffset: 0,\n      reportedWidth: 5,\n    },\n    brassFallRoughMedium: {\n      xOffset: 16,\n      yOffset: 28,\n      stemUpYOffset: 0,\n      reportedWidth: 5,\n    },\n    brassBend: {\n      xOffset: 2,\n      yOffset: -8,\n      stemUpYOffset: 25,\n      reportedWidth: 5,\n    },\n    brassMuteClosed: {\n      xOffset: 3,\n      yOffset: -8,\n      stemUpYOffset: 25,\n      reportedWidth: 5,\n    },\n    brassMuteOpen: {\n      xOffset: 3,\n      yOffset: -7,\n      stemUpYOffset: 25,\n      reportedWidth: 5,\n    },\n    brassFlip: {\n      xOffset: 10,\n      yOffset: 0,\n      stemUpYOffset: 7,\n      reportedWidth: 10,\n    },\n    brassJazzTurn: {\n      xOffset: 0,\n      yOffset: 0,\n      stemUpYOffset: 8,\n      reportedWidth: 31,\n    },\n    brassSmear: {\n      xOffset: 10,\n      yOffset: 0,\n      stemUpYOffset: 8,\n      reportedWidth: 5,\n    },\n  },\n\n  parenthesis: {\n    default: {\n      width: 7,\n    },\n    gracenote: {\n      width: 3,\n    },\n  },\n\n  pedalMarking: {},\n\n  // These are for numeric digits, such as in time signatures\n  digits: {\n    // used by TimeSignature objects\n    shiftLine: -1,\n\n    // used by tuplets\n    shiftY: -6,\n  },\n\n  articulation: {\n    articStaccatissimoAbove: {\n      padding: 2,\n    },\n    articStaccatissimoBelow: {\n      padding: 2,\n    },\n  },\n\n  tremolo: {\n    default: {\n      spacing: 7,\n      offsetYStemUp: -8,\n      offsetYStemDown: 8,\n      offsetXStemUp: 11,\n      offsetXStemDown: 1,\n    },\n    grace: {\n      spacing: (7 * 3) / 5,\n      offsetYStemUp: -(8 * 3) / 5,\n      offsetYStemDown: (8 * 3) / 5,\n      offsetXStemUp: 7,\n      offsetXStemDown: 1,\n    },\n  },\n\n  staveRepetition: {\n    symbolText: {\n      offsetX: 12,\n      offsetY: 25,\n      spacing: 5,\n    },\n    coda: {\n      offsetY: 25,\n    },\n    segno: {\n      offsetY: 10,\n    },\n  },\n\n  noteHead: {\n    minPadding: 2,\n  },\n\n  stem: {\n    heightAdjustmentForFlag: -3,\n    // These are stem (Y) offsets to the note heads. To shift the\n    // noteheads (x-position) themselves, see glyphs.notehead.custom.\n    noteHead: {\n      noteheadTriangleUpHalf: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpBlack: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpWhole: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXHalf: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXBlack: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXWhole: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadHalf: {\n        offsetYBaseStemUp: -2.55,\n        offsetYBaseStemDown: 2.65,\n      },\n      noteheadBlack: {\n        offsetYBaseStemUp: -2,\n        offsetYBaseStemDown: 2,\n      },\n      noteheadSquareWhite: {\n        offsetYBaseStemDown: -5,\n        offsetYBaseStemUp: 5,\n      },\n    },\n  },\n\n  stringNumber: {\n    verticalPadding: 8,\n    stemPadding: 2,\n    leftPadding: 5,\n    rightPadding: 6,\n  },\n\n  tuplet: {\n    noteHeadOffset: 20,\n    stemOffset: 10,\n    bottomLine: 4,\n    topModifierOffset: 15,\n  },\n\n  // Values under here are used by the Glyph class to reposition and rescale\n  // glyphs based on their category. This should be the first stop for\n  // custom font glyph repositioning.\n  //\n  // The glyph loader first looks up a specific set of settings based on the\n  // glyph code, and if not found, uses the defaults from the category. See\n  // glyphs.textNote for an example of this.\n  //\n  // Details in Glyph.lookupFontMetrics.\n  glyphs: {\n    coda: {\n      point: 20,\n      shiftX: -7,\n      shiftY: 8,\n    },\n    segno: {\n      shiftX: -7,\n    },\n    flag: {\n      shiftX: -0.75,\n      staveTempo: {\n        shiftX: -1,\n      },\n    },\n    clef_default: {},\n    clef_small: {\n      gClef: {\n        shiftY: 1.5,\n      },\n    },\n    clefNote_default: {},\n    clefNote_small: {},\n    stroke_straight: {\n      arrowheadBlackDown: {\n        shiftX: -4.5,\n      },\n      arrowheadBlackUp: {\n        shiftX: -0.85,\n      },\n    },\n    stroke_wiggly: {\n      arrowheadBlackDown: {\n        shiftX: -1,\n        shiftY: 1,\n      },\n      arrowheadBlackUp: {\n        shiftX: -1,\n        shiftY: 1,\n      },\n    },\n    textNote: {\n      breathMarkTick: {\n        shiftY: 9,\n      },\n      breathMarkComma: {},\n      segno: {\n        shiftX: -7,\n        shiftY: 8,\n      },\n      coda: {\n        shiftX: -7,\n        shiftY: 8,\n      },\n      ornamentTrill: {\n        shiftX: -8,\n        shiftY: 8,\n      },\n      ornamentTurn: {},\n      ornamentTurnSlash: {},\n      ornamentMordent: {\n        shiftX: -8,\n      },\n      ornamentShortTrill: {\n        shiftX: -8,\n      },\n    },\n    noteHead: {},\n    chordSymbol: {\n      scale: 0.8,\n    },\n  },\n};\n","export const CustomFont = {\n  resolution: 1000,\n  fontFamily: 'VexFlowCustom',\n  glyphs: {\n    vexAccidentalMicrotonal1: {\n      x_min: -171.5,\n      x_max: 483.1875,\n      ha: 493,\n      o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n    },\n    vexAccidentalMicrotonal3: {\n      x_min: 0,\n      x_max: 430.75,\n      ha: 360,\n      o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n    },\n    vexAccidentalMicrotonal4: {\n      x_min: 0,\n      x_max: 430.75,\n      ha: 360,\n      o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n    },\n    vexNoteHeadRectBlack: {\n      x_min: 0,\n      x_max: 430.75,\n      ha: 360,\n      o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n    },\n    vexNoteHeadRectWhite: {\n      x_min: 0,\n      x_max: 430.75,\n      ha: 360,\n      o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n    },\n    vexWiggleArpeggioUp: {\n      x_min: 58.53125,\n      x_max: 228.671875,\n      ha: 294,\n      o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n    },\n  },\n};\n","export const GonvilleSmuflFont = {\n  glyphs: {\n    bracketTop: {\n      x_min: 0,\n      x_max: 412,\n      y_min: -18,\n      y_max: 223,\n      ha: 241,\n      o: 'm 569 315 b 583 321 575 319 579 321 b 591 316 586 321 589 319 b 593 310 592 314 593 312 b 579 289 593 306 589 301 b 385 111 517 219 449 156 b 372 101 379 106 373 102 b 244 28 340 78 285 46 b 21 -26 168 -6 88 -26 b 2 -21 6 -26 5 -25 b 0 47 1 -19 0 14 b 2 114 0 79 1 112 b 29 120 5 119 6 119 b 569 315 209 124 395 191 z',\n    },\n    bracketBottom: {\n      x_min: 0,\n      x_max: 412,\n      y_min: -223,\n      y_max: 18,\n      ha: 241,\n      o: 'm 5 24 b 21 26 7 25 12 26 b 63 23 32 26 47 25 b 342 -81 155 13 249 -22 b 388 -113 353 -89 382 -108 b 400 -122 389 -114 395 -118 b 578 -289 459 -166 522 -225 b 593 -310 589 -301 593 -306 b 591 -316 593 -312 592 -314 b 583 -321 588 -319 586 -321 b 568 -315 579 -321 575 -319 b 29 -120 395 -191 209 -124 b 1 -114 5 -119 5 -119 b 0 -47 0 -112 0 -111 b 0 -22 0 -37 0 -29 b 5 24 0 25 0 21 z',\n    },\n    barlineTick: {\n      x_min: -59,\n      x_max: 59,\n      y_min: -139,\n      y_max: 139,\n      ha: 279,\n      o: 'm 24 200 b 34 201 26 200 30 201 b 51 198 40 201 47 200 b 84 152 72 191 84 174 b 84 149 84 151 84 150 b 68 103 84 139 83 137 b -64 -195 3 -44 -63 -194 b -74 -201 -66 -199 -70 -201 b -83 -195 -77 -201 -81 -199 b -84 -191 -84 -194 -84 -193 b -78 -155 -84 -186 -83 -177 b -25 104 -45 8 -35 53 b -11 167 -18 136 -12 164 b 24 200 -6 183 6 195 z',\n    },\n    breathMarkTick: {\n      x_min: -151,\n      x_max: 272,\n      y_min: 0,\n      y_max: 429,\n      ha: 429,\n      o: 'm 367 613 b 382 618 373 616 378 618 b 392 607 388 618 392 614 b 376 592 392 601 390 599 b 309 546 354 580 331 565 b 46 47 185 439 88 256 b 0 0 39 14 26 0 b -44 39 -23 0 -36 12 b -203 270 -68 118 -125 202 b -217 288 -213 279 -217 284 b -215 294 -217 290 -217 292 b -208 299 -213 297 -211 299 b -193 293 -204 299 -199 297 b -19 144 -124 249 -66 199 b -14 138 -16 141 -14 138 b -9 149 -14 138 -11 143 b 367 613 72 359 220 541 z',\n    },\n    segno: {\n      x_min: 7,\n      x_max: 493,\n      y_min: -50,\n      y_max: 650,\n      ha: 699,\n      o: 'm 218 934 b 237 935 224 935 231 935 b 394 820 306 935 371 889 b 398 794 397 811 398 802 b 333 730 398 758 372 730 b 269 777 302 730 280 746 b 183 851 254 823 219 851 b 158 846 175 851 166 849 b 120 786 133 835 120 815 b 122 766 120 780 121 773 b 347 511 138 672 227 570 b 368 500 356 506 366 501 l 371 499 l 372 501 b 485 672 373 502 404 550 b 560 786 506 704 540 755 b 617 873 581 818 607 857 b 645 910 639 906 640 907 b 660 915 650 914 655 915 b 687 888 674 915 687 904 b 687 886 687 887 687 887 b 665 844 687 878 687 878 b 610 761 655 830 631 792 b 462 537 551 672 501 595 b 425 480 443 508 426 482 l 422 476 l 431 472 b 628 269 521 423 591 352 b 658 136 649 225 658 179 b 518 -68 658 36 606 -48 b 484 -71 507 -70 495 -71 b 327 43 415 -71 351 -26 b 322 70 324 52 322 61 b 387 134 322 106 348 134 b 451 86 419 134 440 118 b 537 13 466 41 501 13 b 563 18 545 13 554 15 b 600 78 587 29 600 49 b 598 98 600 84 599 91 b 374 353 582 192 493 293 b 352 363 364 358 354 363 l 349 365 l 348 363 b 235 192 347 361 315 313 b 160 77 214 160 180 109 b 103 -9 139 46 113 7 b 75 -47 81 -42 80 -43 b 60 -51 70 -50 65 -51 b 33 -24 46 -51 33 -40 b 33 -22 33 -23 33 -23 b 55 19 33 -14 33 -14 b 259 329 84 63 162 181 b 297 386 279 360 296 385 l 298 388 l 290 392 b 92 594 200 441 130 512 b 62 728 71 639 62 685 b 218 934 62 834 121 922 z m 630 616 b 643 618 634 617 639 618 b 699 589 665 618 687 607 b 709 552 706 578 709 565 b 699 515 709 539 706 526 b 644 486 686 496 665 486 b 596 507 626 486 609 493 b 578 551 584 520 578 536 b 630 616 578 581 598 609 z m 62 376 b 75 378 67 377 71 378 b 124 357 93 378 112 370 b 142 312 136 344 142 328 b 131 275 142 299 138 286 b 76 246 118 256 97 246 b 28 267 59 246 41 253 b 11 311 16 280 11 296 b 62 376 11 341 30 369 z',\n    },\n    coda: {\n      x_min: 22,\n      x_max: 478,\n      y_min: -31,\n      y_max: 531,\n      ha: 563,\n      o: 'm 350 764 b 359 765 352 765 355 765 b 367 764 362 765 365 765 b 381 753 373 762 378 758 b 386 706 386 746 386 747 b 387 670 386 672 386 670 b 448 647 396 670 430 657 b 597 395 532 601 587 507 l 598 386 l 632 386 b 677 382 670 386 670 386 b 689 359 685 376 689 367 b 677 336 689 350 685 341 b 632 331 670 331 670 331 l 598 331 l 597 322 b 396 50 585 186 504 77 b 387 48 392 49 388 48 b 386 12 386 48 386 46 l 386 8 b 380 -36 386 -29 386 -28 b 359 -45 375 -42 367 -45 b 338 -36 351 -45 342 -42 b 331 8 331 -28 331 -29 l 331 12 b 330 48 331 46 331 48 b 269 70 321 48 288 60 b 120 322 186 117 130 210 l 119 331 l 86 331 b 43 336 50 331 50 331 b 31 359 35 341 31 350 b 50 385 31 370 38 381 b 86 386 53 386 60 386 l 119 386 l 120 395 b 269 647 130 508 186 601 b 330 670 288 657 321 670 b 331 706 331 670 331 672 b 332 746 331 736 332 744 b 350 764 335 754 342 762 z m 331 502 b 331 617 331 565 331 617 b 310 599 329 617 317 607 b 229 393 266 555 235 477 l 229 386 l 280 386 l 331 386 z m 393 613 b 386 617 390 615 387 617 b 386 502 386 617 386 565 l 386 386 l 437 386 l 488 386 l 488 393 b 393 613 482 486 443 575 z m 331 216 l 331 331 l 280 331 l 229 331 l 229 324 b 310 118 235 241 266 162 b 331 100 317 111 329 100 b 331 216 331 100 331 152 z m 488 324 l 488 331 l 437 331 l 386 331 l 386 216 b 386 100 386 152 386 100 b 408 118 388 100 400 111 b 488 324 452 162 482 241 z',\n    },\n    gClef: {\n      x_min: 0,\n      x_max: 623,\n      y_min: -632,\n      y_max: 1082,\n      ha: 1713,\n      o: 'm 521 1558 b 524 1558 522 1558 523 1558 b 579 1515 537 1558 556 1543 b 718 1118 662 1415 718 1254 b 717 1089 718 1108 718 1098 b 505 667 707 930 639 793 b 470 633 493 655 477 640 l 456 620 l 483 495 b 510 369 498 426 510 369 b 510 369 510 369 510 369 b 519 370 511 369 514 370 b 558 372 525 371 542 372 b 590 371 572 372 585 371 b 897 45 760 350 885 217 b 898 22 897 38 898 30 b 666 -316 898 -120 805 -256 b 657 -320 661 -318 657 -320 b 675 -403 657 -320 665 -357 b 695 -500 685 -448 694 -491 b 704 -596 701 -534 704 -566 b 642 -796 704 -677 683 -744 b 407 -909 582 -871 495 -909 b 176 -804 323 -909 238 -874 b 137 -704 150 -774 137 -739 b 168 -612 137 -672 147 -640 b 291 -550 198 -571 245 -550 b 405 -604 333 -550 376 -568 b 437 -694 427 -632 437 -663 b 305 -834 437 -764 384 -831 l 294 -835 l 298 -836 b 405 -861 330 -853 367 -861 b 539 -823 453 -861 501 -848 b 655 -596 617 -774 655 -699 b 644 -490 655 -564 651 -528 b 611 -336 640 -471 611 -336 b 611 -336 611 -336 611 -336 b 598 -339 610 -336 605 -337 b 536 -349 579 -343 558 -347 b 498 -350 529 -350 514 -350 b 449 -349 478 -350 457 -350 b 0 149 189 -320 0 -110 b 102 460 0 264 33 364 b 342 742 175 562 250 650 l 374 774 l 360 839 b 342 922 352 874 344 912 b 321 1024 329 983 323 1013 b 312 1124 315 1057 312 1091 b 477 1523 312 1275 371 1420 b 521 1558 501 1546 513 1556 z m 591 1349 b 574 1351 586 1350 580 1351 b 471 1297 542 1351 506 1332 b 376 1044 410 1236 376 1145 b 383 967 376 1019 378 993 b 415 814 385 956 414 814 b 415 814 415 814 415 814 b 460 860 416 814 450 848 b 644 1242 578 991 644 1132 b 639 1295 644 1261 643 1278 b 591 1349 632 1327 618 1342 z m 418 565 b 415 577 417 571 416 577 b 290 431 412 577 327 479 b 160 220 210 331 182 284 b 135 74 143 172 135 122 b 209 -162 135 -11 160 -94 b 495 -314 278 -259 385 -314 b 550 -310 514 -314 532 -313 b 602 -296 570 -306 602 -298 b 574 -164 602 -295 590 -236 b 522 81 559 -92 535 18 b 497 196 508 144 497 196 b 497 196 497 196 497 196 b 457 179 493 196 469 186 b 358 16 391 144 358 79 b 438 -128 358 -40 384 -95 b 455 -151 449 -135 455 -143 b 448 -165 455 -156 452 -160 b 434 -172 444 -169 440 -172 b 401 -159 427 -172 417 -168 b 256 82 305 -110 256 -15 b 386 322 256 172 299 264 b 462 358 408 337 453 358 b 462 359 462 358 462 358 b 462 360 462 359 462 359 b 418 565 462 362 422 547 z m 581 203 b 558 204 576 204 565 204 l 545 204 l 546 202 b 589 -1 546 201 565 109 b 634 -214 613 -112 633 -208 b 642 -251 636 -220 639 -237 l 648 -277 l 651 -275 b 776 -137 710 -241 752 -195 b 795 -42 789 -106 795 -73 b 581 203 795 78 707 188 z',\n    },\n    cClef: {\n      x_min: 0,\n      x_max: 643,\n      y_min: -508,\n      y_max: 508,\n      ha: 1016,\n      o: 'm 0 0 l 0 731 l 87 731 l 175 731 l 175 0 l 175 -731 l 87 -731 l 0 -731 z m 240 0 l 240 731 l 262 731 l 284 731 l 284 382 l 284 32 l 291 38 b 374 145 318 61 351 104 b 439 314 402 196 423 251 b 458 341 444 338 447 341 b 475 319 470 341 474 335 b 647 120 483 206 560 120 b 665 122 653 120 659 121 b 771 330 741 132 766 181 b 772 404 772 357 772 381 b 707 662 772 557 753 630 b 615 687 684 679 651 687 b 517 666 582 687 548 680 b 504 660 509 663 504 660 b 504 660 504 660 504 660 b 578 578 545 658 578 621 b 578 575 578 577 578 576 b 492 494 576 524 534 494 b 419 534 465 494 437 506 b 403 584 408 550 403 567 b 434 651 403 608 413 632 b 616 721 485 698 550 721 b 884 565 720 721 826 665 b 925 406 912 515 925 460 b 719 99 925 272 846 140 b 648 87 694 91 671 87 b 543 122 610 87 576 99 b 536 126 540 124 536 126 b 535 126 535 126 535 126 b 497 63 535 126 518 98 l 459 0 l 497 -63 b 535 -126 518 -98 535 -126 b 536 -126 535 -126 535 -126 b 543 -122 536 -126 540 -124 b 648 -87 575 -99 610 -87 b 677 -89 657 -87 667 -88 b 924 -382 811 -110 913 -230 b 925 -407 925 -391 925 -399 b 639 -720 925 -570 803 -706 b 615 -721 631 -720 623 -721 b 430 -647 545 -721 478 -694 b 403 -585 412 -629 403 -607 b 492 -494 403 -538 439 -494 b 497 -494 493 -494 495 -494 b 578 -578 545 -496 578 -536 b 564 -625 578 -594 574 -610 b 504 -660 551 -644 525 -659 b 504 -660 504 -660 504 -660 b 517 -666 504 -660 509 -663 b 615 -687 548 -680 582 -687 b 707 -662 651 -687 684 -679 b 772 -404 753 -630 772 -557 b 771 -330 772 -381 772 -357 b 665 -122 766 -181 741 -132 b 647 -120 659 -121 653 -120 b 475 -319 560 -120 483 -206 b 458 -341 474 -335 470 -341 b 439 -314 447 -341 444 -338 b 374 -145 423 -251 402 -196 b 291 -38 351 -104 317 -61 l 284 -32 l 284 -382 l 284 -731 l 262 -731 l 240 -731 z',\n    },\n    fClef: {\n      x_min: 0,\n      x_max: 661,\n      y_min: -545,\n      y_max: 254,\n      ha: 798,\n      o: 'm 326 364 b 356 365 336 365 346 365 b 647 278 464 365 575 332 b 788 -2 740 207 788 112 b 785 -51 788 -18 787 -34 b 161 -747 750 -356 500 -634 b 16 -784 110 -764 31 -784 b 0 -768 7 -784 0 -778 b 24 -747 0 -758 3 -755 b 601 -72 353 -625 575 -364 b 603 -10 602 -51 603 -30 b 469 298 603 133 556 243 b 346 332 432 321 389 332 b 100 185 248 332 146 277 b 89 161 97 178 89 162 b 89 161 89 161 89 161 b 95 164 90 161 92 162 b 169 185 118 179 144 185 b 308 74 232 185 293 142 b 311 42 310 63 311 53 b 167 -101 311 -36 248 -101 b 147 -99 161 -101 154 -100 b 9 79 65 -88 9 -15 l 9 79 b 326 364 9 228 148 353 z m 888 225 b 894 225 889 225 891 225 b 914 223 901 225 910 224 b 952 171 940 214 952 192 b 914 118 952 149 939 127 b 898 116 910 117 904 116 b 881 118 892 116 886 117 b 843 170 856 127 843 149 b 888 225 843 195 859 219 z m 888 -116 b 894 -116 889 -116 891 -116 b 914 -118 901 -116 910 -117 b 952 -170 940 -127 952 -149 b 914 -223 952 -192 939 -214 b 898 -225 910 -224 904 -225 b 881 -223 892 -225 886 -224 b 843 -171 856 -214 843 -193 b 888 -116 843 -146 859 -122 z',\n    },\n    unpitchedPercussionClef1: {\n      x_min: -4,\n      x_max: 337,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm -6 0 l -6 360 l 75 360 l 157 360 l 157 0 l 157 -360 l 75 -360 l -6 -360 z m 321 0 l 321 360 l 403 360 l 485 360 l 485 0 l 485 -360 l 403 -360 l 321 -360 z',\n    },\n    '6stringTabClef': {\n      x_min: 0,\n      x_max: 501,\n      y_min: -735,\n      y_max: 753,\n      ha: 1487,\n      o: 'm 633 1083 b 639 1084 635 1084 637 1084 b 669 1072 650 1084 661 1079 b 681 1043 677 1063 681 1053 b 657 1004 681 1028 673 1013 b 467 964 609 980 535 964 l 452 964 l 452 959 b 456 874 455 932 456 903 b 418 611 456 781 443 686 b 245 415 380 495 327 435 b 195 409 228 411 214 409 b 147 412 182 409 167 410 b 110 453 124 414 110 433 b 122 482 110 464 114 474 b 151 494 130 490 141 494 b 184 478 163 494 175 489 b 194 475 186 476 190 475 b 224 486 202 475 213 479 b 283 575 246 500 263 527 b 335 871 317 657 335 760 b 331 967 335 903 334 935 l 330 980 l 321 982 b 260 992 301 989 280 992 b 139 927 206 992 160 968 b 90 895 128 906 109 895 b 42 933 70 895 49 908 b 40 947 40 937 40 942 b 105 1020 40 972 61 996 b 263 1058 150 1045 207 1058 b 350 1047 293 1058 323 1054 b 465 1030 389 1036 429 1030 b 612 1073 526 1030 579 1045 b 633 1083 618 1078 625 1082 z m 441 376 b 448 376 443 376 445 376 b 470 374 456 376 465 375 b 511 321 494 366 509 346 b 534 155 515 283 525 210 b 621 -190 556 21 589 -109 b 668 -253 632 -220 651 -245 l 672 -254 l 676 -253 b 687 -252 680 -252 683 -252 b 721 -287 707 -252 721 -269 b 705 -316 721 -298 716 -309 b 676 -321 699 -320 689 -321 b 650 -319 668 -321 659 -321 b 506 -206 588 -312 533 -269 b 444 0 487 -163 460 -72 b 441 8 443 4 441 8 b 441 8 441 8 441 8 b 436 -3 441 7 438 2 b 381 -99 422 -33 400 -72 b 375 -109 377 -105 375 -107 b 381 -114 375 -111 377 -112 b 435 -133 398 -126 415 -132 b 452 -138 446 -134 448 -134 b 457 -150 455 -141 457 -145 b 446 -166 457 -156 453 -163 b 406 -174 434 -171 420 -174 b 344 -160 385 -174 363 -169 l 337 -156 l 334 -159 b 49 -314 250 -255 145 -311 b 39 -315 45 -315 42 -315 b 10 -305 23 -315 18 -312 b 0 -281 3 -298 0 -290 b 34 -247 0 -264 14 -247 b 40 -248 36 -247 38 -247 b 46 -248 42 -248 44 -248 b 144 -208 69 -248 108 -233 b 390 306 283 -115 381 90 b 394 334 391 320 392 328 b 441 376 401 356 419 372 z m 376 -371 b 408 -371 383 -371 395 -371 b 451 -372 425 -371 444 -371 b 529 -388 482 -376 502 -380 b 689 -546 621 -417 689 -484 b 563 -696 689 -599 639 -658 l 552 -701 l 561 -705 b 700 -882 646 -748 700 -818 b 699 -896 700 -887 700 -892 b 503 -1054 689 -974 608 -1039 b 451 -1058 486 -1057 468 -1058 b 272 -1010 389 -1058 329 -1042 b 248 -972 257 -1001 248 -987 b 249 -963 248 -969 248 -966 l 250 -959 l 249 -960 b 241 -966 248 -961 244 -964 b 124 -1015 208 -992 168 -1009 b 90 -1017 118 -1016 104 -1017 b 48 -1015 72 -1017 52 -1016 b 19 -977 30 -1009 19 -993 b 31 -949 19 -967 23 -957 b 59 -937 39 -941 49 -937 b 85 -947 68 -937 77 -941 l 88 -951 l 94 -951 b 210 -845 134 -951 183 -906 b 220 -821 212 -840 216 -830 b 286 -526 264 -724 286 -623 b 283 -469 286 -507 285 -488 b 282 -459 283 -463 282 -459 b 282 -459 282 -459 282 -459 b 256 -469 281 -459 266 -464 b 141 -563 201 -491 160 -526 b 94 -592 130 -583 112 -592 b 43 -540 68 -592 43 -573 b 88 -476 43 -518 51 -505 b 376 -371 158 -418 261 -381 z m 432 -437 b 411 -437 427 -437 418 -437 l 399 -437 l 400 -440 b 406 -505 402 -448 405 -478 b 407 -527 407 -512 407 -520 b 334 -840 407 -628 382 -737 b 284 -925 315 -881 304 -901 b 280 -930 281 -928 280 -929 b 281 -930 280 -930 280 -930 b 284 -930 281 -930 282 -930 b 291 -929 286 -929 288 -929 b 320 -941 300 -929 310 -933 b 452 -991 362 -975 405 -991 l 452 -991 b 580 -883 531 -991 580 -941 b 538 -791 580 -852 566 -820 b 421 -733 508 -761 470 -742 b 392 -715 405 -730 397 -724 b 388 -698 389 -709 388 -703 b 420 -665 388 -681 401 -667 b 567 -563 490 -658 555 -613 b 569 -546 568 -557 569 -552 b 432 -437 569 -493 510 -444 z',\n    },\n    timeSig0: {\n      x_min: 0,\n      x_max: 380,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 249 313 b 272 314 256 314 264 314 b 428 259 325 314 385 293 b 547 0 505 196 547 105 b 544 -49 547 -16 546 -32 b 273 -314 526 -197 407 -314 b 32 -149 175 -314 81 -250 b 0 0 11 -105 0 -53 b 32 150 0 53 11 106 b 249 313 78 242 158 302 z m 293 279 b 273 281 286 280 280 281 b 203 251 242 281 216 270 b 170 -3 185 224 170 102 b 172 -59 170 -23 171 -42 b 203 -251 178 -163 189 -231 b 273 -281 216 -270 243 -281 b 306 -277 284 -281 295 -280 b 366 -160 344 -267 356 -243 b 376 0 373 -103 376 -51 b 366 160 376 51 373 103 b 293 279 355 250 341 272 z m 273 -360 l 275 -360 l 272 -360 z m 273 340 l 275 340 l 272 340 z',\n    },\n    timeSig1: {\n      x_min: 0,\n      x_max: 254,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 135 302 b 210 303 137 303 141 303 b 235 303 219 303 228 303 b 290 298 290 303 286 303 b 295 70 295 293 295 314 b 300 -219 295 -201 295 -202 b 352 -269 307 -239 324 -255 b 366 -287 361 -274 366 -280 b 361 -298 366 -291 364 -295 b 266 -303 357 -303 367 -303 b 210 -303 250 -303 232 -303 b 154 -303 188 -303 170 -303 b 59 -298 53 -303 63 -303 b 54 -287 55 -295 54 -291 b 68 -269 54 -280 59 -274 b 120 -219 96 -255 113 -239 b 125 -50 124 -205 125 -193 b 125 24 125 -29 125 -4 l 125 189 l 120 181 b 90 136 116 176 103 156 b 48 72 77 116 58 87 b 16 38 26 38 26 38 b 0 54 6 38 0 45 b 0 56 0 55 0 55 l 0 60 l 64 178 b 135 302 128 296 130 299 z m 183 -360 l 184 -360 l 182 -360 z m 183 340 l 184 340 l 182 340 z',\n    },\n    timeSig2: {\n      x_min: 0,\n      x_max: 337,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 210 313 b 232 314 217 314 224 314 b 317 303 261 314 293 310 b 459 147 407 277 459 217 b 441 77 459 124 453 101 b 258 -67 409 10 349 -37 b 76 -181 173 -95 117 -130 l 73 -185 l 77 -182 b 226 -128 121 -146 174 -128 b 322 -152 260 -128 293 -136 b 378 -173 346 -165 359 -170 b 395 -174 383 -174 389 -174 b 454 -149 421 -174 446 -164 b 470 -139 457 -142 464 -139 b 486 -155 478 -139 486 -145 b 462 -217 486 -165 474 -197 b 319 -313 428 -276 373 -313 l 318 -313 b 273 -300 296 -313 290 -311 b 133 -256 226 -271 178 -256 b 93 -260 119 -256 106 -257 b 32 -294 68 -265 41 -280 b 15 -303 28 -300 21 -303 b 1 -292 9 -303 3 -299 b 0 -284 0 -291 0 -288 b 6 -234 0 -271 3 -249 b 180 -36 28 -147 90 -75 b 303 122 246 -7 290 50 b 305 146 305 130 305 138 b 272 225 305 177 294 204 b 185 259 249 248 220 259 b 163 257 178 259 170 258 b 152 256 155 257 152 256 b 155 253 152 255 153 254 b 191 188 180 238 191 213 b 138 112 191 156 173 124 b 112 108 129 109 120 108 b 29 191 67 108 29 146 b 33 214 29 199 30 206 b 210 313 46 263 122 305 z m 243 -360 l 244 -360 l 241 -360 z m 243 340 l 244 340 l 241 340 z',\n    },\n    timeSig3: {\n      x_min: 0,\n      x_max: 302,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 179 313 b 209 314 189 314 199 314 b 429 163 327 314 429 247 b 282 29 429 110 369 56 l 272 26 l 275 25 b 430 -111 354 -1 413 -53 b 435 -147 433 -123 435 -136 b 268 -308 435 -222 369 -288 b 211 -314 249 -312 230 -314 b 24 -241 140 -314 72 -288 b 0 -185 7 -224 0 -204 b 82 -100 0 -142 35 -100 b 97 -101 87 -100 92 -100 b 162 -180 140 -109 162 -145 b 113 -251 162 -209 146 -239 b 110 -253 111 -252 110 -252 b 120 -256 110 -253 113 -254 b 164 -261 136 -260 150 -261 b 248 -228 197 -261 226 -250 b 281 -145 270 -206 281 -178 b 278 -112 281 -135 280 -123 b 157 10 264 -42 215 7 b 135 27 141 11 135 16 b 157 44 135 39 141 43 b 272 137 210 47 257 85 b 276 162 275 145 276 154 b 194 256 276 206 244 245 b 167 258 188 258 178 258 b 124 255 152 258 136 257 l 119 254 l 123 252 b 162 186 149 238 162 212 b 108 110 162 154 144 121 b 83 105 100 107 91 105 b 0 189 37 105 0 144 b 8 224 0 200 3 212 b 179 313 28 266 103 305 z m 217 -360 l 219 -360 l 216 -360 z m 217 340 l 219 340 l 216 340 z',\n    },\n    timeSig4: {\n      x_min: 0,\n      x_max: 345,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 184 302 b 304 303 186 303 247 303 b 403 302 354 303 401 303 b 412 286 409 299 412 294 b 392 256 412 280 411 278 b 260 108 374 236 318 173 b 222 67 243 89 226 71 b 165 3 218 62 193 34 b 90 -82 138 -28 104 -66 b 65 -111 77 -97 65 -110 b 64 -111 64 -111 64 -111 b 160 -112 64 -112 74 -112 l 257 -112 l 257 -43 b 259 27 257 24 257 25 b 307 82 259 28 281 53 b 373 156 332 110 362 144 b 409 188 402 189 401 188 b 425 179 416 188 422 185 b 426 32 426 176 426 171 l 426 -112 l 452 -112 b 481 -113 476 -112 477 -112 b 494 -134 489 -116 494 -125 b 488 -149 494 -139 492 -145 b 452 -156 482 -155 481 -156 l 426 -156 l 426 -162 b 427 -183 427 -165 427 -175 b 484 -269 428 -227 441 -248 b 497 -287 493 -274 497 -280 b 493 -298 497 -291 496 -295 b 397 -303 488 -303 499 -303 b 341 -303 382 -303 363 -303 b 285 -303 320 -303 301 -303 b 190 -298 184 -303 195 -303 b 185 -287 187 -295 185 -291 b 199 -269 185 -280 190 -274 b 256 -183 242 -248 255 -227 b 256 -162 256 -175 256 -165 l 257 -156 l 135 -156 b 90 -156 117 -156 102 -156 b 5 -151 2 -156 9 -155 b 0 -140 2 -148 0 -144 b 9 -122 0 -135 3 -129 b 174 272 110 -9 170 134 b 184 302 175 295 176 298 z m 249 -360 l 250 -360 l 247 -360 z m 249 340 l 250 340 l 247 340 z',\n    },\n    timeSig5: {\n      x_min: 0,\n      x_max: 302,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 51 302 b 57 303 53 302 55 303 b 71 300 61 303 65 302 b 224 275 117 283 170 275 b 391 300 279 275 336 283 b 406 303 398 302 402 303 b 417 298 411 303 414 301 b 421 288 420 295 421 292 b 411 260 421 282 418 274 b 278 157 378 194 340 165 b 226 154 262 155 244 154 b 78 175 177 154 124 161 b 66 179 72 177 66 179 b 56 64 66 178 56 68 b 56 64 56 64 56 64 b 56 64 56 64 56 64 b 63 67 57 64 60 65 b 159 96 89 81 124 92 b 201 98 168 97 185 98 b 227 97 212 98 222 98 b 434 -104 351 80 434 -1 l 434 -105 b 239 -312 434 -208 353 -294 b 212 -314 230 -313 221 -314 b 23 -229 148 -314 76 -282 b 0 -174 7 -213 0 -193 b 82 -89 0 -131 35 -89 b 97 -90 87 -89 92 -89 b 162 -168 140 -98 162 -133 b 108 -242 162 -199 145 -230 l 102 -244 l 109 -247 b 159 -259 127 -255 143 -259 b 215 -241 178 -259 197 -253 b 281 -99 258 -212 281 -161 b 277 -51 281 -84 280 -68 b 211 62 267 6 241 51 l 205 64 l 189 64 b 57 24 142 64 96 50 b 37 14 43 14 42 14 b 20 30 26 14 20 20 b 43 293 20 41 42 290 b 51 302 44 297 48 300 z m 222 -276 b 222 -276 222 -276 222 -276 b 218 -277 221 -276 221 -276 b 216 -279 217 -278 216 -279 b 216 -279 216 -279 216 -279 b 222 -276 217 -279 222 -276 z m 217 -360 l 219 -360 l 216 -360 z m 217 340 l 219 340 l 216 340 z',\n    },\n    timeSig6: {\n      x_min: 0,\n      x_max: 349,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 272 313 b 295 314 278 314 286 314 b 350 308 314 314 336 312 b 473 226 402 295 458 259 b 481 191 479 215 481 203 b 399 108 481 147 444 108 b 373 112 390 108 382 109 b 319 187 337 124 319 156 b 372 260 319 218 337 249 b 378 263 375 262 378 263 b 378 263 378 263 378 263 b 347 275 378 264 358 271 b 305 280 333 278 319 280 b 220 242 270 280 239 267 b 178 110 201 217 187 173 b 170 31 175 88 170 41 b 170 29 170 30 170 29 b 170 29 170 29 170 29 b 180 32 171 29 175 30 b 273 52 213 45 243 52 b 364 33 302 52 332 45 b 487 -64 422 11 466 -24 b 502 -128 497 -83 502 -105 b 479 -208 502 -156 494 -185 b 272 -314 439 -268 345 -314 b 239 -310 260 -314 249 -313 b 9 -77 129 -284 35 -188 b 0 6 3 -53 0 -23 b 5 65 0 26 2 47 b 272 313 27 193 137 296 z m 290 17 b 273 19 284 18 279 19 b 227 2 254 19 236 13 b 198 -122 209 -17 198 -69 b 201 -175 198 -140 199 -158 b 274 -280 214 -258 229 -280 l 274 -280 b 341 -193 315 -280 329 -262 b 349 -123 346 -166 349 -145 b 344 -66 349 -105 347 -87 b 290 17 334 -9 321 12 z m 251 -360 l 253 -360 l 250 -360 z m 251 340 l 253 340 l 250 340 z',\n    },\n    timeSig7: {\n      x_min: 0,\n      x_max: 326,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 162 314 b 179 315 168 315 174 315 b 333 260 232 315 290 294 b 361 249 343 252 350 249 b 370 250 364 249 367 249 b 435 291 395 253 417 267 b 453 303 442 299 447 303 b 460 302 455 303 457 303 b 469 288 466 299 469 296 b 456 233 469 279 465 263 b 369 16 433 146 396 56 b 290 -268 322 -53 293 -159 b 280 -302 289 -295 289 -298 b 192 -303 278 -303 235 -303 b 105 -302 150 -303 107 -303 b 96 -281 98 -298 96 -294 b 96 -280 96 -280 96 -280 b 178 -54 96 -212 128 -124 b 279 57 207 -12 235 18 b 399 198 335 107 368 146 b 404 207 402 204 404 206 b 403 207 404 207 404 207 b 400 205 403 207 402 206 b 258 155 357 172 306 155 b 132 201 212 155 167 171 b 90 222 117 215 103 222 b 58 201 78 222 67 215 b 33 141 49 187 41 168 b 16 128 30 133 23 128 b 1 138 10 128 4 131 b 0 216 0 140 0 178 b 1 293 0 253 0 291 b 15 303 4 300 9 303 b 30 298 20 303 25 301 b 52 289 37 292 43 289 b 96 300 62 289 75 293 b 162 314 124 309 140 312 z m 234 -360 l 236 -360 l 233 -360 z m 234 340 l 236 340 l 233 340 z',\n    },\n    timeSig8: {\n      x_min: 0,\n      x_max: 360,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 246 314 b 260 314 252 314 258 314 b 261 314 261 314 261 314 b 275 313 263 314 269 314 b 399 276 317 312 363 298 b 486 136 456 242 486 189 b 441 29 486 99 471 61 l 435 23 l 441 19 b 518 -119 492 -16 518 -67 b 483 -217 518 -153 507 -187 b 259 -314 435 -279 349 -314 b 138 -291 218 -314 176 -307 b 0 -118 48 -256 0 -187 b 76 18 0 -69 25 -20 l 83 23 l 77 30 b 32 137 48 61 32 99 b 42 189 32 155 36 172 b 246 314 70 260 152 310 z m 282 267 b 260 269 276 269 268 269 b 228 266 249 269 237 268 b 168 214 192 258 168 235 b 171 202 168 210 169 206 b 354 62 190 162 270 101 l 359 60 l 362 65 b 380 136 375 88 380 112 b 282 267 380 196 342 254 z m 148 -20 b 139 -16 144 -18 139 -16 b 139 -16 139 -16 139 -16 b 119 -36 137 -16 124 -29 b 91 -118 100 -62 91 -90 b 188 -255 91 -174 126 -229 b 257 -269 210 -265 234 -269 b 356 -229 298 -269 336 -255 b 368 -196 364 -218 368 -208 b 350 -151 368 -183 362 -168 b 166 -28 317 -101 256 -61 b 148 -20 161 -26 153 -23 z m 259 -360 l 261 -360 l 258 -360 z m 259 340 l 261 340 l 258 340 z',\n    },\n    timeSig9: {\n      x_min: 0,\n      x_max: 349,\n      y_min: -250,\n      y_max: 236,\n      ha: 486,\n      o: 'm 208 313 b 227 314 214 314 220 314 b 332 284 259 314 295 304 b 497 61 420 236 480 155 b 503 -4 501 42 503 19 b 498 -65 503 -26 501 -47 b 279 -303 479 -176 393 -269 b 204 -314 253 -310 228 -314 b 98 -287 166 -314 130 -305 b 25 -216 58 -265 33 -241 b 22 -191 23 -208 22 -199 b 104 -108 22 -146 59 -108 b 130 -112 112 -108 121 -109 b 184 -187 166 -124 184 -156 b 131 -260 184 -218 166 -249 b 125 -263 128 -262 125 -263 b 125 -263 125 -263 125 -263 b 156 -275 125 -264 144 -271 b 197 -280 170 -278 184 -280 b 279 -247 231 -280 260 -269 b 324 -117 300 -223 313 -182 b 333 -31 328 -93 333 -42 b 332 -29 333 -30 333 -29 b 332 -29 332 -29 332 -29 b 323 -32 332 -29 328 -30 b 230 -52 289 -45 260 -52 b 173 -44 211 -52 192 -49 b 23 50 108 -27 51 9 b 0 128 8 74 0 101 b 34 222 0 161 11 194 b 208 313 70 266 142 304 z m 248 278 b 231 281 243 280 237 281 b 195 272 217 281 203 277 b 156 156 176 259 163 221 b 154 124 154 146 154 135 b 183 -2 154 72 166 16 b 230 -19 194 -13 212 -19 b 276 -2 248 -19 266 -13 b 305 122 294 17 305 69 b 301 175 305 140 304 158 b 248 278 290 246 278 270 z m 251 -360 l 253 -360 l 250 -360 z m 251 340 l 253 340 l 250 340 z',\n    },\n    timeSigCommon: {\n      x_min: 0,\n      x_max: 409,\n      y_min: -233,\n      y_max: 233,\n      ha: 466,\n      o: 'm 315 334 b 343 336 324 335 334 336 b 558 227 431 336 512 296 b 575 174 570 210 575 192 b 475 74 575 122 533 74 b 472 74 474 74 473 74 b 380 167 417 76 380 120 b 402 225 380 187 387 207 b 469 256 418 244 444 256 b 484 254 474 256 479 255 b 487 254 485 254 487 254 b 488 254 488 254 488 254 b 479 260 488 254 485 256 b 346 302 439 289 398 302 l 345 302 b 154 -3 205 302 154 220 b 154 -3 154 -3 154 -3 b 316 -302 154 -225 195 -300 b 321 -302 318 -302 320 -302 b 556 -108 438 -302 536 -221 b 573 -87 558 -92 562 -87 b 589 -105 584 -87 589 -93 b 582 -144 589 -114 587 -127 b 393 -327 556 -233 484 -302 b 321 -336 371 -333 346 -336 b 248 -327 296 -336 271 -333 b 7 -69 125 -296 32 -196 b 0 -1 2 -46 0 -24 b 315 334 0 170 131 317 z',\n    },\n    timeSigCutCommon: {\n      x_min: 0,\n      x_max: 409,\n      y_min: -394,\n      y_max: 394,\n      ha: 788,\n      o: 'm 308 566 b 316 568 311 567 314 568 b 337 554 325 568 334 562 b 338 446 338 550 338 549 l 338 341 l 355 341 b 558 232 437 339 514 298 b 575 179 570 216 575 197 b 475 79 575 128 533 79 b 472 79 474 79 473 79 b 380 172 417 81 380 126 b 402 231 380 192 387 213 b 469 261 418 250 444 261 b 484 260 474 261 479 261 b 487 259 485 259 487 259 b 488 259 488 259 488 259 b 479 266 488 260 485 262 b 354 307 442 292 400 306 l 338 308 l 338 6 l 338 -297 l 340 -296 b 347 -296 341 -296 344 -296 b 555 -103 449 -288 538 -205 b 573 -82 558 -87 562 -82 b 589 -100 584 -82 589 -87 b 582 -138 589 -109 587 -121 b 374 -326 554 -234 473 -307 b 342 -330 366 -327 356 -328 l 338 -330 l 338 -440 b 339 -489 338 -460 339 -476 b 332 -561 339 -563 338 -555 b 317 -568 328 -566 322 -568 b 296 -554 308 -568 299 -563 b 295 -440 295 -550 295 -549 l 295 -330 l 293 -329 b 282 -328 291 -329 287 -328 b 7 -63 146 -310 35 -203 b 0 4 2 -41 0 -18 b 259 331 0 156 103 291 b 294 338 269 333 292 338 b 295 444 295 338 295 385 b 296 554 295 549 295 550 b 308 566 298 559 303 564 z m 295 4 b 294 303 295 288 295 303 b 284 301 293 303 288 302 b 154 3 190 276 154 192 l 154 2 b 291 -295 154 -204 190 -283 l 295 -295 z',\n    },\n    timeSigPlus: {\n      x_min: 0,\n      x_max: 235,\n      y_min: -118,\n      y_max: 118,\n      ha: 235,\n      o: 'm 159 168 b 169 169 162 169 166 169 b 198 153 180 169 192 163 b 202 97 202 146 202 147 l 202 87 l 202 33 l 257 33 l 267 33 b 322 29 317 33 315 33 b 339 0 333 22 339 11 b 323 -28 339 -11 333 -22 b 266 -33 315 -33 317 -33 l 257 -33 l 202 -33 l 202 -87 l 202 -97 b 198 -153 202 -148 202 -146 b 169 -169 191 -164 180 -169 b 141 -153 158 -169 147 -164 b 137 -97 137 -146 137 -147 l 137 -87 l 137 -33 l 82 -33 l 72 -33 b 16 -28 22 -33 23 -33 b 0 0 5 -22 0 -11 b 16 28 0 11 5 22 b 72 33 23 33 22 33 l 82 33 l 137 33 l 137 87 l 137 97 b 141 153 137 148 137 146 b 159 168 145 160 151 165 z',\n    },\n    timeSigPlusSmall: {\n      x_min: 0,\n      x_max: 235,\n      y_min: -118,\n      y_max: 118,\n      ha: 235,\n      o: 'm 159 168 b 169 169 162 169 166 169 b 198 153 180 169 192 163 b 202 97 202 146 202 147 l 202 87 l 202 33 l 257 33 l 267 33 b 322 29 317 33 315 33 b 339 0 333 22 339 11 b 323 -28 339 -11 333 -22 b 266 -33 315 -33 317 -33 l 257 -33 l 202 -33 l 202 -87 l 202 -97 b 198 -153 202 -148 202 -146 b 169 -169 191 -164 180 -169 b 141 -153 158 -169 147 -164 b 137 -97 137 -146 137 -147 l 137 -87 l 137 -33 l 82 -33 l 72 -33 b 16 -28 22 -33 23 -33 b 0 0 5 -22 0 -11 b 16 28 0 11 5 22 b 72 33 23 33 22 33 l 82 33 l 137 33 l 137 87 l 137 97 b 141 153 137 148 137 146 b 159 168 145 160 151 165 z',\n    },\n    timeSigMinus: {\n      x_min: 0,\n      x_max: 235,\n      y_min: -23,\n      y_max: 23,\n      ha: 46,\n      o: 'm 23 32 b 177 33 26 32 103 33 b 315 32 246 33 312 32 b 338 0 331 27 338 14 b 315 -32 338 -14 331 -27 b 169 -33 312 -33 241 -33 b 23 -32 98 -33 26 -33 b 0 0 8 -27 0 -14 b 23 32 0 13 8 26 z',\n    },\n    timeSigParensRight: {\n      x_min: 19,\n      x_max: 122,\n      y_min: -267,\n      y_max: 267,\n      ha: 535,\n      o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n    },\n    timeSigParensRightSmall: {\n      x_min: 19,\n      x_max: 122,\n      y_min: -267,\n      y_max: 267,\n      ha: 535,\n      o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n    },\n    timeSigParensLeft: {\n      x_min: -122,\n      x_max: -19,\n      y_min: -267,\n      y_max: 267,\n      ha: 534,\n      o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n    },\n    timeSigParensLeftSmall: {\n      x_min: -122,\n      x_max: -19,\n      y_min: -267,\n      y_max: 267,\n      ha: 534,\n      o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n    },\n    noteheadDoubleWhole: {\n      x_min: 0,\n      x_max: 663,\n      y_min: -174,\n      y_max: 174,\n      ha: 349,\n      o: 'm 19 250 b 27 251 21 251 24 251 b 36 250 31 251 34 251 b 50 239 41 248 47 244 b 55 93 54 233 55 247 b 55 0 55 67 55 37 b 55 -93 55 -37 55 -67 b 50 -239 55 -247 54 -233 b 28 -251 45 -247 36 -251 b 1 -232 16 -251 5 -244 b 0 4 0 -230 0 -112 b 1 232 0 117 0 230 b 19 250 4 240 11 247 z m 117 250 b 126 251 119 251 122 251 b 134 250 129 251 132 251 b 152 232 142 247 149 240 b 153 128 153 229 153 214 b 154 31 153 48 153 31 b 154 31 154 31 154 31 b 417 191 176 112 281 176 b 478 194 437 193 458 194 b 801 31 636 194 776 127 b 801 31 801 31 801 31 b 802 128 802 31 802 48 b 805 237 802 235 802 232 b 830 251 811 246 821 251 b 852 239 839 251 847 247 b 857 93 857 233 857 247 b 857 0 857 67 857 37 b 857 -93 857 -37 857 -67 b 852 -239 857 -247 857 -233 b 830 -251 847 -247 838 -251 b 807 -239 821 -251 812 -247 b 802 -128 802 -232 802 -239 b 801 -31 802 -48 802 -31 b 801 -31 801 -31 801 -31 b 539 -191 779 -112 675 -176 b 477 -194 518 -193 498 -194 b 154 -31 319 -194 180 -127 b 154 -31 154 -31 154 -31 b 153 -128 153 -31 153 -48 b 148 -239 153 -239 153 -232 b 126 -251 143 -247 134 -251 b 99 -232 114 -251 103 -244 b 98 4 99 -230 98 -112 b 99 232 98 117 99 230 b 117 250 102 240 109 247 z m 458 168 b 439 169 452 169 445 169 b 332 44 375 169 332 116 b 344 -25 332 22 336 -1 b 517 -169 377 -116 452 -169 b 613 -101 558 -169 595 -148 b 623 -44 620 -83 623 -64 b 458 168 623 50 549 154 z m 919 250 b 928 251 921 251 924 251 b 936 250 931 251 934 251 b 951 239 942 248 947 244 b 955 93 955 233 955 247 b 955 0 955 67 955 36 b 955 -93 955 -37 955 -67 b 951 -239 955 -247 955 -233 b 928 -251 945 -247 937 -251 b 902 -232 917 -251 905 -244 b 900 4 901 -230 900 -112 b 901 232 900 117 901 230 b 919 250 904 240 911 247 z',\n    },\n    noteheadWhole: {\n      x_min: 0,\n      x_max: 455,\n      y_min: -135,\n      y_max: 135,\n      ha: 269,\n      o: 'm 291 193 b 326 194 303 194 315 194 b 649 38 482 194 619 129 b 655 0 653 25 655 12 b 327 -194 655 -106 513 -194 b 0 0 144 -194 0 -109 b 291 193 0 100 124 182 z m 308 168 b 289 169 301 169 295 169 b 181 44 224 169 181 116 b 194 -26 181 22 185 -1 b 366 -169 226 -116 302 -169 b 463 -101 408 -169 445 -148 b 473 -45 470 -83 473 -64 b 308 168 473 50 398 154 z',\n    },\n    noteheadHalf: {\n      x_min: 0,\n      x_max: 316,\n      y_min: -135,\n      y_max: 135,\n      ha: 269,\n      o: 'm 270 193 b 281 194 272 194 276 194 b 322 192 294 194 315 193 b 455 53 411 178 455 120 b 307 -156 455 -20 405 -104 b 166 -194 260 -182 211 -194 b 3 -81 84 -194 17 -153 b 0 -52 1 -72 0 -62 b 270 193 0 62 123 178 z m 388 139 b 372 141 383 140 378 141 b 99 -26 307 141 174 61 b 50 -116 68 -62 50 -96 b 60 -136 50 -125 53 -132 b 83 -141 66 -139 74 -141 b 367 40 152 -141 296 -52 b 405 115 392 72 405 98 b 388 139 405 127 399 135 z',\n    },\n    noteheadBlack: {\n      x_min: 0,\n      x_max: 316,\n      y_min: -135,\n      y_max: 135,\n      ha: 269,\n      o: 'm 270 193 b 281 194 272 194 276 194 b 322 192 294 194 315 193 b 455 53 411 178 455 120 b 307 -156 455 -20 405 -104 b 166 -194 260 -182 211 -194 b 3 -81 84 -194 17 -153 b 0 -52 1 -72 0 -62 b 270 193 0 62 123 178 z',\n    },\n    noteheadXWhole: {\n      x_min: 0,\n      x_max: 440,\n      y_min: -133,\n      y_max: 133,\n      ha: 265,\n      o: 'm 67 190 b 82 191 71 191 76 191 b 97 190 88 191 94 191 b 216 138 108 188 116 184 l 317 91 l 417 138 b 548 191 529 190 532 191 b 551 191 549 191 550 191 b 634 109 601 191 634 151 b 611 52 634 89 627 69 b 549 17 601 41 597 39 b 513 0 529 8 513 0 b 549 -17 513 0 529 -8 b 611 -52 597 -39 601 -41 b 634 -109 627 -69 634 -89 b 551 -191 634 -151 601 -191 b 548 -191 550 -191 549 -191 b 417 -138 532 -191 529 -190 l 317 -91 l 216 -138 b 86 -191 105 -190 102 -191 b 83 -191 85 -191 84 -191 b 0 -109 33 -191 0 -151 b 23 -52 0 -89 7 -69 b 85 -17 33 -41 37 -39 b 121 0 105 -8 121 0 b 85 17 121 0 105 8 b 23 52 37 39 33 41 b 0 109 7 69 0 89 b 67 190 0 146 26 182 z m 91 141 b 82 142 88 142 85 142 b 49 109 63 142 49 126 b 59 86 49 101 52 92 b 159 37 64 81 55 85 b 238 0 202 17 238 0 b 159 -37 238 0 202 -17 b 59 -86 55 -85 64 -81 b 49 -109 52 -92 49 -101 b 82 -142 49 -126 62 -142 l 82 -142 b 206 -88 91 -142 91 -141 b 317 -37 267 -60 317 -37 b 428 -88 317 -37 367 -60 b 551 -142 542 -141 543 -142 l 552 -142 b 584 -109 572 -142 584 -126 b 574 -86 584 -101 581 -92 b 475 -37 569 -81 578 -85 b 396 0 431 -17 396 0 b 475 37 396 0 431 17 b 574 86 578 85 569 81 b 584 109 581 92 584 101 b 552 142 584 126 572 142 l 551 142 b 428 88 543 142 542 141 b 317 37 367 60 317 37 b 206 88 317 37 267 60 b 91 141 145 117 93 140 z',\n    },\n    noteheadXHalf: {\n      x_min: 0,\n      x_max: 300,\n      y_min: -133,\n      y_max: 133,\n      ha: 265,\n      o: 'm 60 189 b 76 191 65 190 71 191 b 118 179 91 191 106 187 b 169 138 121 177 144 159 l 216 100 l 262 138 b 325 185 312 179 314 181 b 355 191 335 189 345 191 b 431 115 397 191 431 156 b 426 86 431 105 430 96 b 372 29 419 69 415 64 b 337 0 353 14 337 0 b 372 -29 337 0 353 -14 b 426 -86 415 -64 419 -69 b 431 -115 430 -96 431 -105 b 355 -191 431 -156 397 -191 b 325 -185 345 -191 335 -189 b 262 -138 314 -181 312 -179 l 216 -100 l 169 -138 b 106 -185 120 -179 117 -181 b 76 -191 96 -189 86 -191 b 0 -115 35 -191 0 -156 b 6 -86 0 -105 2 -96 b 59 -29 12 -69 17 -64 b 94 0 78 -14 94 0 b 59 29 94 0 78 14 b 20 63 40 45 22 61 b 0 114 6 78 0 97 b 60 189 0 148 23 181 z m 88 140 b 77 142 85 141 81 142 b 56 133 69 142 61 139 b 49 115 51 128 49 121 b 55 98 49 109 51 103 b 114 48 56 96 82 74 b 171 0 146 22 171 0 b 114 -48 171 0 146 -22 b 55 -98 82 -74 56 -96 b 49 -114 51 -103 49 -109 b 65 -140 49 -125 55 -135 b 77 -142 68 -141 72 -142 b 88 -140 81 -142 85 -141 b 154 -87 91 -138 114 -120 b 216 -36 188 -59 216 -36 b 278 -87 216 -36 244 -59 b 343 -140 318 -120 341 -138 b 355 -142 346 -141 350 -142 b 367 -140 359 -142 364 -141 b 382 -114 377 -135 382 -125 b 377 -98 382 -109 381 -103 b 317 -48 376 -96 349 -74 b 260 0 286 -22 260 0 b 317 48 260 0 286 22 b 377 98 349 74 376 96 b 382 114 381 103 382 109 b 367 140 382 125 377 135 b 355 142 364 141 359 142 b 343 140 350 142 346 141 b 278 87 341 138 318 120 b 216 36 244 59 216 36 b 154 87 216 36 188 59 b 88 140 112 121 91 138 z',\n    },\n    noteheadXBlack: {\n      x_min: 0,\n      x_max: 300,\n      y_min: -133,\n      y_max: 133,\n      ha: 265,\n      o: 'm 24 190 b 32 191 26 191 29 191 b 46 189 37 191 43 190 b 135 114 52 186 50 187 b 216 44 179 76 216 44 b 296 114 216 44 252 76 b 396 191 392 197 384 190 b 398 191 397 191 398 191 b 432 158 418 191 432 175 b 422 135 432 150 429 142 b 343 66 420 133 384 102 b 267 0 301 30 267 0 b 343 -66 267 0 301 -30 b 422 -135 384 -102 420 -133 b 432 -158 429 -142 432 -150 b 398 -191 432 -175 418 -191 b 396 -191 398 -191 397 -191 b 296 -114 384 -190 392 -197 b 216 -44 252 -76 216 -44 b 135 -114 216 -44 179 -76 b 35 -191 40 -197 48 -190 b 33 -191 35 -191 34 -191 b 0 -158 13 -191 0 -175 b 10 -135 0 -150 3 -142 b 89 -66 12 -133 48 -102 b 164 0 131 -30 164 0 b 89 66 164 0 131 30 b 10 135 48 102 12 133 b 0 158 3 142 0 150 b 24 190 0 172 9 186 z',\n    },\n    noteheadCircleX: {\n      x_min: 0,\n      x_max: 357,\n      y_min: -178,\n      y_max: 178,\n      ha: 357,\n      o: 'm 242 256 b 256 257 249 257 253 257 b 270 256 260 257 263 257 b 514 0 412 248 514 131 b 496 -95 514 -31 508 -63 b 255 -257 454 -200 355 -257 b 61 -166 184 -257 112 -228 b 0 -2 19 -117 0 -58 b 242 256 0 126 96 248 z m 267 190 b 257 191 262 190 259 191 b 245 190 254 191 251 190 b 153 159 212 188 179 177 l 147 156 l 202 101 l 257 46 l 311 101 l 366 156 l 361 159 b 267 190 334 177 302 188 z m 155 -55 l 210 0 l 155 54 l 101 109 l 97 104 b 66 0 77 74 66 37 b 71 -44 66 -15 68 -30 b 97 -105 77 -66 86 -87 l 101 -110 z m 416 104 b 413 109 414 107 413 109 b 358 54 413 109 388 84 l 304 0 l 358 -55 l 413 -110 l 416 -105 b 447 0 437 -74 447 -37 b 416 104 447 36 437 73 z m 312 -102 b 257 -47 282 -72 257 -47 b 202 -102 257 -47 232 -72 l 147 -156 l 153 -160 b 257 -191 183 -180 220 -191 b 361 -160 294 -191 330 -180 l 366 -156 z',\n    },\n    noteheadTriangleUpWhole: {\n      x_min: 0,\n      x_max: 462,\n      y_min: -149,\n      y_max: 149,\n      ha: 297,\n      o: 'm 326 213 b 333 214 327 214 330 214 b 355 194 342 214 344 212 b 647 -174 447 44 562 -101 b 659 -184 652 -178 657 -182 b 666 -198 664 -188 666 -193 b 650 -214 666 -207 660 -214 b 598 -200 645 -214 641 -213 b 333 -161 514 -174 423 -161 b 68 -200 242 -161 152 -174 b 16 -214 25 -213 20 -214 b 0 -198 7 -214 0 -208 b 12 -179 0 -190 1 -189 b 311 194 100 -106 216 40 b 326 213 320 208 322 211 z m 338 141 b 333 153 336 147 333 153 b 327 141 333 153 330 147 b 190 -130 285 41 232 -63 b 185 -138 187 -134 185 -138 b 185 -138 185 -138 185 -138 b 185 -138 185 -138 185 -138 b 195 -137 187 -138 190 -138 b 224 -134 201 -136 214 -135 b 333 -128 260 -130 296 -128 b 410 -131 359 -128 384 -129 b 470 -137 425 -132 454 -135 b 480 -138 475 -138 479 -138 b 481 -138 481 -138 481 -138 b 481 -138 481 -138 481 -138 b 478 -133 481 -138 479 -135 b 338 141 436 -67 381 40 z',\n    },\n    noteheadTriangleUpHalf: {\n      x_min: 0,\n      x_max: 323,\n      y_min: -149,\n      y_max: 149,\n      ha: 298,\n      o: 'm 225 213 b 232 214 227 214 230 214 b 253 191 242 214 245 212 b 447 -169 316 42 385 -85 b 465 -198 461 -187 465 -193 b 463 -204 465 -200 464 -202 b 450 -214 461 -211 457 -214 b 431 -208 446 -214 439 -212 b 233 -162 368 -178 300 -162 b 33 -208 165 -162 97 -178 b 15 -214 25 -212 19 -214 b 5 -209 11 -214 8 -213 b 0 -199 2 -206 0 -203 b 9 -181 0 -194 3 -188 b 213 194 67 -109 149 42 b 225 213 218 208 220 211 z m 280 51 b 264 85 274 62 267 78 l 258 98 l 248 83 b 93 -135 201 9 143 -73 b 87 -143 90 -139 87 -143 b 87 -144 87 -144 87 -144 b 87 -144 87 -144 87 -144 b 94 -141 87 -144 90 -142 b 297 -98 162 -113 233 -98 b 354 -102 317 -98 336 -99 b 363 -104 359 -103 363 -104 b 363 -104 363 -104 363 -104 b 360 -97 363 -103 361 -101 b 280 51 337 -60 304 2 z',\n    },\n    noteheadTriangleUpBlack: {\n      x_min: 0,\n      x_max: 322,\n      y_min: -149,\n      y_max: 149,\n      ha: 297,\n      o: 'm 224 213 b 232 214 226 213 229 214 b 250 197 241 214 244 211 b 277 135 269 152 270 149 b 288 111 280 127 285 117 b 336 12 296 92 330 23 b 344 -3 336 12 340 5 b 376 -60 360 -32 363 -38 b 452 -177 406 -112 430 -148 b 463 -198 463 -191 463 -191 b 447 -214 463 -208 458 -214 l 447 -214 l 441 -214 l 430 -208 b 232 -163 368 -178 300 -163 b 33 -208 163 -163 95 -178 l 22 -214 l 16 -214 l 16 -214 b 0 -198 6 -214 0 -208 b 11 -177 0 -191 0 -191 b 75 -81 29 -154 52 -120 b 119 -3 93 -52 102 -36 b 127 12 123 5 127 12 b 176 111 133 23 167 92 b 186 135 178 117 183 127 b 213 197 193 149 194 152 b 224 213 218 207 220 210 z',\n    },\n    noteheadDiamondWhole: {\n      x_min: 0,\n      x_max: 462,\n      y_min: -138,\n      y_max: 138,\n      ha: 277,\n      o: 'm 326 198 b 333 199 328 199 330 199 b 350 189 340 199 342 198 b 638 20 417 112 517 53 b 654 16 645 19 652 17 b 666 0 662 14 666 7 b 654 -16 666 -7 662 -14 b 638 -20 652 -17 645 -19 b 352 -186 518 -53 419 -110 b 333 -199 342 -198 340 -199 b 316 -189 326 -199 324 -198 b 28 -20 249 -112 149 -53 b 12 -16 21 -19 14 -17 b 0 0 4 -14 0 -7 b 12 16 0 7 4 14 b 28 20 14 17 21 19 b 316 189 149 53 249 112 b 326 198 321 194 324 197 z m 338 143 b 333 149 335 146 333 149 b 328 143 333 149 331 146 b 172 4 290 85 233 35 b 165 0 168 2 165 0 b 172 -4 165 0 168 -2 b 328 -143 233 -35 290 -85 b 333 -149 331 -147 332 -149 b 335 -146 334 -149 334 -148 b 494 -4 370 -91 432 -35 b 501 0 498 -2 501 0 b 494 4 501 0 498 2 b 338 143 433 35 376 85 z',\n    },\n    noteheadDiamondHalf: {\n      x_min: 0,\n      x_max: 322,\n      y_min: -138,\n      y_max: 138,\n      ha: 277,\n      o: 'm 225 198 b 232 199 227 199 229 199 b 251 183 240 199 243 197 b 445 19 295 109 362 52 b 464 0 461 13 464 10 b 447 -18 464 -9 460 -13 b 251 -183 365 -49 294 -109 b 232 -199 243 -197 240 -199 b 213 -183 224 -199 221 -197 b 19 -19 169 -109 102 -52 b 0 0 3 -13 0 -10 b 17 18 0 9 3 13 b 213 183 99 50 169 109 b 225 198 218 193 221 196 z m 255 119 b 251 122 253 121 252 122 b 244 114 250 122 249 120 b 98 -17 208 61 151 10 l 95 -19 l 98 -21 b 211 -120 138 -44 176 -78 b 213 -123 212 -122 212 -123 b 213 -122 213 -123 213 -122 b 366 17 244 -72 311 -11 l 369 19 l 366 21 b 255 119 327 44 283 82 z',\n    },\n    noteheadDiamondBlack: {\n      x_min: 0,\n      x_max: 322,\n      y_min: -138,\n      y_max: 138,\n      ha: 277,\n      o: 'm 225 198 b 232 199 227 199 229 199 b 253 180 241 199 243 197 b 444 19 297 107 363 52 b 464 0 461 13 464 10 b 444 -19 464 -10 461 -13 b 253 -180 363 -52 297 -107 b 232 -199 243 -197 241 -199 b 211 -180 223 -199 221 -197 b 19 -19 167 -107 101 -52 b 0 0 3 -13 0 -10 b 19 19 0 10 3 13 b 211 180 101 52 167 107 b 225 198 219 194 221 196 z',\n    },\n    augmentationDot: {\n      x_min: -63,\n      x_max: 63,\n      y_min: -63,\n      y_max: 63,\n      ha: 126,\n      o: 'm -18 89 b 0 90 -12 90 -6 90 b 90 0 49 90 90 49 b 89 -18 90 -6 90 -12 b -1 -90 79 -64 39 -90 b -70 -57 -26 -90 -52 -80 b -90 -1 -84 -40 -90 -20 b -18 89 -90 40 -63 79 z',\n    },\n    tremolo1: {\n      x_min: -252,\n      x_max: 216,\n      y_min: -185,\n      y_max: 148,\n      ha: 333,\n      o: 'm 265 211 b 275 213 269 212 272 213 b 311 175 295 213 311 194 b 301 151 311 166 308 158 b 243 110 297 147 295 145 b 175 64 224 97 194 77 b 107 18 156 52 126 31 b 40 -27 89 6 58 -15 b -28 -73 21 -40 -9 -60 b -95 -119 -46 -86 -77 -106 b -162 -164 -113 -131 -144 -152 b -230 -210 -181 -177 -211 -197 b -285 -247 -249 -223 -274 -240 b -310 -263 -297 -255 -308 -263 b -326 -267 -315 -266 -321 -267 b -363 -230 -346 -267 -363 -250 b -357 -212 -363 -224 -361 -218 b -309 -174 -353 -205 -350 -202 b -203 -103 -287 -160 -240 -128 b -68 -11 -167 -78 -106 -37 b 67 80 -30 14 31 55 b 194 166 104 105 161 143 b 265 211 255 207 259 210 z',\n    },\n    flag8thUp: {\n      x_min: -17,\n      x_max: 234,\n      y_min: -745,\n      y_max: -4,\n      ha: 741,\n      o: 'm -25 -167 l -25 -5 l -21 -5 b 1 -29 -9 -5 -3 -12 b 183 -326 32 -144 91 -241 b 336 -686 285 -421 336 -551 b 219 -1028 336 -802 298 -923 b 172 -1072 191 -1065 183 -1072 b 150 -1052 158 -1072 150 -1063 b 158 -1032 150 -1046 153 -1039 b 284 -707 241 -935 284 -818 b 185 -446 284 -610 251 -517 b -24 -328 144 -402 72 -361 b -25 -167 -24 -328 -25 -295 z',\n    },\n    flag8thDown: {\n      x_min: -15,\n      x_max: 271,\n      y_min: 4,\n      y_max: 745,\n      ha: 741,\n      o: 'm 242 1071 b 252 1073 246 1072 249 1073 b 277 1051 260 1073 267 1066 b 390 687 352 938 390 810 b 343 464 390 609 374 533 b 248 331 319 413 285 365 b 60 125 166 256 110 194 b 0 21 35 90 10 47 b -19 5 -4 11 -12 5 l -22 5 l -22 167 l -22 328 l -17 328 b 105 350 13 328 69 338 b 334 722 241 396 334 547 b 240 1027 334 826 301 934 b 229 1050 230 1041 229 1044 b 242 1071 229 1060 234 1068 z',\n    },\n    flag16thUp: {\n      x_min: -17,\n      x_max: 234,\n      y_min: -847,\n      y_max: -4,\n      ha: 843,\n      o: 'm -25 -151 l -25 -5 l -21 -5 b 0 -23 -11 -5 -5 -11 b 208 -289 31 -96 103 -189 b 336 -592 292 -369 336 -477 b 311 -740 336 -641 328 -691 l 308 -751 l 312 -762 b 336 -906 328 -808 336 -857 b 241 -1185 336 -1004 304 -1103 b 202 -1220 218 -1215 213 -1220 b 180 -1198 188 -1220 180 -1210 b 187 -1181 180 -1193 182 -1187 b 286 -923 252 -1106 286 -1015 b 283 -873 286 -906 285 -890 b 278 -844 281 -861 279 -849 b 274 -830 277 -842 276 -836 b 152 -651 255 -758 210 -692 b -10 -612 119 -628 51 -612 b -22 -611 -16 -612 -21 -612 l -25 -611 l -25 -465 l -25 -319 l -21 -319 b 0 -336 -11 -319 -5 -325 b 207 -602 31 -410 105 -504 b 275 -685 235 -628 260 -658 b 277 -688 276 -687 277 -688 b 280 -680 278 -688 279 -685 b 286 -609 284 -657 286 -633 b 280 -541 286 -586 284 -563 b 278 -530 280 -537 279 -532 b 274 -516 277 -528 276 -522 b 152 -337 255 -444 210 -378 b -10 -298 119 -315 51 -298 b -22 -298 -16 -298 -21 -298 l -25 -297 z',\n    },\n    flag16thDown: {\n      x_min: -15,\n      x_max: 267,\n      y_min: 4,\n      y_max: 745,\n      ha: 741,\n      o: 'm 319 1071 b 328 1073 322 1072 325 1073 b 350 1054 337 1073 344 1067 b 384 901 373 1008 384 955 b 360 766 384 856 376 810 l 356 756 l 360 745 b 384 615 376 703 384 659 b 273 336 384 516 346 416 b 217 282 258 319 241 302 b -1 19 125 204 42 104 b -19 5 -5 11 -13 5 l -22 5 l -22 146 l -22 287 l -12 288 b 212 369 90 304 162 330 b 339 620 294 433 339 524 b 330 691 339 644 336 668 l 329 699 l 323 690 b 217 569 296 645 265 610 b -1 305 125 491 42 390 b -19 292 -5 297 -13 292 l -22 292 l -22 433 l -22 573 l -12 575 b 194 643 78 589 147 611 b 339 908 286 704 339 806 b 313 1030 339 950 330 991 b 306 1050 306 1045 306 1045 b 319 1071 306 1060 311 1068 z',\n    },\n    flag32ndUp: {\n      x_min: -17,\n      x_max: 233,\n      y_min: -1005,\n      y_max: 96,\n      ha: 1101,\n      o: 'm -25 -6 l -25 139 l -21 139 b 1 121 -11 139 -6 134 b 172 -93 31 61 97 -21 b 201 -121 182 -103 195 -115 b 328 -375 266 -184 311 -274 b 335 -464 333 -404 335 -434 b 317 -612 335 -513 329 -564 l 313 -626 l 315 -632 b 328 -689 320 -647 325 -670 b 335 -778 333 -717 335 -747 b 317 -926 335 -827 329 -878 l 313 -940 l 315 -946 b 328 -1002 320 -961 325 -984 b 335 -1092 333 -1032 335 -1062 b 280 -1346 335 -1177 316 -1264 b 228 -1441 265 -1380 236 -1432 b 213 -1447 224 -1445 218 -1447 b 191 -1425 202 -1447 191 -1438 b 198 -1406 191 -1419 192 -1416 b 284 -1118 254 -1317 284 -1215 b 281 -1072 284 -1103 283 -1087 b 118 -798 269 -948 207 -844 b 6 -778 93 -785 60 -779 l -25 -778 l -25 -634 l -25 -489 l -21 -489 b 1 -507 -11 -489 -6 -494 b 172 -720 31 -567 97 -649 b 275 -848 229 -774 249 -800 l 281 -858 l 282 -849 b 284 -806 283 -834 284 -820 b 118 -484 284 -663 220 -537 b 6 -465 93 -471 60 -465 l -25 -464 l -25 -320 l -25 -175 l -21 -175 b 1 -193 -11 -175 -6 -180 b 172 -406 31 -253 97 -335 b 275 -534 229 -460 249 -486 l 281 -544 l 282 -535 b 284 -492 283 -521 284 -506 b 118 -170 284 -349 220 -223 b 6 -151 93 -157 60 -151 l -25 -151 z',\n    },\n    flag32ndDown: {\n      x_min: -15,\n      x_max: 270,\n      y_min: -96,\n      y_max: 895,\n      ha: 991,\n      o: 'm 292 1287 b 300 1288 294 1288 297 1288 b 309 1287 303 1288 306 1288 b 374 1151 324 1281 359 1209 b 388 1039 383 1115 388 1077 b 368 904 388 993 381 947 l 365 896 l 368 886 b 374 864 370 881 372 871 b 388 752 383 828 388 790 b 368 618 388 706 381 660 l 365 609 l 368 599 b 374 578 370 594 372 584 b 388 467 384 541 388 504 b 236 128 388 339 334 215 b 201 99 226 119 226 119 b 0 -122 110 27 36 -55 b -19 -139 -5 -133 -12 -139 l -22 -139 l -22 0 l -22 138 l -16 138 b 200 215 66 150 144 178 b 340 485 287 273 340 376 b 336 531 340 501 339 516 l 335 540 l 333 537 b 236 415 306 488 275 449 b 201 385 226 406 226 405 b 0 164 110 313 36 231 b -19 148 -5 153 -12 148 l -22 148 l -22 286 l -22 424 l -16 425 b 200 501 66 437 144 464 b 340 772 287 559 340 663 b 336 818 340 787 339 803 l 335 827 l 333 823 b 236 701 306 774 275 735 b 201 672 226 692 226 692 b 0 451 110 600 36 518 b -19 434 -5 440 -12 434 l -22 434 l -22 572 l -22 711 l -16 711 b 219 802 77 725 165 759 b 339 1058 298 865 339 959 b 286 1246 339 1122 322 1187 b 278 1267 279 1258 278 1260 b 292 1287 278 1276 284 1284 z',\n    },\n    flag64thUp: {\n      x_min: -17,\n      x_max: 233,\n      y_min: -933,\n      y_max: 296,\n      ha: 1230,\n      o: 'm -25 282 l -25 427 l -21 427 b 2 404 -9 427 -4 421 b 148 203 25 333 72 268 b 313 -42 230 134 277 64 b 335 -182 328 -86 335 -134 b 309 -332 335 -233 327 -284 l 307 -339 l 312 -354 b 335 -496 328 -399 335 -447 b 309 -646 335 -547 327 -598 l 307 -653 l 312 -668 b 335 -809 328 -713 335 -761 b 309 -960 335 -860 327 -911 l 307 -966 l 312 -981 b 335 -1122 328 -1027 335 -1075 b 288 -1325 335 -1191 320 -1260 b 265 -1344 281 -1340 276 -1344 b 243 -1322 252 -1344 243 -1335 b 251 -1300 243 -1317 243 -1316 b 289 -1125 276 -1244 289 -1184 b 173 -854 289 -1018 248 -915 b 34 -798 127 -816 83 -798 b -9 -802 20 -798 5 -800 b -21 -804 -14 -803 -20 -804 l -25 -804 l -25 -659 l -25 -515 l -21 -515 b 2 -537 -9 -515 -4 -520 b 148 -738 25 -609 72 -673 b 274 -892 204 -785 247 -838 b 279 -900 277 -898 279 -900 b 280 -898 280 -900 280 -899 b 282 -886 280 -897 281 -892 b 289 -811 287 -861 289 -836 b 173 -540 289 -703 246 -600 b 34 -484 127 -502 83 -484 b -9 -489 20 -484 5 -486 b -21 -490 -14 -489 -20 -490 l -25 -490 l -25 -346 l -25 -201 l -21 -201 b 2 -224 -9 -201 -4 -207 b 148 -424 25 -295 72 -360 b 274 -578 204 -471 247 -524 b 279 -586 277 -584 279 -586 b 280 -584 280 -586 280 -585 b 282 -573 280 -583 281 -578 b 289 -497 287 -548 289 -522 b 173 -226 289 -389 246 -286 b 34 -171 127 -188 83 -171 b -9 -175 20 -171 5 -172 b -21 -176 -14 -176 -20 -176 l -25 -176 l -25 -32 l -25 113 l -21 113 b 2 90 -9 113 -4 107 b 148 -110 25 19 72 -46 b 274 -264 204 -158 247 -210 b 279 -272 277 -270 279 -272 b 280 -270 280 -272 280 -272 b 282 -259 280 -269 281 -264 b 289 -184 287 -234 289 -208 b 173 88 289 -75 246 28 b 34 143 127 125 83 143 b -9 139 20 143 5 142 b -21 137 -14 138 -20 137 l -25 137 z',\n    },\n    flag64thDown: {\n      x_min: -15,\n      x_max: 271,\n      y_min: -296,\n      y_max: 820,\n      ha: 1116,\n      o: 'm 272 1179 b 281 1181 275 1180 278 1181 b 297 1174 286 1181 292 1178 b 359 1098 322 1154 344 1127 b 390 972 380 1059 390 1016 b 357 836 390 926 379 879 l 351 825 l 353 823 b 359 812 354 822 357 817 b 390 685 380 773 390 729 b 357 549 390 639 379 593 l 351 539 l 353 536 b 359 526 354 535 357 530 b 390 399 380 486 390 443 b 357 263 390 353 379 306 l 351 252 l 353 250 b 390 113 374 218 390 162 b 390 113 390 113 390 113 b 246 -148 390 9 339 -84 b -1 -411 129 -228 30 -334 b -18 -426 -4 -420 -11 -426 l -22 -427 l -22 -291 l -22 -156 l -13 -155 b 156 -124 51 -152 115 -140 b 338 126 266 -80 338 23 b 326 195 338 150 334 173 b 321 207 324 204 323 207 b 318 203 321 207 319 205 b 246 139 299 180 276 159 b -1 -125 129 59 30 -48 b -18 -140 -4 -134 -11 -139 l -22 -140 l -22 -5 l -22 131 l -13 131 b 156 163 51 134 115 146 b 338 413 266 206 338 310 b 326 482 338 436 334 459 b 321 493 324 490 323 493 b 318 489 321 493 319 492 b 246 425 299 466 276 446 b -1 162 129 345 30 239 b -18 147 -4 153 -11 147 l -22 146 l -22 282 l -22 417 l -13 418 b 156 449 51 421 115 433 b 338 699 266 493 338 596 b 326 768 338 723 334 746 b 321 780 324 777 323 780 b 318 776 320 780 319 778 b 246 712 299 753 276 732 b -1 448 129 632 30 525 b -19 433 -4 439 -11 434 l -22 433 l -22 568 l -22 704 l -13 704 b 156 736 51 707 115 719 b 338 985 264 778 337 879 l 338 985 b 272 1137 338 1045 313 1103 b 259 1159 262 1146 259 1150 b 272 1179 259 1168 265 1176 z',\n    },\n    flag128thUp: {\n      x_min: -17,\n      x_max: 231,\n      y_min: -987,\n      y_max: 496,\n      ha: 1484,\n      o: 'm -25 582 l -25 715 l -21 715 b 3 693 -11 715 -6 710 b 150 501 30 639 82 570 b 237 396 191 459 212 434 b 333 93 300 302 333 195 b 311 -46 333 45 326 -2 b 307 -60 308 -54 307 -57 b 310 -72 307 -63 308 -65 b 332 -220 325 -121 332 -171 b 311 -359 332 -269 325 -316 b 307 -374 308 -368 307 -371 b 310 -386 307 -377 308 -379 b 332 -534 325 -434 332 -485 b 311 -673 332 -583 325 -630 b 307 -688 308 -682 307 -685 b 310 -700 307 -690 308 -693 b 332 -848 325 -748 332 -799 b 311 -987 332 -896 325 -944 b 307 -1001 308 -995 307 -998 b 310 -1013 307 -1004 308 -1007 b 333 -1161 325 -1062 333 -1113 b 268 -1391 333 -1246 311 -1326 b 235 -1422 251 -1417 246 -1422 b 213 -1402 221 -1422 213 -1413 b 220 -1382 213 -1396 215 -1389 b 286 -1176 265 -1322 286 -1250 b 163 -883 286 -1073 244 -966 b -16 -806 122 -841 54 -812 b -23 -805 -19 -806 -22 -806 l -25 -805 l -25 -673 l -25 -541 l -21 -541 b 3 -562 -11 -541 -6 -545 b 150 -754 30 -617 82 -685 b 273 -921 209 -814 242 -860 l 280 -933 l 281 -927 b 287 -861 285 -906 287 -884 b 163 -569 287 -756 243 -650 b -16 -492 122 -527 54 -498 b -23 -492 -19 -492 -22 -492 l -25 -491 l -25 -359 l -25 -227 l -21 -227 b 3 -248 -11 -227 -6 -231 b 150 -441 30 -303 82 -372 b 273 -608 209 -500 242 -546 l 280 -620 l 281 -614 b 287 -548 285 -592 287 -570 b 163 -255 287 -442 243 -336 b -16 -179 122 -213 54 -184 b -23 -178 -19 -178 -22 -178 l -25 -178 l -25 -45 l -25 87 l -21 87 b 3 66 -11 87 -6 83 b 150 -127 30 11 82 -58 b 273 -294 209 -186 242 -232 l 280 -306 l 281 -300 b 287 -234 285 -278 287 -256 b 163 59 287 -129 243 -23 b -16 135 122 100 54 129 b -23 136 -19 135 -22 136 l -25 136 l -25 268 l -25 401 l -21 401 b 3 379 -11 401 -6 397 b 150 187 30 325 82 256 b 273 20 209 127 242 82 l 280 8 l 281 14 b 287 80 285 36 287 58 b 163 372 287 185 243 291 b -16 449 122 414 54 443 b -23 450 -19 449 -22 449 l -25 450 z',\n    },\n    flag128thDown: {\n      x_min: -15,\n      x_max: 270,\n      y_min: -496,\n      y_max: 870,\n      ha: 1366,\n      o: 'm 292 1251 b 301 1253 295 1252 298 1253 b 325 1235 309 1253 316 1247 b 389 1031 368 1174 389 1103 b 364 898 389 986 381 941 l 359 888 l 364 876 b 389 745 381 834 389 789 b 364 612 389 700 381 654 l 359 601 l 364 589 b 389 458 381 547 389 503 b 364 325 389 413 381 368 l 359 315 l 364 303 b 389 172 381 261 389 216 b 364 39 389 127 381 81 l 359 28 l 364 16 b 390 -115 381 -26 390 -71 b 260 -391 390 -219 344 -320 b 0 -698 135 -495 36 -613 b -19 -715 -5 -709 -11 -715 l -22 -715 l -22 -582 l -21 -449 l -14 -447 b 124 -400 25 -439 79 -420 b 213 -349 168 -379 189 -367 b 340 -101 294 -288 340 -196 b 332 -36 340 -79 337 -57 b 330 -27 331 -30 331 -27 b 326 -31 329 -27 328 -29 b 260 -104 309 -57 286 -82 b 0 -412 135 -209 36 -326 b -19 -428 -5 -422 -11 -428 l -22 -428 l -22 -295 l -21 -162 l -14 -161 b 124 -113 25 -153 79 -134 b 213 -63 168 -92 189 -81 b 340 186 294 -2 340 91 b 332 251 340 207 337 229 b 330 259 331 257 331 259 b 326 255 329 259 328 258 b 260 182 309 229 286 204 b 0 -125 135 78 36 -40 b -19 -142 -5 -136 -11 -142 l -22 -142 l -22 -9 l -21 124 l -14 126 b 124 173 25 134 79 152 b 213 224 168 194 189 206 b 340 472 294 285 340 377 b 332 537 340 494 337 516 b 330 546 331 543 331 546 b 326 542 329 546 328 544 b 255 465 307 514 286 491 b 0 161 135 364 35 245 b -19 145 -4 151 -11 145 l -22 145 l -22 278 l -21 411 l -14 412 b 124 460 25 420 79 439 b 213 510 168 481 189 492 b 340 759 294 571 340 664 b 332 824 340 780 337 802 b 330 832 331 830 331 832 b 326 828 329 832 328 831 b 255 751 308 801 286 777 b 0 448 135 650 35 532 b -19 431 -4 437 -11 431 l -22 431 l -22 564 l -21 697 l -14 699 b 124 746 25 707 79 725 b 213 797 168 767 189 779 b 340 1046 295 859 340 953 b 285 1213 340 1105 322 1163 b 278 1232 281 1220 278 1226 b 292 1251 278 1241 283 1248 z',\n    },\n    accidentalFlat: {\n      x_min: -15,\n      x_max: 185,\n      y_min: -165,\n      y_max: 457,\n      ha: 622,\n      o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 398 22 640 22 640 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 l -22 -220 l -22 210 l -22 640 l -20 644 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n    },\n    accidentalNatural: {\n      x_min: 0,\n      x_max: 176,\n      y_min: -334,\n      y_max: 334,\n      ha: 667,\n      o: 'm 13 479 b 21 480 16 480 19 480 b 42 467 30 480 39 475 b 44 339 44 463 44 462 b 44 214 44 250 44 214 b 136 237 45 214 86 224 b 234 259 209 255 227 259 b 240 258 237 259 238 259 b 252 246 245 256 251 251 l 254 242 l 254 -111 l 254 -463 l 252 -467 b 232 -480 249 -475 241 -480 b 216 -474 226 -480 221 -478 b 210 -392 211 -468 210 -477 b 210 -336 210 -377 210 -358 b 209 -209 210 -245 210 -209 b 117 -231 209 -209 168 -219 b 19 -254 45 -249 27 -254 b 13 -252 17 -254 15 -253 b 1 -240 8 -251 3 -245 l 0 -237 l 0 113 l 0 463 l 1 467 b 13 479 3 472 8 477 z m 210 23 b 210 74 210 44 210 61 b 209 121 210 118 210 121 l 209 121 b 126 101 208 121 171 112 l 44 81 l 44 -18 b 44 -62 44 -35 44 -50 b 44 -116 44 -104 44 -116 b 128 -96 45 -116 82 -107 l 210 -75 z',\n    },\n    accidentalSharp: {\n      x_min: 0,\n      x_max: 239,\n      y_min: -388,\n      y_max: 388,\n      ha: 775,\n      o: 'm 232 557 b 240 558 234 558 237 558 b 261 545 249 558 258 553 b 262 405 262 541 262 540 b 263 269 262 278 262 269 b 263 269 263 269 263 269 b 322 282 275 273 319 282 b 343 269 331 282 340 277 b 344 217 344 266 344 241 b 343 165 344 192 344 168 b 295 144 339 155 337 154 l 262 136 l 262 22 b 263 -91 262 -83 262 -91 b 263 -91 263 -91 263 -91 b 322 -78 275 -88 319 -78 b 338 -84 329 -78 333 -80 b 344 -129 344 -90 344 -88 b 344 -143 344 -133 344 -138 b 344 -157 344 -148 344 -153 b 338 -203 344 -198 344 -197 b 295 -217 333 -207 333 -207 l 262 -225 l 262 -362 b 261 -504 262 -499 262 -500 b 240 -517 258 -512 249 -517 b 225 -511 235 -517 229 -515 b 218 -430 219 -505 218 -514 b 218 -368 218 -413 218 -393 b 218 -235 218 -295 218 -235 b 171 -247 218 -235 197 -241 b 123 -259 145 -253 123 -259 b 123 -400 123 -259 123 -322 b 122 -545 123 -540 123 -541 b 101 -558 118 -553 110 -558 b 86 -552 95 -558 90 -556 b 79 -469 80 -546 79 -556 b 79 -405 79 -452 79 -431 b 78 -270 79 -279 79 -270 b 78 -270 78 -270 78 -270 b 22 -282 65 -273 25 -282 b 2 -269 13 -282 5 -277 b 0 -217 1 -266 0 -242 b 2 -165 0 -192 1 -168 b 48 -144 5 -155 7 -154 l 79 -136 l 79 -23 b 78 90 79 83 79 90 b 78 90 78 90 78 90 b 22 78 65 87 25 78 b 2 91 13 78 5 83 b 0 143 1 94 0 119 b 2 195 0 168 1 192 b 48 216 5 205 7 206 l 79 224 l 79 362 b 81 504 79 499 79 500 b 101 517 84 512 93 517 b 117 511 107 517 112 515 b 123 430 123 505 123 515 b 123 367 123 413 123 392 b 123 235 123 294 123 235 b 171 246 123 235 145 240 b 218 258 197 253 218 258 b 218 399 218 258 218 322 b 220 545 218 540 218 541 b 232 557 222 549 227 555 z m 218 11 b 218 125 218 102 218 125 l 218 125 b 201 121 217 125 210 123 b 154 109 193 119 171 113 l 123 102 l 123 -12 b 123 -126 123 -74 123 -126 b 171 -114 123 -126 145 -120 b 218 -102 197 -107 218 -102 b 218 11 218 -102 218 -51 z',\n    },\n    accidentalDoubleSharp: {\n      x_min: 0,\n      x_max: 271,\n      y_min: -135,\n      y_max: 135,\n      ha: 271,\n      o: 'm 0 130 l 0 195 l 65 195 l 131 195 l 131 145 l 131 96 l 163 64 l 195 32 l 227 64 l 259 96 l 259 145 l 259 195 l 325 195 l 390 195 l 390 130 l 390 64 l 341 64 l 291 64 l 259 32 l 227 0 l 259 -32 l 291 -64 l 341 -64 l 390 -64 l 390 -130 l 390 -195 l 325 -195 l 259 -195 l 259 -145 l 259 -96 l 227 -64 l 195 -32 l 163 -64 l 131 -96 l 131 -145 l 131 -195 l 65 -195 l 0 -195 l 0 -130 l 0 -64 l 50 -64 l 99 -64 l 131 -32 l 163 0 l 131 32 l 99 64 l 50 64 l 0 64 z',\n    },\n    accidentalDoubleFlat: {\n      x_min: -15,\n      x_max: 356,\n      y_min: -165,\n      y_max: 457,\n      ha: 622,\n      o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 398 22 640 22 640 l 22 155 l 24 158 b 149 208 64 191 109 208 b 220 187 175 208 200 201 l 223 184 l 224 413 l 224 642 l 226 645 b 246 657 229 653 237 657 b 266 644 254 657 263 653 b 267 398 267 640 267 640 l 267 155 l 270 158 b 392 208 309 191 351 208 b 440 200 408 208 424 205 b 512 89 486 183 512 140 b 488 1 512 61 505 30 b 352 -148 466 -41 436 -73 b 271 -222 307 -188 297 -198 b 246 -237 256 -236 254 -237 b 230 -231 239 -237 234 -236 b 224 -164 224 -225 224 -232 b 224 -125 224 -153 224 -140 l 224 -29 l 218 -36 b 107 -148 194 -67 170 -91 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 l -22 -220 l -22 210 l -22 640 l -20 644 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z m 364 137 b 347 139 360 138 352 139 b 342 139 345 139 343 139 b 272 92 315 135 290 118 l 267 84 l 267 -39 l 267 -161 l 271 -157 b 399 88 349 -73 399 24 b 397 107 399 95 398 101 b 364 137 394 122 382 134 z',\n    },\n    accidentalParensLeft: {\n      x_min: -122,\n      x_max: -19,\n      y_min: -267,\n      y_max: 267,\n      ha: 534,\n      o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n    },\n    accidentalParensRight: {\n      x_min: 19,\n      x_max: 122,\n      y_min: -267,\n      y_max: 267,\n      ha: 535,\n      o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n    },\n    accidentalQuarterToneFlatStein: {\n      x_min: 0,\n      x_max: 200,\n      y_min: -165,\n      y_max: 457,\n      ha: 622,\n      o: 'm 258 656 b 266 658 261 657 264 658 b 287 644 275 658 284 652 l 289 640 l 289 210 l 289 -220 l 287 -224 b 267 -237 284 -232 276 -237 b 241 -222 258 -237 256 -236 b 163 -151 216 -199 200 -183 b 24 2 78 -75 47 -41 b 0 88 8 31 0 61 b 73 200 0 140 26 183 b 120 208 88 205 104 208 b 242 158 161 208 203 191 l 245 155 l 245 398 b 246 644 245 640 245 640 b 258 656 248 649 253 654 z m 179 137 b 159 139 174 138 165 139 b 155 139 157 139 156 139 b 115 107 131 134 118 124 b 113 88 114 101 113 95 b 241 -157 113 24 163 -73 l 245 -161 l 245 -39 l 245 84 l 240 92 b 179 137 224 116 203 131 z',\n    },\n    accidentalThreeQuarterTonesFlatZimmermann: {\n      x_min: 0,\n      x_max: 446,\n      y_min: -165,\n      y_max: 457,\n      ha: 622,\n      o: 'm 258 656 b 266 658 261 657 264 658 b 287 644 275 658 284 652 l 289 640 l 289 210 l 289 -220 l 287 -224 b 267 -237 284 -232 276 -237 b 241 -222 258 -237 256 -236 b 163 -151 216 -199 200 -183 b 24 2 78 -75 47 -41 b 0 88 8 31 0 61 b 73 200 0 140 26 183 b 120 208 88 205 104 208 b 242 158 161 208 203 191 l 245 155 l 245 398 b 246 644 245 640 245 640 b 258 656 248 649 253 654 z m 179 137 b 159 139 174 138 165 139 b 155 139 157 139 156 139 b 115 107 131 134 118 124 b 113 88 114 101 113 95 b 241 -157 113 24 163 -73 l 245 -161 l 245 -39 l 245 84 l 240 92 b 179 137 224 116 203 131 z m 367 656 b 375 658 370 657 373 658 b 396 644 384 658 393 652 b 398 398 398 640 398 640 l 398 155 l 400 158 b 522 208 440 191 482 208 b 570 200 538 208 554 205 b 643 89 617 183 643 140 b 619 1 643 61 635 30 b 483 -148 596 -41 566 -73 b 401 -222 438 -188 427 -198 b 376 -237 386 -236 384 -237 b 355 -224 366 -237 358 -232 l 354 -220 l 354 210 l 354 640 l 355 644 b 367 656 357 649 362 654 z m 495 137 b 477 139 491 138 482 139 b 472 139 475 139 473 139 b 403 92 445 135 420 118 l 398 84 l 398 -39 l 398 -161 l 401 -157 b 529 88 479 -73 529 24 b 528 107 529 95 529 101 b 495 137 525 122 512 134 z',\n    },\n    accidentalQuarterToneSharpStein: {\n      x_min: 0,\n      x_max: 142,\n      y_min: -373,\n      y_max: 373,\n      ha: 747,\n      o: 'm 92 536 b 101 538 95 537 98 538 b 122 524 110 538 118 532 b 123 390 123 520 123 519 l 123 259 l 151 268 b 182 277 175 276 178 277 b 184 277 183 277 183 277 b 203 265 193 276 199 272 l 204 262 l 205 213 b 205 187 205 202 205 194 b 201 154 205 159 204 159 b 158 136 197 149 194 148 l 123 125 l 123 10 b 124 -104 123 -64 123 -104 b 150 -94 124 -104 136 -100 b 179 -85 164 -89 177 -85 b 183 -84 181 -84 182 -84 b 203 -98 192 -84 200 -90 b 205 -157 204 -101 205 -130 b 204 -201 205 -179 205 -199 b 158 -226 200 -211 199 -212 l 123 -239 l 123 -380 l 123 -522 l 121 -525 b 101 -538 117 -533 109 -538 b 85 -531 95 -538 90 -536 b 79 -450 80 -526 79 -535 b 79 -387 79 -433 79 -413 b 79 -254 79 -314 79 -254 b 54 -263 79 -254 67 -258 b 19 -273 36 -270 26 -273 b 6 -267 14 -273 10 -271 b 0 -222 0 -261 0 -263 b 0 -207 0 -217 0 -213 b 0 -195 0 -203 0 -199 b 6 -148 0 -152 0 -154 b 47 -131 10 -144 10 -144 l 79 -120 l 79 -5 b 79 110 79 58 79 110 b 53 101 79 110 67 106 b 19 93 35 95 25 93 b 6 99 14 93 10 95 b 0 144 0 105 0 103 b 0 158 0 148 0 153 b 0 185 0 169 0 178 b 45 233 0 222 3 219 l 79 244 l 79 382 b 81 524 79 519 79 520 b 92 536 82 529 88 534 z',\n    },\n    accidentalThreeQuarterTonesSharpStein: {\n      x_min: 0,\n      x_max: 335,\n      y_min: -391,\n      y_max: 391,\n      ha: 782,\n      o: 'm 373 562 b 379 563 375 563 377 563 b 399 551 388 563 395 559 l 401 548 l 401 410 l 401 272 l 403 273 b 432 278 403 273 417 275 b 463 282 448 281 457 282 b 477 276 470 282 473 280 b 483 241 482 271 483 271 b 483 216 483 234 483 226 l 483 167 l 481 164 b 471 153 479 160 475 155 b 402 140 469 152 405 140 b 401 25 401 140 401 88 l 401 -91 l 403 -90 b 432 -85 403 -90 417 -88 b 463 -80 448 -82 457 -80 b 477 -87 470 -80 473 -83 b 483 -122 482 -92 483 -91 b 483 -147 483 -128 483 -137 l 483 -196 l 481 -199 b 471 -209 479 -203 475 -207 b 402 -223 469 -210 405 -223 b 401 -359 401 -223 401 -284 l 401 -496 l 399 -500 b 379 -512 395 -507 388 -512 b 359 -500 371 -512 363 -507 l 357 -496 l 357 -363 b 356 -231 357 -240 357 -231 b 356 -231 356 -231 356 -231 b 309 -240 356 -232 334 -235 l 262 -249 l 262 -384 b 262 -448 262 -410 262 -431 b 256 -531 262 -535 261 -526 b 240 -538 251 -536 246 -538 b 220 -525 232 -538 224 -533 l 219 -522 l 218 -389 l 218 -257 l 171 -265 b 123 -274 144 -270 123 -274 b 123 -411 123 -274 123 -336 l 122 -548 l 121 -551 b 101 -563 116 -559 109 -563 b 81 -551 93 -563 85 -559 l 79 -548 l 79 -415 b 79 -282 79 -342 79 -282 b 52 -287 78 -282 66 -285 b 20 -292 36 -290 26 -292 b 6 -286 13 -292 10 -290 b 0 -241 0 -280 0 -282 b 0 -226 0 -236 0 -232 b 0 -212 0 -221 0 -216 b 6 -167 0 -171 0 -173 b 48 -155 11 -162 13 -162 l 79 -150 l 79 -35 b 79 80 79 29 79 80 b 52 76 78 80 66 78 b 20 71 36 73 26 71 b 6 77 13 71 10 73 b 0 122 0 83 0 81 b 0 136 0 126 0 131 b 0 151 0 142 0 146 b 6 196 0 192 0 190 b 48 207 11 201 13 201 l 79 213 l 79 354 l 79 496 l 81 500 b 101 512 85 508 93 512 b 121 500 109 512 116 508 l 122 497 l 123 359 l 123 221 l 171 230 b 218 239 197 235 218 239 b 218 380 218 239 218 302 b 220 524 218 519 218 520 b 240 538 223 533 231 538 b 256 531 246 538 251 536 b 262 448 261 526 262 535 b 262 384 262 431 262 410 b 263 247 262 295 262 247 b 310 255 263 247 284 251 b 357 264 335 260 357 264 b 358 406 357 264 357 328 l 358 548 l 359 551 b 373 562 362 557 367 561 z m 357 16 b 357 132 357 108 357 132 l 357 132 b 309 123 356 132 335 128 l 262 114 l 262 -1 b 263 -116 262 -76 262 -116 b 310 -107 263 -116 284 -112 b 357 -99 335 -103 357 -99 b 357 16 357 -99 357 -48 z m 218 -124 b 218 -56 218 -124 218 -96 b 218 -9 218 -42 218 -26 l 218 106 l 171 97 b 123 88 145 93 123 89 b 123 21 123 88 123 61 b 123 -27 123 6 123 -10 l 123 -142 l 170 -133 b 218 -124 196 -128 218 -124 z',\n    },\n    accidentalBuyukMucennebFlat: {\n      x_min: -125,\n      x_max: 185,\n      y_min: -165,\n      y_max: 457,\n      ha: 622,\n      o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 575 22 640 22 639 b 23 510 22 524 22 510 b 23 510 23 510 23 510 b 164 557 49 520 160 557 b 186 534 177 557 186 546 b 176 516 186 527 183 520 b 98 489 175 515 140 503 l 22 463 l 22 405 b 22 378 22 394 22 386 b 23 347 22 354 22 347 b 23 347 23 347 23 347 b 164 393 49 356 160 393 b 186 371 177 393 186 382 b 176 352 186 364 183 357 b 98 325 175 352 140 339 l 22 300 l 22 228 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 b -22 32 -22 -220 -22 -220 b -22 284 -22 171 -22 284 b -88 262 -23 284 -52 274 b -160 240 -141 245 -154 240 b -167 241 -163 240 -164 241 b -180 262 -175 245 -180 254 b -169 281 -180 270 -176 278 b -30 329 -168 282 -92 308 l -22 332 l -22 390 b -22 448 -22 422 -22 448 b -88 426 -23 448 -52 438 b -160 404 -141 408 -154 404 b -167 405 -163 404 -164 404 b -180 426 -175 408 -180 417 b -169 445 -180 434 -176 441 b -30 493 -168 446 -92 472 l -22 495 l -22 568 b -20 644 -22 639 -22 641 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n    },\n    accidentalBuyukMucennebSharp: {\n      x_min: 0,\n      x_max: 284,\n      y_min: -388,\n      y_max: 388,\n      ha: 775,\n      o: 'm 264 557 b 272 558 267 558 269 558 b 293 545 281 558 290 553 b 294 435 294 541 294 540 b 295 329 294 337 294 329 b 296 329 296 329 296 329 b 355 342 308 333 351 342 b 375 329 364 342 372 337 b 376 277 376 326 376 302 b 375 225 376 252 376 228 b 327 204 371 215 369 214 l 294 196 l 294 142 b 295 89 294 94 294 89 b 296 89 295 89 296 89 b 389 110 314 94 384 110 b 389 110 389 110 389 110 b 407 98 397 110 403 105 l 409 95 l 409 45 b 409 25 409 37 409 30 b 404 -13 409 -11 408 -8 b 345 -32 400 -18 398 -19 b 295 -44 317 -39 295 -44 b 294 -98 294 -44 294 -68 b 295 -151 294 -147 294 -151 b 296 -151 295 -151 296 -151 b 355 -138 308 -148 351 -138 b 375 -151 364 -138 372 -143 b 376 -203 376 -154 376 -179 b 375 -255 376 -228 376 -252 b 327 -277 371 -265 369 -266 l 294 -285 l 294 -392 b 293 -504 294 -499 294 -500 b 272 -517 290 -512 281 -517 b 257 -511 267 -517 261 -515 b 251 -443 251 -505 251 -512 b 251 -398 251 -430 251 -416 b 250 -295 251 -341 251 -295 b 203 -307 250 -295 229 -301 b 156 -319 177 -313 156 -319 b 155 -430 155 -319 155 -369 b 154 -545 155 -540 155 -541 b 133 -558 151 -553 142 -558 b 118 -552 128 -558 122 -556 b 112 -482 112 -546 112 -553 b 112 -435 112 -469 112 -454 b 110 -330 112 -337 111 -330 b 110 -330 110 -330 110 -330 b 54 -342 98 -333 58 -342 b 34 -329 45 -342 37 -337 b 32 -277 33 -326 32 -302 b 34 -225 32 -252 33 -228 b 80 -204 38 -215 39 -214 l 112 -196 l 112 -143 b 111 -90 112 -94 111 -90 b 110 -90 110 -90 110 -90 b 20 -110 89 -96 25 -110 b 20 -110 20 -110 20 -110 b 2 -98 12 -110 5 -105 l 0 -95 l 0 -45 b 0 -25 0 -37 0 -30 b 5 13 0 11 0 8 b 62 32 9 18 10 19 b 111 44 89 38 111 44 b 112 97 111 44 112 68 b 111 150 112 146 111 150 b 110 150 110 150 110 150 b 54 138 98 147 58 138 b 34 151 45 138 37 143 b 32 203 33 154 32 179 b 34 255 32 228 33 252 b 80 276 38 265 39 266 l 112 284 l 112 392 b 113 504 112 499 112 500 b 133 517 116 512 125 517 b 149 511 139 517 145 515 b 155 443 155 505 155 512 b 155 397 155 430 155 415 b 155 295 155 341 155 295 b 203 306 156 295 177 300 b 250 318 229 313 250 318 b 251 429 251 318 251 368 b 252 545 251 540 251 541 b 264 557 254 549 259 555 z m 251 131 b 250 185 251 174 250 185 l 250 185 b 233 181 249 185 242 183 b 186 169 225 179 204 173 l 155 162 l 155 108 b 155 55 155 79 155 55 b 203 66 156 55 177 60 b 250 78 229 73 250 78 b 251 131 251 78 251 102 z m 251 -109 b 250 -55 251 -67 250 -55 l 250 -55 b 233 -59 249 -55 242 -57 b 186 -71 225 -62 204 -67 l 155 -79 l 155 -132 b 155 -186 155 -161 155 -186 b 203 -174 156 -186 177 -180 b 250 -162 229 -168 250 -162 b 251 -109 251 -162 251 -138 z',\n    },\n    accidentalBakiyeFlat: {\n      x_min: -129,\n      x_max: 185,\n      y_min: -165,\n      y_max: 457,\n      ha: 622,\n      o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 524 22 640 22 639 b 22 407 22 460 22 407 b 90 441 22 407 53 422 l 157 474 l 163 475 b 164 475 163 475 163 475 b 186 453 177 475 186 465 b 184 445 186 450 185 447 b 99 396 181 436 184 438 l 22 357 l 22 256 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 b -22 57 -22 -220 -22 -220 b -22 335 -22 210 -22 335 b -90 301 -22 335 -53 320 l -157 268 l -163 268 b -164 268 -163 268 -163 268 b -186 289 -177 268 -186 277 b -184 298 -186 292 -185 295 b -99 347 -181 306 -184 304 l -22 385 l -22 513 b -20 644 -22 639 -22 640 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n    },\n    accidentalKomaSharp: {\n      x_min: 0,\n      x_max: 142,\n      y_min: -373,\n      y_max: 373,\n      ha: 747,\n      o: 'm 92 536 b 101 538 95 537 98 538 b 122 524 110 538 118 532 b 123 390 123 520 123 519 l 123 259 l 151 268 b 182 277 175 276 178 277 b 184 277 183 277 183 277 b 203 265 193 276 199 272 l 204 262 l 205 213 b 205 187 205 202 205 194 b 201 154 205 159 204 159 b 158 136 197 149 194 148 l 123 125 l 123 10 b 124 -104 123 -64 123 -104 b 150 -94 124 -104 136 -100 b 179 -85 164 -89 177 -85 b 183 -84 181 -84 182 -84 b 203 -98 192 -84 200 -90 b 205 -157 204 -101 205 -130 b 204 -201 205 -179 205 -199 b 158 -226 200 -211 199 -212 l 123 -239 l 123 -380 l 123 -522 l 121 -525 b 101 -538 117 -533 109 -538 b 85 -531 95 -538 90 -536 b 79 -450 80 -526 79 -535 b 79 -387 79 -433 79 -413 b 79 -254 79 -314 79 -254 b 54 -263 79 -254 67 -258 b 19 -273 36 -270 26 -273 b 6 -267 14 -273 10 -271 b 0 -222 0 -261 0 -263 b 0 -207 0 -217 0 -213 b 0 -195 0 -203 0 -199 b 6 -148 0 -152 0 -154 b 47 -131 10 -144 10 -144 l 79 -120 l 79 -5 b 79 110 79 58 79 110 b 53 101 79 110 67 106 b 19 93 35 95 25 93 b 6 99 14 93 10 95 b 0 144 0 105 0 103 b 0 158 0 148 0 153 b 0 185 0 169 0 178 b 45 233 0 222 3 219 l 79 244 l 79 382 b 81 524 79 519 79 520 b 92 536 82 529 88 534 z',\n    },\n    accidentalKucukMucennebSharp: {\n      x_min: 0,\n      x_max: 188,\n      y_min: -373,\n      y_max: 373,\n      ha: 747,\n      o: 'm 127 536 b 135 538 129 537 132 538 b 156 524 144 538 153 532 b 157 420 157 520 157 519 l 157 319 l 185 328 b 216 337 209 336 212 337 b 218 337 217 337 217 337 b 237 325 227 336 233 332 l 239 322 l 239 273 b 239 247 239 262 239 254 b 235 214 239 219 238 219 b 192 196 231 209 229 208 l 157 185 l 157 129 b 158 75 157 86 157 75 b 158 75 158 75 158 75 b 202 89 158 75 178 81 l 245 103 l 250 103 b 268 91 258 102 265 98 l 270 88 l 270 39 b 270 13 270 28 270 20 b 266 -20 270 -15 270 -15 b 208 -43 262 -25 261 -25 l 157 -60 l 157 -112 b 157 -127 157 -117 157 -122 b 158 -164 157 -151 157 -164 b 184 -154 158 -164 170 -160 b 214 -145 198 -149 212 -145 b 217 -144 215 -144 216 -144 b 238 -158 226 -144 235 -150 b 239 -217 239 -161 239 -190 b 238 -261 239 -239 239 -259 b 192 -286 235 -271 233 -272 l 157 -299 l 157 -410 b 155 -525 157 -522 157 -522 b 135 -538 152 -533 143 -538 b 120 -531 130 -538 124 -536 b 113 -463 114 -525 113 -532 b 113 -417 113 -450 113 -435 b 113 -314 113 -361 113 -314 b 88 -323 113 -314 102 -318 b 53 -333 70 -330 60 -333 b 41 -327 48 -333 45 -331 b 34 -282 35 -321 34 -323 b 34 -267 34 -277 34 -273 b 34 -255 34 -263 34 -259 b 40 -208 34 -212 35 -214 b 81 -191 44 -204 44 -204 l 113 -180 l 113 -127 b 113 -75 113 -86 113 -75 b 113 -75 113 -75 113 -75 b 69 -89 112 -75 92 -81 l 26 -103 l 21 -103 b 1 -89 12 -102 4 -97 b 0 -43 0 -86 0 -65 b 2 15 0 -16 1 12 b 63 43 5 24 4 24 l 113 60 l 113 115 b 113 130 113 120 113 125 b 113 170 113 153 113 170 b 87 161 113 170 101 166 b 53 153 69 156 60 153 b 41 159 48 153 45 155 b 34 204 35 165 34 163 b 34 218 34 208 34 213 b 34 245 34 229 34 238 b 79 293 34 282 38 279 l 113 304 l 113 412 b 115 524 113 519 113 520 b 127 536 117 529 122 534 z',\n    },\n    articAccentAbove: {\n      x_min: -256,\n      x_max: 19,\n      y_min: -114,\n      y_max: 114,\n      ha: 227,\n      o: 'm -350 163 b -341 164 -348 163 -344 164 b -333 163 -338 164 -335 163 b -312 151 -330 162 -327 160 b -9 30 -231 99 -122 56 b 13 24 8 27 11 26 b 28 0 23 18 28 9 b 3 -28 28 -12 19 -24 b -19 -33 -1 -29 -11 -31 b -315 -153 -129 -58 -238 -102 b -341 -164 -331 -163 -333 -164 b -369 -136 -357 -164 -369 -151 b -364 -121 -369 -131 -367 -126 b -346 -107 -361 -117 -358 -114 b -135 -8 -285 -67 -213 -34 b -111 0 -122 -4 -111 0 b -135 8 -111 0 -122 4 b -346 107 -213 34 -285 67 b -364 121 -358 114 -361 116 b -368 136 -367 126 -368 131 b -350 163 -368 148 -361 159 z',\n    },\n    articAccentBelow: {\n      x_min: -256,\n      x_max: 19,\n      y_min: -114,\n      y_max: 114,\n      ha: 227,\n      o: 'm -350 163 b -341 164 -348 163 -344 164 b -333 163 -338 164 -335 163 b -312 151 -330 162 -327 160 b -9 30 -231 99 -122 56 b 13 24 8 27 11 26 b 28 0 23 18 28 9 b 3 -28 28 -12 19 -24 b -19 -33 -1 -29 -11 -31 b -315 -153 -129 -58 -238 -102 b -341 -164 -331 -163 -333 -164 b -369 -136 -357 -164 -369 -151 b -364 -121 -369 -131 -367 -126 b -346 -107 -361 -117 -358 -114 b -135 -8 -285 -67 -213 -34 b -111 0 -122 -4 -111 0 b -135 8 -111 0 -122 4 b -346 107 -213 34 -285 67 b -364 121 -358 114 -361 116 b -368 136 -367 126 -368 131 b -350 163 -368 148 -361 159 z',\n    },\n    articTenutoAbove: {\n      x_min: -154,\n      x_max: 154,\n      y_min: -15,\n      y_max: 15,\n      ha: 30,\n      o: 'm -208 20 b 2 22 -205 21 -101 22 b 208 20 104 22 205 21 b 221 0 216 17 221 9 b 215 -16 221 -6 219 -11 b 101 -22 209 -21 225 -22 b 0 -22 75 -22 41 -22 b -101 -22 -41 -22 -75 -22 b -215 -16 -225 -22 -209 -21 b -221 0 -219 -11 -221 -6 b -208 20 -221 8 -216 17 z',\n    },\n    articTenutoBelow: {\n      x_min: -154,\n      x_max: 154,\n      y_min: -15,\n      y_max: 15,\n      ha: 30,\n      o: 'm -208 20 b 2 22 -205 21 -101 22 b 208 20 104 22 205 21 b 221 0 216 17 221 9 b 215 -16 221 -6 219 -11 b 101 -22 209 -21 225 -22 b 0 -22 75 -22 41 -22 b -101 -22 -41 -22 -75 -22 b -215 -16 -225 -22 -209 -21 b -221 0 -219 -11 -221 -6 b -208 20 -221 8 -216 17 z',\n    },\n    articStaccatoAbove: {\n      x_min: -49,\n      x_max: 49,\n      y_min: -49,\n      y_max: 49,\n      ha: 99,\n      o: 'm -13 70 b -1 71 -9 71 -5 71 b 59 40 23 71 46 59 b 71 0 67 28 71 14 b 40 -59 71 -23 60 -46 b 0 -71 28 -67 14 -71 b -59 -40 -23 -71 -46 -60 b -71 0 -67 -28 -71 -14 b -13 70 -71 32 -48 64 z',\n    },\n    articStaccatoBelow: {\n      x_min: -49,\n      x_max: 49,\n      y_min: -49,\n      y_max: 49,\n      ha: 99,\n      o: 'm -13 70 b -1 71 -9 71 -5 71 b 59 40 23 71 46 59 b 71 0 67 28 71 14 b 40 -59 71 -23 60 -46 b 0 -71 28 -67 14 -71 b -59 -40 -23 -71 -46 -60 b -71 0 -67 -28 -71 -14 b -13 70 -71 32 -48 64 z',\n    },\n    articStaccatissimoAbove: {\n      x_min: -53,\n      x_max: 53,\n      y_min: 0,\n      y_max: 184,\n      ha: 184,\n      o: 'm -76 263 l -77 265 l 0 265 l 77 265 l 76 263 b 0 0 75 259 0 0 b -76 263 0 0 -75 259 z',\n    },\n    articStaccatissimoBelow: {\n      x_min: -53,\n      x_max: 53,\n      y_min: -184,\n      y_max: 0,\n      ha: 184,\n      o: 'm -38 -131 b 0 0 -17 -59 0 0 b 76 -263 0 0 75 -259 l 77 -265 l 0 -265 l -77 -265 l -76 -263 b -38 -131 -76 -262 -59 -203 z',\n    },\n    articMarcatoAbove: {\n      x_min: -114,\n      x_max: 114,\n      y_min: -256,\n      y_max: 19,\n      ha: 275,\n      o: 'm -9 26 b 0 28 -6 27 -3 28 b 28 3 13 28 24 18 b 33 -19 29 -1 31 -11 b 153 -315 58 -129 102 -238 b 164 -341 163 -331 164 -333 b 136 -368 164 -357 152 -368 b 107 -346 124 -368 118 -364 b 8 -135 67 -285 34 -213 b 0 -111 4 -122 0 -111 b -8 -135 0 -111 -4 -122 b -107 -346 -34 -213 -67 -285 b -136 -368 -118 -364 -124 -368 b -164 -341 -152 -368 -164 -357 b -151 -312 -164 -333 -163 -332 b -30 -9 -99 -231 -56 -122 b -21 18 -26 11 -26 12 b -9 26 -19 21 -13 25 z',\n    },\n    articMarcatoBelow: {\n      x_min: -114,\n      x_max: 114,\n      y_min: -19,\n      y_max: 256,\n      ha: 275,\n      o: 'm -145 367 b -136 369 -142 368 -139 369 b -107 346 -125 369 -117 362 b -8 135 -67 285 -34 213 b 0 111 -4 122 0 111 b 8 135 0 111 4 122 b 107 346 34 213 67 285 b 121 364 114 358 117 361 b 136 369 126 367 131 369 b 164 341 151 369 164 357 b 153 315 164 333 163 331 b 30 9 101 235 56 124 b 21 -18 26 -11 26 -12 b 0 -27 16 -24 8 -27 b -21 -18 -8 -27 -16 -24 b -30 9 -26 -12 -26 -11 b -151 312 -56 122 -99 231 b -164 341 -163 332 -164 333 b -145 367 -164 353 -156 364 z',\n    },\n    fermataAbove: {\n      x_min: -324,\n      x_max: 324,\n      y_min: 0,\n      y_max: 353,\n      ha: 353,\n      o: 'm -33 507 b 0 508 -22 508 -11 508 b 459 112 228 508 419 345 b 467 31 464 85 467 51 b 465 14 467 22 466 16 b 445 0 462 5 453 0 b 429 7 439 0 433 2 b 422 32 424 12 423 15 b 0 365 414 221 231 365 b -63 362 -33 365 -39 365 b -422 32 -265 338 -415 200 b -429 7 -423 15 -424 12 b -445 0 -433 2 -439 0 b -465 14 -453 0 -462 5 b -467 31 -466 16 -467 22 b -459 112 -467 51 -464 85 b -33 507 -422 332 -249 492 z m -15 196 b 0 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 91 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n    },\n    fermataBelow: {\n      x_min: -324,\n      x_max: 324,\n      y_min: -353,\n      y_max: 0,\n      ha: 353,\n      o: 'm -453 -2 b -445 0 -451 -1 -448 0 b -429 -7 -439 0 -433 -3 b -422 -33 -424 -12 -423 -15 b 0 -365 -414 -221 -231 -365 b 63 -362 33 -365 39 -365 b 422 -33 265 -338 415 -201 b 429 -7 423 -15 424 -12 b 445 0 433 -2 439 0 b 465 -14 453 0 462 -5 b 467 -31 466 -17 467 -23 b 463 -87 467 -46 465 -68 b 35 -507 434 -319 259 -490 b -1 -508 23 -508 11 -508 b -459 -112 -228 -508 -419 -345 b -467 -31 -464 -85 -467 -51 b -465 -14 -467 -23 -466 -17 b -453 -2 -463 -9 -458 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n    },\n    fermataLongAbove: {\n      x_min: -286,\n      x_max: 286,\n      y_min: 0,\n      y_max: 364,\n      ha: 364,\n      o: 'm -399 523 b 0 524 -395 524 -392 524 l 395 524 l 399 523 b 411 511 404 521 409 516 b 412 262 412 507 412 507 b 412 141 412 213 412 173 b 406 7 412 -8 412 12 b 390 0 402 2 396 0 b 382 2 387 0 385 1 b 370 14 377 4 372 9 b 368 183 368 17 368 18 l 368 350 l 0 350 l -368 350 l -368 183 b -370 14 -368 18 -368 17 b -390 0 -373 5 -381 0 b -411 14 -399 0 -407 5 b -412 262 -412 17 -412 139 b -411 511 -412 385 -412 508 b -399 523 -409 516 -403 521 z m -15 196 b 0 197 -10 197 -5 197 b 75 163 27 197 56 184 b 98 99 91 145 98 121 b 56 17 98 67 84 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -64 187 z',\n    },\n    fermataLongBelow: {\n      x_min: -286,\n      x_max: 286,\n      y_min: -364,\n      y_max: 0,\n      ha: 364,\n      o: 'm -399 -2 b -391 0 -396 -1 -393 0 b -370 -14 -382 0 -373 -6 b -368 -184 -368 -18 -368 -18 l -368 -350 l 0 -350 l 368 -350 l 368 -184 b 370 -14 368 -18 368 -18 b 390 0 373 -5 382 0 b 411 -14 399 0 407 -5 b 412 -262 412 -17 412 -140 b 411 -511 412 -385 412 -508 b 399 -523 409 -516 404 -521 l 395 -524 l 0 -524 l -395 -524 l -399 -523 b -411 -511 -404 -521 -409 -516 b -412 -262 -412 -508 -412 -385 b -411 -14 -412 -140 -412 -17 b -399 -2 -409 -9 -404 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n    },\n    fermataVeryLongAbove: {\n      x_min: -286,\n      x_max: 286,\n      y_min: 0,\n      y_max: 438,\n      ha: 438,\n      o: 'm -399 629 b 0 631 -395 631 -392 631 l 395 631 l 399 629 b 411 617 404 627 409 622 b 412 315 412 614 412 465 b 411 14 412 166 412 17 b 390 0 407 5 399 0 b 370 14 382 0 373 5 b 368 237 368 17 368 18 l 368 456 l 0 456 l -368 456 l -368 237 b -370 14 -368 18 -368 17 b -390 0 -373 5 -382 0 b -411 14 -399 0 -407 5 b -412 315 -412 17 -412 166 b -411 617 -412 465 -412 614 b -399 629 -409 622 -404 627 z m -290 384 b 3 385 -287 385 -141 385 b 289 384 145 385 287 385 b 301 372 294 382 300 377 b 303 193 303 369 303 281 b 301 14 303 105 303 17 b 281 0 298 5 290 0 b 265 7 275 0 270 2 b 259 80 260 12 259 4 b 259 130 259 94 259 111 l 259 243 l 0 243 l -259 243 l -259 130 b -259 80 -259 111 -259 94 b -265 7 -259 4 -260 12 b -281 0 -270 2 -275 0 b -301 14 -290 0 -298 5 b -303 193 -303 17 -303 105 b -301 372 -303 281 -303 369 b -290 384 -300 376 -294 382 z m -15 196 b 0 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 91 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n    },\n    fermataVeryLongBelow: {\n      x_min: -286,\n      x_max: 286,\n      y_min: -438,\n      y_max: 0,\n      ha: 438,\n      o: 'm -399 -2 b -391 0 -396 -1 -393 0 b -370 -14 -382 0 -373 -6 b -368 -237 -368 -18 -368 -18 l -368 -456 l 0 -456 l 368 -456 l 368 -237 b 370 -14 368 -18 368 -18 b 390 0 373 -5 382 0 b 411 -14 399 0 407 -5 b 412 -316 412 -17 412 -166 b 411 -617 412 -465 412 -614 b 399 -629 409 -622 404 -628 l 395 -631 l 0 -631 l -395 -631 l -399 -629 b -411 -617 -404 -628 -409 -622 b -412 -316 -412 -614 -412 -465 b -411 -14 -412 -166 -412 -17 b -399 -2 -409 -9 -404 -4 z m -290 -2 b -281 0 -287 -1 -284 0 b -261 -14 -272 0 -264 -6 b -259 -130 -259 -18 -259 -19 l -259 -243 l 0 -243 l 259 -243 l 259 -130 b 259 -81 259 -111 259 -94 b 265 -7 259 -5 260 -13 b 281 0 270 -2 275 0 b 301 -14 290 0 298 -5 b 303 -193 303 -17 303 -105 b 301 -372 303 -281 303 -369 b 289 -384 300 -377 294 -382 b 0 -385 287 -385 143 -385 b -289 -384 -143 -385 -287 -385 b -301 -372 -294 -382 -300 -377 b -303 -193 -303 -369 -303 -281 b -301 -14 -303 -105 -303 -17 b -290 -2 -300 -9 -294 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n    },\n    fermataVeryShortAbove: {\n      x_min: -351,\n      x_max: 351,\n      y_min: 0,\n      y_max: 571,\n      ha: 571,\n      o: 'm -9 820 b 0 822 -6 821 -3 822 b 8 820 3 822 6 821 b 35 785 15 818 17 815 b 68 733 45 770 59 747 b 98 684 76 720 90 698 b 146 606 107 670 128 635 b 193 532 164 578 185 544 b 227 477 200 519 216 495 b 313 337 277 396 301 358 b 362 260 321 325 343 290 b 406 188 380 230 400 197 b 436 140 412 179 425 157 b 505 25 500 37 505 30 b 505 22 505 24 505 23 b 491 2 505 13 499 5 b 450 0 488 1 469 0 b 409 2 431 0 412 1 b 382 37 403 4 400 7 b 350 89 373 52 358 75 b 319 138 342 102 328 124 b 271 216 311 152 289 187 b 225 290 253 244 232 278 b 191 345 217 302 202 327 b 104 485 142 424 117 464 b 8 639 73 534 24 613 b -21 686 -2 655 -15 676 b -33 704 -27 696 -33 704 b -44 686 -33 704 -38 696 b -73 639 -51 676 -64 655 b -170 485 -89 614 -133 543 b -203 430 -177 472 -192 448 b -290 290 -253 351 -277 311 b -337 216 -298 278 -319 244 b -385 138 -355 187 -376 152 b -415 89 -393 124 -407 102 b -448 37 -424 75 -438 52 b -474 2 -466 7 -468 4 b -483 0 -477 1 -480 0 b -505 22 -495 0 -505 9 b -505 25 -505 23 -505 24 b -436 140 -505 30 -500 37 b -406 188 -425 157 -412 179 b -362 260 -400 197 -380 230 b -313 337 -343 290 -321 325 b -227 477 -301 358 -277 396 b -193 532 -216 495 -200 519 b -146 606 -185 544 -164 578 b -98 684 -128 635 -107 670 b -68 733 -90 697 -76 720 b -35 785 -59 747 -45 770 b -9 820 -17 814 -14 818 z m -36 506 b -28 508 -33 507 -30 508 b -12 502 -22 508 -16 506 b 280 30 -8 498 278 36 b 281 22 281 28 281 25 b 268 2 281 14 276 5 b 226 0 265 1 246 0 b 185 2 207 0 188 1 b 58 199 178 4 182 -1 b -60 389 -7 304 -60 389 b -178 199 -60 389 -114 304 b -305 2 -302 -1 -298 4 b -314 0 -308 1 -311 0 b -336 22 -326 0 -336 10 b -334 30 -336 25 -335 27 b -43 502 -332 36 -46 498 b -36 506 -41 504 -38 506 z m -56 196 b -41 197 -51 197 -46 197 b 33 163 -14 197 15 184 b 57 99 50 145 57 121 b 15 17 57 67 43 36 b -41 0 -3 5 -22 0 b -139 99 -92 0 -139 40 b -56 196 -139 148 -105 187 z',\n    },\n    fermataVeryShortBelow: {\n      x_min: -351,\n      x_max: 351,\n      y_min: -571,\n      y_max: 0,\n      ha: 571,\n      o: 'm 9 -820 b 0 -822 6 -821 3 -822 b -8 -820 -3 -822 -6 -821 b -35 -785 -15 -818 -17 -815 b -68 -733 -45 -770 -59 -747 b -98 -684 -76 -720 -90 -698 b -146 -606 -107 -670 -128 -635 b -193 -532 -164 -578 -185 -544 b -227 -477 -200 -519 -216 -495 b -313 -337 -277 -396 -301 -358 b -362 -260 -321 -325 -343 -290 b -406 -188 -380 -230 -400 -197 b -436 -140 -412 -179 -425 -157 b -505 -25 -500 -37 -505 -30 b -505 -22 -505 -24 -505 -23 b -491 -2 -505 -13 -499 -5 b -450 0 -488 -1 -469 0 b -409 -2 -431 0 -412 -1 b -382 -37 -403 -4 -400 -7 b -350 -89 -373 -52 -358 -75 b -319 -138 -342 -102 -328 -124 b -271 -216 -311 -152 -289 -187 b -225 -290 -253 -244 -232 -278 b -191 -345 -217 -302 -202 -327 b -104 -485 -142 -424 -117 -464 b -8 -639 -73 -534 -24 -613 b 21 -686 2 -655 15 -676 b 33 -704 27 -696 33 -704 b 44 -686 33 -704 38 -696 b 73 -639 51 -676 64 -655 b 170 -485 89 -614 133 -543 b 203 -430 177 -472 192 -448 b 290 -290 253 -351 277 -311 b 337 -216 298 -278 319 -244 b 385 -138 355 -187 376 -152 b 415 -89 393 -124 407 -102 b 448 -37 424 -75 438 -52 b 474 -2 466 -7 468 -4 b 483 0 477 -1 480 0 b 505 -22 495 0 505 -9 b 505 -25 505 -23 505 -24 b 436 -140 505 -30 500 -37 b 406 -188 425 -157 412 -179 b 362 -260 400 -197 380 -230 b 313 -337 343 -290 321 -325 b 227 -477 301 -358 277 -396 b 193 -532 216 -495 200 -519 b 146 -606 185 -544 164 -578 b 98 -684 128 -635 107 -670 b 68 -733 90 -697 76 -720 b 35 -785 59 -747 45 -770 b 9 -820 17 -814 14 -818 z m 36 -506 b 28 -508 33 -507 30 -508 b 12 -502 22 -508 16 -506 b -280 -30 8 -498 -278 -36 b -281 -22 -281 -28 -281 -25 b -268 -2 -281 -14 -276 -5 b -226 0 -265 -1 -246 0 b -185 -2 -207 0 -188 -1 b -58 -199 -178 -4 -182 1 b 60 -389 7 -304 60 -389 b 178 -199 60 -389 114 -304 b 305 -2 302 1 298 -4 b 314 0 308 -1 311 0 b 336 -22 326 0 336 -10 b 334 -30 336 -25 335 -27 b 43 -502 332 -36 46 -498 b 36 -506 41 -504 38 -506 z m 56 -196 b 41 -197 51 -197 46 -197 b -33 -163 14 -197 -15 -184 b -57 -99 -50 -145 -57 -121 b -15 -17 -57 -67 -43 -36 b 41 0 3 -5 22 0 b 139 -99 92 0 139 -40 b 56 -196 139 -148 105 -187 z',\n    },\n    fermataShortAbove: {\n      x_min: -286,\n      x_max: 286,\n      y_min: 0,\n      y_max: 469,\n      ha: 469,\n      o: 'm -9 674 b 0 676 -6 675 -3 676 b 15 670 6 676 11 674 b 74 576 17 667 37 637 b 233 319 105 526 176 410 b 373 92 290 227 353 125 b 411 30 393 59 410 31 b 412 23 412 27 412 25 b 398 2 412 14 407 5 b 357 0 396 1 376 0 b 316 2 338 0 319 1 b 250 100 309 4 309 4 b 91 357 220 150 148 266 b -22 541 35 449 -17 532 b -33 558 -28 550 -33 558 b -42 544 -33 558 -37 551 b -137 389 -47 536 -89 467 b -240 223 -185 312 -231 237 b -382 2 -387 -16 -374 4 b -390 0 -385 1 -387 0 b -412 22 -402 0 -412 9 l -412 22 b -375 90 -412 29 -412 29 b -253 286 -285 236 -269 261 b -182 402 -244 301 -212 354 b -34 641 -127 491 -64 593 b -9 674 -17 668 -15 672 z m -15 196 b -1 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 90 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n    },\n    fermataShortBelow: {\n      x_min: -286,\n      x_max: 286,\n      y_min: -469,\n      y_max: 0,\n      ha: 469,\n      o: 'm -399 -2 b -390 0 -396 -1 -393 0 b -375 -6 -385 0 -379 -3 b -316 -100 -373 -9 -353 -39 b -157 -358 -285 -150 -214 -266 b -43 -541 -100 -449 -49 -532 b -33 -558 -38 -550 -33 -558 b -24 -544 -32 -558 -28 -552 b 20 -473 -19 -536 1 -505 b 72 -390 39 -442 62 -405 b 143 -274 81 -375 113 -322 b 291 -35 198 -185 261 -83 b 316 -2 308 -8 310 -4 b 357 0 319 -1 338 0 b 399 -2 377 0 396 -1 b 412 -23 407 -5 412 -14 b 411 -30 412 -25 412 -27 b 392 -62 410 -31 402 -46 b 355 -122 382 -78 365 -105 b 253 -287 345 -138 299 -212 b 152 -451 207 -361 162 -435 b 76 -573 142 -467 108 -522 b 4 -676 16 -671 13 -676 b 0 -676 3 -676 1 -676 b -4 -676 -1 -676 -3 -676 b -74 -576 -13 -676 -16 -671 b -233 -319 -105 -526 -176 -411 b -373 -92 -290 -227 -353 -125 b -411 -30 -393 -59 -410 -31 b -412 -23 -412 -27 -412 -25 b -399 -2 -412 -14 -407 -5 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n    },\n    breathMarkComma: {\n      x_min: 0,\n      x_max: 168,\n      y_min: -155,\n      y_max: 155,\n      ha: 311,\n      o: 'm 96 223 b 107 224 100 224 103 224 b 236 104 164 224 218 174 b 242 55 240 88 242 71 b 66 -209 242 -42 175 -144 b 33 -224 48 -219 39 -224 b 25 -219 30 -224 28 -222 b 23 -213 24 -216 23 -215 b 36 -199 23 -208 28 -204 b 130 -56 96 -166 130 -110 b 111 8 130 -34 124 -12 l 110 10 l 100 11 b 6 82 58 12 19 42 b 0 117 2 94 0 105 b 96 223 0 170 40 217 z',\n    },\n    breathMarkUpbow: {\n      x_min: -125,\n      x_max: 125,\n      y_min: 0,\n      y_max: 409,\n      ha: 409,\n      o: 'm -171 588 b -130 589 -168 589 -166 589 l -123 589 b -83 585 -87 589 -88 589 b -23 385 -80 581 -84 594 b 34 193 8 280 34 193 b 91 385 34 193 60 280 b 149 580 122 491 148 579 b 164 590 151 586 157 590 b 179 580 170 590 176 586 b 180 577 179 579 180 579 b 99 292 180 569 169 533 b 13 6 18 16 15 6 b 13 6 13 6 13 6 b 12 5 13 6 13 6 b 0 0 9 2 5 0 b -16 11 -7 0 -13 4 b -180 573 -25 41 -180 570 b -171 588 -180 580 -177 586 z',\n    },\n    caesura: {\n      x_min: 0,\n      x_max: 457,\n      y_min: -202,\n      y_max: 303,\n      ha: 504,\n      o: 'm 423 434 b 431 436 426 435 428 436 b 453 414 443 436 453 426 b 452 406 453 411 453 409 b 37 -284 450 401 41 -281 b 23 -290 33 -289 28 -290 b 0 -268 11 -290 0 -281 b 1 -261 0 -266 0 -263 b 416 430 3 -256 413 427 b 423 434 418 431 421 433 z m 627 434 b 636 436 630 435 633 436 b 658 414 648 436 658 426 b 657 406 658 411 658 409 b 242 -284 655 401 245 -281 b 227 -290 238 -289 232 -290 b 205 -268 216 -290 205 -281 b 206 -261 205 -266 205 -263 b 621 430 208 -256 618 427 b 627 434 623 431 625 433 z',\n    },\n    caesuraCurved: {\n      x_min: 0,\n      x_max: 370,\n      y_min: -207,\n      y_max: 310,\n      ha: 517,\n      o: 'm 291 447 b 296 447 293 447 294 447 b 328 410 314 447 328 431 b 328 403 328 408 328 406 b 325 384 328 401 326 392 b 44 -284 299 206 196 -38 b 22 -298 38 -293 30 -298 b 7 -291 16 -298 11 -296 b 0 -278 2 -287 0 -283 b 11 -251 0 -272 3 -264 b 262 409 146 -12 245 246 b 291 447 264 433 273 444 z m 496 447 b 501 447 498 447 499 447 b 533 410 519 447 533 431 b 533 403 533 408 533 406 b 530 384 532 401 531 392 b 248 -284 504 206 401 -38 b 226 -298 242 -293 234 -298 b 211 -291 221 -298 216 -296 b 205 -278 207 -287 205 -283 b 215 -251 205 -272 208 -264 b 466 409 351 -12 449 246 b 496 447 469 433 477 444 z',\n    },\n    restMaxima: {\n      x_min: 0,\n      x_max: 853,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 0 0 l 0 360 l 205 360 l 409 360 l 409 0 l 409 -360 l 205 -360 l 0 -360 z m 819 0 l 819 360 l 1023 360 l 1228 360 l 1228 0 l 1228 -360 l 1023 -360 l 819 -360 z',\n    },\n    restDoubleWhole: {\n      x_min: 0,\n      x_max: 284,\n      y_min: 0,\n      y_max: 250,\n      ha: 250,\n      o: 'm 0 180 l 0 360 l 205 360 l 409 360 l 409 180 l 409 0 l 205 0 l 0 0 z',\n    },\n    restWhole: {\n      x_min: 0,\n      x_max: 330,\n      y_min: -125,\n      y_max: 0,\n      ha: 125,\n      o: 'm 0 -90 l 0 0 l 237 0 l 475 0 l 475 -90 l 475 -180 l 237 -180 l 0 -180 z',\n    },\n    restWholeLegerLine: {\n      x_min: 0,\n      x_max: 542,\n      y_min: -125,\n      y_max: 11,\n      ha: 137,\n      o: 'm 9 15 b 427 17 11 16 226 17 b 771 15 603 17 769 16 b 780 0 777 13 780 6 b 771 -15 780 -6 777 -13 b 698 -16 768 -16 760 -16 l 628 -16 l 628 -98 l 628 -180 l 390 -180 l 153 -180 l 153 -98 l 153 -16 l 83 -16 b 10 -15 21 -16 12 -16 b 0 0 3 -13 0 -6 b 9 15 0 6 3 12 z',\n    },\n    restHalf: {\n      x_min: 0,\n      x_max: 330,\n      y_min: 0,\n      y_max: 125,\n      ha: 125,\n      o: 'm 0 90 l 0 180 l 237 180 l 475 180 l 475 90 l 475 0 l 237 0 l 0 0 z',\n    },\n    restHalfLegerLine: {\n      x_min: 0,\n      x_max: 542,\n      y_min: -11,\n      y_max: 125,\n      ha: 137,\n      o: 'm 153 98 l 153 180 l 390 180 l 628 180 l 628 98 l 628 16 l 698 16 b 771 15 760 16 769 16 b 781 0 777 13 781 6 b 771 -15 781 -6 777 -13 b 427 -17 769 -16 603 -17 b 9 -15 226 -17 11 -16 b 0 0 3 -12 0 -6 b 4 12 0 4 1 8 b 58 16 9 16 5 16 b 83 16 65 16 73 16 l 153 16 z',\n    },\n    restQuarter: {\n      x_min: 0,\n      x_max: 221,\n      y_min: -365,\n      y_max: 365,\n      ha: 730,\n      o: 'm 50 524 b 56 526 52 525 54 526 b 74 516 62 526 67 523 b 96 497 78 513 88 504 b 118 478 105 489 115 481 b 181 423 143 456 154 447 b 311 305 302 317 311 310 b 310 302 311 304 310 303 b 310 299 310 301 310 300 b 298 278 310 295 310 294 b 234 132 268 233 245 181 b 222 39 226 100 222 69 b 306 -177 222 -46 251 -123 b 319 -198 318 -190 319 -191 b 303 -214 319 -208 313 -214 b 291 -212 299 -214 295 -213 b 260 -208 281 -209 270 -208 b 155 -260 221 -208 181 -227 b 122 -353 133 -287 122 -320 b 185 -490 122 -400 143 -450 b 197 -510 193 -498 197 -505 b 191 -521 197 -514 195 -517 b 181 -526 188 -524 185 -526 b 136 -495 173 -526 161 -517 b 0 -270 48 -420 0 -340 l 0 -270 l 0 -253 l 2 -243 b 157 -146 19 -182 78 -146 b 217 -152 176 -146 196 -148 l 228 -155 l 226 -152 b 124 -62 223 -150 168 -101 b 19 37 23 27 19 31 b 19 39 19 38 19 39 l 19 40 b 29 59 19 46 19 47 b 117 312 87 138 117 229 b 53 489 117 382 96 446 b 41 509 42 500 41 503 b 50 524 41 516 44 521 z',\n    },\n    rest8th: {\n      x_min: 0,\n      x_max: 258,\n      y_min: -197,\n      y_max: 219,\n      ha: 416,\n      o: 'm 98 315 b 110 316 102 315 106 316 b 177 293 132 316 159 307 b 218 207 204 271 218 239 b 191 137 218 182 209 157 l 187 132 l 193 134 b 326 260 251 150 302 198 b 331 270 328 264 330 269 b 349 279 336 276 343 279 b 371 257 360 279 371 270 b 213 -273 371 253 216 -267 b 194 -283 209 -280 202 -283 b 173 -270 185 -283 176 -279 b 172 -265 172 -268 172 -268 b 230 -62 172 -257 180 -228 b 289 134 263 46 289 134 b 289 134 289 134 289 134 b 280 128 289 134 285 131 b 149 84 241 98 194 84 b 39 121 108 84 69 96 b 0 204 13 142 0 173 b 31 282 0 232 10 260 b 98 315 48 300 69 311 z',\n    },\n    rest16th: {\n      x_min: 0,\n      x_max: 331,\n      y_min: -443,\n      y_max: 219,\n      ha: 662,\n      o: 'm 205 315 b 216 316 208 315 212 316 b 283 293 239 316 265 307 b 324 207 310 271 324 239 b 298 137 324 182 316 157 l 293 132 l 299 134 b 433 260 358 150 409 198 b 438 270 434 264 437 269 b 455 279 443 276 449 279 b 477 257 467 279 477 270 b 213 -627 477 253 216 -621 b 194 -638 209 -635 202 -638 b 173 -625 185 -638 176 -634 b 172 -620 172 -623 172 -622 b 230 -417 172 -612 180 -583 b 289 -221 263 -309 289 -221 b 289 -221 289 -221 289 -221 b 280 -227 289 -221 285 -223 b 149 -271 241 -256 194 -271 b 39 -234 108 -271 69 -259 b 0 -150 13 -213 0 -182 b 31 -73 0 -123 10 -95 b 110 -39 52 -50 81 -39 b 207 -100 149 -39 188 -60 b 218 -147 214 -114 218 -131 b 191 -218 218 -173 209 -199 l 187 -223 l 193 -221 b 326 -96 251 -205 302 -157 b 395 134 328 -91 395 133 b 395 134 395 134 395 134 b 387 128 395 134 391 131 b 256 84 347 98 301 84 b 145 121 215 84 175 96 b 106 204 119 142 106 173 b 137 282 106 232 116 260 b 205 315 155 300 176 311 z',\n    },\n    rest32nd: {\n      x_min: 0,\n      x_max: 405,\n      y_min: -443,\n      y_max: 466,\n      ha: 909,\n      o: 'm 311 670 b 322 670 315 670 318 670 b 390 647 345 670 371 662 b 431 562 417 626 431 594 b 404 492 431 536 422 511 l 400 487 l 406 488 b 539 614 464 504 515 552 b 544 625 541 619 543 623 b 562 633 549 631 555 633 b 584 612 573 633 584 625 b 213 -627 584 607 216 -621 b 194 -638 209 -635 202 -638 b 173 -625 185 -638 176 -634 b 172 -620 172 -623 172 -622 b 230 -417 172 -612 180 -583 b 289 -221 263 -309 289 -221 b 289 -221 289 -221 289 -221 b 280 -227 289 -221 285 -223 b 149 -271 241 -256 194 -271 b 39 -234 108 -271 69 -259 b 0 -150 13 -213 0 -182 b 31 -73 0 -123 10 -95 b 110 -39 52 -50 81 -39 b 207 -100 149 -39 188 -60 b 218 -147 214 -114 218 -131 b 191 -218 218 -173 209 -199 l 187 -223 l 193 -221 b 326 -96 251 -205 302 -157 b 395 134 328 -91 395 133 b 395 134 395 134 395 134 b 387 128 395 134 391 131 b 256 84 347 98 301 84 b 145 121 215 84 175 96 b 106 204 119 142 106 173 b 137 282 106 232 116 260 b 216 315 159 304 187 315 b 314 255 255 315 295 294 b 324 208 321 240 324 224 b 298 137 324 182 315 156 l 293 132 l 299 134 b 432 258 357 149 409 198 b 502 489 434 264 502 487 b 502 489 502 489 502 489 b 493 483 502 489 498 486 b 362 438 454 453 407 438 b 251 475 321 438 282 451 b 213 559 226 496 213 528 b 243 636 213 587 223 615 b 311 670 261 655 282 665 z',\n    },\n    rest64th: {\n      x_min: 0,\n      x_max: 479,\n      y_min: -689,\n      y_max: 466,\n      ha: 1155,\n      o: 'm 417 670 b 429 670 421 670 425 670 b 496 647 451 670 478 662 b 537 562 523 626 537 594 b 510 492 537 536 529 511 l 506 487 l 512 488 b 646 614 570 504 621 552 b 651 625 647 619 650 623 b 668 633 655 631 662 633 b 690 612 679 633 690 625 b 213 -982 690 607 216 -976 b 194 -993 209 -989 202 -993 b 173 -979 185 -993 176 -988 b 172 -974 172 -978 172 -977 b 230 -771 172 -966 180 -938 b 289 -575 263 -664 289 -575 b 289 -575 289 -575 289 -575 b 280 -582 289 -575 285 -578 b 149 -626 241 -611 194 -626 b 39 -589 108 -626 69 -613 b 0 -505 13 -568 0 -537 b 31 -428 0 -477 10 -449 b 110 -394 52 -405 81 -394 b 207 -454 149 -394 188 -415 b 218 -502 214 -469 218 -485 b 191 -572 218 -528 209 -553 l 187 -577 l 193 -576 b 326 -451 251 -560 302 -512 b 395 -221 328 -446 395 -222 b 395 -221 395 -221 395 -221 b 387 -227 395 -221 391 -223 b 256 -271 347 -256 301 -271 b 145 -234 215 -271 175 -259 b 106 -150 119 -213 106 -182 b 137 -73 106 -123 116 -95 b 216 -39 159 -50 187 -39 b 314 -100 255 -39 295 -60 b 324 -147 321 -114 324 -131 b 298 -218 324 -173 315 -199 l 293 -223 l 299 -221 b 432 -96 357 -205 409 -157 b 502 134 434 -91 502 133 b 502 134 502 134 502 134 b 493 128 502 134 498 131 b 362 84 454 98 407 84 b 251 121 321 84 282 96 b 213 204 226 142 213 173 b 243 282 213 232 223 260 b 322 315 265 304 294 315 b 420 255 362 315 401 294 b 431 208 427 240 431 224 b 404 137 431 182 422 156 l 400 132 l 406 134 b 539 258 463 149 515 198 b 608 489 541 264 608 487 b 608 489 608 489 608 489 b 599 483 608 489 604 486 b 468 438 560 453 513 438 b 358 475 428 438 388 451 b 319 559 332 496 319 528 b 350 636 319 587 329 615 b 417 670 368 655 388 665 z',\n    },\n    rest128th: {\n      x_min: 0,\n      x_max: 553,\n      y_min: -689,\n      y_max: 712,\n      ha: 1401,\n      o: 'm 524 1024 b 535 1025 527 1025 531 1025 b 603 1002 558 1025 584 1016 b 644 916 630 981 644 949 b 617 846 644 891 635 866 l 612 841 l 619 843 b 752 969 677 859 728 907 b 757 979 754 973 756 978 b 775 988 762 985 768 988 b 797 966 786 988 797 980 b 213 -982 797 962 216 -976 b 194 -993 209 -989 202 -993 b 173 -979 185 -993 176 -988 b 172 -974 172 -978 172 -977 b 230 -771 172 -966 180 -938 b 289 -575 263 -664 289 -575 b 289 -575 289 -575 289 -575 b 280 -582 289 -575 285 -578 b 149 -626 241 -611 194 -626 b 39 -589 108 -626 69 -613 b 0 -505 13 -568 0 -537 b 31 -428 0 -477 10 -449 b 110 -394 52 -405 81 -394 b 207 -454 149 -394 188 -415 b 218 -502 214 -469 218 -485 b 191 -572 218 -528 209 -553 l 187 -577 l 193 -576 b 326 -451 251 -560 302 -512 b 395 -221 328 -446 395 -222 b 395 -221 395 -221 395 -221 b 387 -227 395 -221 391 -223 b 256 -271 347 -256 301 -271 b 145 -234 215 -271 175 -259 b 106 -150 119 -213 106 -182 b 137 -73 106 -123 116 -95 b 216 -39 159 -50 187 -39 b 314 -100 255 -39 295 -60 b 324 -147 321 -114 324 -131 b 298 -218 324 -173 315 -199 l 293 -223 l 299 -221 b 432 -96 357 -205 409 -157 b 502 134 434 -91 502 133 b 502 134 502 134 502 134 b 493 128 502 134 498 131 b 362 84 454 98 407 84 b 251 121 321 84 282 96 b 213 204 226 142 213 173 b 243 282 213 232 223 260 b 322 315 265 304 294 315 b 420 255 362 315 401 294 b 431 208 427 240 431 224 b 404 137 431 182 422 156 l 400 132 l 406 134 b 539 258 463 149 515 198 b 608 489 541 264 608 487 b 608 489 608 489 608 489 b 599 483 608 489 604 486 b 468 438 560 453 513 438 b 358 475 428 438 388 451 b 319 559 332 496 319 528 b 350 636 319 587 329 615 b 429 670 372 659 400 670 b 526 610 468 670 507 649 b 537 563 534 595 537 579 b 511 492 537 536 528 511 l 506 487 l 512 488 b 645 613 570 504 621 553 b 715 843 647 618 715 842 b 715 843 715 843 715 843 b 706 837 714 843 711 841 b 575 793 667 808 620 793 b 464 830 534 793 495 805 b 426 914 439 851 426 882 b 456 991 426 941 436 969 b 524 1024 474 1010 495 1020 z',\n    },\n    dynamicPiano: {\n      x_min: -39,\n      x_max: 378,\n      y_min: -178,\n      y_max: 277,\n      ha: 455,\n      o: 'm 197 399 b 208 399 201 399 205 399 b 305 314 255 399 298 362 l 306 308 l 312 315 b 405 382 339 346 376 373 b 430 386 413 385 421 386 b 494 362 451 386 474 378 b 544 249 526 336 544 296 b 377 -30 544 116 475 1 b 334 -37 362 -34 347 -37 b 291 -25 316 -37 300 -33 b 281 -17 289 -23 285 -20 b 240 43 262 -1 248 20 b 237 52 238 47 237 52 b 237 53 237 52 237 53 b 198 -74 236 53 229 30 b 159 -207 166 -181 159 -202 b 160 -209 159 -208 160 -208 b 194 -221 165 -213 179 -218 b 206 -224 198 -222 204 -224 b 217 -240 213 -226 217 -233 b 208 -255 217 -246 214 -252 b 81 -257 206 -256 144 -257 b -46 -255 18 -257 -44 -256 b -56 -240 -52 -252 -56 -246 b -51 -229 -56 -236 -54 -232 b -33 -222 -48 -225 -46 -225 b 29 -191 9 -213 24 -206 b 174 291 34 -177 173 286 b 176 303 174 294 175 299 b 178 317 177 308 178 313 b 163 336 178 329 173 336 b 157 336 161 336 159 336 b 70 239 124 326 90 288 b 56 224 65 225 63 224 b 46 233 49 224 46 227 b 49 248 46 237 47 242 b 149 376 70 302 105 347 b 161 385 154 379 160 383 b 197 399 168 391 184 397 z m 399 318 b 389 320 396 320 393 320 b 318 285 370 320 340 306 b 302 263 306 273 304 270 b 297 253 301 260 299 256 b 273 176 296 250 288 226 l 251 104 l 252 97 b 266 51 253 81 258 64 b 296 29 274 39 288 29 b 298 29 297 29 297 29 b 309 34 299 30 304 32 b 429 230 370 62 420 144 b 431 256 430 240 431 249 b 399 318 431 289 421 307 z',\n    },\n    dynamicMezzo: {\n      x_min: 35,\n      x_max: 493,\n      y_min: -19,\n      y_max: 272,\n      ha: 291,\n      o: 'm 191 390 b 206 392 196 391 201 392 b 282 350 235 392 265 376 b 291 331 285 345 291 333 b 292 330 291 330 292 330 b 297 337 292 330 294 331 b 329 371 306 350 317 362 b 339 380 332 374 336 377 b 376 392 347 388 361 392 b 434 372 395 392 418 385 b 463 331 447 362 461 341 b 464 330 463 330 463 330 b 469 337 464 330 466 331 b 501 371 478 350 489 362 b 511 380 504 374 508 377 b 548 392 519 388 533 392 b 606 372 567 392 589 385 b 641 295 628 354 641 323 b 633 260 641 282 639 270 b 576 69 631 256 576 72 b 574 59 576 68 575 63 b 573 47 573 55 573 51 b 585 25 573 35 577 25 b 586 26 585 25 585 25 b 684 127 621 30 664 74 b 699 145 690 143 692 145 b 709 135 706 145 709 142 b 696 98 709 128 705 116 b 595 -12 672 47 640 12 b 582 -20 590 -15 584 -19 b 552 -27 573 -25 563 -27 b 481 18 524 -27 495 -10 b 470 63 474 31 470 47 b 478 98 470 76 473 88 b 535 289 480 102 535 285 b 537 298 535 290 536 294 b 538 311 538 303 538 307 b 522 339 538 324 533 333 b 516 341 519 340 517 341 b 507 337 514 341 512 340 b 468 282 491 329 470 300 b 462 261 467 276 464 264 b 422 133 461 259 444 203 b 380 2 383 1 384 4 l 378 0 l 333 0 b 321 0 329 0 324 0 b 283 5 284 0 286 0 b 282 8 282 6 282 7 b 322 149 282 15 288 37 b 363 289 344 224 363 287 b 365 299 364 292 364 296 b 367 311 366 303 367 307 b 350 339 367 324 361 333 b 344 341 347 340 346 341 b 336 337 342 341 340 340 b 296 282 319 329 298 300 b 290 261 295 276 292 264 b 251 133 289 259 272 203 b 208 2 211 1 212 4 l 206 0 l 161 0 b 149 0 157 0 152 0 b 111 5 112 0 114 0 b 110 8 110 6 110 7 b 150 149 110 15 116 37 b 191 289 172 224 191 287 b 193 299 192 292 193 296 b 195 311 194 303 195 307 b 179 338 195 323 189 333 b 171 340 176 339 174 340 b 150 333 166 340 160 338 b 75 240 120 318 92 283 b 60 224 69 225 67 224 b 50 233 53 224 50 227 b 53 248 50 237 51 242 b 162 378 75 306 117 355 b 170 383 164 379 168 381 b 191 390 176 386 183 389 z',\n    },\n    dynamicForte: {\n      x_min: -87,\n      x_max: 440,\n      y_min: -182,\n      y_max: 415,\n      ha: 597,\n      o: 'm 486 597 b 491 597 487 597 489 597 b 515 596 499 597 512 597 b 528 595 517 596 523 595 b 631 522 576 591 622 559 b 633 506 632 516 633 511 b 559 433 633 466 598 433 b 532 439 550 433 541 435 b 493 499 506 450 493 475 b 518 548 493 517 501 536 b 519 550 519 549 519 549 b 519 550 519 550 519 550 b 496 537 518 550 504 542 b 371 353 445 503 399 436 b 367 341 369 347 367 341 b 407 341 367 341 385 341 b 414 341 410 341 412 341 b 459 335 452 341 451 341 b 468 314 465 330 468 322 b 459 293 468 306 465 298 b 411 286 451 287 453 286 b 399 286 407 286 404 286 l 353 286 l 351 279 b 174 -146 320 120 253 -41 b -24 -262 120 -218 45 -262 b -28 -262 -25 -262 -26 -262 b -125 -165 -83 -260 -125 -217 b -122 -140 -125 -157 -124 -148 b -53 -89 -113 -106 -83 -89 b 17 -142 -23 -89 8 -107 b 19 -158 18 -147 19 -153 b -13 -214 19 -181 7 -202 b -16 -217 -15 -216 -16 -216 b -16 -217 -16 -217 -16 -217 b -10 -215 -15 -217 -13 -216 b 80 -130 25 -205 58 -173 b 102 -74 88 -115 93 -102 b 186 245 126 -3 146 72 b 196 285 191 267 196 285 b 196 285 196 285 196 285 b 151 286 196 286 192 286 b 98 290 103 286 102 287 b 83 314 88 296 83 305 b 98 338 83 323 88 332 b 157 341 102 341 102 341 l 211 341 l 215 353 b 486 597 264 491 372 588 z',\n    },\n    dynamicRinforzando: {\n      x_min: 58,\n      x_max: 357,\n      y_min: 0,\n      y_max: 275,\n      ha: 275,\n      o: 'm 383 395 b 401 396 389 395 395 396 b 508 352 446 396 495 377 b 515 327 513 344 515 336 b 490 285 515 310 506 293 b 465 278 482 280 474 278 b 423 301 450 278 434 286 b 365 332 408 322 386 332 b 299 281 335 332 307 314 b 296 272 298 277 297 273 b 294 266 295 271 294 269 b 291 260 293 264 292 261 b 252 133 290 259 273 201 b 210 2 213 1 214 4 l 207 0 l 163 0 b 150 0 158 0 154 0 b 112 5 113 0 115 0 b 111 8 112 6 111 7 b 152 149 111 15 118 37 b 193 289 174 225 192 287 b 195 300 193 292 194 296 b 197 315 196 305 197 310 b 175 344 197 331 189 342 b 170 344 173 344 172 344 b 109 316 149 344 127 334 b 95 306 100 306 99 306 b 84 316 88 306 84 310 b 87 325 84 319 85 322 b 149 372 99 341 127 363 b 211 388 168 381 197 388 b 215 388 213 388 214 388 b 283 349 245 385 267 372 b 285 345 284 347 285 345 b 285 345 285 345 285 345 b 291 350 286 345 288 347 b 383 395 316 374 349 390 z',\n    },\n    dynamicSforzando: {\n      x_min: 52,\n      x_max: 278,\n      y_min: -22,\n      y_max: 270,\n      ha: 292,\n      o: 'm 259 388 b 271 388 263 388 267 388 b 370 362 305 388 338 379 b 396 338 385 354 391 348 b 401 315 399 331 401 323 b 359 261 401 290 384 266 b 349 260 356 260 352 260 b 300 306 322 260 300 282 b 305 327 300 313 302 320 b 308 332 307 330 308 332 b 308 332 308 332 308 332 b 287 334 308 334 297 334 b 269 333 279 334 272 334 b 220 300 245 329 226 316 b 219 295 219 299 219 297 b 273 232 219 278 243 249 b 301 215 289 223 295 219 b 373 95 347 181 373 136 b 361 49 373 79 369 63 b 219 -32 332 -4 277 -32 b 101 7 179 -32 138 -19 b 75 51 84 19 75 34 b 85 82 75 61 78 71 b 129 106 94 98 112 106 b 164 92 142 106 154 102 b 178 59 173 83 178 71 b 170 34 178 50 175 42 l 166 29 l 168 28 b 203 22 178 24 190 22 b 226 25 211 22 219 23 b 275 68 253 31 275 52 b 274 75 275 70 274 73 b 217 132 264 98 249 114 b 122 262 161 163 127 210 b 122 270 122 265 122 267 b 259 388 122 329 184 384 z',\n    },\n    dynamicZ: {\n      x_min: 23,\n      x_max: 309,\n      y_min: 2,\n      y_max: 250,\n      ha: 248,\n      o: 'm 124 360 b 222 360 125 360 168 360 b 435 359 312 360 434 360 b 445 344 442 356 445 350 b 440 331 445 339 444 335 b 314 227 438 330 382 283 b 190 124 247 172 191 125 l 188 123 l 201 123 b 205 123 202 123 204 123 b 268 101 231 123 249 117 b 320 79 284 88 305 79 b 326 80 322 79 324 79 b 340 93 330 81 334 84 b 342 97 341 96 342 97 b 342 98 342 98 342 98 b 340 97 342 98 341 97 b 330 96 336 96 333 96 b 294 134 311 96 294 113 b 295 142 294 136 294 139 b 340 176 299 163 320 176 b 371 163 351 176 363 172 b 383 124 380 154 383 139 b 359 60 383 100 375 74 b 322 30 350 51 329 35 b 239 3 295 12 266 3 b 179 21 218 3 197 9 b 117 39 161 33 138 39 b 86 35 106 39 95 38 b 67 23 79 32 76 31 b 49 14 58 15 55 14 b 33 30 39 14 33 21 b 38 42 33 34 34 38 b 73 72 41 46 60 62 b 303 262 80 77 299 258 b 303 262 303 262 303 262 b 246 263 303 262 277 263 b 146 261 203 263 150 262 b 102 239 131 259 117 252 b 88 231 94 232 92 231 b 85 230 87 230 86 230 b 69 246 76 230 69 237 l 69 247 l 69 252 l 92 302 b 116 355 104 330 115 354 b 124 360 118 357 122 359 z',\n    },\n    ornamentTrill: {\n      x_min: -249,\n      x_max: 249,\n      y_min: 0,\n      y_max: 376,\n      ha: 376,\n      o: 'm -92 502 b -29 542 -33 541 -33 542 b -21 534 -25 542 -21 539 b -70 366 -21 532 -65 383 l -71 364 l -47 364 b 125 383 13 366 71 372 b 149 387 136 386 143 387 b 167 382 156 387 160 385 b 181 370 171 380 179 373 b 182 370 181 370 181 370 b 230 380 185 370 195 372 b 304 394 286 393 290 394 b 305 394 305 394 305 394 b 357 353 330 394 349 379 b 359 336 358 349 359 342 b 354 314 359 326 357 316 b 257 291 352 312 263 291 b 257 291 257 291 257 291 b 250 299 252 292 250 294 b 251 305 250 301 250 303 b 251 314 251 308 251 311 b 234 350 251 329 245 343 l 230 353 l 224 349 b 169 287 202 334 183 313 b 127 156 163 276 166 286 b 88 37 92 43 91 39 b -8 15 84 35 -4 15 b -8 15 -8 15 -8 15 b -14 22 -12 16 -14 17 b -8 47 -14 26 -12 33 b -2 69 -5 59 -2 69 b -2 69 -2 69 -2 69 b -45 44 -2 69 -22 58 b -122 4 -102 10 -105 9 b -151 0 -132 1 -142 0 b -256 105 -208 0 -256 46 b -255 119 -256 110 -256 114 b -223 231 -254 129 -256 121 b -195 325 -208 282 -195 325 b -195 325 -195 325 -195 325 b -198 325 -196 325 -196 325 b -274 324 -206 325 -237 325 b -340 324 -310 324 -329 324 b -354 325 -351 324 -353 324 b -359 332 -357 326 -359 329 b -356 338 -359 334 -358 336 b -308 351 -355 340 -353 340 l -261 361 l -222 362 l -182 363 l -168 411 b -152 461 -160 438 -153 460 b -92 502 -152 462 -125 480 z m 62 348 b 57 349 60 349 59 349 b 40 346 55 349 51 348 b -62 330 8 339 -30 333 b -83 321 -84 329 -82 330 b -115 211 -83 318 -93 283 b -148 88 -149 94 -148 99 b -148 87 -148 88 -148 88 b -123 53 -148 67 -137 53 b -113 55 -120 53 -117 54 b 18 133 -111 57 17 132 b 46 227 19 134 46 225 b 53 251 46 231 48 239 b 78 334 57 261 78 331 b 62 348 78 340 71 347 z',\n    },\n    ornamentTurn: {\n      x_min: -310,\n      x_max: 310,\n      y_min: -143,\n      y_max: 143,\n      ha: 286,\n      o: 'm -272 205 b -264 206 -270 206 -267 206 b -202 198 -249 206 -221 202 b 44 48 -119 177 -37 127 b 261 -91 117 -24 191 -71 b 307 -100 285 -97 297 -100 b 318 -99 311 -100 314 -99 b 401 2 362 -92 396 -51 b 402 11 401 5 402 8 b 321 87 402 58 366 87 b 258 70 301 87 279 81 b 221 60 246 63 233 60 b 157 125 186 60 157 86 b 213 194 157 158 175 179 b 277 206 234 202 256 206 b 437 90 348 206 413 162 b 447 24 444 69 447 47 b 365 -163 447 -46 416 -120 b 257 -206 331 -192 297 -206 b 178 -192 233 -206 207 -201 b -47 -48 101 -168 28 -121 b -250 86 -116 20 -180 62 b -312 99 -275 94 -295 99 b -361 83 -331 99 -346 94 b -402 6 -388 65 -402 36 b -349 -77 -402 -28 -384 -62 b -314 -85 -337 -82 -326 -85 b -260 -70 -297 -85 -280 -80 b -224 -60 -247 -63 -235 -60 b -188 -71 -211 -60 -199 -64 b -160 -126 -169 -84 -160 -105 b -189 -181 -160 -147 -169 -168 b -272 -204 -211 -195 -242 -204 b -293 -202 -279 -204 -286 -203 b -447 -6 -385 -189 -447 -103 b -435 68 -447 18 -443 43 b -280 204 -411 141 -349 196 b -272 205 -277 205 -273 205 z',\n    },\n    ornamentTurnSlash: {\n      x_min: -310,\n      x_max: 310,\n      y_min: -201,\n      y_max: 201,\n      ha: 402,\n      o: 'm -10 288 b -2 289 -7 289 -4 289 b 19 276 8 289 16 284 b 21 171 21 272 21 271 l 21 71 l 43 49 b 261 -90 120 -26 191 -71 b 307 -100 285 -97 297 -100 b 318 -99 311 -100 314 -99 b 401 2 362 -91 396 -50 b 402 12 402 5 402 8 b 321 87 402 58 367 87 b 258 70 301 87 280 82 b 221 60 246 63 233 60 b 157 125 187 60 157 86 b 214 194 157 158 175 180 b 277 206 235 202 256 206 b 431 106 342 206 402 169 b 447 24 442 82 447 54 b 443 -24 447 9 446 -7 b 258 -206 423 -127 344 -206 b 257 -206 258 -206 258 -206 b 23 -109 190 -205 102 -169 l 21 -107 l 21 -190 b 21 -223 21 -203 21 -214 b 14 -283 21 -282 20 -277 b -1 -289 10 -287 5 -289 b -22 -276 -10 -289 -18 -284 b -23 -171 -23 -272 -23 -271 l -23 -71 l -46 -49 b -250 86 -119 22 -179 62 b -312 99 -275 95 -295 99 b -360 84 -330 99 -345 94 b -401 7 -388 66 -401 36 b -349 -77 -401 -28 -383 -62 b -314 -85 -337 -82 -326 -85 b -260 -69 -297 -85 -279 -80 b -223 -60 -247 -63 -235 -60 b -177 -81 -206 -60 -190 -67 b -159 -125 -165 -93 -159 -109 b -188 -180 -159 -147 -169 -168 b -268 -203 -212 -196 -240 -203 b -376 -165 -306 -203 -345 -190 b -447 -7 -425 -124 -447 -65 b -293 202 -447 86 -390 180 b -260 206 -283 204 -272 206 b -25 109 -194 206 -105 170 l -23 107 l -23 189 b -22 276 -23 271 -23 272 b -10 288 -20 281 -15 286 z',\n    },\n    ornamentMordent: {\n      x_min: -296,\n      x_max: 296,\n      y_min: -215,\n      y_max: 198,\n      ha: 413,\n      o: 'm -11 284 b -3 285 -9 285 -6 285 b 17 273 5 285 14 280 b 19 164 19 270 19 269 l 19 59 l 68 118 b 118 179 98 155 117 178 b 131 182 122 181 127 182 b 143 179 136 182 140 181 b 307 18 145 177 232 92 l 326 -1 l 356 36 b 404 81 393 81 393 81 l 404 81 b 426 59 417 81 426 71 b 424 50 426 56 426 53 b 236 -179 421 44 241 -176 b 224 -182 233 -181 228 -182 b 211 -178 219 -182 215 -181 b 119 -89 210 -178 169 -137 b 29 0 70 -40 30 0 b 29 0 29 0 29 0 b 24 -6 29 0 27 -3 l 19 -12 l 19 -152 b 19 -218 19 -179 19 -200 b 13 -303 19 -308 19 -298 b -3 -310 9 -308 3 -310 b -23 -297 -11 -310 -19 -305 b -25 -180 -24 -294 -24 -294 l -25 -66 l -70 -121 b -118 -178 -99 -156 -116 -177 b -131 -182 -122 -181 -127 -182 b -144 -178 -135 -182 -140 -181 b -307 -18 -145 -177 -233 -91 l -326 1 l -356 -36 b -404 -81 -393 -81 -393 -81 l -404 -81 b -426 -59 -417 -81 -426 -71 b -424 -50 -426 -56 -426 -53 b -236 179 -421 -44 -241 176 b -224 182 -233 181 -228 182 b -211 179 -219 182 -215 181 b -48 18 -209 177 -116 86 l -29 0 l -27 2 l -25 5 l -25 137 b -23 272 -25 267 -25 268 b -11 284 -21 277 -16 282 z',\n    },\n    ornamentShortTrill: {\n      x_min: -296,\n      x_max: 296,\n      y_min: -127,\n      y_max: 127,\n      ha: 253,\n      o: 'm -231 181 b -225 182 -229 182 -227 182 b -211 179 -220 182 -215 181 b -119 89 -210 178 -169 137 b -29 0 -70 40 -30 0 b 44 88 -29 0 4 40 b 118 179 89 144 117 178 b 131 182 122 181 127 182 b 143 179 136 182 140 181 b 307 18 145 177 232 92 l 326 -1 l 356 36 b 404 81 393 81 393 81 l 404 81 b 426 59 417 81 426 71 b 424 50 426 56 426 53 b 236 -179 421 44 241 -176 b 224 -182 233 -181 228 -182 b 211 -178 219 -182 215 -181 b 119 -89 210 -178 169 -137 b 29 0 70 -40 30 0 b -44 -88 29 0 -4 -40 b -118 -179 -89 -144 -117 -178 b -131 -182 -122 -181 -127 -182 b -144 -178 -135 -182 -140 -181 b -307 -18 -145 -177 -233 -91 l -326 1 l -356 -36 b -404 -81 -393 -81 -393 -81 l -404 -81 b -426 -59 -417 -81 -426 -71 b -424 -50 -426 -56 -426 -53 b -236 179 -421 -44 -241 176 b -231 181 -235 179 -233 181 z',\n    },\n    ornamentTremblement: {\n      x_min: -419,\n      x_max: 419,\n      y_min: -127,\n      y_max: 127,\n      ha: 253,\n      o: 'm -409 181 b -402 182 -407 182 -404 182 b -389 179 -397 182 -392 181 b -297 89 -387 178 -346 137 b -207 0 -248 40 -207 0 l -207 0 b -134 88 -206 0 -174 40 b -59 179 -88 144 -61 178 b -46 182 -55 181 -51 182 b -34 179 -42 182 -37 181 b 58 89 -33 178 9 137 b 148 0 107 40 148 0 l 148 0 b 221 88 148 0 181 40 b 296 179 267 144 294 178 b 308 182 300 181 304 182 b 321 179 313 182 317 181 b 485 18 323 177 409 92 l 503 -1 l 533 36 b 581 81 570 81 570 81 l 582 81 b 604 59 594 81 604 71 b 602 50 604 56 603 53 b 414 -179 599 44 418 -176 b 401 -182 410 -181 406 -182 b 388 -178 397 -182 392 -181 b 297 -89 387 -178 346 -137 b 207 0 248 -40 207 0 l 207 0 b 134 -88 206 0 174 -40 b 59 -179 88 -144 61 -178 b 46 -182 55 -181 51 -182 b 34 -178 42 -182 37 -181 b -58 -89 33 -178 -9 -137 b -148 0 -107 -40 -148 0 l -148 0 b -221 -88 -148 0 -181 -40 b -296 -179 -267 -144 -294 -178 b -308 -182 -300 -181 -304 -182 b -321 -178 -313 -182 -317 -181 b -485 -18 -323 -177 -411 -91 l -503 1 l -533 -36 b -581 -81 -570 -81 -570 -81 l -582 -81 b -604 -59 -594 -81 -604 -71 b -602 -50 -604 -56 -603 -53 b -414 179 -599 -44 -418 176 b -409 181 -412 179 -410 181 z',\n    },\n    ornamentPrecompAppoggTrill: {\n      x_min: -419,\n      x_max: 419,\n      y_min: -127,\n      y_max: 255,\n      ha: 381,\n      o: 'm -591 365 b -582 367 -588 366 -585 367 b -561 352 -573 367 -564 361 b -560 176 -560 351 -560 303 l -559 2 l -527 41 b -456 128 -509 63 -477 102 b -414 177 -435 154 -416 176 b -400 182 -411 181 -405 182 b -388 179 -396 182 -392 181 b -296 89 -387 178 -346 137 b -206 0 -247 40 -207 0 b -133 88 -206 0 -173 40 b -59 179 -88 144 -60 178 b -46 182 -55 181 -50 182 b -33 179 -41 182 -37 181 b 58 89 -32 178 9 137 b 148 0 108 40 148 0 l 148 0 b 221 88 149 0 182 40 b 296 179 267 144 295 178 b 309 182 300 181 304 182 b 321 179 313 182 318 181 b 485 18 323 177 410 92 l 503 -1 l 533 36 b 581 81 570 81 571 81 l 582 81 b 604 59 595 81 604 71 b 602 50 604 56 603 53 b 414 -179 599 44 419 -176 b 402 -182 410 -181 406 -182 b 389 -178 397 -182 393 -181 b 297 -89 388 -178 346 -137 b 207 0 248 -40 207 0 l 207 0 b 134 -88 207 0 174 -40 b 59 -179 89 -144 61 -178 b 47 -182 56 -181 51 -182 b 34 -178 42 -182 38 -181 b -58 -89 33 -178 -8 -137 b -148 0 -107 -40 -147 0 b -220 -88 -148 0 -181 -40 b -295 -179 -266 -144 -294 -178 b -308 -182 -299 -181 -303 -182 b -321 -178 -312 -182 -317 -181 b -484 -18 -322 -177 -426 -76 l -503 1 l -535 -38 b -570 -79 -558 -67 -567 -77 b -582 -83 -573 -81 -578 -83 b -602 -70 -590 -83 -598 -78 l -604 -67 l -604 141 l -604 349 l -603 353 b -591 365 -601 358 -596 363 z',\n    },\n    ornamentPrecompSlideTrillDAnglebert: {\n      x_min: -433,\n      x_max: 433,\n      y_min: -243,\n      y_max: 127,\n      ha: 370,\n      o: 'm -388 181 b -382 182 -386 182 -384 182 b -368 179 -377 182 -372 181 b -277 89 -367 178 -326 137 b -187 0 -227 40 -187 0 l -187 0 b -114 88 -186 0 -153 40 b -39 179 -68 144 -40 178 b -26 182 -35 181 -30 182 b -14 179 -22 182 -17 181 b 78 89 -12 178 29 137 b 168 0 127 40 168 0 b 241 88 169 0 201 40 b 316 179 287 144 314 178 b 329 182 320 181 324 182 b 341 179 333 182 337 181 b 505 18 343 177 430 92 l 523 -1 l 553 36 b 601 81 590 81 590 81 l 602 81 b 624 59 614 81 624 71 b 622 50 624 56 623 53 b 434 -179 619 44 439 -176 b 421 -182 430 -181 426 -182 b 409 -178 417 -182 412 -181 b 317 -89 407 -178 366 -137 b 227 0 268 -40 227 0 b 154 -88 227 0 194 -40 b 79 -179 108 -144 81 -178 b 67 -182 75 -181 71 -182 b 54 -178 62 -182 58 -181 b -38 -89 53 -178 12 -137 b -128 0 -87 -40 -127 0 b -201 -88 -128 0 -161 -40 b -276 -179 -246 -144 -274 -178 b -288 -182 -279 -181 -284 -182 b -301 -178 -293 -182 -297 -181 b -393 -88 -302 -178 -343 -137 b -483 0 -442 -40 -483 0 b -483 0 -483 0 -483 0 b -505 -27 -484 0 -497 -15 b -579 -235 -554 -92 -579 -166 b -567 -315 -579 -263 -575 -290 b -564 -330 -565 -320 -564 -325 b -585 -351 -564 -342 -572 -351 b -610 -326 -598 -351 -604 -345 b -624 -235 -619 -297 -624 -267 b -547 -8 -624 -159 -597 -79 b -492 60 -538 4 -533 10 b -426 140 -472 84 -443 120 b -388 181 -396 176 -394 179 z',\n    },\n    ornamentPrecompSlideTrillBach: {\n      x_min: -433,\n      x_max: 433,\n      y_min: -243,\n      y_max: 198,\n      ha: 442,\n      o: 'm 186 284 b 194 285 189 285 192 285 b 215 273 203 285 211 280 b 217 164 216 270 216 269 l 217 59 l 265 118 b 316 179 295 155 314 178 b 329 182 320 181 324 182 b 341 179 333 182 337 181 b 505 18 343 177 430 92 l 523 -1 l 553 36 b 601 81 590 81 590 81 l 602 81 b 624 59 614 81 624 71 b 622 50 624 56 623 53 b 434 -179 619 44 439 -176 b 421 -182 430 -181 426 -182 b 409 -178 417 -182 412 -181 b 317 -89 407 -178 366 -137 b 227 0 268 -40 227 0 b 227 0 227 0 227 0 b 222 -6 227 0 224 -3 l 217 -12 l 217 -152 b 217 -218 217 -179 217 -200 b 210 -303 217 -308 216 -298 b 195 -310 206 -308 201 -310 b 175 -297 187 -310 178 -305 b 173 -180 173 -294 173 -294 l 173 -66 l 127 -121 b 79 -178 99 -156 81 -177 b 67 -182 76 -181 71 -182 b 54 -178 62 -182 58 -181 b -38 -89 53 -178 12 -137 b -128 0 -87 -40 -127 0 b -201 -88 -128 0 -161 -40 b -276 -179 -246 -144 -274 -178 b -288 -182 -279 -181 -284 -182 b -301 -178 -293 -182 -297 -181 b -393 -88 -302 -178 -343 -137 b -483 0 -442 -40 -483 0 b -483 0 -483 0 -483 0 b -505 -27 -484 0 -497 -15 b -579 -235 -554 -92 -579 -166 b -567 -315 -579 -263 -575 -290 b -564 -330 -565 -320 -564 -325 b -586 -351 -564 -342 -572 -351 b -610 -326 -598 -351 -604 -345 b -624 -235 -619 -297 -624 -267 b -547 -8 -624 -159 -597 -79 b -492 60 -538 4 -533 10 b -426 140 -472 84 -443 120 b -393 179 -408 162 -395 178 b -381 182 -390 181 -385 182 b -368 179 -376 182 -372 181 b -277 89 -367 178 -326 137 b -187 0 -227 40 -187 0 l -187 0 b -114 88 -186 0 -153 40 b -39 179 -68 144 -40 178 b -26 182 -35 181 -30 182 b -14 179 -22 182 -17 181 b 150 18 -12 177 81 86 l 168 0 l 171 2 l 173 5 l 173 137 b 174 272 173 267 173 268 b 186 284 176 277 181 282 z',\n    },\n    ornamentPrecompTrillSuffixDandrieu: {\n      x_min: -433,\n      x_max: 433,\n      y_min: -127,\n      y_max: 244,\n      ha: 370,\n      o: 'm 577 349 b 585 351 580 350 582 351 b 601 345 591 351 597 349 b 624 229 613 332 624 275 b 622 204 624 220 623 211 b 559 27 615 139 595 83 b 492 -60 546 6 541 0 b 426 -140 472 -84 443 -120 b 393 -179 408 -162 395 -178 b 381 -182 390 -181 385 -182 b 368 -178 376 -182 372 -181 b 277 -89 367 -178 326 -137 b 187 0 227 -40 187 0 l 187 0 b 114 -88 186 0 153 -40 b 39 -179 68 -144 40 -178 b 26 -182 35 -181 31 -182 b 13 -178 22 -182 17 -181 b -78 -89 12 -178 -29 -137 b -168 0 -127 -40 -168 0 b -241 -88 -169 0 -201 -40 b -316 -179 -287 -144 -314 -178 b -329 -182 -320 -181 -324 -182 b -341 -178 -333 -182 -337 -181 b -505 -18 -343 -177 -431 -91 l -523 1 l -553 -36 b -601 -81 -590 -81 -590 -81 l -602 -81 b -624 -59 -614 -81 -624 -71 b -622 -50 -624 -56 -623 -53 b -434 179 -619 -44 -439 176 b -421 182 -430 181 -426 182 b -409 179 -417 182 -412 181 b -317 89 -408 178 -366 137 b -227 0 -268 40 -227 0 b -154 88 -227 0 -194 40 b -79 179 -108 144 -81 178 b -66 182 -75 181 -71 182 b -54 179 -62 182 -58 181 b 38 89 -53 178 -12 137 b 128 0 87 40 127 0 b 201 88 128 0 161 40 b 276 179 246 144 274 178 b 288 182 279 181 284 182 b 301 179 293 182 297 181 b 393 88 302 178 343 137 b 483 0 442 40 483 0 b 483 0 483 0 483 0 b 505 27 484 0 497 15 b 579 235 554 92 579 166 b 567 315 579 263 575 290 b 564 330 565 321 564 326 b 577 349 564 339 568 346 z',\n    },\n    ornamentPrecompDoubleCadenceUpperPrefix: {\n      x_min: -439,\n      x_max: 439,\n      y_min: -127,\n      y_max: 236,\n      ha: 363,\n      o: 'm -564 338 b -555 340 -561 339 -558 340 b -534 318 -544 340 -534 331 b -534 317 -534 318 -534 317 b -541 296 -534 311 -534 311 b -588 116 -572 236 -588 175 b -583 62 -588 98 -586 80 b -554 -21 -578 34 -566 -2 l -552 -24 l -511 26 b -430 126 -488 54 -452 99 b -386 177 -407 153 -388 176 b -372 182 -382 181 -377 182 b -360 179 -368 182 -364 181 b -268 89 -359 178 -318 137 b -178 0 -219 40 -179 0 b -105 88 -178 0 -145 40 b -30 179 -60 144 -32 178 b -18 182 -27 181 -22 182 b -5 179 -13 182 -9 181 b 86 89 -4 178 37 137 b 176 0 136 40 176 0 l 176 0 b 249 88 177 0 210 40 b 324 179 295 144 323 178 b 337 182 328 181 333 182 b 349 179 341 182 346 181 b 513 18 351 177 438 92 l 532 -1 l 562 36 b 610 81 599 81 599 81 l 610 81 b 632 59 623 81 632 71 b 630 50 632 56 631 53 b 442 -179 627 44 447 -176 b 430 -182 438 -181 434 -182 b 417 -178 425 -182 421 -181 b 325 -89 416 -178 375 -137 b 235 0 276 -40 236 0 l 235 0 b 162 -88 235 0 202 -40 b 87 -179 117 -144 89 -178 b 75 -182 84 -181 79 -182 b 62 -178 70 -182 66 -181 b -29 -89 61 -178 20 -137 b -119 0 -79 -40 -119 0 b -192 -88 -120 0 -153 -40 b -267 -179 -238 -144 -266 -178 b -280 -182 -271 -181 -275 -182 b -293 -178 -284 -182 -289 -181 b -456 -18 -294 -177 -398 -76 l -475 1 l -507 -38 b -554 -83 -543 -82 -543 -83 l -554 -83 b -576 -68 -562 -83 -568 -79 b -632 115 -613 -19 -632 46 b -593 292 -632 173 -619 233 b -564 338 -579 323 -571 335 z',\n    },\n    ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n      x_min: -439,\n      x_max: 439,\n      y_min: -215,\n      y_max: 236,\n      ha: 451,\n      o: 'm -564 338 b -555 340 -561 339 -558 340 b -534 318 -544 340 -534 331 b -534 317 -534 318 -534 317 b -541 296 -534 311 -534 311 b -588 116 -572 236 -588 175 b -583 62 -588 98 -586 80 b -554 -21 -578 34 -566 -2 l -552 -24 l -511 26 b -430 126 -488 54 -452 99 b -386 177 -407 153 -388 176 b -372 182 -382 181 -377 182 b -360 179 -368 182 -364 181 b -268 89 -359 178 -318 137 b -178 0 -219 40 -179 0 b -105 88 -178 0 -145 40 b -30 179 -60 144 -32 178 b -18 182 -27 181 -22 182 b -5 179 -13 182 -9 181 b 158 18 -4 177 89 86 l 177 0 l 179 2 l 181 5 l 181 137 b 183 272 181 267 181 268 b 203 285 186 280 195 285 b 218 279 209 285 214 283 b 225 164 225 273 225 284 l 225 59 l 274 118 b 324 179 304 155 323 178 b 337 182 328 181 333 182 b 349 179 341 182 346 181 b 513 18 351 177 438 92 l 532 -1 l 562 36 b 610 81 599 81 599 81 l 610 81 b 632 59 623 81 632 71 b 630 50 632 56 631 53 b 442 -179 627 44 447 -176 b 430 -182 438 -181 434 -182 b 417 -178 425 -182 421 -181 b 325 -89 416 -178 375 -137 b 235 0 276 -40 236 0 b 235 0 235 0 235 0 b 230 -6 235 0 232 -3 l 225 -12 l 225 -152 b 225 -218 225 -179 225 -200 b 219 -303 225 -308 224 -298 b 203 -310 214 -308 209 -310 b 183 -297 195 -310 187 -305 b 181 -180 182 -294 182 -294 l 181 -66 l 136 -121 b 88 -178 107 -156 89 -177 b 75 -182 84 -181 79 -182 b 62 -178 70 -182 66 -181 b -29 -89 61 -178 20 -137 b -119 0 -79 -40 -119 0 b -192 -88 -120 0 -153 -40 b -267 -179 -238 -144 -266 -178 b -280 -182 -271 -181 -275 -182 b -293 -178 -284 -182 -289 -181 b -456 -18 -294 -177 -398 -76 l -475 1 l -507 -38 b -554 -83 -543 -82 -543 -83 l -554 -83 b -576 -68 -562 -83 -568 -79 b -632 115 -613 -19 -632 46 b -593 292 -632 173 -619 233 b -564 338 -579 323 -571 335 z',\n    },\n    ornamentPrecompTrillLowerSuffix: {\n      x_min: -439,\n      x_max: 439,\n      y_min: -236,\n      y_max: 127,\n      ha: 362,\n      o: 'm -437 181 b -430 182 -435 182 -433 182 b -417 179 -426 182 -420 181 b -325 89 -416 178 -375 137 b -235 0 -276 40 -235 0 l -235 0 b -162 88 -235 0 -202 40 b -87 179 -117 144 -89 178 b -75 182 -84 181 -79 182 b -62 179 -70 182 -66 181 b 29 89 -61 178 -20 137 b 119 0 79 40 119 0 b 192 88 120 0 153 40 b 267 179 238 144 266 178 b 280 182 271 181 276 182 b 292 179 284 182 289 181 b 456 18 294 177 396 77 l 475 -1 l 507 38 b 554 83 543 82 543 83 l 554 83 b 576 68 563 83 568 79 b 632 -116 613 19 632 -46 b 607 -257 632 -162 624 -210 b 571 -334 596 -287 578 -327 b 556 -340 567 -338 561 -340 b 535 -326 547 -340 538 -335 b 533 -319 534 -323 533 -321 b 541 -296 533 -314 536 -308 b 588 -117 572 -236 588 -175 b 579 -40 588 -91 585 -65 b 554 21 573 -19 563 7 l 552 24 l 511 -26 b 430 -126 488 -54 452 -99 b 386 -177 407 -153 388 -176 b 373 -182 382 -181 377 -182 b 360 -178 368 -182 364 -181 b 268 -89 359 -178 318 -137 b 178 0 219 -40 179 0 l 178 0 b 105 -88 178 0 145 -40 b 30 -179 60 -144 32 -178 b 18 -182 27 -181 22 -182 b 5 -178 13 -182 9 -181 b -86 -89 4 -178 -37 -137 b -176 0 -136 -40 -176 0 l -176 0 b -249 -88 -177 0 -210 -40 b -324 -179 -295 -144 -323 -178 b -337 -182 -328 -181 -332 -182 b -349 -178 -341 -182 -346 -181 b -513 -18 -351 -177 -439 -91 l -532 1 l -562 -36 b -610 -81 -599 -81 -599 -81 l -610 -81 b -632 -59 -623 -81 -632 -71 b -630 -50 -632 -56 -631 -53 b -442 179 -627 -44 -447 176 b -437 181 -441 179 -438 181 z',\n    },\n    stringsDownBow: {\n      x_min: -168,\n      x_max: 168,\n      y_min: 0,\n      y_max: 353,\n      ha: 353,\n      o: 'm -228 506 b 3 508 -225 507 -111 508 b 228 506 114 508 225 507 b 240 494 233 504 238 499 b 242 254 241 491 242 373 b 240 14 242 135 241 16 b 220 0 237 5 228 0 b 204 6 214 0 208 2 b 198 89 198 12 198 3 b 198 145 198 104 198 123 l 198 273 l 0 273 l -198 273 l -198 145 b -198 89 -198 123 -198 104 b -204 6 -198 3 -198 12 b -220 0 -208 2 -214 0 b -240 14 -228 0 -237 5 b -242 254 -241 16 -242 135 b -240 494 -242 373 -241 491 b -228 506 -238 499 -233 504 z',\n    },\n    stringsUpBow: {\n      x_min: -110,\n      x_max: 110,\n      y_min: 0,\n      y_max: 277,\n      ha: 277,\n      o: 'm -144 397 b -137 398 -142 398 -140 398 b -117 387 -129 398 -120 394 b -58 234 -116 385 -90 317 b 0 84 -26 152 0 84 b 58 234 0 84 26 152 b 117 387 90 317 116 385 b 136 398 121 395 128 398 b 158 376 147 398 158 390 l 158 370 l 89 191 b 20 11 51 93 20 12 b 0 0 16 4 8 0 b -19 11 -8 0 -16 4 b -158 375 -25 21 -158 370 b -158 376 -158 375 -158 376 b -144 397 -158 386 -153 394 z',\n    },\n    stringsHarmonic: {\n      x_min: -82,\n      x_max: 82,\n      y_min: -82,\n      y_max: 82,\n      ha: 163,\n      o: 'm -19 116 b 1 118 -12 117 -6 118 b 118 0 65 118 118 63 b 114 -30 118 -10 116 -20 b -1 -118 100 -85 50 -118 b -83 -83 -30 -118 -60 -107 b -118 -1 -107 -60 -118 -30 b -19 116 -118 53 -81 105 z m 14 99 b 0 100 9 100 4 100 b -101 0 -57 100 -101 53 b -90 -45 -101 -15 -97 -30 b 0 -100 -71 -82 -36 -100 b 90 -45 36 -100 71 -82 b 101 -1 97 -30 101 -15 b 14 99 101 47 65 92 z',\n    },\n    pluckedSnapPizzicatoAbove: {\n      x_min: -110,\n      x_max: 110,\n      y_min: -110,\n      y_max: 205,\n      ha: 315,\n      o: 'm -9 293 b 0 295 -6 294 -3 295 b 20 281 9 295 17 290 b 22 217 22 278 22 276 l 22 157 l 25 157 b 153 40 85 148 138 100 b 158 0 157 26 158 13 b 40 -153 158 -71 111 -135 b 0 -158 26 -157 13 -158 b -154 -40 -71 -158 -136 -111 b -158 -1 -157 -27 -158 -14 b -25 157 -158 76 -102 146 l -22 157 l -22 217 b -21 281 -22 276 -22 278 b -9 293 -19 286 -13 291 z m -22 54 b -23 112 -22 108 -22 112 b -23 112 -23 112 -23 112 b -81 80 -37 111 -65 96 b -114 1 -104 57 -114 29 b 0 -114 -114 -58 -69 -114 b 114 1 68 -114 114 -58 b 80 80 114 29 104 57 b 22 112 65 96 35 112 b 22 54 22 112 22 92 b 20 -8 22 -3 22 -5 b 0 -22 17 -17 9 -22 b -16 -16 -6 -22 -11 -20 b -22 34 -22 -10 -22 -12 b -22 54 -22 40 -22 46 z',\n    },\n    pluckedSnapPizzicatoBelow: {\n      x_min: -110,\n      x_max: 110,\n      y_min: -205,\n      y_max: 110,\n      ha: 315,\n      o: 'm 9 -293 b 0 -295 6 -294 3 -295 b -20 -281 -9 -295 -17 -290 b -22 -217 -22 -278 -22 -276 l -22 -157 l -25 -157 b -153 -40 -85 -148 -138 -100 b -158 0 -157 -26 -158 -13 b -40 153 -158 71 -111 135 b 0 158 -26 157 -13 158 b 154 40 71 158 136 111 b 158 1 157 27 158 14 b 25 -157 158 -76 102 -146 l 22 -157 l 22 -217 b 21 -281 22 -276 22 -278 b 9 -293 19 -286 13 -291 z m 22 -54 b 23 -112 22 -108 22 -112 b 23 -112 23 -112 23 -112 b 81 -80 37 -111 65 -96 b 114 -1 104 -57 114 -29 b 0 114 114 58 69 114 b -114 -1 -68 114 -114 58 b -80 -80 -114 -29 -104 -57 b -22 -112 -65 -96 -35 -112 b -22 -54 -22 -112 -22 -92 b -20 8 -22 3 -22 5 b 0 22 -17 17 -9 22 b 16 16 6 22 11 20 b 22 -34 22 10 22 12 b 22 -54 22 -40 22 -46 z',\n    },\n    pluckedLeftHandPizzicato: {\n      x_min: -155,\n      x_max: 155,\n      y_min: -157,\n      y_max: 157,\n      ha: 315,\n      o: 'm -9 225 b 0 227 -6 226 -3 227 b 20 213 9 227 17 221 b 22 116 22 209 22 208 l 22 22 l 114 22 b 152 22 129 22 141 22 b 218 16 218 22 212 21 b 224 0 222 11 224 6 b 210 -20 224 -9 219 -17 b 114 -22 207 -22 205 -22 l 22 -22 l 22 -116 b 22 -154 22 -131 22 -143 b 16 -220 22 -221 21 -214 b 0 -227 11 -225 6 -227 b -20 -213 -9 -227 -17 -222 b -22 -116 -22 -209 -22 -208 l -22 -22 l -114 -22 b -210 -20 -205 -22 -207 -22 b -224 0 -219 -17 -224 -9 b -218 16 -224 6 -222 11 b -152 22 -212 21 -218 22 b -114 22 -141 22 -129 22 l -22 22 l -22 116 b -20 213 -22 208 -22 209 b -9 225 -19 218 -13 223 z',\n    },\n    keyboardPedalPed: {\n      x_min: 0,\n      x_max: 782,\n      y_min: -1,\n      y_max: 500,\n      ha: 501,\n      o: 'm 309 719 b 335 720 318 720 327 720 b 521 650 409 720 473 696 b 582 517 561 610 582 560 b 528 423 582 476 564 441 b 483 411 513 415 498 411 b 392 480 443 411 406 437 b 384 516 386 496 384 508 b 400 535 384 529 389 535 b 417 520 409 535 414 530 b 458 494 421 503 438 494 b 498 507 472 494 486 498 b 520 552 513 517 520 533 b 469 645 520 582 502 619 b 349 687 437 670 389 687 l 344 687 l 335 671 b 286 544 299 609 286 577 b 286 543 286 544 286 543 b 341 449 286 511 298 491 b 371 411 359 430 364 424 b 385 358 380 394 385 377 b 378 317 385 345 383 331 b 302 165 365 271 336 212 b 298 159 300 162 298 159 b 298 159 298 159 298 159 b 305 160 299 159 302 159 b 336 162 315 161 326 162 b 486 106 392 162 445 143 l 492 101 l 512 117 b 533 134 523 126 532 133 b 534 136 534 135 534 135 b 533 144 534 138 534 140 b 530 188 531 159 530 174 b 571 320 530 238 544 283 b 657 390 587 342 634 380 b 686 397 666 395 676 397 b 763 335 721 397 755 372 b 766 315 765 328 766 321 b 740 251 766 291 756 267 b 699 219 736 247 702 221 b 636 172 697 218 662 192 b 614 153 618 158 614 154 b 614 153 614 153 614 153 b 645 91 621 129 636 100 b 694 73 657 78 675 73 b 797 123 728 73 769 91 l 800 127 l 799 134 b 795 176 796 148 795 162 b 947 403 795 266 851 351 b 950 405 949 404 950 405 b 944 414 950 407 948 409 b 659 583 875 496 774 556 b 636 603 641 587 636 591 b 654 620 636 614 642 620 b 666 619 658 620 662 620 b 1113 282 884 577 1062 442 b 1126 198 1122 253 1126 225 b 954 -1 1126 87 1054 -1 b 930 1 946 -1 938 0 b 817 83 883 7 841 37 b 815 87 816 85 815 87 b 808 79 814 87 812 84 b 664 0 772 29 717 0 b 620 7 649 0 634 2 b 546 92 584 19 565 40 l 544 99 l 540 97 b 480 49 539 95 512 74 b 414 1 419 0 420 1 l 414 1 b 396 17 404 1 399 5 b 284 110 381 72 333 110 b 266 108 278 110 272 110 l 258 107 l 247 94 b 164 2 213 53 169 4 b 156 0 161 0 159 0 b 139 17 147 0 139 8 b 140 23 139 19 140 21 b 144 34 141 24 142 29 b 234 137 158 79 189 114 b 260 164 244 143 244 142 b 319 290 300 217 319 259 b 281 349 319 312 313 322 b 223 453 250 376 229 414 b 222 472 223 459 222 466 b 296 673 222 522 246 587 l 303 685 l 300 685 b 290 684 299 685 294 684 b 60 496 171 668 77 591 b 59 477 59 490 59 483 b 76 426 59 453 66 431 b 100 420 84 422 92 420 b 162 487 131 420 160 448 b 179 507 163 502 168 507 b 196 479 192 507 196 501 b 196 478 196 478 196 478 b 88 335 195 397 151 338 b 83 335 86 335 84 335 b 0 443 31 335 0 375 l 0 443 b 309 719 0 583 138 706 z m 981 361 b 976 368 978 366 977 368 b 968 362 974 368 972 366 b 872 175 908 318 872 247 b 877 131 872 160 874 145 b 943 34 887 82 914 43 b 949 34 945 34 947 34 b 1018 127 973 34 1004 75 b 1027 198 1024 151 1027 174 b 981 361 1027 253 1011 309 z m 665 338 b 657 339 662 339 660 339 b 641 336 652 339 647 338 b 614 293 635 333 622 312 b 602 221 607 274 602 246 b 604 198 602 213 603 205 b 606 191 605 193 605 191 b 608 193 606 191 607 192 b 666 238 613 197 642 219 b 695 264 690 256 691 257 b 702 290 700 272 702 281 b 665 338 702 312 688 334 z',\n    },\n    keyboardPedalUp: {\n      x_min: 0,\n      x_max: 435,\n      y_min: 65,\n      y_max: 500,\n      ha: 435,\n      o: 'm 300 719 b 311 720 303 720 307 720 b 332 718 319 720 327 719 b 379 654 361 709 379 685 b 354 601 379 632 374 620 b 331 558 338 585 331 572 b 336 536 331 551 333 544 b 374 512 344 521 358 512 b 389 514 379 512 384 513 b 422 575 414 523 422 538 b 474 646 422 614 441 639 b 489 648 479 647 484 648 b 555 581 527 648 555 615 b 535 535 555 565 549 549 b 479 515 520 520 508 516 b 450 512 462 515 458 514 b 418 468 429 505 418 487 b 438 433 418 455 425 441 b 464 424 447 427 455 424 b 509 449 477 424 491 432 b 557 473 526 466 538 472 b 561 473 558 473 560 473 b 627 407 599 473 627 442 b 620 378 627 397 625 387 b 561 341 609 354 588 341 l 560 341 b 508 365 538 341 527 346 b 465 390 491 383 478 390 b 457 389 462 390 460 390 b 418 347 433 384 418 367 b 424 325 418 340 420 332 b 479 299 433 306 446 300 b 535 279 509 298 520 294 b 555 233 549 266 555 249 b 489 166 555 199 527 166 b 474 167 484 166 480 166 b 422 239 441 175 422 200 b 393 298 422 273 414 289 b 374 302 386 301 380 302 b 332 266 354 302 337 288 b 331 255 331 262 331 258 b 355 213 331 242 338 230 b 379 160 374 193 379 182 l 379 160 b 313 93 379 120 348 93 b 272 108 299 93 285 98 b 247 160 256 121 247 140 b 259 198 247 173 251 187 b 272 213 260 200 266 206 b 296 255 289 230 296 242 b 295 266 296 258 296 262 b 253 302 290 288 273 302 b 234 298 247 302 241 301 b 205 239 213 289 205 273 b 153 167 205 200 186 175 b 138 166 148 166 143 166 b 73 232 101 166 73 197 b 82 267 73 244 76 256 b 148 299 95 289 113 298 b 182 304 168 299 171 300 b 197 315 189 307 192 309 b 209 346 205 325 209 336 b 179 386 209 364 198 379 b 162 390 173 389 167 390 b 119 365 148 390 136 382 b 104 352 113 360 107 354 b 67 341 92 344 79 341 b 2 390 38 341 10 359 b 0 407 1 396 0 401 b 66 473 0 443 30 473 b 83 471 72 473 77 473 b 118 449 96 468 104 463 b 161 424 136 432 149 424 b 163 424 161 424 162 424 b 209 467 191 427 209 445 b 203 489 209 474 207 482 b 148 515 193 509 180 515 b 92 535 119 516 107 520 b 72 581 78 549 72 565 b 138 648 72 615 100 648 b 153 646 143 648 148 647 b 205 575 186 639 205 614 b 238 514 205 538 213 523 b 253 512 243 513 248 512 b 291 536 269 512 283 521 b 296 558 294 544 296 551 b 273 601 296 572 289 584 b 254 624 261 612 258 616 b 247 654 249 634 247 644 b 300 719 247 684 268 712 z m 327 475 b 313 476 322 476 318 476 b 244 407 274 476 244 443 b 252 376 244 396 247 386 b 313 338 265 350 289 338 b 375 376 338 338 362 350 b 383 407 380 386 383 396 b 327 475 383 438 361 468 z',\n    },\n    pictChokeCymbal: {\n      x_min: 0,\n      x_max: 168,\n      y_min: -155,\n      y_max: 155,\n      ha: 311,\n      o: 'm 96 223 b 107 224 100 224 103 224 b 236 104 164 224 218 174 b 242 55 240 88 242 71 b 66 -209 242 -42 175 -144 b 33 -224 48 -219 39 -224 b 25 -219 30 -224 28 -222 b 23 -213 24 -216 23 -215 b 36 -199 23 -208 28 -204 b 130 -56 96 -166 130 -110 b 111 8 130 -34 124 -12 l 110 10 l 100 11 b 6 82 58 12 19 42 b 0 117 2 94 0 105 b 96 223 0 170 40 217 z',\n    },\n    wiggleArpeggiatoUp: {\n      x_min: -8,\n      x_max: 269,\n      y_min: 0,\n      y_max: 126,\n      ha: 126,\n      o: 'm 103 180 b 118 181 108 181 113 181 b 223 126 151 181 184 164 b 299 69 250 100 280 78 b 311 67 303 68 307 67 b 359 90 325 67 342 75 b 376 102 372 101 372 102 l 376 102 b 388 91 383 102 388 96 b 385 84 388 88 387 86 b 322 25 379 76 342 42 b 258 0 301 8 280 0 b 153 56 226 0 192 18 b 78 112 127 81 97 103 b 65 114 74 114 70 114 b 17 91 51 114 35 106 b 1 80 5 80 5 80 l 0 80 b -11 91 -7 80 -11 85 b -9 97 -11 93 -10 95 b 55 156 -3 105 34 140 b 103 180 71 170 88 178 z',\n    },\n    arrowheadBlackUp: {\n      x_min: 11,\n      x_max: 239,\n      y_min: -6,\n      y_max: 269,\n      ha: 275,\n      o: 'm 171 386 b 179 387 174 387 176 387 b 201 378 187 387 196 384 b 212 345 206 372 206 372 b 333 45 237 235 282 123 b 344 19 343 29 344 27 b 317 -8 344 2 332 -8 b 299 -3 312 -8 305 -7 b 180 30 262 19 221 30 b 74 4 144 30 108 21 b 61 -3 70 2 64 -1 b 43 -8 55 -7 48 -8 b 16 19 28 -8 16 2 b 27 45 16 27 17 29 b 148 344 78 123 122 233 b 159 378 155 373 154 372 b 171 386 161 381 167 385 z',\n    },\n    arrowheadBlackDown: {\n      x_min: 11,\n      x_max: 239,\n      y_min: 6,\n      y_max: 281,\n      ha: 275,\n      o: 'm 35 403 b 43 405 37 404 40 405 b 62 398 49 405 55 403 b 79 390 65 396 73 392 b 180 367 111 374 145 367 b 298 398 221 367 262 377 b 318 404 305 402 312 404 b 344 377 332 404 344 394 b 333 351 344 369 343 367 b 212 51 282 273 237 161 b 204 23 207 28 206 26 b 180 8 199 13 189 8 b 156 23 171 8 162 13 b 150 44 154 25 153 28 b 27 351 125 158 80 271 b 16 377 17 367 16 369 b 35 403 16 389 24 400 z',\n    },\n  },\n  fontFamily: 'GonvilleSmufl',\n  resolution: 1000,\n  generatedOn: '2023-04-20T22:11:26.009Z',\n};\n","export const LelandFont = {\n  glyphs: {\n    bracketTop: {\n      x_min: 0,\n      x_max: 491,\n      y_min: 0,\n      y_max: 279,\n      ha: 279,\n      o: 'm 697 399 b 687 402 694 400 690 402 b 671 395 681 402 674 400 b 249 168 668 390 524 168 l 20 168 b 0 150 9 168 0 161 l 0 20 l 0 0 l 176 0 b 706 374 619 0 704 370 b 707 382 706 376 707 379 b 697 399 707 389 703 395 z',\n    },\n    bracketBottom: {\n      x_min: 0,\n      x_max: 491,\n      y_min: -279,\n      y_max: 0,\n      ha: 279,\n      o: 'm 697 -399 b 707 -382 703 -395 707 -389 b 706 -374 707 -379 706 -376 b 176 0 704 -370 619 0 l 0 0 l 0 -20 l 0 -150 b 20 -168 0 -161 9 -168 l 249 -168 b 671 -395 524 -168 668 -390 b 687 -402 674 -400 681 -402 b 697 -399 690 -402 694 -400 z',\n    },\n    segno: {\n      x_min: 0,\n      x_max: 654,\n      y_min: 0,\n      y_max: 869,\n      ha: 869,\n      o: 'm 546 690 l 838 1207 b 841 1215 840 1210 841 1212 b 832 1233 841 1221 837 1230 l 809 1248 b 798 1251 806 1250 801 1251 b 780 1241 792 1251 783 1247 l 487 721 l 217 860 b 99 995 147 897 99 924 b 236 1165 99 1120 179 1165 b 343 1073 288 1165 325 1130 b 454 988 357 1022 405 988 b 477 991 461 988 469 989 b 541 1076 526 1002 541 1045 b 540 1089 541 1080 541 1084 b 294 1225 534 1116 514 1225 b 0 939 72 1225 0 1053 b 125 706 0 825 42 753 l 397 563 l 104 45 b 102 35 102 42 102 37 b 111 19 102 29 107 22 l 132 3 b 144 0 135 1 141 0 b 148 0 145 0 147 0 b 161 10 153 1 158 6 l 456 531 l 704 403 b 842 256 780 361 842 318 b 706 86 842 131 763 86 b 599 177 654 86 616 120 b 488 262 585 228 537 262 b 465 259 481 262 472 261 b 402 177 418 248 402 206 b 403 163 402 171 402 167 b 649 26 409 135 429 26 b 942 312 871 26 942 199 b 821 549 942 426 901 507 z m 52 444 b 118 416 69 426 95 416 b 183 444 141 416 166 426 b 210 508 200 461 210 485 b 183 573 210 531 200 556 b 118 600 166 590 141 600 b 52 573 95 600 69 590 b 24 508 35 556 24 531 b 52 444 24 485 35 461 z m 760 730 b 825 703 778 713 802 703 b 890 730 848 703 873 713 b 917 795 907 747 917 772 b 890 861 917 818 907 844 b 825 888 873 878 848 888 b 760 861 802 888 778 878 b 733 795 743 844 733 818 b 760 730 733 772 743 747 z',\n    },\n    coda: {\n      x_min: 0,\n      x_max: 745,\n      y_min: -113,\n      y_max: 735,\n      ha: 848,\n      o: 'm 924 467 b 560 896 916 697 757 881 l 560 1038 b 540 1058 560 1050 552 1058 l 524 1058 b 505 1038 513 1058 505 1050 l 505 896 b 150 467 311 877 158 693 l 20 467 b 0 446 9 467 0 458 l 0 432 b 20 412 0 420 9 412 l 150 412 b 505 0 166 193 317 17 l 505 -143 b 524 -163 505 -154 513 -163 l 540 -163 b 560 -143 552 -163 560 -154 l 560 0 b 923 412 753 13 907 190 l 1054 412 b 1073 432 1066 412 1073 420 l 1073 446 b 1054 467 1073 458 1066 467 z m 560 467 l 560 852 b 773 467 716 837 773 671 z m 505 467 l 301 467 b 505 851 301 668 357 831 z m 505 412 l 505 45 b 301 412 366 65 301 219 z m 560 412 l 772 412 b 560 45 772 215 706 60 z',\n    },\n    gClef: {\n      x_min: 0,\n      x_max: 640,\n      y_min: -666,\n      y_max: 1112,\n      ha: 1778,\n      o: 'm 809 -30 b 665 -279 809 -132 768 -238 b 586 186 635 -107 596 122 b 809 -30 716 186 809 98 z m 605 -297 b 521 -305 576 -302 549 -305 b 140 56 315 -305 140 -161 b 390 498 140 232 264 389 b 459 562 415 520 438 540 b 492 357 472 484 482 416 b 272 45 361 318 272 180 b 467 -194 272 -56 351 -194 b 491 -176 478 -194 491 -189 b 459 -144 491 -163 477 -156 b 372 -1 403 -109 372 -72 b 521 177 372 86 436 157 z m 478 1184 b 632 1392 491 1241 557 1392 b 688 1223 654 1392 688 1322 b 478 863 688 1073 577 960 b 462 1037 469 920 462 976 b 478 1184 462 1090 467 1139 z m 176 -739 b 444 -959 176 -834 249 -959 b 622 -910 511 -959 570 -942 b 720 -670 700 -855 720 -760 b 697 -467 720 -613 711 -549 b 675 -338 693 -438 684 -395 b 922 3 816 -292 922 -145 b 557 367 922 220 768 367 b 516 619 543 454 528 539 b 773 1188 668 779 773 959 b 710 1477 773 1319 733 1426 b 608 1601 675 1551 634 1601 b 505 1528 598 1601 553 1584 b 387 1113 413 1418 387 1234 b 419 804 387 1035 395 965 b 312 701 418 802 343 726 b 0 117 181 579 0 405 b 503 -364 0 -153 235 -364 b 616 -354 544 -364 583 -360 b 660 -670 644 -492 660 -593 b 438 -899 660 -819 583 -899 b 370 -891 403 -899 373 -891 b 366 -887 369 -890 366 -888 b 373 -881 366 -884 369 -883 b 508 -721 441 -871 508 -814 b 341 -562 508 -644 449 -562 b 176 -739 240 -562 176 -644 z',\n    },\n    cClef: {\n      x_min: 0,\n      x_max: 627,\n      y_min: -480,\n      y_max: 482,\n      ha: 962,\n      o: 'm 19 675 b 0 657 9 675 0 667 l 0 -654 b 19 -672 0 -664 9 -672 l 122 -672 b 141 -654 132 -672 141 -664 l 141 657 b 122 675 141 667 132 675 z m 903 -376 b 619 -58 903 -197 808 -58 b 505 -95 586 -58 562 -60 b 426 1 503 -89 474 -32 b 505 98 474 35 503 92 b 641 60 560 65 579 60 b 903 379 816 60 903 223 b 580 694 903 580 755 694 b 318 517 472 694 318 649 b 438 400 318 446 367 400 b 546 510 501 400 546 446 b 425 615 546 589 494 615 b 547 651 458 638 503 651 b 723 400 698 651 723 530 b 593 128 723 289 720 128 b 438 279 467 128 441 265 b 418 300 438 281 438 300 b 396 279 397 300 396 281 b 264 29 383 200 344 62 l 264 657 b 246 675 264 667 256 675 b 228 657 236 675 228 667 l 228 -654 b 246 -672 228 -664 236 -672 b 264 -654 256 -672 264 -664 l 264 -26 b 396 -278 348 -60 380 -197 b 418 -297 396 -279 397 -297 b 438 -278 438 -297 438 -279 b 593 -125 441 -262 467 -125 b 723 -397 720 -125 723 -287 b 547 -648 723 -527 698 -648 b 425 -612 503 -648 458 -635 b 441 -613 426 -612 432 -613 b 546 -507 504 -613 546 -569 b 438 -397 546 -444 501 -397 b 318 -514 367 -397 318 -444 b 580 -691 318 -647 472 -691 b 903 -376 755 -691 903 -577 z',\n    },\n    fClef: {\n      x_min: 0,\n      x_max: 664,\n      y_min: -617,\n      y_max: 251,\n      ha: 868,\n      o: 'm 366 361 b 167 298 256 361 168 298 b 37 112 84 236 50 163 b 27 36 30 86 27 60 b 46 -58 27 1 33 -30 b 140 -138 63 -96 96 -124 b 194 -147 157 -144 176 -147 b 287 -122 226 -147 259 -138 b 359 10 331 -98 359 -46 b 289 134 359 60 333 107 b 206 160 259 154 230 160 b 160 153 189 160 173 157 b 109 122 145 147 121 132 b 147 215 114 150 131 192 b 219 279 163 238 194 266 b 351 308 255 300 301 308 b 570 -52 498 308 570 190 b 477 -399 570 -186 520 -314 b 310 -635 429 -494 366 -585 b 17 -837 160 -772 19 -837 b 0 -864 17 -837 0 -847 b 1 -871 0 -867 1 -868 b 27 -888 6 -886 19 -888 b 35 -887 29 -888 33 -887 b 331 -717 36 -887 200 -819 b 528 -544 405 -664 471 -606 b 661 -367 580 -488 625 -428 b 760 -50 724 -259 760 -147 b 670 239 760 69 729 168 b 366 361 602 320 500 361 z m 818 179 b 887 107 818 138 850 107 b 956 179 924 107 956 138 b 887 252 956 219 924 252 b 818 179 850 252 818 219 z m 818 -177 b 887 -251 818 -217 850 -251 b 956 -177 924 -251 956 -217 b 887 -104 956 -137 924 -104 b 818 -177 850 -104 818 -137 z',\n    },\n    unpitchedPercussionClef1: {\n      x_min: 0,\n      x_max: 352,\n      y_min: -252,\n      y_max: 252,\n      ha: 504,\n      o: 'm 19 363 b 0 344 9 363 0 354 l 0 -344 b 19 -363 0 -354 9 -363 l 177 -363 b 196 -344 187 -363 196 -354 l 196 344 b 177 363 196 354 187 363 z m 330 363 b 311 344 320 363 311 354 l 311 -344 b 330 -363 311 -354 320 -363 l 488 -363 b 507 -344 498 -363 507 -354 l 507 344 b 488 363 507 354 498 363 z',\n    },\n    '6stringTabClef': {\n      x_min: 0,\n      x_max: 439,\n      y_min: -743,\n      y_max: 746,\n      ha: 1489,\n      o: 'm 52 1074 l 52 958 l 249 958 l 249 419 l 387 419 l 387 958 l 583 958 l 583 1074 z m 0 -333 l 145 -333 l 192 -196 l 436 -196 l 481 -333 l 632 -333 l 396 334 l 238 334 z m 315 181 l 400 -81 l 229 -81 z m 566 -474 b 393 -402 531 -428 475 -403 l 71 -402 l 71 -1070 l 372 -1070 b 374 -1070 373 -1070 373 -1070 b 465 -1061 405 -1070 435 -1067 b 541 -1027 494 -1056 520 -1043 b 588 -975 560 -1012 575 -995 b 618 -868 608 -943 618 -907 b 592 -770 618 -829 609 -798 b 514 -711 575 -743 549 -724 b 566 -674 537 -700 554 -688 b 596 -576 586 -649 596 -616 b 566 -474 596 -536 586 -503 z m 348 -518 b 428 -528 380 -518 408 -521 b 464 -590 452 -539 464 -559 b 436 -649 464 -619 455 -638 b 366 -665 418 -661 395 -665 l 203 -665 l 203 -518 z m 367 -776 b 435 -788 396 -776 419 -780 b 477 -858 464 -801 477 -824 b 433 -942 477 -900 462 -927 b 366 -953 418 -949 395 -953 l 203 -953 l 203 -776 z',\n    },\n    timeSig0: {\n      x_min: 15,\n      x_max: 389,\n      y_min: -254,\n      y_max: 255,\n      ha: 509,\n      o: 'm 291 367 b 22 0 138 367 22 209 b 291 -366 22 -209 138 -366 b 560 0 444 -366 560 -209 b 291 367 560 209 444 367 z m 376 -200 b 291 -308 376 -252 353 -308 b 206 -200 229 -308 206 -252 l 206 200 b 291 308 206 252 229 308 b 376 200 353 308 376 252 z',\n    },\n    timeSig1: {\n      x_min: 15,\n      x_max: 336,\n      y_min: -243,\n      y_max: 245,\n      ha: 488,\n      o: 'm 359 -284 l 359 336 b 341 353 359 346 351 353 l 199 353 b 190 350 196 353 193 351 b 184 344 189 348 186 346 l 23 65 b 22 56 22 62 22 59 b 30 42 22 50 26 45 l 58 26 b 66 23 60 24 63 23 b 81 32 72 23 78 27 l 183 207 l 183 -284 l 73 -284 b 56 -301 63 -284 56 -291 l 56 -333 b 73 -350 56 -343 63 -350 l 468 -350 b 484 -333 478 -350 484 -343 l 484 -301 b 468 -284 484 -291 478 -284 z',\n    },\n    timeSig2: {\n      x_min: 15,\n      x_max: 377,\n      y_min: -243,\n      y_max: 245,\n      ha: 488,\n      o: 'm 492 -56 b 382 -192 481 -88 452 -192 b 190 -134 288 -192 268 -134 b 153 -138 179 -134 167 -135 b 341 -36 153 -138 189 -84 b 533 173 494 12 533 86 b 288 353 533 233 505 353 b 30 156 71 353 30 222 b 138 49 30 96 79 49 b 245 156 197 49 245 96 b 179 255 245 196 216 240 b 168 271 174 256 168 264 b 202 297 168 279 176 289 b 251 304 209 300 229 304 b 311 288 271 304 294 300 b 348 180 338 271 348 245 b 65 -150 348 12 148 -24 b 22 -278 65 -150 22 -210 b 73 -350 22 -346 56 -350 b 121 -305 96 -350 121 -331 b 117 -287 121 -300 120 -294 b 105 -239 108 -266 105 -251 b 107 -226 105 -235 105 -230 b 154 -203 108 -217 120 -203 b 238 -289 196 -203 212 -252 b 350 -350 264 -327 304 -350 b 484 -264 396 -350 458 -317 b 543 -63 510 -210 543 -102 b 518 -36 543 -45 531 -36 b 492 -56 508 -36 498 -42 z',\n    },\n    timeSig3: {\n      x_min: 15,\n      x_max: 364,\n      y_min: -244,\n      y_max: 244,\n      ha: 488,\n      o: 'm 392 23 b 514 168 507 68 514 143 b 514 176 514 171 514 174 b 262 351 514 189 510 351 b 22 176 14 351 22 176 l 23 176 l 22 173 b 115 81 22 121 63 81 b 207 173 167 81 207 121 b 135 264 207 215 176 255 b 140 268 137 265 138 266 b 215 289 160 282 187 289 b 340 176 275 289 340 253 b 255 69 340 85 272 72 b 140 60 238 66 157 60 b 121 40 122 60 121 40 l 121 12 b 140 -6 121 12 124 -4 b 243 -14 164 -7 197 -7 b 340 -167 307 -23 340 -66 b 215 -289 340 -264 275 -289 b 121 -266 174 -289 137 -278 b 207 -174 168 -264 207 -222 b 115 -81 207 -122 167 -81 b 22 -174 63 -81 22 -122 b 22 -180 22 -174 22 -177 b 78 -298 22 -199 26 -251 b 236 -351 134 -350 204 -351 b 524 -147 374 -351 524 -304 b 389 23 524 -42 452 3 z',\n    },\n    timeSig4: {\n      x_min: 14,\n      x_max: 442,\n      y_min: -248,\n      y_max: 249,\n      ha: 497,\n      o: 'm 300 -183 l 300 -289 l 180 -289 b 160 -310 170 -289 160 -298 l 160 -337 b 180 -357 160 -348 170 -357 l 616 -357 b 636 -337 628 -357 636 -348 l 636 -310 b 616 -289 636 -298 628 -289 l 487 -289 l 487 -183 l 616 -183 b 636 -161 628 -183 636 -173 l 636 -134 b 616 -114 636 -124 628 -114 l 487 -114 l 487 115 b 477 134 487 124 482 131 l 459 143 b 452 144 456 144 455 144 b 449 144 451 144 451 144 b 436 140 445 144 439 143 l 305 20 b 300 4 301 16 300 10 l 300 -114 l 132 -114 b 464 287 132 -114 294 59 b 471 307 469 294 471 301 b 467 321 471 314 468 320 l 435 353 b 420 359 431 356 426 359 b 206 359 412 359 217 359 b 187 341 196 359 189 350 b 143 118 187 341 180 235 b 24 -124 105 1 62 -71 b 20 -140 24 -124 20 -131 b 22 -148 20 -143 20 -145 b 36 -174 26 -158 36 -174 b 52 -183 36 -174 39 -183 z',\n    },\n    timeSig5: {\n      x_min: 15,\n      x_max: 362,\n      y_min: -244,\n      y_max: 246,\n      ha: 490,\n      o: 'm 39 314 b 46 170 39 314 46 245 b 46 151 46 164 46 157 b 39 -24 45 71 39 -24 b 39 -29 39 -24 39 -26 b 49 -48 39 -35 40 -46 b 99 -59 62 -50 92 -58 b 107 -59 102 -59 104 -59 b 121 -49 112 -59 118 -58 b 235 45 128 -30 144 45 b 356 -112 337 45 356 -43 b 238 -292 356 -184 333 -288 b 226 -292 233 -292 230 -292 b 166 -282 193 -292 174 -288 b 158 -274 161 -281 158 -276 b 164 -264 158 -269 160 -266 b 222 -168 177 -255 222 -239 b 117 -71 222 -98 173 -71 b 22 -171 60 -71 22 -122 b 111 -318 22 -220 36 -275 b 252 -351 147 -338 199 -351 b 456 -275 325 -351 405 -328 b 521 -109 503 -228 521 -167 b 433 79 521 -32 487 43 b 271 124 397 104 336 124 b 131 84 223 124 173 112 b 125 82 130 82 127 82 b 115 92 120 82 115 86 l 115 183 b 131 199 115 192 122 199 l 132 199 b 252 192 154 197 202 192 b 372 209 295 192 340 196 b 474 320 439 236 462 289 b 477 334 475 324 477 330 b 451 354 477 346 469 354 b 431 351 445 354 439 353 b 252 328 360 334 305 328 b 88 343 200 328 150 334 b 71 344 88 343 81 344 b 39 320 56 344 39 340 b 39 314 39 317 39 315 z',\n    },\n    timeSig6: {\n      x_min: 15,\n      x_max: 387,\n      y_min: -244,\n      y_max: 245,\n      ha: 489,\n      o: 'm 356 69 b 216 22 268 69 236 43 b 209 98 212 52 209 75 b 216 167 209 121 212 141 b 338 287 225 220 261 287 b 410 259 374 287 396 275 b 356 174 380 246 356 207 b 448 82 356 122 396 82 b 541 174 500 82 541 122 l 541 177 b 541 179 541 177 541 177 b 533 225 541 192 539 213 b 310 353 514 276 454 353 b 58 163 180 353 86 229 b 22 -23 43 128 22 58 b 131 -285 22 -111 46 -210 b 318 -351 215 -348 268 -351 b 557 -125 369 -351 557 -292 b 356 69 557 16 446 69 z m 302 -291 b 216 -145 255 -291 216 -226 b 302 1 216 -65 255 1 b 390 -145 350 1 390 -65 b 302 -291 390 -226 350 -291 z',\n    },\n    timeSig7: {\n      x_min: 15,\n      x_max: 366,\n      y_min: -250,\n      y_max: 251,\n      ha: 501,\n      o: 'm 233 -177 b 160 -336 202 -225 160 -282 b 180 -360 160 -351 164 -360 b 264 -351 203 -360 217 -354 b 278 -350 268 -351 274 -350 b 369 -360 320 -350 359 -360 b 405 -331 382 -360 406 -344 b 405 -327 405 -330 405 -328 b 396 -226 405 -324 396 -279 b 408 -130 396 -196 399 -161 b 503 151 425 -62 471 60 b 527 308 518 196 527 275 b 526 341 527 321 527 327 b 510 361 524 356 518 361 b 484 361 503 361 491 361 b 467 341 477 361 467 356 b 406 228 467 327 464 228 b 235 351 346 228 328 351 b 86 252 145 351 91 261 l 86 321 b 71 337 86 330 79 337 l 37 337 b 22 321 29 337 22 330 l 22 55 b 37 39 22 46 29 39 l 71 39 b 86 55 79 39 86 46 l 86 101 b 158 179 86 134 108 179 b 328 124 209 179 213 124 b 425 143 357 124 410 128 b 233 -177 413 120 266 -130 z',\n    },\n    timeSig8: {\n      x_min: 15,\n      x_max: 393,\n      y_min: -248,\n      y_max: 246,\n      ha: 494,\n      o: 'm 467 26 b 547 166 514 62 547 108 b 294 354 547 269 433 354 b 40 166 154 354 40 269 b 122 13 40 108 55 56 b 22 -147 58 -24 22 -78 b 294 -357 22 -264 144 -357 b 566 -147 444 -357 566 -264 b 467 26 566 -78 541 -13 z m 294 -276 b 122 -145 202 -276 122 -226 b 197 -26 122 -49 197 -26 b 435 -187 295 -59 435 -108 b 294 -276 435 -226 384 -276 z m 386 65 b 180 209 288 96 180 144 b 294 288 180 265 232 288 b 444 180 383 288 444 246 b 386 65 444 111 412 78 z',\n    },\n    timeSig9: {\n      x_min: 15,\n      x_max: 387,\n      y_min: -244,\n      y_max: 245,\n      ha: 489,\n      o: 'm 223 -68 b 363 -20 311 -68 343 -42 b 370 -96 367 -50 370 -73 b 363 -166 370 -120 367 -140 b 240 -285 354 -219 318 -285 b 168 -258 204 -285 183 -274 b 223 -173 199 -245 223 -206 b 131 -81 223 -121 183 -81 b 37 -173 79 -81 37 -121 l 37 -176 b 37 -177 37 -176 37 -176 b 46 -223 37 -190 40 -212 b 269 -351 65 -275 125 -351 b 521 -161 399 -351 492 -228 b 557 24 536 -127 557 -56 b 448 287 557 112 533 212 b 261 353 364 350 311 353 b 22 127 210 353 22 294 b 223 -68 22 -14 132 -68 z m 276 294 b 363 147 324 294 363 228 b 276 1 363 66 324 1 b 189 147 229 1 189 66 b 276 294 189 228 229 294 z',\n    },\n    timeSigCommon: {\n      x_min: 0,\n      x_max: 463,\n      y_min: -256,\n      y_max: 258,\n      ha: 514,\n      o: 'm 468 258 b 406 147 432 235 406 193 b 408 130 406 141 406 135 b 521 17 415 71 462 24 b 537 17 526 17 533 17 b 667 147 609 17 667 75 b 667 156 667 147 667 151 b 664 177 667 161 665 171 b 350 372 651 239 595 372 b 0 17 36 372 0 111 b 382 -369 0 -154 22 -369 b 641 -131 524 -369 635 -285 b 629 -120 641 -124 636 -120 l 611 -120 b 599 -131 605 -120 599 -125 b 382 -323 593 -251 508 -323 b 196 -128 256 -323 196 -255 l 196 147 b 356 320 196 228 228 320 b 469 271 423 320 454 295 b 471 264 471 268 471 266 b 468 258 471 262 471 259 z',\n    },\n    timeSigCutCommon: {\n      x_min: 0,\n      x_max: 463,\n      y_min: -376,\n      y_max: 388,\n      ha: 764,\n      o: 'm 611 -120 b 599 -131 605 -120 599 -125 b 382 -323 593 -251 508 -323 b 369 -323 377 -323 373 -323 l 369 320 b 469 269 428 317 455 292 b 471 264 471 266 471 265 b 468 258 471 261 471 259 b 406 147 432 235 406 193 b 408 130 406 141 406 135 b 523 17 415 71 464 24 b 537 17 527 17 533 17 b 667 147 609 17 667 75 b 667 156 667 147 667 151 b 664 177 667 161 665 171 b 369 370 651 236 598 364 l 369 543 b 353 559 369 552 361 559 l 314 559 b 298 543 305 559 298 552 l 298 369 b 0 17 32 341 0 105 b 298 -364 0 -140 17 -334 l 298 -526 b 314 -541 298 -534 305 -541 l 353 -541 b 369 -526 361 -541 369 -534 l 369 -369 b 382 -369 373 -369 377 -369 b 641 -131 524 -369 635 -285 b 629 -120 641 -124 636 -120 z m 196 147 b 298 312 196 215 216 289 l 298 -310 b 196 -128 229 -285 196 -223 z',\n    },\n    timeSigPlus: {\n      x_min: 0,\n      x_max: 408,\n      y_min: -204,\n      y_max: 204,\n      ha: 408,\n      o: 'm 327 33 l 327 275 b 308 294 327 285 318 294 l 279 294 b 261 275 269 294 261 285 l 261 33 l 19 33 b 0 14 9 33 0 24 l 0 -13 b 19 -33 0 -23 9 -33 l 261 -33 l 261 -274 b 279 -294 261 -284 269 -294 l 308 -294 b 327 -274 318 -294 327 -284 l 327 -33 l 567 -33 b 588 -13 577 -33 588 -23 l 588 14 b 567 33 588 24 577 33 z',\n    },\n    noteheadDoubleWhole: {\n      x_min: 0,\n      x_max: 538,\n      y_min: -178,\n      y_max: 179,\n      ha: 357,\n      o: 'm 33 258 b 20 258 27 258 26 258 b 0 238 9 258 0 249 b 0 -236 0 226 0 -226 b 20 -256 0 -246 9 -256 b 33 -256 26 -256 27 -256 b 53 -236 43 -256 53 -245 b 53 238 53 -228 53 226 b 33 258 53 249 45 258 z m 649 258 b 636 258 644 258 642 258 b 616 238 625 258 616 249 b 616 125 616 235 616 187 b 389 196 573 167 500 196 b 160 125 276 196 203 167 b 160 238 160 187 160 235 b 140 258 160 249 151 258 b 127 258 134 258 132 258 b 107 238 115 258 107 249 b 107 -236 107 226 107 -226 b 127 -256 107 -246 115 -256 b 140 -256 132 -256 134 -256 b 160 -236 150 -256 160 -245 b 160 -122 160 -233 160 -186 b 389 -194 203 -166 276 -194 b 616 -122 500 -194 573 -166 b 616 -236 616 -186 616 -233 b 636 -256 616 -246 625 -256 b 649 -256 642 -256 644 -256 b 670 -236 660 -256 670 -245 b 670 238 670 -228 670 226 b 649 258 670 249 661 258 z m 462 -140 b 400 -148 445 -144 422 -148 b 314 -101 360 -148 333 -135 b 268 68 295 -65 269 29 b 268 76 268 71 268 73 b 314 141 268 109 282 130 b 377 150 331 145 354 150 b 462 102 416 150 442 140 b 510 -66 482 63 510 -29 b 462 -140 510 -104 497 -128 z m 755 258 b 742 258 749 258 747 258 b 721 238 730 258 721 249 b 721 -236 721 226 721 -226 b 742 -256 721 -246 730 -256 b 755 -256 747 -256 749 -256 b 775 -236 765 -256 775 -245 b 775 238 775 -228 775 226 b 755 258 775 249 766 258 z',\n    },\n    noteheadWhole: {\n      x_min: 0,\n      x_max: 373,\n      y_min: -134,\n      y_max: 136,\n      ha: 270,\n      o: 'm 269 196 b 0 1 71 196 0 95 b 269 -193 0 -92 71 -193 b 537 1 468 -193 537 -92 b 269 196 537 95 468 196 z m 343 -138 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 148 68 176 -63 150 29 b 194 141 145 107 160 130 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 389 -65 363 63 389 -29 b 343 -138 389 -102 377 -128 z',\n    },\n    noteheadHalf: {\n      x_min: 0,\n      x_max: 325,\n      y_min: -133,\n      y_max: 132,\n      ha: 265,\n      o: 'm 307 190 b 0 -60 167 190 0 73 b 161 -192 0 -122 45 -192 b 468 58 311 -192 468 -69 b 307 190 468 143 396 190 z m 268 -63 b 108 -124 264 -66 158 -124 b 50 -72 60 -124 50 -85 b 200 62 50 -12 194 59 b 360 122 206 65 308 122 b 418 71 395 122 418 102 b 268 -63 418 9 272 -60 z',\n    },\n    noteheadBlack: {\n      x_min: 0,\n      x_max: 325,\n      y_min: -133,\n      y_max: 132,\n      ha: 265,\n      o: 'm 0 -60 b 161 -192 0 -122 45 -192 b 468 58 311 -192 468 -69 b 307 190 468 143 396 190 b 0 -60 167 190 0 72 z',\n    },\n    noteheadXBlack: {\n      x_min: 0,\n      x_max: 325,\n      y_min: -132,\n      y_max: 132,\n      ha: 264,\n      o: 'm 461 138 b 468 153 465 141 468 147 l 468 154 b 462 167 468 160 465 164 l 445 184 b 431 190 441 187 436 190 b 418 186 426 190 420 189 l 235 40 l 50 186 b 37 190 48 189 42 190 b 24 184 32 190 29 187 l 6 167 b 0 153 3 164 0 158 b 7 138 0 147 3 141 l 183 0 l 7 -138 b 0 -153 3 -141 0 -147 b 6 -166 0 -157 3 -163 l 23 -184 b 37 -190 26 -189 32 -190 b 50 -186 42 -190 48 -189 l 235 -40 l 418 -186 b 431 -190 420 -189 426 -190 b 445 -184 436 -190 442 -189 l 462 -166 b 468 -153 465 -163 468 -157 b 461 -138 468 -147 465 -141 l 285 0 z',\n    },\n    noteheadCircleX: {\n      x_min: 0,\n      x_max: 325,\n      y_min: -162,\n      y_max: 163,\n      ha: 325,\n      o: 'm 265 0 l 395 105 b 426 0 415 75 426 39 b 387 -115 426 -43 412 -84 z m 233 -27 l 360 -145 b 235 -192 327 -174 282 -192 b 99 -137 183 -192 134 -171 z m 202 1 l 73 -105 b 42 0 53 -75 42 -39 b 81 115 42 43 56 84 z m 235 29 l 108 145 b 233 193 141 174 186 193 b 369 138 285 193 334 173 z m 233 235 b 0 0 104 235 0 130 b 233 -233 0 -130 104 -233 b 468 0 363 -233 468 -130 b 233 235 468 130 363 235 z',\n    },\n    noteheadDoubleWholeSquare: {\n      x_min: 0,\n      x_max: 432,\n      y_min: -179,\n      y_max: 177,\n      ha: 356,\n      o: 'm 590 255 b 570 235 579 255 570 246 l 570 203 l 53 203 l 53 235 b 33 255 53 246 45 255 l 20 255 b 0 235 9 255 0 246 l 0 -230 b 20 -251 0 -242 9 -251 l 33 -251 b 53 -230 45 -251 53 -242 l 53 -200 l 570 -200 l 570 -238 b 590 -258 570 -249 579 -258 l 603 -258 b 622 -238 615 -258 622 -249 l 622 235 b 603 255 622 246 615 255 z m 570 -101 l 53 -101 l 53 105 l 570 105 z',\n    },\n    noteheadSquareWhite: {\n      x_min: 0,\n      x_max: 310,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 395 128 l 395 -128 l 52 -128 l 52 128 z m 446 180 l 0 180 l 0 -180 l 446 -180 z',\n    },\n    noteheadSquareBlack: {\n      x_min: 0,\n      x_max: 310,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 446 180 l 0 180 l 0 -180 l 446 -180 z',\n    },\n    noteheadTriangleUpBlack: {\n      x_min: 0,\n      x_max: 310,\n      y_min: -136,\n      y_max: 122,\n      ha: 258,\n      o: 'm 223 176 l 0 -196 l 446 -196 z',\n    },\n    noteheadSlashedDoubleWhole1: {\n      x_min: -66,\n      x_max: 456,\n      y_min: -213,\n      y_max: 212,\n      ha: 425,\n      o: 'm 652 298 b 638 305 649 304 644 305 b 626 301 634 305 629 304 l 560 248 b 543 256 557 253 550 256 b 530 256 537 256 536 256 b 510 236 518 256 510 248 b 510 204 510 235 510 223 l 455 161 b 281 194 413 181 356 194 b 53 124 168 194 96 166 b 53 236 53 186 53 233 b 29 256 53 253 42 256 b 20 256 26 256 23 256 b 0 236 9 256 0 248 b 0 -204 0 228 0 -98 l -88 -272 b -95 -288 -92 -276 -95 -282 b -91 -300 -95 -291 -94 -295 b -76 -307 -86 -304 -82 -307 b -65 -302 -72 -307 -68 -305 l 3 -248 b 20 -258 6 -253 12 -258 b 53 -238 33 -258 52 -255 b 53 -206 53 -236 53 -225 l 107 -161 b 281 -196 148 -183 206 -196 b 510 -124 393 -196 465 -166 b 510 -238 510 -187 510 -235 b 530 -258 510 -248 518 -258 b 563 -238 543 -258 563 -255 b 563 204 563 -229 563 98 l 649 272 b 657 288 655 276 657 282 b 652 298 657 291 655 295 z m 160 75 b 269 148 160 138 219 148 b 356 101 310 148 334 140 b 363 85 357 96 360 91 l 189 -56 b 160 66 174 -14 161 40 b 160 75 160 69 160 72 z m 53 -163 b 53 -124 53 -151 53 -138 b 76 -144 60 -131 68 -138 z m 402 -68 b 292 -148 402 -138 351 -148 b 207 -101 252 -150 226 -137 b 199 -84 204 -96 202 -91 l 373 56 b 402 -68 389 13 402 -40 z m 510 124 b 485 144 503 131 494 137 l 510 163 b 510 124 510 151 510 137 z',\n    },\n    noteheadSlashedWhole1: {\n      x_min: -75,\n      x_max: 448,\n      y_min: -211,\n      y_max: 214,\n      ha: 425,\n      o: 'm 641 301 b 625 308 636 305 631 308 b 613 304 621 307 618 307 l 439 160 b 269 196 399 181 343 196 b 0 1 71 196 0 95 b 69 -138 0 -49 20 -101 l -101 -271 b -108 -287 -105 -275 -108 -281 b -104 -298 -107 -291 -107 -294 b -88 -304 -99 -302 -94 -304 b -76 -301 -85 -304 -81 -304 l 98 -157 b 269 -193 138 -179 194 -193 b 537 1 468 -193 537 -92 b 468 141 537 52 517 104 l 638 274 b 645 289 642 278 645 284 b 641 301 644 292 644 297 z m 148 68 b 148 78 148 72 148 75 b 194 141 148 111 163 131 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 350 86 346 98 348 92 l 177 -55 b 148 68 163 -12 150 42 z m 389 -65 b 343 -138 389 -102 377 -128 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 187 -82 192 -95 190 -89 l 279 -6 l 361 58 b 389 -65 376 16 389 -39 z',\n    },\n    noteheadSlashedHalf1: {\n      x_min: -98,\n      x_max: 424,\n      y_min: -213,\n      y_max: 212,\n      ha: 425,\n      o: 'm 606 298 b 592 305 602 302 598 305 b 580 301 588 305 583 304 l 412 163 b 307 190 383 180 347 190 b 153 148 258 190 204 176 b 0 -60 58 98 0 13 b 14 -120 0 -81 4 -101 b 32 -143 20 -128 26 -135 l -134 -274 b -141 -288 -138 -276 -141 -282 b -137 -300 -141 -292 -140 -297 b -122 -307 -134 -304 -128 -307 b -111 -302 -118 -307 -114 -305 l 56 -164 b 161 -192 85 -181 121 -192 b 315 -151 210 -192 264 -179 b 468 58 410 -101 468 -16 b 454 117 468 78 464 98 b 436 141 449 125 444 134 l 603 272 b 611 287 608 275 611 281 b 606 298 611 291 609 295 z m 56 -98 b 49 -73 52 -91 49 -82 b 75 -23 49 -58 59 -39 b 199 60 99 1 147 32 b 337 118 251 89 302 111 b 359 121 344 120 351 121 b 361 121 360 121 360 121 l 225 9 l 69 -114 b 56 -98 65 -109 60 -104 z m 410 94 b 416 69 415 86 416 78 b 392 19 416 53 408 36 b 266 -65 367 -6 318 -36 b 128 -122 215 -94 163 -115 b 107 -125 121 -124 114 -125 b 104 -125 107 -125 105 -125 l 245 -9 l 396 111 b 410 94 402 107 408 101 z',\n    },\n    noteheadSlashedBlack1: {\n      x_min: -98,\n      x_max: 424,\n      y_min: -213,\n      y_max: 212,\n      ha: 425,\n      o: 'm 606 298 b 592 305 602 302 598 305 b 580 301 588 305 583 304 l 412 161 b 307 190 383 180 347 190 b 0 -60 167 190 0 72 b 32 -144 0 -89 10 -120 l -134 -274 b -141 -288 -138 -278 -141 -284 b -137 -301 -141 -292 -140 -297 b -122 -307 -134 -305 -128 -307 b -111 -304 -118 -307 -114 -307 l 56 -164 b 161 -192 82 -181 117 -192 b 468 58 311 -192 468 -71 b 436 141 468 91 456 120 l 603 271 b 611 285 608 275 611 281 b 606 298 611 289 609 294 z',\n    },\n    noteheadSlashedDoubleWhole2: {\n      x_min: -66,\n      x_max: 456,\n      y_min: -213,\n      y_max: 212,\n      ha: 425,\n      o: 'm 563 -204 b 563 236 563 -98 563 228 b 543 256 563 249 554 256 b 530 256 537 256 536 256 b 510 236 518 256 510 248 b 510 124 510 233 510 187 b 281 194 467 166 393 194 b 107 161 207 194 150 181 l 53 204 b 53 236 53 223 53 235 b 33 256 53 249 45 256 b 20 256 27 256 26 256 b 3 246 12 256 6 253 l -63 301 b -76 305 -68 304 -72 305 b -91 298 -81 305 -86 304 b -95 287 -94 295 -95 291 b -88 272 -95 281 -92 276 l 0 204 b 0 -238 0 98 0 -229 b 20 -258 0 -248 9 -258 b 33 -258 26 -258 27 -258 b 53 -238 43 -258 53 -246 b 53 -124 53 -235 53 -187 b 281 -196 96 -166 170 -196 b 456 -161 356 -196 413 -183 l 510 -206 b 510 -238 510 -225 510 -236 b 530 -258 510 -248 518 -258 b 543 -258 536 -258 537 -258 b 560 -246 549 -258 556 -252 l 626 -302 b 638 -307 631 -305 634 -307 b 654 -300 645 -307 649 -304 b 657 -288 655 -295 657 -292 b 651 -272 657 -282 655 -276 z m 207 140 b 269 148 225 144 248 148 b 356 101 310 148 336 140 b 402 -68 376 62 402 -30 b 402 -78 402 -71 402 -75 l 292 9 l 168 109 b 207 140 176 124 189 134 z m 78 144 b 53 124 69 137 60 131 b 53 163 53 137 53 150 z m 356 -141 b 294 -148 338 -145 315 -148 b 207 -101 253 -148 226 -137 b 161 66 189 -66 163 27 b 160 72 161 69 160 71 b 161 78 160 75 160 76 l 271 -9 l 395 -109 b 356 -141 387 -124 374 -134 z m 485 -144 b 510 -124 494 -138 503 -131 b 510 -163 510 -138 510 -151 z',\n    },\n    noteheadSlashedWhole2: {\n      x_min: -75,\n      x_max: 448,\n      y_min: -212,\n      y_max: 214,\n      ha: 426,\n      o: 'm 468 -138 b 537 1 517 -101 537 -49 b 269 196 537 95 468 196 b 98 160 196 196 140 181 l -76 304 b -88 308 -81 307 -84 307 b -104 301 -94 308 -99 305 b -108 289 -107 297 -107 292 b -101 274 -108 284 -105 278 l 69 141 b 0 1 20 104 0 52 b 269 -193 0 -92 71 -193 b 441 -157 343 -193 399 -179 l 613 -301 b 625 -305 618 -304 622 -305 b 641 -298 631 -305 636 -302 b 645 -287 644 -294 644 -291 b 638 -271 645 -281 642 -275 z m 194 141 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 389 -65 363 63 389 -29 b 389 -76 389 -69 389 -73 l 279 10 l 156 112 b 194 141 163 125 176 135 z m 343 -138 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 148 68 176 -63 150 29 b 148 76 148 71 148 73 b 148 81 148 78 148 79 l 258 -6 l 382 -108 b 343 -138 374 -122 361 -132 z',\n    },\n    noteheadSlashedHalf2: {\n      x_min: -98,\n      x_max: 424,\n      y_min: -213,\n      y_max: 212,\n      ha: 425,\n      o: 'm 386 -102 b 468 58 438 -55 468 4 b 454 117 468 78 464 98 b 307 190 428 164 373 190 b 153 148 258 190 204 176 b 108 120 137 140 122 130 l -111 301 b -122 305 -114 304 -118 305 b -137 298 -128 305 -134 302 b -141 287 -140 295 -141 291 b -134 272 -141 281 -138 275 l 85 101 b 0 -60 32 53 0 -7 b 14 -120 0 -81 4 -101 b 161 -192 40 -167 95 -192 b 315 -151 210 -192 264 -179 b 361 -122 333 -143 347 -132 l 580 -302 b 592 -307 583 -305 588 -307 b 606 -300 598 -307 602 -304 b 611 -288 609 -297 611 -292 b 603 -274 611 -282 608 -276 z m 199 60 b 337 118 251 89 302 111 b 359 121 344 120 351 121 b 410 94 382 121 400 112 b 416 69 415 86 416 78 b 392 19 416 53 408 36 b 308 -42 374 0 343 -20 l 245 7 l 189 55 b 199 60 192 56 196 58 z m 266 -65 b 128 -122 215 -94 163 -115 b 107 -125 121 -124 114 -125 b 56 -98 84 -125 66 -117 b 49 -73 52 -91 49 -82 b 75 -23 49 -58 59 -39 b 163 39 94 -4 125 17 l 225 -9 l 282 -56 b 266 -65 276 -59 272 -62 z',\n    },\n    noteheadSlashedBlack2: {\n      x_min: -98,\n      x_max: 424,\n      y_min: -213,\n      y_max: 212,\n      ha: 425,\n      o: 'm 384 -102 b 468 58 435 -58 468 0 b 307 190 468 143 396 190 b 108 121 239 190 167 163 l -111 301 b -124 305 -115 304 -120 305 b -138 298 -128 305 -134 302 b -141 289 -140 295 -141 292 b -141 287 -141 288 -143 288 b -135 272 -141 281 -140 275 l 84 101 b 0 -60 35 56 0 0 b 161 -192 0 -122 45 -192 b 361 -122 232 -192 304 -164 l 579 -302 b 590 -307 583 -305 588 -307 b 606 -300 596 -307 602 -304 b 611 -288 609 -297 611 -292 b 603 -274 609 -282 608 -276 z',\n    },\n    noteheadDiamondDoubleWhole: {\n      x_min: 0,\n      x_max: 373,\n      y_min: -178,\n      y_max: 179,\n      ha: 357,\n      o: 'm 504 258 b 484 238 494 258 484 248 l 484 46 b 282 187 415 95 285 186 b 268 192 279 190 275 192 b 255 187 262 192 258 190 l 52 45 l 52 238 b 33 258 52 248 43 258 l 20 258 b 0 238 9 258 0 248 l 0 -236 b 20 -256 0 -248 9 -256 l 33 -256 b 52 -236 43 -256 52 -248 l 52 -45 l 249 -181 b 268 -190 258 -189 264 -190 b 282 -186 274 -190 279 -189 b 484 -43 285 -184 413 -94 l 484 -236 b 504 -256 484 -248 494 -256 l 517 -256 b 537 -236 528 -256 537 -248 l 537 238 b 517 258 537 248 528 258 z m 220 -115 l 102 -33 l 317 117 l 435 35 z',\n    },\n    noteheadDiamondWhole: {\n      x_min: 0,\n      x_max: 373,\n      y_min: -133,\n      y_max: 132,\n      ha: 265,\n      o: 'm 282 -187 b 530 -13 285 -186 530 -13 b 537 0 534 -10 537 -6 b 530 13 537 4 534 10 b 282 186 530 13 287 183 b 268 190 279 189 275 190 b 255 186 262 190 258 189 l 7 12 b 0 -1 3 9 0 4 b 4 -13 0 -6 1 -10 l 249 -183 b 268 -192 258 -190 264 -192 b 282 -187 274 -192 279 -190 z m 220 -117 l 102 -35 l 317 115 l 435 33 z',\n    },\n    noteheadDiamondHalf: {\n      x_min: 0,\n      x_max: 335,\n      y_min: -132,\n      y_max: 133,\n      ha: 265,\n      o: 'm 475 -13 b 482 0 480 -10 482 -6 b 475 13 482 4 480 10 l 253 187 b 240 192 251 190 246 192 b 229 187 236 192 232 190 l 7 13 b 0 0 3 10 0 6 b 7 -13 0 -4 3 -10 l 229 -186 b 240 -190 232 -189 236 -190 b 253 -186 246 -190 251 -189 z m 284 -115 l 92 33 l 199 117 l 390 -33 z',\n    },\n    noteheadDiamondBlack: {\n      x_min: 0,\n      x_max: 335,\n      y_min: -132,\n      y_max: 133,\n      ha: 265,\n      o: 'm 475 -14 b 482 -1 480 -10 482 -6 b 475 13 482 4 480 10 l 253 187 b 240 192 251 190 246 192 b 229 187 236 192 232 190 l 7 13 b 0 0 3 10 0 4 b 7 -14 0 -6 3 -10 l 229 -186 b 240 -190 232 -189 236 -190 b 253 -186 246 -190 251 -189 z',\n    },\n    noteheadParenthesisRight: {\n      x_min: 0,\n      x_max: 75,\n      y_min: -209,\n      y_max: 212,\n      ha: 421,\n      o: 'm 10 305 b 4 302 7 304 6 304 b 0 295 1 301 0 298 b 1 289 0 294 0 292 b 68 -10 1 288 68 160 b 1 -288 68 -95 50 -192 b 0 -292 0 -289 0 -291 b 4 -300 0 -295 1 -298 b 12 -301 7 -301 9 -302 b 17 -298 14 -301 16 -300 b 108 0 22 -292 108 -174 b 17 301 108 174 22 295 b 10 305 16 304 13 305 z',\n    },\n    noteheadParenthesisLeft: {\n      x_min: 0,\n      x_max: 75,\n      y_min: -212,\n      y_max: 209,\n      ha: 421,\n      o: 'm 98 -305 b 104 -302 101 -304 102 -304 b 108 -295 107 -301 108 -298 b 107 -289 108 -294 108 -292 b 40 10 107 -288 40 -160 b 107 288 40 95 58 192 b 108 292 108 289 108 291 b 104 300 108 295 107 298 b 96 301 101 301 99 302 b 91 298 94 301 92 300 b 0 0 86 292 0 174 b 91 -301 0 -174 86 -295 b 98 -305 92 -304 95 -305 z',\n    },\n    noteheadMoonBlack: {\n      x_min: 0,\n      x_max: 310,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 0 180 l 0 0 b 223 -180 0 -99 99 -180 b 446 0 347 -180 446 -99 l 446 180 z',\n    },\n    noteheadTriangleLeftBlack: {\n      x_min: 0,\n      x_max: 339,\n      y_min: -136,\n      y_max: 122,\n      ha: 258,\n      o: 'm 0 176 l 0 -196 l 488 -196 z',\n    },\n    noteheadTriangleRightBlack: {\n      x_min: 0,\n      x_max: 339,\n      y_min: -136,\n      y_max: 122,\n      ha: 258,\n      o: 'm 488 176 l 0 -196 l 488 -196 z',\n    },\n    noteheadTriangleRoundDownBlack: {\n      x_min: 0,\n      x_max: 310,\n      y_min: -136,\n      y_max: 122,\n      ha: 258,\n      o: 'm 226 -196 l 446 63 b 226 176 446 63 384 176 b 0 63 68 176 0 63 z',\n    },\n    augmentationDot: {\n      x_min: 0,\n      x_max: 100,\n      y_min: -50,\n      y_max: 50,\n      ha: 100,\n      o: 'm 0 0 b 72 -72 0 -40 32 -72 b 144 0 112 -72 144 -40 b 72 72 144 40 112 72 b 0 0 32 72 0 40 z',\n    },\n    tremolo1: {\n      x_min: 0,\n      x_max: 290,\n      y_min: -93,\n      y_max: 96,\n      ha: 189,\n      o: 'm 0 48 l 0 -134 l 418 -43 l 418 138 z',\n    },\n    flag8thUp: {\n      x_min: 0,\n      x_max: 289,\n      y_min: -817,\n      y_max: 12,\n      ha: 829,\n      o: 'm 0 -327 b 12 -343 0 -331 1 -338 b 291 -600 73 -363 197 -441 b 359 -827 317 -645 359 -707 b 294 -1140 359 -930 331 -1037 b 289 -1162 291 -1149 288 -1156 b 297 -1175 289 -1168 291 -1172 b 304 -1176 300 -1176 302 -1176 b 327 -1161 314 -1176 321 -1171 b 416 -798 395 -1041 418 -888 b 416 -780 416 -791 416 -786 b 302 -458 409 -595 302 -458 b 131 -220 307 -458 170 -281 b 50 -50 78 -138 53 -56 b 36 6 49 -46 36 6 b 19 17 35 12 27 17 b 0 -1 9 17 0 9 z',\n    },\n    flag8thDown: {\n      x_min: 0,\n      x_max: 309,\n      y_min: -12,\n      y_max: 817,\n      ha: 829,\n      o: 'm 0 1 b 19 -17 0 -9 9 -17 b 36 -6 26 -17 35 -12 b 50 50 36 -4 49 46 b 117 196 52 56 65 111 b 331 458 173 289 259 357 b 445 780 402 559 445 654 b 338 1161 445 912 415 1021 b 317 1176 334 1171 325 1176 b 310 1175 314 1176 311 1176 b 300 1158 302 1172 300 1166 b 304 1140 300 1153 301 1146 b 384 827 361 1007 384 930 b 317 600 384 707 343 645 b 12 343 223 441 72 363 b 0 327 1 338 0 331 z',\n    },\n    flag16thUp: {\n      x_min: 0,\n      x_max: 279,\n      y_min: -820,\n      y_max: 12,\n      ha: 832,\n      o: 'm 301 -681 b 148 -514 262 -631 219 -585 b 56 -372 92 -458 66 -409 b 52 -343 55 -364 53 -354 b 271 -510 125 -343 219 -442 b 340 -696 327 -583 340 -641 b 337 -739 340 -710 338 -724 b 301 -681 325 -716 312 -697 z m 0 -549 b 22 -563 0 -553 12 -559 b 258 -776 59 -576 171 -648 b 318 -950 307 -850 318 -901 b 317 -975 318 -959 318 -966 b 285 -1140 317 -1009 307 -1083 b 279 -1164 284 -1148 279 -1156 b 289 -1179 279 -1169 282 -1175 b 297 -1181 292 -1181 294 -1181 b 318 -1161 307 -1181 312 -1169 b 382 -962 344 -1120 382 -1043 b 374 -855 382 -920 379 -886 b 402 -678 389 -802 402 -749 b 333 -471 402 -603 382 -536 b 137 -228 265 -382 192 -307 b 42 0 82 -148 42 0 b 22 17 39 10 37 17 b 0 0 4 17 0 10 z',\n    },\n    flag16thDown: {\n      x_min: 0,\n      x_max: 309,\n      y_min: -26,\n      y_max: 803,\n      ha: 829,\n      o: 'm 53 346 b 56 363 55 353 56 359 b 163 517 66 399 78 452 b 384 732 246 582 346 662 b 317 503 382 621 354 552 b 53 346 229 395 122 364 z m 0 -14 b 22 -37 0 -26 10 -37 b 43 -14 33 -37 40 -26 b 167 232 65 134 109 177 b 445 683 243 305 445 416 b 432 837 445 730 441 783 b 441 919 438 855 441 881 b 327 1149 441 1032 374 1112 b 304 1156 321 1153 312 1156 b 287 1152 298 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1135 b 382 930 344 1076 382 1027 b 374 876 382 912 380 893 l 373 871 b 373 871 373 871 373 871 b 327 789 366 842 350 815 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z',\n    },\n    flag32ndUp: {\n      x_min: 0,\n      x_max: 279,\n      y_min: -821,\n      y_max: 186,\n      ha: 1007,\n      o: 'm 301 -683 b 148 -516 262 -632 219 -588 b 56 -373 92 -459 66 -410 b 50 -343 55 -366 53 -354 b 271 -500 125 -343 219 -432 b 340 -687 327 -575 340 -632 b 337 -739 340 -704 338 -721 b 301 -683 325 -716 312 -698 z m 271 -259 b 340 -446 327 -333 340 -392 b 338 -469 340 -455 338 -462 b 333 -461 337 -467 334 -464 b 91 -192 265 -372 145 -271 b 50 -92 69 -160 58 -124 b 271 -259 124 -92 219 -192 z m 0 -550 b 22 -564 0 -554 12 -560 b 258 -778 59 -577 171 -649 b 318 -952 307 -851 318 -903 b 317 -976 318 -960 318 -968 b 285 -1142 317 -1011 307 -1084 b 279 -1165 284 -1149 279 -1158 b 289 -1181 279 -1171 282 -1176 b 297 -1182 292 -1182 294 -1182 b 318 -1162 307 -1182 312 -1171 b 382 -963 344 -1122 382 -1044 b 374 -857 382 -922 379 -887 b 402 -668 389 -802 402 -740 b 386 -563 402 -632 396 -596 b 402 -441 395 -526 402 -487 b 402 -428 402 -436 402 -432 b 333 -220 402 -353 382 -285 b 137 23 265 -131 192 -56 b 42 251 82 102 42 251 b 22 268 39 261 37 268 b 0 251 4 268 0 261 z',\n    },\n    flag32ndDown: {\n      x_min: 0,\n      x_max: 309,\n      y_min: -216,\n      y_max: 803,\n      ha: 1019,\n      o: 'm 50 73 b 91 171 58 105 71 141 b 347 402 145 251 272 317 b 384 454 361 418 374 435 b 324 239 384 347 361 287 b 50 73 235 130 122 94 z m 163 517 b 366 693 248 589 327 642 b 382 716 372 700 377 708 b 383 693 383 708 383 700 b 314 505 383 621 359 562 b 53 343 258 436 179 390 b 56 363 55 351 56 359 b 163 517 66 400 81 449 z m 0 -288 b 22 -311 0 -298 10 -311 b 43 -288 33 -311 40 -300 b 167 -40 65 -138 109 -95 b 445 409 243 32 445 143 b 431 577 445 462 439 520 b 441 651 435 602 439 626 b 441 675 441 658 441 667 b 441 687 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 305 1156 321 1153 314 1156 b 287 1152 300 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1136 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z',\n    },\n    flag64thUp: {\n      x_min: 0,\n      x_max: 279,\n      y_min: -822,\n      y_max: 373,\n      ha: 1195,\n      o: 'm 333 -461 b 91 -192 265 -372 145 -271 b 50 -92 69 -161 58 -125 b 271 -251 125 -92 219 -183 b 340 -438 327 -324 340 -383 b 338 -469 340 -448 338 -459 b 333 -461 337 -467 334 -464 z m 301 -683 b 148 -517 262 -632 219 -588 b 56 -374 92 -461 66 -410 b 50 -343 55 -366 53 -356 b 271 -501 125 -343 219 -433 b 340 -688 327 -575 340 -634 b 337 -739 340 -706 338 -721 b 301 -683 325 -717 312 -698 z m 271 10 b 340 -176 327 -63 340 -121 b 337 -217 340 -190 338 -204 b 333 -212 336 -216 334 -213 b 91 65 265 -122 145 -16 b 48 177 66 101 53 143 l 50 177 b 271 10 124 177 217 78 z m 0 -552 b 22 -564 0 -554 12 -562 b 258 -778 59 -579 171 -649 b 318 -952 307 -851 317 -903 b 317 -976 318 -960 318 -968 b 285 -1142 317 -1012 307 -1084 b 279 -1165 284 -1149 279 -1158 b 289 -1181 279 -1172 282 -1178 b 297 -1184 292 -1182 295 -1184 b 318 -1164 307 -1182 312 -1172 b 382 -963 344 -1122 382 -1044 b 374 -857 382 -923 379 -887 b 402 -668 389 -804 402 -740 b 386 -563 402 -632 396 -596 b 402 -432 395 -523 402 -480 b 402 -418 402 -428 402 -423 b 383 -304 402 -379 396 -341 b 402 -170 393 -264 402 -222 b 402 -158 402 -166 402 -163 b 333 49 402 -84 382 -16 b 137 292 265 138 192 213 b 42 520 82 372 42 520 b 22 537 39 530 37 537 b 0 520 4 537 0 530 z',\n    },\n    flag64thDown: {\n      x_min: 0,\n      x_max: 309,\n      y_min: -403,\n      y_max: 804,\n      ha: 1207,\n      o: 'm 52 -196 b 91 -102 59 -166 71 -131 b 347 128 145 -23 272 45 b 384 180 361 145 374 163 b 324 -30 384 76 361 16 b 52 -196 235 -140 124 -176 z m 163 517 b 366 693 248 589 327 644 b 382 717 372 701 377 708 b 383 693 383 708 383 701 b 314 505 383 621 359 562 b 53 343 258 438 179 390 b 56 363 55 351 56 359 b 163 517 66 400 81 449 z m 314 232 b 50 69 258 163 179 117 b 91 171 56 102 69 140 b 347 402 145 251 272 318 b 382 449 360 416 372 432 b 383 420 383 439 383 429 b 314 232 383 348 359 288 z m 0 -557 b 22 -580 0 -567 10 -580 b 43 -557 33 -580 40 -567 b 167 -310 65 -408 109 -364 b 445 140 243 -238 445 -125 b 431 307 445 192 439 249 b 441 377 436 331 439 354 b 441 406 441 387 441 397 b 441 418 441 410 441 413 b 423 546 441 464 432 507 b 441 651 432 582 438 618 b 441 675 441 660 441 667 b 441 688 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 305 1158 321 1153 314 1156 b 287 1152 300 1158 292 1156 b 279 1145 281 1151 279 1148 b 294 1129 279 1140 288 1136 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 563 z',\n    },\n    flag128thUp: {\n      x_min: 0,\n      x_max: 279,\n      y_min: -821,\n      y_max: 573,\n      ha: 1394,\n      o: 'm 0 -550 b 22 -563 0 -553 12 -560 b 258 -776 59 -576 171 -648 b 318 -950 307 -850 318 -901 b 317 -975 318 -959 318 -966 b 285 -1140 317 -1011 307 -1083 b 279 -1164 284 -1148 279 -1156 b 289 -1179 279 -1171 282 -1176 b 297 -1182 292 -1181 294 -1181 b 318 -1162 307 -1182 312 -1169 b 382 -962 344 -1120 382 -1043 b 374 -857 382 -922 379 -887 b 402 -668 389 -802 402 -740 b 383 -554 402 -629 396 -590 b 402 -399 396 -503 402 -452 b 382 -284 402 -359 396 -321 b 402 -125 396 -230 402 -180 b 383 -14 402 -86 396 -49 b 402 130 396 35 402 81 b 333 348 402 204 382 284 b 137 592 265 438 192 513 b 42 808 82 671 46 793 b 22 825 39 818 37 825 b 0 808 4 825 0 818 z m 271 310 b 340 111 328 235 340 170 b 338 73 340 98 338 86 b 333 81 336 76 334 79 b 91 357 265 170 145 276 b 48 469 66 393 53 435 l 50 469 b 271 310 124 469 217 377 z m 301 -681 b 148 -523 262 -631 219 -593 b 56 -383 92 -465 66 -420 b 49 -343 55 -374 52 -359 l 50 -343 b 271 -500 124 -343 217 -432 b 340 -688 327 -575 340 -634 b 337 -737 340 -706 338 -721 b 301 -681 325 -716 312 -697 z m 333 -461 b 91 -192 265 -372 145 -271 b 48 -73 66 -154 53 -111 l 48 -73 l 50 -73 b 271 -232 124 -73 217 -163 b 340 -419 327 -305 340 -364 b 337 -468 340 -435 338 -452 b 333 -461 336 -465 334 -464 z m 333 -192 b 91 84 265 -102 145 4 b 48 200 65 121 53 164 l 48 200 l 50 200 b 271 42 124 200 217 109 b 340 -147 327 -32 340 -92 b 337 -197 340 -164 338 -181 b 333 -192 336 -196 334 -194 z',\n    },\n    flag128thDown: {\n      x_min: 0,\n      x_max: 309,\n      y_min: -591,\n      y_max: 803,\n      ha: 1394,\n      o: 'm 0 -828 b 22 -851 0 -838 10 -851 b 43 -828 33 -851 40 -840 b 167 -580 65 -678 109 -635 b 445 -131 243 -508 445 -397 b 431 36 445 -79 439 -22 b 441 108 436 60 439 85 b 441 137 441 117 441 127 b 441 147 441 140 441 144 b 423 275 441 193 432 236 b 441 377 433 310 438 344 b 441 406 441 387 441 396 b 441 418 441 410 441 413 b 423 546 441 464 432 507 b 441 649 432 582 438 616 b 441 675 441 658 441 667 b 441 687 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 304 1156 321 1153 312 1156 b 287 1152 298 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1135 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z m 314 -37 b 50 -200 258 -107 179 -153 b 91 -102 58 -168 71 -132 b 347 128 145 -23 272 45 b 382 176 360 143 372 160 b 383 151 383 167 383 160 b 314 -37 383 79 359 19 z m 314 232 b 50 69 258 163 179 117 b 91 171 56 101 69 138 b 347 402 145 251 272 317 b 382 449 360 416 372 432 b 383 420 383 439 383 429 b 314 232 383 347 359 288 z m 163 517 b 366 693 248 589 327 642 b 382 716 372 700 377 708 b 383 693 383 708 383 700 b 314 505 382 621 359 560 b 53 343 258 436 179 390 b 56 363 55 350 56 357 b 163 517 66 399 81 449 z m 52 -467 b 91 -372 59 -435 71 -402 b 347 -141 145 -292 272 -225 b 384 -89 361 -125 374 -108 b 324 -301 382 -194 361 -255 b 52 -467 235 -410 122 -446 z',\n    },\n    accidentalFlat: {\n      x_min: 0,\n      x_max: 203,\n      y_min: -176,\n      y_max: 453,\n      ha: 629,\n      o: 'm 289 114 b 173 223 281 170 246 223 b 52 170 101 223 59 179 l 58 632 b 37 652 58 644 49 652 l 20 652 b 0 632 9 652 0 644 l 7 -233 b 27 -253 7 -245 16 -253 b 39 -251 30 -253 36 -252 b 216 -114 45 -248 138 -202 b 292 78 271 -52 292 19 b 289 114 292 91 291 102 z m 190 58 b 148 -85 190 36 184 -30 b 48 -183 124 -122 75 -161 l 52 98 b 134 153 55 111 76 153 b 190 73 186 153 190 104 b 190 58 190 66 190 62 z',\n    },\n    accidentalNatural: {\n      x_min: 0,\n      x_max: 171,\n      y_min: -323,\n      y_max: 325,\n      ha: 648,\n      o: 'm 239 264 b 228 268 236 266 232 268 b 222 266 226 268 223 266 l 40 216 l 40 468 l 0 468 l 0 -245 b 20 -264 0 -256 9 -264 b 26 -264 22 -264 24 -264 l 207 -213 l 207 -465 l 246 -465 b 246 248 246 -226 246 1 b 239 264 246 253 243 261 z m 40 -140 l 40 96 l 207 144 l 207 -94 z',\n    },\n    accidentalSharp: {\n      x_min: 0,\n      x_max: 244,\n      y_min: -333,\n      y_max: 334,\n      ha: 667,\n      o: 'm 336 151 b 351 171 344 153 351 163 l 351 256 b 331 276 351 268 343 276 b 328 276 330 276 330 276 l 281 266 l 281 481 l 240 481 l 240 258 l 112 232 l 112 435 l 72 435 l 72 223 l 16 212 b 0 192 7 210 0 200 l 0 189 l 0 105 l 0 108 b 20 88 0 96 9 88 b 24 88 22 88 23 88 l 72 98 l 72 -140 l 16 -151 b 0 -171 7 -153 0 -163 l 0 -255 b 20 -275 0 -266 9 -275 b 24 -275 22 -275 23 -275 l 72 -265 l 72 -480 l 112 -480 l 112 -256 l 240 -230 l 240 -433 l 281 -433 l 281 -222 l 336 -212 b 351 -192 344 -210 351 -200 l 351 -107 b 331 -86 351 -95 343 -86 b 328 -86 330 -86 330 -86 l 281 -96 l 281 141 z m 112 107 l 240 132 l 240 -105 l 112 -132 z',\n    },\n    accidentalDoubleSharp: {\n      x_min: 0,\n      x_max: 275,\n      y_min: -137,\n      y_max: 138,\n      ha: 275,\n      o: 'm 360 73 l 376 73 b 396 94 387 73 396 82 l 396 179 b 376 199 396 190 387 199 l 291 199 b 271 179 279 199 271 190 l 271 161 l 271 102 l 200 30 l 196 30 l 124 102 l 124 179 b 105 199 124 190 117 199 l 20 199 b 0 179 9 199 0 190 l 0 94 b 20 73 0 82 9 73 l 35 73 l 36 73 l 96 73 l 167 3 l 167 -1 l 96 -73 l 36 -73 l 35 -73 l 20 -73 b 0 -92 9 -73 0 -81 l 0 -177 b 20 -197 0 -189 9 -197 l 105 -197 b 124 -177 117 -197 124 -189 l 124 -101 l 196 -32 l 200 -32 l 271 -101 l 271 -161 l 271 -163 l 271 -177 b 291 -197 271 -189 279 -197 l 376 -197 b 396 -177 387 -197 396 -189 l 396 -92 b 376 -73 396 -81 387 -73 l 361 -73 l 360 -73 l 300 -73 l 228 -1 l 228 1 l 300 73 z',\n    },\n    accidentalDoubleFlat: {\n      x_min: 0,\n      x_max: 371,\n      y_min: -176,\n      y_max: 453,\n      ha: 629,\n      o: 'm 531 115 b 415 223 523 171 488 223 b 294 171 343 223 301 180 l 300 632 b 279 652 300 644 291 652 l 262 652 b 242 632 251 652 242 644 l 246 199 b 173 223 228 213 204 223 b 52 170 101 223 59 179 l 58 632 b 37 652 58 644 49 652 l 20 652 b 0 632 9 652 0 644 l 7 -233 b 27 -253 7 -245 16 -253 b 39 -249 30 -253 36 -251 b 216 -114 45 -246 138 -202 b 248 -69 226 -102 239 -82 l 249 -233 b 269 -253 249 -245 258 -253 b 281 -249 272 -253 278 -251 b 458 -112 287 -246 380 -200 b 534 79 513 -50 534 20 b 531 115 534 92 533 104 z m 190 58 b 148 -85 190 36 184 -30 b 48 -183 124 -122 75 -161 l 52 98 b 134 153 55 111 76 153 b 190 73 186 153 190 104 b 190 58 190 66 190 62 z m 432 58 b 390 -85 432 36 426 -30 b 289 -183 366 -122 317 -161 l 294 98 b 376 153 297 111 318 153 b 432 73 428 153 432 104 b 432 58 432 66 432 62 z',\n    },\n    accidentalParensLeft: {\n      x_min: 0,\n      x_max: 75,\n      y_min: -212,\n      y_max: 209,\n      ha: 421,\n      o: 'm 98 -305 b 104 -302 101 -304 102 -304 b 108 -295 107 -301 108 -298 b 107 -289 108 -294 108 -292 b 40 10 107 -288 40 -160 b 107 288 40 95 58 192 b 108 292 108 289 108 291 b 104 300 108 295 107 298 b 96 301 101 301 99 302 b 91 298 94 301 92 300 b 0 0 86 292 0 174 b 91 -301 0 -174 86 -295 b 98 -305 92 -304 95 -305 z',\n    },\n    accidentalParensRight: {\n      x_min: 0,\n      x_max: 75,\n      y_min: -209,\n      y_max: 212,\n      ha: 421,\n      o: 'm 10 305 b 4 302 7 304 6 304 b 0 295 1 301 0 298 b 1 289 0 294 0 292 b 68 -10 1 288 68 160 b 1 -288 68 -95 50 -192 b 0 -292 0 -289 0 -291 b 4 -300 0 -295 1 -298 b 12 -301 7 -301 9 -302 b 17 -298 14 -301 16 -300 b 108 0 22 -292 108 -174 b 17 301 108 174 22 295 b 10 305 16 304 13 305 z',\n    },\n    accidentalQuarterToneFlatStein: {\n      x_min: 0,\n      x_max: 193,\n      y_min: -176,\n      y_max: 452,\n      ha: 628,\n      o: 'm 0 84 b 107 -145 0 -26 65 -105 b 245 -249 166 -202 245 -249 b 253 -253 248 -251 249 -253 b 272 -235 264 -253 272 -245 l 278 632 b 259 651 278 642 269 651 l 248 651 b 229 632 238 651 229 642 l 232 174 b 125 217 223 186 192 217 b 0 84 53 217 0 173 z m 148 154 b 232 102 212 154 232 115 b 233 107 232 99 233 102 l 235 -179 b 134 -72 207 -156 160 -111 b 92 58 98 -17 92 36 b 92 75 92 62 92 68 b 148 154 92 105 96 154 z',\n    },\n    accidentalThreeQuarterTonesFlatZimmermann: {\n      x_min: 0,\n      x_max: 422,\n      y_min: -176,\n      y_max: 452,\n      ha: 628,\n      o: 'm 608 84 b 482 217 608 173 554 217 b 376 174 416 217 384 186 l 379 632 b 360 651 379 642 370 651 l 348 651 b 330 632 338 651 330 642 l 336 -235 b 354 -253 336 -245 344 -253 b 363 -249 359 -253 360 -251 b 501 -145 363 -249 442 -202 b 608 84 543 -105 608 -26 z m 459 154 b 516 75 511 154 516 105 b 516 58 516 68 516 62 b 474 -72 516 36 510 -17 b 373 -179 448 -111 400 -156 l 374 107 b 376 102 374 102 376 99 b 459 154 376 115 396 154 z m 0 84 b 107 -145 0 -26 65 -105 b 245 -249 166 -202 245 -249 b 253 -253 248 -251 249 -253 b 272 -235 264 -253 272 -245 l 278 632 b 259 651 278 642 269 651 l 248 651 b 229 632 238 651 229 642 l 232 174 b 125 217 223 186 192 217 b 0 84 53 217 0 173 z m 148 154 b 232 102 212 154 232 115 b 233 107 232 99 233 102 l 235 -179 b 134 -72 207 -156 160 -111 b 92 58 98 -17 92 36 b 92 75 92 62 92 68 b 148 154 92 105 96 154 z',\n    },\n    accidentalQuarterToneSharpStein: {\n      x_min: 0,\n      x_max: 180,\n      y_min: -316,\n      y_max: 320,\n      ha: 636,\n      o: 'm 243 144 b 259 164 252 145 259 156 l 259 249 b 239 269 259 261 251 269 b 235 268 238 269 236 268 l 150 251 l 150 461 l 109 461 l 109 242 l 16 222 b 0 203 7 220 0 212 l 0 120 b 20 99 0 108 9 99 b 24 99 22 99 23 99 l 109 117 l 109 -121 l 16 -141 b 0 -160 7 -143 0 -151 l 0 -243 b 20 -264 0 -255 9 -264 b 24 -264 22 -264 23 -264 l 109 -246 l 109 -455 l 150 -455 l 150 -238 l 243 -219 b 259 -199 252 -217 259 -207 l 259 -114 b 239 -95 259 -102 251 -95 b 235 -95 238 -95 236 -95 l 150 -112 l 150 125 z',\n    },\n    accidentalThreeQuarterTonesSharpStein: {\n      x_min: 0,\n      x_max: 290,\n      y_min: -328,\n      y_max: 339,\n      ha: 667,\n      o: 'm 400 158 b 416 179 409 160 416 170 l 416 264 b 397 284 416 275 409 284 b 393 284 396 284 395 284 l 348 274 l 348 488 l 308 488 l 308 265 l 223 248 l 223 465 l 184 465 l 184 240 l 108 225 l 108 442 l 69 442 l 69 216 l 16 204 b 0 186 7 203 0 194 l 0 102 b 20 82 0 91 9 82 b 24 82 22 82 23 82 l 69 92 l 69 -147 l 16 -158 b 0 -177 7 -160 0 -168 l 0 -261 b 20 -281 0 -272 9 -281 b 24 -281 22 -281 23 -281 l 69 -272 l 69 -472 l 108 -472 l 108 -264 l 184 -248 l 184 -451 l 223 -451 l 223 -240 l 308 -223 l 308 -426 l 348 -426 l 348 -215 l 400 -204 b 418 -184 409 -203 418 -193 l 418 -99 b 397 -79 418 -88 409 -79 b 393 -79 396 -79 395 -79 l 348 -89 l 348 148 z m 184 -122 l 108 -138 l 108 99 l 184 115 z m 223 122 l 308 140 l 308 -98 l 223 -115 z',\n    },\n    accidentalBuyukMucennebFlat: {\n      x_min: 0,\n      x_max: 277,\n      y_min: -176,\n      y_max: 454,\n      ha: 630,\n      o: 'm 396 115 b 279 225 387 173 354 225 b 158 171 204 225 164 179 l 160 317 l 336 419 l 336 482 l 161 380 l 161 488 l 336 590 l 336 654 l 163 552 l 164 634 b 144 654 164 645 156 654 l 127 654 b 107 634 115 654 107 645 l 108 520 l 0 456 l 0 393 l 108 456 l 109 350 l 0 285 l 0 222 l 109 287 l 114 -235 b 134 -253 114 -246 122 -253 b 145 -251 138 -253 141 -252 b 323 -114 145 -251 242 -204 b 399 79 377 -52 399 20 b 396 115 399 92 397 104 z m 297 58 b 255 -85 297 36 291 -30 b 154 -184 230 -122 181 -163 l 158 96 b 240 153 161 109 181 153 b 297 73 292 153 297 104 b 297 58 297 66 297 62 z',\n    },\n    accidentalBuyukMucennebSharp: {\n      x_min: 0,\n      x_max: 348,\n      y_min: -332,\n      y_max: 334,\n      ha: 666,\n      o: 'm 494 121 b 482 125 491 122 485 125 b 478 125 481 125 480 125 l 354 91 l 354 148 l 412 164 b 425 183 419 166 425 176 l 425 268 b 408 287 425 278 418 287 b 402 285 406 287 403 285 l 354 272 l 354 481 l 317 481 l 317 262 l 186 226 l 186 436 l 148 436 l 148 216 l 89 200 b 76 183 82 199 76 190 l 76 98 b 84 84 76 92 79 86 b 95 81 86 82 92 81 b 99 81 96 81 98 81 l 148 94 l 148 35 l 14 -1 b 0 -20 7 -3 0 -13 l 0 -104 b 7 -118 0 -109 3 -115 b 19 -122 10 -120 16 -122 b 23 -121 20 -122 22 -121 l 148 -88 l 148 -147 l 89 -163 b 76 -180 82 -164 76 -173 l 76 -181 l 76 -265 b 95 -282 76 -275 85 -282 b 99 -282 96 -282 98 -282 l 148 -269 l 148 -478 l 186 -478 l 186 -259 l 317 -225 l 317 -433 l 354 -433 l 354 -215 l 412 -199 b 425 -181 419 -197 425 -189 l 425 -95 b 418 -81 425 -89 422 -84 b 406 -76 415 -79 409 -76 b 402 -78 405 -76 403 -78 l 354 -91 l 354 -32 l 488 4 b 501 22 495 6 501 14 l 501 107 b 494 121 501 112 498 118 z m 317 138 l 317 81 l 186 45 l 186 104 z m 186 -137 l 186 -78 l 317 -42 l 317 -101 z',\n    },\n    accidentalBakiyeFlat: {\n      x_min: 0,\n      x_max: 277,\n      y_min: -176,\n      y_max: 454,\n      ha: 630,\n      o: 'm 396 115 b 279 225 387 173 354 225 b 158 171 204 225 164 179 l 161 348 l 336 452 l 336 516 l 161 413 l 164 634 b 144 654 164 645 156 654 l 127 654 b 107 634 115 654 107 645 l 109 382 l 0 318 l 0 255 l 109 318 l 114 -235 b 134 -253 114 -246 122 -253 b 145 -251 138 -253 143 -252 b 323 -114 145 -251 242 -204 b 399 79 377 -52 399 20 b 396 115 399 92 397 104 z m 297 58 b 255 -85 297 36 291 -30 b 156 -184 230 -122 183 -163 l 158 96 b 240 153 161 109 181 153 b 297 73 292 153 297 104 b 297 58 297 66 297 62 z',\n    },\n    accidentalKucukMucennebSharp: {\n      x_min: 0,\n      x_max: 348,\n      y_min: -316,\n      y_max: 318,\n      ha: 634,\n      o: 'm 494 121 b 482 125 491 124 487 125 b 478 124 481 125 480 124 l 269 68 l 269 127 l 412 164 b 425 181 420 167 425 173 l 425 266 b 418 282 425 272 422 279 b 406 285 415 285 410 285 b 402 285 405 285 403 285 l 269 249 l 269 458 l 232 458 l 232 239 l 89 200 b 76 181 81 197 76 190 l 76 98 b 84 84 76 92 79 86 b 95 79 86 81 91 79 b 99 81 96 79 98 81 l 232 115 l 232 58 l 14 -3 b 0 -20 6 -6 0 -12 l 0 -104 b 7 -118 0 -109 3 -115 b 19 -122 10 -121 14 -122 b 23 -122 20 -122 22 -122 l 232 -66 l 232 -124 l 89 -163 b 76 -180 81 -166 76 -171 l 76 -264 b 84 -279 76 -269 79 -276 b 95 -282 86 -282 91 -282 b 99 -282 96 -282 98 -282 l 232 -246 l 232 -455 l 269 -455 l 269 -236 l 412 -199 b 425 -180 420 -196 425 -189 l 425 -95 b 418 -81 425 -89 422 -84 b 406 -76 415 -78 410 -76 b 402 -78 405 -76 403 -78 l 269 -114 l 269 -55 l 487 4 b 501 22 495 7 501 13 l 501 107 b 494 121 501 112 498 118 z',\n    },\n    articAccentAbove: {\n      x_min: 0,\n      x_max: 361,\n      y_min: 0,\n      y_max: 235,\n      ha: 235,\n      o: 'm 26 337 b 20 338 24 337 22 338 b 0 318 9 338 0 330 l 0 285 b 14 266 0 276 7 269 l 323 170 l 14 72 b 0 53 7 69 0 62 l 0 20 b 20 0 0 9 9 0 b 26 1 22 0 24 1 l 505 150 b 520 170 513 153 520 161 b 505 189 520 179 513 186 z',\n    },\n    articAccentBelow: {\n      x_min: 0,\n      x_max: 361,\n      y_min: -235,\n      y_max: 0,\n      ha: 235,\n      o: 'm 26 -1 b 20 0 24 -1 22 0 b 0 -20 9 0 0 -9 l 0 -53 b 14 -72 0 -62 7 -69 l 323 -168 l 14 -266 b 0 -285 7 -269 0 -276 l 0 -318 b 20 -338 0 -330 9 -338 b 26 -337 22 -338 24 -337 l 505 -189 b 520 -168 513 -186 520 -177 b 505 -150 520 -160 513 -153 z',\n    },\n    articTenutoAbove: {\n      x_min: 0,\n      x_max: 316,\n      y_min: 0,\n      y_max: 46,\n      ha: 46,\n      o: 'm 20 66 b 0 46 9 66 0 58 l 0 20 b 20 0 0 9 9 0 l 435 0 b 455 20 446 0 455 9 l 455 46 b 435 66 455 58 446 66 z',\n    },\n    articTenutoBelow: {\n      x_min: 0,\n      x_max: 316,\n      y_min: -46,\n      y_max: 0,\n      ha: 46,\n      o: 'm 20 0 b 0 -20 9 0 0 -9 l 0 -46 b 20 -66 0 -58 9 -66 l 435 -66 b 455 -46 446 -66 455 -58 l 455 -20 b 435 0 455 -9 446 0 z',\n    },\n    articStaccatoAbove: {\n      x_min: 0,\n      x_max: 78,\n      y_min: 0,\n      y_max: 78,\n      ha: 78,\n      o: 'm 16 16 b 96 16 39 -6 73 -6 b 96 95 118 39 118 73 b 16 95 73 118 39 118 b 16 16 -6 73 -6 39 z',\n    },\n    articStaccatoBelow: {\n      x_min: 0,\n      x_max: 78,\n      y_min: -78,\n      y_max: 0,\n      ha: 78,\n      o: 'm 16 -96 b 96 -96 39 -118 73 -118 b 96 -17 118 -73 118 -39 b 16 -17 73 6 39 6 b 16 -96 -6 -39 -6 -73 z',\n    },\n    articStaccatissimoAbove: {\n      x_min: 0,\n      x_max: 127,\n      y_min: 0,\n      y_max: 248,\n      ha: 248,\n      o: 'm 163 357 b 150 353 154 357 150 353 l 99 300 b 92 295 96 297 95 295 b 85 300 89 295 88 297 l 35 353 b 22 357 35 353 30 357 b 0 338 13 357 0 351 b 73 22 0 323 73 22 b 92 0 75 16 78 0 b 111 22 107 0 109 16 b 183 338 111 22 183 323 b 163 357 183 351 171 357 z',\n    },\n    articStaccatissimoBelow: {\n      x_min: 0,\n      x_max: 127,\n      y_min: -248,\n      y_max: 0,\n      ha: 248,\n      o: 'm 20 -357 b 33 -353 29 -357 33 -353 l 84 -300 b 91 -295 86 -297 88 -295 b 98 -300 94 -295 95 -297 l 148 -353 b 161 -357 148 -353 153 -357 b 183 -338 170 -357 183 -351 b 109 -22 183 -323 109 -22 b 91 0 108 -16 105 0 b 72 -22 76 0 73 -16 b 0 -338 72 -22 0 -323 b 20 -357 0 -351 12 -357 z',\n    },\n    articMarcatoAbove: {\n      x_min: 1,\n      x_max: 296,\n      y_min: 0,\n      y_max: 253,\n      ha: 253,\n      o: 'm 36 10 l 173 239 l 298 10 b 317 0 301 4 310 0 l 408 0 b 426 20 419 0 426 9 b 425 30 426 23 426 27 l 230 356 b 213 364 226 361 222 363 b 196 356 207 364 199 361 l 1 30 z',\n    },\n    articMarcatoBelow: {\n      x_min: 0,\n      x_max: 295,\n      y_min: -253,\n      y_max: 0,\n      ha: 253,\n      o: 'm 390 -10 l 253 -239 l 128 -10 b 109 0 125 -4 117 0 l 19 0 b 0 -20 7 0 0 -9 b 1 -30 0 -23 0 -27 l 196 -356 b 213 -364 200 -361 204 -363 b 230 -356 219 -364 228 -361 l 425 -30 z',\n    },\n    fermataAbove: {\n      x_min: 0,\n      x_max: 622,\n      y_min: 0,\n      y_max: 368,\n      ha: 368,\n      o: 'm 778 374 b 448 530 642 521 523 530 b 120 374 373 530 255 521 b 0 65 49 297 0 143 b 20 19 0 37 6 19 b 161 265 60 19 40 143 b 445 373 268 372 410 373 b 448 373 446 373 446 373 b 451 373 449 373 449 373 b 734 265 485 373 628 372 b 876 19 855 143 835 19 b 896 65 890 19 896 36 b 778 374 896 143 848 298 z m 348 99 b 448 0 348 45 393 0 b 547 99 503 0 547 45 b 448 199 547 154 503 199 b 348 99 393 199 348 154 z',\n    },\n    fermataBelow: {\n      x_min: 0,\n      x_max: 622,\n      y_min: -368,\n      y_max: 0,\n      ha: 368,\n      o: 'm 778 -374 b 896 -65 848 -298 896 -143 b 876 -19 896 -36 890 -19 b 734 -265 835 -19 855 -143 b 451 -373 628 -372 485 -373 b 448 -373 449 -373 449 -373 b 445 -373 446 -373 446 -373 b 161 -265 410 -373 268 -372 b 20 -19 40 -143 60 -19 b 0 -65 6 -19 0 -37 b 120 -374 0 -143 49 -297 b 448 -530 255 -521 373 -530 b 778 -374 523 -530 642 -521 z m 348 -99 b 448 -199 348 -154 393 -199 b 547 -99 503 -199 547 -154 b 448 0 547 -45 503 0 b 348 -99 393 0 348 -45 z',\n    },\n    fermataLongAbove: {\n      x_min: 0,\n      x_max: 623,\n      y_min: 0,\n      y_max: 368,\n      ha: 368,\n      o: 'm 40 0 l 40 399 l 858 399 l 858 0 l 897 0 l 897 510 b 877 530 897 521 888 530 l 20 530 b 0 510 9 530 0 521 l 0 0 z m 350 148 b 449 49 350 94 395 49 b 547 148 504 49 547 94 b 449 248 547 203 504 248 b 350 148 395 248 350 203 z',\n    },\n    fermataLongBelow: {\n      x_min: 0,\n      x_max: 623,\n      y_min: -368,\n      y_max: 0,\n      ha: 368,\n      o: 'm 0 -510 b 20 -530 0 -521 9 -530 l 877 -530 b 897 -510 888 -530 897 -521 l 897 0 l 858 0 l 858 -399 l 40 -399 l 40 0 l 0 0 z m 350 -148 b 449 -248 350 -203 395 -248 b 547 -148 504 -248 547 -203 b 449 -49 547 -94 504 -49 b 350 -148 395 -49 350 -94 z',\n    },\n    fermataVeryLongAbove: {\n      x_min: 0,\n      x_max: 842,\n      y_min: 0,\n      y_max: 549,\n      ha: 549,\n      o: 'm 276 0 l 276 399 l 936 399 l 936 0 l 976 0 l 976 510 b 956 530 976 521 968 530 l 256 530 b 236 510 245 530 236 521 l 236 0 z m 507 148 b 606 49 507 94 552 49 b 706 148 661 49 706 94 b 606 248 706 203 661 248 b 507 148 552 248 507 203 z m 40 0 l 40 661 l 1172 661 l 1172 0 l 1212 0 l 1212 772 b 1192 791 1212 783 1204 791 l 20 791 b 0 772 9 791 0 783 l 0 0 z',\n    },\n    fermataVeryLongBelow: {\n      x_min: 0,\n      x_max: 842,\n      y_min: -549,\n      y_max: 0,\n      ha: 549,\n      o: 'm 236 -510 b 256 -530 236 -521 245 -530 l 956 -530 b 976 -510 968 -530 976 -521 l 976 0 l 936 0 l 936 -399 l 276 -399 l 276 0 l 236 0 z m 507 -148 b 606 -248 507 -203 552 -248 b 706 -148 661 -248 706 -203 b 606 -49 706 -94 661 -49 b 507 -148 552 -49 507 -94 z m 0 -772 b 20 -791 0 -783 9 -791 l 1192 -791 b 1212 -772 1204 -791 1212 -783 l 1212 0 l 1172 0 l 1172 -661 l 40 -661 l 40 0 l 0 0 z',\n    },\n    fermataShortAbove: {\n      x_min: 0,\n      x_max: 642,\n      y_min: 0,\n      y_max: 454,\n      ha: 454,\n      o: 'm 363 148 b 462 49 363 94 408 49 b 562 148 517 49 562 94 b 462 248 562 203 517 248 b 363 148 408 248 363 203 z m 477 645 b 461 654 474 649 467 654 b 445 645 455 654 448 649 l 4 32 b 0 20 3 29 0 23 b 20 0 0 9 9 0 l 82 0 b 98 9 88 0 95 4 l 461 514 l 827 9 b 842 0 829 4 837 0 l 904 0 b 924 20 916 0 924 9 b 920 32 924 23 922 29 z',\n    },\n    fermataShortBelow: {\n      x_min: 0,\n      x_max: 642,\n      y_min: -454,\n      y_max: 0,\n      ha: 454,\n      o: 'm 363 -148 b 462 -248 363 -203 408 -248 b 562 -148 517 -248 562 -203 b 462 -49 562 -94 517 -49 b 363 -148 408 -49 363 -94 z m 920 -32 b 924 -20 922 -29 924 -23 b 904 0 924 -9 916 0 l 842 0 b 827 -9 837 0 829 -4 l 461 -514 l 98 -9 b 82 0 95 -4 88 0 l 20 0 b 0 -20 9 0 0 -9 b 4 -32 0 -23 3 -29 l 445 -645 b 461 -654 448 -649 455 -654 b 477 -645 467 -654 474 -649 z',\n    },\n    breathMarkComma: {\n      x_min: 0,\n      x_max: 191,\n      y_min: 0,\n      y_max: 321,\n      ha: 321,\n      o: 'm 82 0 b 275 285 215 92 275 183 b 115 462 275 396 212 462 b 0 356 46 462 0 413 b 115 246 0 294 53 246 b 181 258 157 246 177 256 b 192 261 184 259 189 261 b 199 259 194 261 196 261 b 203 245 202 258 203 253 b 48 43 203 183 147 112 z',\n    },\n    caesura: {\n      x_min: 0,\n      x_max: 380,\n      y_min: 0,\n      y_max: 490,\n      ha: 490,\n      o: 'm 285 706 b 285 706 285 706 285 706 b 271 696 279 706 274 701 l 1 22 b 0 16 0 20 0 17 b 16 0 0 7 7 0 l 50 0 b 65 10 56 0 62 4 l 334 684 b 336 690 334 685 336 688 b 320 706 336 698 328 706 z m 213 22 b 212 16 213 20 212 17 b 228 0 212 7 219 0 l 262 0 b 276 10 268 0 274 4 l 546 684 b 547 690 547 685 547 688 b 531 706 547 698 540 706 l 497 706 b 482 696 491 706 485 701 z',\n    },\n    caesuraCurved: {\n      x_min: 0,\n      x_max: 368,\n      y_min: 0,\n      y_max: 491,\n      ha: 491,\n      o: 'm 262 707 b 245 693 253 707 246 701 b 1 26 233 603 177 348 b 0 17 0 23 0 20 b 16 0 0 9 6 0 b 30 7 22 0 27 3 b 318 687 259 341 304 602 b 318 690 318 688 318 688 b 301 707 318 698 310 707 z m 474 707 b 458 693 465 707 459 701 b 213 26 446 603 389 348 b 212 19 212 23 212 20 b 229 0 212 9 219 0 b 243 7 235 0 240 3 b 530 687 472 341 516 602 b 530 690 530 688 530 688 b 514 707 530 698 523 707 z',\n    },\n    restMaxima: {\n      x_min: 0,\n      x_max: 450,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 158 -360 b 180 -338 170 -360 180 -350 l 180 338 b 158 360 180 350 170 360 l 22 360 b 0 338 9 360 0 350 l 0 -338 b 22 -360 0 -350 9 -360 z m 626 -360 b 648 -338 638 -360 648 -350 l 648 338 b 626 360 648 350 638 360 l 490 360 b 468 338 477 360 468 350 l 468 -338 b 490 -360 468 -350 477 -360 z',\n    },\n    restDoubleWhole: {\n      x_min: 0,\n      x_max: 125,\n      y_min: -11,\n      y_max: 262,\n      ha: 273,\n      o: 'm 158 -16 b 180 6 171 -16 180 -6 l 180 356 b 158 377 180 367 171 377 l 22 377 b 0 356 10 377 0 367 l 0 6 b 22 -16 0 -6 10 -16 z',\n    },\n    restWhole: {\n      x_min: 0,\n      x_max: 325,\n      y_min: -131,\n      y_max: 5,\n      ha: 136,\n      o: 'm 20 7 b 0 -13 9 7 0 -1 l 0 -168 b 20 -189 0 -180 9 -189 l 448 -189 b 468 -168 459 -189 468 -180 l 468 -13 b 448 7 468 -1 459 7 z',\n    },\n    restWholeLegerLine: {\n      x_min: -139,\n      x_max: 464,\n      y_min: -122,\n      y_max: 14,\n      ha: 136,\n      o: 'm 449 20 l 19 20 l -200 20 l -200 -20 l 0 -20 l 0 -156 b 19 -176 0 -167 7 -176 l 449 -176 b 468 -156 461 -176 468 -167 l 468 -20 l 668 -20 l 668 20 z',\n    },\n    restHalf: {\n      x_min: 0,\n      x_max: 325,\n      y_min: -4,\n      y_max: 132,\n      ha: 136,\n      o: 'm 0 14 b 20 -6 0 -6 0 -6 l 448 -6 b 468 14 468 -6 468 -6 l 468 170 b 448 190 468 190 468 190 l 20 190 b 0 170 0 190 0 190 z',\n    },\n    restHalfLegerLine: {\n      x_min: -139,\n      x_max: 464,\n      y_min: -14,\n      y_max: 122,\n      ha: 136,\n      o: 'm 668 20 l 468 20 l 468 156 b 449 176 468 167 461 176 l 19 176 b 0 156 7 176 0 167 l 0 20 l -200 20 l -200 -20 l 19 -20 l 449 -20 l 668 -20 z',\n    },\n    restQuarter: {\n      x_min: 0,\n      x_max: 235,\n      y_min: -331,\n      y_max: 401,\n      ha: 732,\n      o: 'm 331 -239 b 323 -229 330 -238 327 -235 l 157 -24 b 154 -16 156 -23 154 -19 b 157 -3 154 -12 156 -6 l 304 219 b 307 229 305 222 307 226 l 307 242 b 302 253 307 246 305 251 l 69 569 b 55 577 69 569 63 577 b 43 573 50 577 48 576 b 36 559 37 569 36 563 b 40 543 36 550 40 543 l 150 393 b 154 376 153 389 154 383 b 150 359 154 370 153 363 l 4 137 b 1 125 3 134 1 128 l 1 112 b 6 101 1 108 3 104 l 167 -99 b 131 -95 161 -98 148 -95 b 49 -124 107 -95 75 -101 b 0 -229 17 -153 0 -193 b 16 -285 0 -249 4 -269 b 154 -468 46 -331 154 -468 b 171 -477 154 -468 161 -477 b 180 -474 174 -477 177 -477 b 190 -456 187 -468 190 -462 b 186 -444 190 -451 187 -446 b 135 -353 181 -436 135 -353 b 125 -307 135 -353 125 -333 b 150 -246 125 -288 131 -265 b 206 -223 167 -229 187 -223 b 252 -236 225 -223 240 -229 l 308 -272 b 320 -275 308 -272 314 -275 b 334 -268 325 -275 330 -274 b 338 -255 337 -262 338 -259 b 334 -243 338 -251 337 -248 z',\n    },\n    rest8th: {\n      x_min: 0,\n      x_max: 276,\n      y_min: -255,\n      y_max: 204,\n      ha: 459,\n      o: 'm 384 292 b 379 294 383 292 380 294 b 360 282 370 294 363 289 b 245 141 354 274 310 189 b 180 112 226 127 203 117 b 206 181 196 131 206 154 b 104 284 206 238 160 284 b 0 181 46 284 0 238 b 65 85 0 137 27 101 b 144 68 86 75 115 68 b 269 109 186 68 230 81 b 320 157 287 122 304 140 l 156 -356 l 194 -367 l 396 268 b 397 275 397 269 397 272 b 384 292 397 282 393 288 z',\n    },\n    rest16th: {\n      x_min: 1,\n      x_max: 344,\n      y_min: -507,\n      y_max: 204,\n      ha: 711,\n      o: 'm 494 268 b 495 275 495 271 495 272 b 482 292 495 282 491 289 b 475 294 480 294 477 294 b 456 282 467 294 461 289 b 285 115 422 213 364 135 b 310 184 302 135 310 158 b 203 284 310 240 259 284 b 104 177 145 281 104 233 b 171 84 105 134 134 98 b 252 69 197 72 225 69 b 423 164 324 72 380 108 l 423 164 l 359 -65 b 183 -245 338 -132 256 -226 b 207 -176 199 -225 207 -200 b 102 -76 207 -118 158 -76 b 1 -183 45 -76 1 -125 b 69 -275 1 -226 32 -262 b 150 -289 96 -287 121 -289 b 321 -194 222 -287 278 -251 l 174 -720 l 213 -730 z',\n    },\n    rest32nd: {\n      x_min: 0,\n      x_max: 391,\n      y_min: -507,\n      y_max: 460,\n      ha: 967,\n      o: 'm 217 71 b 408 171 348 71 402 161 l 354 -46 b 184 -240 323 -121 268 -217 b 204 -171 200 -220 204 -197 b 102 -76 204 -114 158 -76 b 0 -177 46 -76 0 -120 b 140 -288 0 -252 63 -288 b 320 -186 216 -288 276 -246 l 189 -721 l 228 -730 l 562 638 b 563 644 563 639 563 642 b 549 661 563 652 557 658 b 543 662 547 662 544 662 b 524 649 534 662 528 657 b 361 487 497 589 431 504 b 383 556 379 508 383 530 b 282 652 383 611 338 652 b 179 549 226 652 179 609 b 249 451 179 505 210 464 b 311 439 268 444 288 441 b 330 441 317 439 323 439 b 498 541 400 445 458 485 l 442 310 b 271 117 413 238 351 137 b 292 186 288 138 292 160 b 189 282 292 243 245 282 b 88 180 132 282 88 238 b 217 71 88 112 153 71 z',\n    },\n    rest64th: {\n      x_min: 0,\n      x_max: 423,\n      y_min: -758,\n      y_max: 464,\n      ha: 1222,\n      o: 'm 207 -1083 l 246 -1092 b 608 644 282 -919 605 634 b 609 649 608 647 609 648 b 595 667 609 658 603 665 b 589 668 593 668 592 668 b 569 654 577 668 575 664 b 474 521 563 644 530 573 b 412 487 456 505 435 494 b 432 546 425 503 432 526 b 328 649 432 606 382 649 b 226 546 275 649 226 608 b 360 438 226 465 300 438 b 501 492 419 438 474 465 b 546 546 527 518 533 526 l 547 547 l 500 323 b 399 161 491 300 452 209 b 337 125 382 144 360 132 b 357 184 350 143 357 134 b 253 288 357 235 317 288 b 151 187 190 288 151 236 b 285 76 151 138 183 76 b 471 184 412 76 465 173 l 423 -45 b 324 -204 413 -69 374 -158 b 262 -240 305 -222 284 -233 b 281 -180 274 -223 281 -212 b 177 -78 281 -147 258 -78 b 75 -180 98 -78 75 -153 b 209 -289 75 -207 88 -289 b 395 -181 330 -289 389 -193 l 350 -397 b 248 -564 337 -449 285 -530 b 186 -599 229 -580 207 -592 b 204 -540 197 -583 204 -563 b 102 -438 204 -501 174 -438 b 0 -540 29 -438 0 -501 b 132 -648 0 -579 24 -648 b 320 -540 266 -648 315 -552 z',\n    },\n    rest128th: {\n      x_min: -1,\n      x_max: 475,\n      y_min: -759,\n      y_max: 717,\n      ha: 1476,\n      o: 'm 677 1028 b 664 1032 672 1031 667 1032 b 644 1018 654 1032 649 1028 b 549 886 638 1008 605 937 b 487 851 531 870 510 858 b 507 910 500 868 507 890 b 403 1014 507 971 456 1014 b 301 910 350 1014 301 972 b 435 802 301 829 374 802 b 576 857 494 802 549 829 b 621 910 602 883 608 890 l 622 912 l 575 687 b 474 526 566 664 527 573 b 412 490 456 508 435 497 b 432 549 425 507 432 498 b 328 652 432 599 392 652 b 226 552 265 652 226 600 b 360 441 226 503 258 441 b 546 549 487 441 540 537 l 498 320 b 399 160 488 295 449 207 b 337 125 380 143 359 131 b 356 184 348 141 356 153 b 252 287 356 217 333 287 b 150 184 173 287 150 212 b 284 76 150 157 163 76 b 469 183 405 76 464 171 l 425 -33 b 323 -200 412 -85 360 -166 b 261 -235 304 -216 282 -228 b 279 -176 272 -219 279 -199 b 177 -72 279 -137 249 -72 b 75 -176 104 -72 75 -137 b 207 -284 75 -215 99 -284 b 395 -176 341 -284 390 -187 l 347 -409 b 248 -566 330 -461 282 -533 b 186 -600 229 -582 207 -593 b 204 -541 197 -583 204 -564 b 102 -438 204 -501 174 -438 b -1 -541 29 -438 -1 -503 b 132 -649 -1 -580 24 -649 b 318 -546 256 -649 307 -567 l 206 -1084 l 245 -1093 b 683 1008 281 -920 680 996 b 684 1015 683 1009 684 1014 b 677 1028 684 1020 683 1024 z',\n    },\n    dynamicPiano: {\n      x_min: -95,\n      x_max: 317,\n      y_min: -163,\n      y_max: 263,\n      ha: 426,\n      o: 'm 186 -235 l 186 -206 l 78 -206 l 161 26 l 166 16 b 229 -29 166 16 180 -16 b 256 -32 238 -32 248 -32 b 445 166 336 -32 415 49 b 456 246 454 197 456 223 b 374 373 456 343 396 367 b 356 376 369 374 361 376 b 242 314 311 376 266 338 l 238 310 l 235 315 b 154 377 235 315 204 370 b 138 379 148 377 144 379 b 0 226 91 379 42 346 l 26 213 b 63 301 32 232 46 278 b 102 328 72 314 89 325 b 108 328 104 328 107 328 b 120 325 112 328 117 327 b 127 304 125 321 127 314 b 94 192 127 269 101 206 l -49 -206 l -137 -206 l -137 -235 z m 226 17 b 215 19 223 17 217 17 b 187 81 193 27 187 53 b 204 180 187 125 203 177 b 297 317 217 235 259 295 b 324 325 307 323 315 325 b 336 324 328 325 333 325 b 350 311 341 323 347 317 b 356 278 354 302 356 291 b 333 161 356 239 341 187 b 242 20 314 105 278 37 b 226 17 238 17 230 17 z',\n    },\n    dynamicMezzo: {\n      x_min: -7,\n      x_max: 374,\n      y_min: -2,\n      y_max: 251,\n      ha: 253,\n      o: 'm 488 63 b 467 48 481 50 474 48 b 459 49 464 48 462 48 b 449 65 452 52 449 58 b 461 112 449 76 455 94 b 474 157 464 121 471 150 b 492 281 482 183 492 242 b 491 301 492 288 492 295 b 436 359 484 340 467 359 b 340 307 399 359 359 331 l 337 301 l 334 308 b 272 359 334 308 311 359 b 177 310 232 359 202 343 l 173 304 l 171 311 b 117 360 171 311 153 353 b 96 361 109 361 102 361 b 29 328 60 361 39 340 b -10 252 20 318 0 284 l 12 240 b 68 318 12 240 36 318 b 75 317 71 318 72 318 b 86 295 84 314 86 307 b 59 194 86 275 75 240 b 1 20 59 193 6 33 b 0 13 1 17 0 16 b 3 4 0 10 1 7 b 14 -1 6 1 9 -1 l 36 -1 b 91 -1 58 -1 86 -1 b 107 22 94 -1 101 -1 b 127 99 114 53 121 79 b 235 310 132 121 186 310 b 243 305 238 310 242 308 b 248 289 246 302 248 297 b 216 160 248 265 233 219 b 173 22 194 89 173 22 b 173 16 173 20 173 19 b 176 3 173 12 173 6 b 187 -1 179 0 183 -1 l 266 -1 b 282 16 272 -1 279 0 b 284 26 282 17 284 22 b 392 302 312 228 359 288 b 396 304 393 302 395 304 l 397 304 b 400 302 399 304 399 302 b 408 289 403 301 408 297 b 369 140 408 275 399 217 b 356 75 360 117 356 95 b 370 23 356 55 360 37 b 428 -3 382 6 408 -3 b 536 99 492 -3 517 49 b 539 108 537 102 537 105 l 514 120 b 488 63 514 120 498 81 z',\n    },\n    dynamicForte: {\n      x_min: -137,\n      x_max: 334,\n      y_min: -193,\n      y_max: 421,\n      ha: 614,\n      o: 'm -122 -86 b -197 -161 -161 -86 -197 -122 b -81 -278 -197 -236 -147 -278 b 35 -228 -35 -278 -1 -264 b 202 173 98 -164 167 50 b 238 297 215 219 228 264 l 238 300 l 341 300 b 356 314 350 300 356 305 l 356 346 b 341 360 356 354 350 360 l 256 360 l 256 364 b 330 554 297 511 308 537 b 359 566 341 563 351 566 b 366 564 361 566 364 564 b 380 553 373 563 377 559 b 382 546 382 550 382 549 b 373 528 382 539 379 531 b 351 478 359 517 351 498 b 354 458 351 471 353 465 b 384 426 359 445 370 432 b 410 420 390 423 400 420 b 445 431 420 420 432 423 b 478 472 459 438 474 456 b 481 497 481 480 481 488 b 467 550 481 514 477 533 b 376 605 455 572 422 598 b 351 606 369 606 360 606 b 225 553 317 606 272 595 b 122 363 187 520 154 456 l 122 360 l 13 360 b -1 346 4 360 -1 354 l -1 314 b 13 300 -1 305 4 300 l 102 300 l 102 294 b 66 140 88 236 76 187 b 24 -35 55 86 42 32 l 20 -52 b -53 -235 -10 -170 -19 -212 b -78 -242 -60 -239 -69 -242 b -98 -235 -85 -242 -92 -239 b -105 -222 -102 -232 -105 -228 b -105 -219 -105 -220 -105 -220 b -94 -204 -104 -213 -101 -207 b -58 -144 -66 -193 -58 -167 b -122 -86 -58 -124 -71 -86 z',\n    },\n    dynamicRinforzando: {\n      x_min: -12,\n      x_max: 230,\n      y_min: 0,\n      y_max: 254,\n      ha: 254,\n      o: 'm 272 364 b 200 341 239 364 212 348 b 168 310 187 333 177 321 l 164 304 b 109 363 164 304 151 353 b 88 366 102 364 95 366 b 22 331 52 366 32 343 b -17 255 13 321 -7 287 l 4 243 b 60 321 4 243 29 321 b 68 320 63 321 65 321 b 78 297 75 317 78 308 b 49 180 78 272 65 230 l 0 23 b 0 17 0 22 0 20 b 3 4 0 13 0 7 b 14 0 6 1 10 0 l 94 0 b 109 17 99 0 107 1 b 111 27 109 19 111 23 b 209 302 140 230 186 279 b 225 311 215 308 220 311 b 229 310 226 311 228 311 b 233 304 233 307 233 305 b 233 301 233 302 233 301 b 216 268 220 291 216 279 b 225 243 216 259 219 249 b 262 229 235 232 249 229 b 304 242 279 229 295 235 b 331 308 320 255 331 275 b 272 364 331 341 304 364 z',\n    },\n    dynamicSforzando: {\n      x_min: 0,\n      x_max: 208,\n      y_min: -5,\n      y_max: 263,\n      ha: 268,\n      o: 'm 242 328 b 217 289 222 317 217 300 b 258 249 217 274 230 249 b 298 284 285 249 295 269 b 300 295 300 287 300 291 b 189 379 300 328 272 379 b 49 259 92 379 49 315 b 99 173 49 229 59 196 b 164 137 117 163 140 151 b 194 88 189 122 194 102 b 124 24 194 73 177 24 b 72 46 82 24 72 39 b 73 49 72 48 72 49 b 96 96 78 52 96 62 b 50 150 96 134 72 150 b 0 91 29 150 0 134 b 124 -7 0 26 49 -7 b 282 111 199 -7 282 24 b 171 239 282 197 207 219 b 128 292 135 259 128 268 b 193 347 128 317 156 347 b 242 328 230 347 242 328 z',\n    },\n    dynamicZ: {\n      x_min: -42,\n      x_max: 239,\n      y_min: -1,\n      y_max: 258,\n      ha: 259,\n      o: 'm 229 292 b 235 288 232 292 233 291 b 236 284 236 285 236 285 b 233 278 236 281 235 279 b -42 55 232 276 -4 85 b -60 24 -56 43 -60 33 b -50 4 -60 12 -50 4 b -35 0 -45 1 -40 0 b 9 29 -14 0 1 19 b 50 69 17 43 26 69 b 89 35 75 69 81 50 b 170 -1 104 10 137 -1 b 243 22 197 -1 223 6 b 304 147 288 56 304 118 b 264 196 304 176 294 196 b 226 156 239 196 226 174 b 251 117 226 128 249 122 b 251 108 251 114 251 111 b 243 79 251 98 249 88 b 212 56 236 68 223 56 b 202 59 209 56 204 56 b 163 92 194 63 186 75 b 108 122 140 109 114 120 b 105 125 105 124 105 124 b 107 128 105 127 107 128 b 312 304 107 128 302 294 b 341 340 324 315 336 327 b 344 347 343 341 344 346 l 344 356 b 333 369 343 367 336 369 l 331 369 l 262 363 b 217 361 245 361 230 361 b 156 366 193 361 174 363 b 114 372 147 367 125 372 b 107 370 111 372 108 370 b 86 344 98 367 89 360 b 37 222 72 265 42 232 b 37 219 37 220 37 220 b 50 207 37 213 43 207 l 66 207 b 81 225 75 207 76 215 b 108 291 85 235 105 285 b 118 297 111 297 112 297 b 167 289 125 295 144 291 b 181 289 171 289 177 289 b 229 292 202 289 222 291 z',\n    },\n    ornamentTrill: {\n      x_min: -12,\n      x_max: 383,\n      y_min: 0,\n      y_max: 383,\n      ha: 383,\n      o: 'm 464 396 b 376 359 408 396 376 359 l 364 370 b 346 377 357 377 346 377 l 197 377 l 246 528 b 246 531 246 530 246 531 b 226 552 246 541 236 552 l 213 552 b 199 544 209 552 202 547 b 124 482 196 541 130 487 b 117 471 118 478 117 471 b 84 377 117 471 102 431 l 3 377 b -17 360 -14 377 -17 360 l -17 341 b 3 324 -17 325 3 324 l 66 324 b 0 85 35 229 0 117 b 92 0 0 16 48 0 b 186 35 137 0 186 35 b 194 13 186 35 190 24 b 212 0 199 1 212 0 l 276 0 b 298 16 295 0 298 16 l 298 43 b 321 147 298 75 321 147 l 382 284 b 412 325 382 284 396 311 b 446 341 425 336 438 341 b 452 340 448 341 451 341 b 428 288 432 327 428 305 b 485 233 428 271 446 233 b 552 308 534 233 552 264 b 464 396 552 353 520 396 z m 222 143 b 147 78 210 104 171 78 b 137 79 143 78 140 78 b 121 115 125 85 121 99 b 137 190 121 148 137 190 l 180 324 l 275 324 b 279 320 279 324 279 320 b 222 143 279 320 235 187 z',\n    },\n    ornamentTurn: {\n      x_min: 0,\n      x_max: 456,\n      y_min: 0,\n      y_max: 232,\n      ha: 232,\n      o: 'm 527 334 b 442 269 488 334 442 312 b 501 204 442 228 468 204 b 570 226 533 204 540 226 b 613 164 598 226 613 204 l 613 163 b 550 98 613 127 586 98 b 448 143 508 98 485 109 l 328 255 l 298 284 b 174 334 262 317 223 334 b 0 170 92 334 0 278 b 131 0 0 68 58 0 b 215 65 170 0 215 22 b 156 130 215 107 189 130 b 86 108 124 130 117 108 b 43 170 59 108 43 130 l 43 171 b 108 236 43 207 72 236 b 209 192 150 236 171 225 l 328 79 l 360 50 b 482 0 396 17 433 0 b 657 164 564 0 657 56 b 527 334 657 266 600 334 z',\n    },\n    ornamentTurnSlash: {\n      x_min: 0,\n      x_max: 456,\n      y_min: -80,\n      y_max: 313,\n      ha: 393,\n      o: 'm 527 334 b 442 269 488 334 442 312 b 501 204 442 228 468 204 b 570 226 533 204 540 226 b 613 164 598 226 613 204 l 613 163 b 550 98 613 127 586 98 b 448 143 508 98 485 109 l 354 230 l 354 431 b 336 451 354 442 347 451 l 323 451 b 302 431 311 451 302 442 l 302 279 l 298 284 b 174 334 262 317 223 334 b 0 170 92 334 0 278 b 131 0 0 68 58 0 b 215 65 170 0 215 22 b 156 130 215 107 189 130 b 86 108 124 130 117 108 b 43 170 59 108 43 130 l 43 171 b 108 236 43 207 72 236 b 209 192 150 236 171 225 l 302 104 l 302 -96 b 323 -115 302 -108 311 -115 l 336 -115 b 354 -96 347 -115 354 -108 l 354 55 l 360 50 b 482 0 396 17 433 0 b 657 164 564 0 657 56 b 527 334 657 266 600 334 z',\n    },\n    ornamentMordent: {\n      x_min: 0,\n      x_max: 473,\n      y_min: -77,\n      y_max: 316,\n      ha: 393,\n      o: 'm 647 302 l 562 166 l 446 347 b 429 357 444 353 435 357 b 413 347 423 357 416 353 l 363 262 l 363 435 b 343 455 363 446 354 455 l 331 455 b 311 435 320 455 311 446 l 311 173 l 310 171 l 203 347 b 186 357 200 353 192 357 b 168 347 180 357 171 353 l 0 69 l 35 48 l 120 189 l 226 10 b 243 0 229 4 238 0 b 261 10 249 0 258 4 l 311 95 l 311 -91 b 331 -111 311 -102 320 -111 l 343 -111 b 363 -91 354 -111 363 -102 l 363 184 l 366 189 l 478 10 b 495 0 481 4 490 0 b 513 10 501 0 510 4 l 681 281 z',\n    },\n    ornamentShortTrill: {\n      x_min: 0,\n      x_max: 473,\n      y_min: 0,\n      y_max: 248,\n      ha: 248,\n      o: 'm 647 302 l 562 166 l 446 347 b 431 357 444 353 436 357 b 413 347 425 357 416 353 l 310 171 l 203 347 b 186 357 200 353 192 357 b 168 347 180 357 173 353 l 0 69 l 35 48 l 120 189 l 226 10 b 243 0 229 4 238 0 b 261 10 249 0 258 4 l 366 189 l 478 9 b 495 0 481 3 490 0 b 513 10 501 0 510 4 l 681 281 z',\n    },\n    ornamentTremblement: {\n      x_min: 0,\n      x_max: 654,\n      y_min: 0,\n      y_max: 248,\n      ha: 248,\n      o: 'm 907 302 l 822 166 l 708 348 b 691 357 704 354 701 357 b 674 347 685 357 677 353 l 648 302 l 563 166 l 449 348 b 432 357 446 354 438 357 b 415 347 426 357 418 353 l 415 346 l 311 171 l 203 348 b 186 357 200 354 192 357 b 168 348 177 357 171 354 l 168 347 l 0 69 l 35 48 l 120 190 l 226 10 b 243 0 229 4 238 0 l 245 0 b 261 10 251 0 258 4 l 367 189 l 480 10 b 497 0 482 4 491 0 b 513 10 503 0 510 4 l 625 192 l 739 10 b 756 0 742 4 750 0 b 772 10 762 0 769 4 l 942 282 z',\n    },\n    ornamentPrecompAppoggTrill: {\n      x_min: 0,\n      x_max: 680,\n      y_min: 0,\n      y_max: 388,\n      ha: 388,\n      o: 'm 860 170 l 746 353 b 729 361 743 359 737 361 b 713 351 723 361 716 357 l 685 307 l 600 170 l 487 353 b 481 359 485 356 484 357 b 469 361 478 360 472 361 b 452 351 464 361 455 357 l 348 176 l 240 353 b 223 361 238 359 229 361 b 206 353 215 361 209 359 l 40 76 l 40 541 b 20 559 39 552 30 559 b 0 541 10 559 1 552 l 0 26 b 19 1 0 16 9 4 b 26 0 20 1 24 0 b 48 13 35 0 43 6 l 72 52 l 157 194 l 265 14 b 282 4 268 9 276 4 b 298 14 288 4 295 9 l 405 193 l 517 14 b 534 4 520 9 528 4 b 550 14 540 4 547 9 l 664 196 l 776 14 b 793 4 779 9 788 4 b 811 14 799 4 808 9 l 979 287 l 945 307 z',\n    },\n    ornamentPrecompSlideTrillDAnglebert: {\n      x_min: 0,\n      x_max: 662,\n      y_min: -158,\n      y_max: 248,\n      ha: 406,\n      o: 'm 834 166 l 720 348 b 704 357 717 354 713 357 b 687 348 697 357 690 353 l 661 302 l 660 302 l 575 166 l 461 348 b 455 354 459 350 456 353 b 444 357 452 356 448 357 b 428 347 438 357 431 353 l 323 171 l 215 347 b 213 350 215 348 215 350 b 213 350 213 350 213 350 l 213 351 l 212 351 l 212 353 l 210 353 l 210 353 l 209 354 b 207 354 209 354 207 354 b 197 357 206 356 200 357 b 197 357 197 357 197 357 b 194 357 196 357 196 357 b 180 347 187 357 183 353 l 180 346 l 69 164 b 0 -50 23 88 0 17 b 49 -219 0 -108 16 -163 b 66 -228 52 -223 59 -228 b 76 -225 69 -228 73 -226 b 86 -207 82 -222 86 -215 b 84 -197 86 -204 85 -200 b 40 -52 55 -150 40 -102 b 104 143 40 10 62 73 l 131 190 l 239 10 b 256 0 242 4 249 0 l 256 0 b 272 10 262 0 269 4 l 379 189 l 491 10 b 508 0 494 4 503 0 b 508 0 508 0 508 0 l 508 0 b 526 10 514 0 521 4 l 638 192 l 750 10 b 768 0 755 4 762 0 l 768 0 b 785 10 773 0 782 4 l 785 10 l 953 282 l 919 302 z',\n    },\n    ornamentPrecompSlideTrillBach: {\n      x_min: 0,\n      x_max: 662,\n      y_min: -158,\n      y_max: 321,\n      ha: 479,\n      o: 'm 834 166 l 720 348 b 704 357 716 354 713 357 b 687 348 698 357 690 354 l 660 304 l 660 302 l 632 259 l 632 442 b 612 462 632 454 624 462 l 599 462 b 579 442 588 462 579 454 l 579 173 l 575 166 l 461 348 b 455 356 459 351 458 354 b 445 359 452 357 448 359 b 428 348 439 359 431 354 l 323 171 l 215 347 b 213 350 215 348 213 350 l 213 351 l 212 353 l 210 353 l 210 354 l 207 354 b 197 357 204 356 200 357 b 180 348 189 357 183 354 l 179 346 l 69 164 b 0 -49 23 88 0 19 b 49 -217 0 -107 17 -163 b 66 -228 52 -223 60 -228 b 76 -225 69 -228 73 -226 b 86 -207 82 -222 86 -213 b 84 -197 86 -204 85 -200 b 42 -50 56 -148 42 -101 b 104 144 42 12 62 75 l 131 190 l 239 10 b 256 0 242 4 251 0 b 274 10 262 0 271 4 l 379 190 l 491 10 b 508 0 494 4 503 0 b 526 10 514 0 523 4 l 579 98 l 579 -84 b 599 -104 579 -95 588 -104 l 612 -104 b 632 -84 624 -104 632 -95 l 632 183 l 638 192 l 750 10 b 768 0 753 4 762 0 b 785 10 773 0 782 4 l 953 282 l 919 302 z',\n    },\n    ornamentPrecompTrillSuffixDandrieu: {\n      x_min: 0,\n      x_max: 662,\n      y_min: 0,\n      y_max: 406,\n      ha: 406,\n      o: 'm 904 575 b 887 585 901 580 893 585 b 877 582 884 585 880 583 b 867 564 871 579 867 570 b 870 554 867 562 868 557 b 912 408 897 505 912 458 b 850 213 912 346 891 282 l 822 167 l 714 348 b 697 357 711 354 703 357 b 680 348 691 357 683 354 l 575 168 l 462 348 b 445 357 459 354 451 357 b 428 348 439 357 431 354 l 315 167 l 203 348 b 186 357 200 354 192 357 b 168 348 180 357 171 354 l 0 76 l 35 55 l 120 192 l 233 10 b 249 0 238 4 240 0 b 266 10 255 0 264 4 l 294 55 l 379 192 l 492 9 b 498 3 494 6 495 4 b 508 0 501 1 505 0 b 526 10 514 0 523 4 l 631 186 l 737 13 b 746 3 739 10 743 4 b 756 0 749 1 753 0 b 773 9 762 0 770 3 l 884 193 b 953 406 930 269 953 338 b 904 575 953 464 936 520 z',\n    },\n    ornamentPrecompDoubleCadenceUpperPrefix: {\n      x_min: 0,\n      x_max: 857,\n      y_min: 0,\n      y_max: 248,\n      ha: 248,\n      o: 'm 383 140 b 413 189 399 166 412 187 b 520 10 423 171 516 16 b 537 0 523 4 530 0 b 554 10 543 0 550 4 b 660 189 557 16 649 171 b 772 10 671 173 766 19 b 791 0 778 1 785 0 b 806 10 796 0 802 4 b 919 192 809 16 907 174 l 1031 10 b 1048 0 1035 4 1043 0 l 1048 0 b 1066 10 1054 1 1063 4 l 1066 10 l 1234 282 l 1200 302 l 1115 166 l 1002 348 b 985 357 998 354 994 357 b 968 348 978 357 971 353 l 855 166 b 742 348 845 183 746 341 b 726 357 737 354 732 357 b 708 348 719 357 711 354 b 603 171 704 341 613 189 b 495 348 593 189 498 343 b 478 357 492 353 487 357 b 461 348 469 357 464 353 b 357 173 459 346 393 235 b 213 79 320 111 284 79 b 66 176 143 79 95 112 b 40 279 43 228 40 275 b 20 300 40 291 30 300 b 0 278 9 300 0 289 b 29 161 0 276 3 219 b 213 39 65 81 130 39 b 383 140 297 39 346 73 z',\n    },\n    ornamentPrecompTrillLowerSuffix: {\n      x_min: 0,\n      x_max: 565,\n      y_min: -171,\n      y_max: 249,\n      ha: 420,\n      o: 'm 347 168 l 235 348 b 217 359 230 354 226 359 b 200 348 209 359 203 353 b 3 30 197 344 6 35 b 0 20 0 26 0 24 b 22 0 0 9 10 0 b 37 9 27 0 35 3 l 151 192 b 265 10 161 174 262 13 b 281 0 268 6 272 0 b 298 10 289 0 295 3 l 403 186 l 511 10 b 528 0 516 4 521 0 b 546 10 537 0 541 4 l 698 265 b 775 22 744 202 775 112 b 700 -215 775 -60 752 -144 b 696 -226 697 -219 696 -222 b 704 -243 696 -232 700 -239 b 717 -246 708 -246 713 -246 b 733 -239 723 -246 729 -243 b 814 20 789 -160 814 -69 b 711 312 814 132 773 242 b 696 320 707 317 700 320 b 680 310 691 320 684 318 b 595 168 671 297 602 181 l 488 348 b 471 359 484 354 478 359 b 454 348 464 359 456 353 b 347 168 449 343 357 186 z',\n    },\n    brassMuteClosed: {\n      x_min: 0,\n      x_max: 312,\n      y_min: 0,\n      y_max: 312,\n      ha: 312,\n      o: 'm 22 256 b 0 225 7 256 0 240 b 22 193 0 209 7 193 l 193 193 l 193 22 b 225 0 193 7 209 0 b 256 22 240 0 256 7 l 256 193 l 428 193 b 449 225 442 193 449 209 b 428 256 449 240 442 256 l 256 256 l 256 428 b 225 449 256 442 240 449 b 193 428 209 449 193 442 l 193 256 z',\n    },\n    brassMuteOpen: {\n      x_min: 0,\n      x_max: 280,\n      y_min: 0,\n      y_max: 280,\n      ha: 280,\n      o: 'm 202 403 b 0 202 91 403 0 312 b 202 0 0 91 91 0 b 403 202 312 0 403 91 b 202 403 403 312 312 403 z m 202 40 b 40 202 112 40 40 112 b 202 363 40 291 112 363 b 363 202 291 363 363 291 b 202 40 363 112 291 40 z',\n    },\n    stringsDownBow: {\n      x_min: 0,\n      x_max: 315,\n      y_min: 0,\n      y_max: 293,\n      ha: 293,\n      o: 'm 40 0 l 40 291 l 413 291 l 413 0 l 454 0 l 454 402 b 433 422 454 413 445 422 l 20 422 b 0 402 9 422 0 402 l 0 0 z',\n    },\n    stringsUpBow: {\n      x_min: 0,\n      x_max: 262,\n      y_min: 0,\n      y_max: 343,\n      ha: 343,\n      o: 'm 374 485 b 357 494 372 490 363 494 l 337 494 b 318 481 330 494 321 488 l 189 118 l 59 481 b 40 494 56 488 48 494 l 20 494 b 0 474 9 494 0 485 b 1 467 0 472 1 468 l 170 13 b 189 0 173 6 181 0 b 207 13 196 0 204 6 l 376 467 b 377 474 376 468 377 472 b 374 485 377 477 376 482 z',\n    },\n    stringsHarmonic: {\n      x_min: 0,\n      x_max: 181,\n      y_min: 0,\n      y_max: 181,\n      ha: 181,\n      o: 'm 131 220 b 220 131 181 220 220 181 b 131 40 220 81 181 40 b 40 131 81 40 40 81 b 131 220 40 181 81 220 z m 131 261 b 0 131 59 261 0 203 b 131 0 0 59 59 0 b 261 131 203 0 261 59 b 131 261 261 203 203 261 z',\n    },\n    pluckedSnapPizzicatoAbove: {\n      x_min: 0,\n      x_max: 269,\n      y_min: 0,\n      y_max: 389,\n      ha: 389,\n      o: 'm 213 540 b 194 560 213 552 204 560 b 174 540 183 560 174 552 l 174 386 b 0 193 76 376 0 294 b 194 0 0 86 86 0 b 387 193 301 0 387 86 b 213 386 387 294 311 376 z m 194 40 b 40 193 109 40 40 109 b 174 346 40 271 98 336 l 174 193 b 194 173 174 183 183 173 b 213 193 204 173 213 183 l 213 346 b 347 193 289 336 347 271 b 194 40 347 109 278 40 z',\n    },\n    pluckedSnapPizzicatoBelow: {\n      x_min: 0,\n      x_max: 269,\n      y_min: 0,\n      y_max: 389,\n      ha: 389,\n      o: 'm 213 174 b 387 367 311 184 387 266 b 193 560 387 474 301 560 b 0 367 86 560 0 474 b 174 174 0 266 76 184 l 174 20 b 194 0 174 9 183 0 b 213 20 204 0 213 9 z m 194 520 b 347 367 278 520 347 452 b 213 215 347 289 289 225 l 213 367 b 194 387 213 377 204 387 b 174 367 183 387 174 377 l 174 215 b 40 367 98 225 40 289 b 194 520 40 452 109 520 z',\n    },\n    keyboardPedalPed: {\n      x_min: 0,\n      x_max: 981,\n      y_min: -10,\n      y_max: 545,\n      ha: 555,\n      o: 'm 1354 12 b 1413 78 1385 12 1413 42 b 1354 145 1413 115 1385 145 b 1293 78 1320 145 1293 115 b 1354 12 1293 42 1320 12 z m 1092 88 b 1080 86 1089 86 1084 86 b 1004 203 1037 86 1004 137 b 1107 376 1004 360 1097 374 b 1149 209 1129 336 1149 287 b 1092 88 1149 117 1130 95 z m 752 393 b 795 344 779 393 795 372 b 770 285 795 325 788 304 b 693 203 737 249 697 207 b 688 264 690 225 688 245 b 752 393 688 347 714 393 z m 245 507 b 220 544 245 533 235 544 b 217 544 219 544 219 544 b 186 510 206 546 192 537 b 143 464 179 478 163 464 b 134 465 140 464 137 464 b 102 516 117 467 102 487 b 141 613 102 541 112 576 b 347 721 212 711 315 721 b 356 721 351 721 354 721 b 275 560 344 701 297 616 b 259 495 274 557 259 528 b 272 452 259 480 264 465 b 373 323 297 416 350 354 b 387 284 382 311 387 298 b 350 222 387 265 376 245 b 230 140 301 180 252 154 b 128 39 215 130 128 92 b 134 12 128 30 130 22 b 173 -14 144 -7 157 -14 b 264 40 204 -14 243 17 b 333 98 281 58 302 98 b 389 39 357 98 373 60 b 478 -10 416 1 435 -10 b 622 96 527 -10 559 43 b 740 -10 626 86 667 -10 b 929 95 827 -10 917 85 b 1086 -12 950 37 1018 -12 b 1120 -7 1097 -12 1109 -10 b 1264 213 1212 17 1264 111 b 1263 248 1264 225 1263 236 b 815 664 1228 544 907 647 b 785 668 805 665 795 668 b 779 668 783 668 782 668 b 757 654 769 668 760 665 b 757 649 757 652 757 651 b 786 618 759 629 783 619 b 818 606 796 613 808 611 b 1071 435 1007 534 1066 445 b 909 181 930 386 909 256 b 910 141 909 164 909 151 b 786 78 899 127 844 78 b 708 151 726 78 710 144 b 799 230 711 154 742 181 b 864 350 845 271 864 312 b 757 456 864 410 815 456 b 599 222 644 456 599 328 b 609 141 599 192 602 164 b 563 104 608 140 595 122 b 540 98 556 99 549 98 b 459 140 513 98 480 118 b 397 184 413 189 399 184 b 475 279 403 189 454 226 b 482 311 480 289 482 300 b 449 410 482 359 452 405 b 361 533 442 419 383 503 b 354 560 356 541 354 550 b 386 651 353 588 372 622 b 429 713 405 693 426 710 b 557 592 521 688 557 628 b 549 569 557 582 554 573 b 523 559 540 562 531 559 b 459 592 495 559 469 583 b 425 613 451 600 438 613 b 409 608 419 613 415 612 b 399 586 402 602 399 595 b 399 583 397 585 399 585 b 409 552 399 573 405 562 b 541 458 441 487 492 458 b 608 480 564 458 588 465 b 648 572 632 497 648 531 b 429 778 648 649 589 749 b 351 785 402 782 376 785 b 0 507 130 785 0 615 b 127 366 0 399 68 366 b 245 507 186 366 245 429 z',\n    },\n    keyboardPedalUp: {\n      x_min: 0,\n      x_max: 473,\n      y_min: 0,\n      y_max: 473,\n      ha: 473,\n      o: 'm 99 99 b 164 69 120 79 143 69 b 199 82 177 69 190 73 b 210 114 206 89 210 102 b 206 137 210 122 209 130 b 200 160 203 145 200 154 b 210 179 200 166 203 171 l 245 215 b 285 213 255 225 272 219 l 287 213 l 288 212 b 318 183 301 206 318 196 l 318 134 b 291 102 318 112 308 112 b 258 58 274 92 258 76 b 340 0 258 26 294 0 b 423 58 386 0 423 26 b 390 102 423 76 408 92 b 361 134 373 112 361 112 l 361 183 b 392 212 361 196 379 206 b 395 213 393 212 393 213 b 436 215 408 219 426 225 l 471 179 b 480 161 478 171 480 167 b 474 137 480 154 477 147 b 471 115 472 130 471 122 b 482 82 471 102 474 91 b 517 69 491 73 504 69 b 582 99 539 69 562 79 b 612 164 602 120 612 143 b 599 199 612 177 608 190 b 567 210 592 206 579 210 b 544 206 559 210 552 209 b 521 200 536 203 528 200 b 501 210 514 200 508 203 l 467 245 b 468 285 456 255 462 272 l 468 287 b 469 288 468 287 469 287 b 498 318 475 301 485 318 l 547 318 b 579 291 569 318 569 308 b 624 258 589 274 605 258 b 681 340 655 258 681 294 b 624 423 681 386 655 423 b 579 390 605 423 589 408 b 547 361 569 373 569 361 l 498 361 b 469 392 485 361 475 379 b 468 395 469 393 468 393 b 467 436 462 408 456 426 l 501 471 b 520 480 508 478 514 480 b 544 474 527 480 534 477 b 566 471 552 472 559 471 b 599 482 579 471 590 474 b 612 516 608 491 612 503 b 582 580 612 536 602 560 b 516 612 562 600 537 612 b 482 599 503 612 491 608 b 471 566 474 590 471 579 b 474 544 471 559 472 552 b 480 520 477 534 480 527 b 471 501 480 514 478 508 l 436 467 b 395 468 426 456 408 462 b 392 469 393 468 393 469 b 361 498 379 475 361 485 l 361 547 b 390 579 361 569 373 569 b 423 624 408 589 423 605 b 340 681 423 655 386 681 b 258 624 294 681 258 655 b 291 579 258 605 274 589 b 318 547 308 569 318 569 l 318 498 b 288 469 318 485 301 475 l 287 468 l 285 468 b 245 467 272 462 255 456 l 210 501 b 200 521 203 508 200 514 b 206 544 200 528 203 536 b 210 567 209 552 210 559 b 199 599 210 579 206 592 b 164 612 190 608 177 612 b 99 582 143 612 120 602 b 69 517 79 562 69 539 b 82 482 69 504 73 491 b 115 471 91 474 102 471 b 137 474 122 471 130 472 b 161 480 147 477 154 480 b 180 471 167 480 173 478 l 215 436 b 213 395 225 426 219 408 b 212 392 213 393 212 393 b 183 361 206 379 196 361 l 134 361 b 102 390 112 361 112 373 b 58 423 92 408 76 423 b 0 340 26 423 0 386 b 58 258 0 294 26 258 b 102 291 76 258 92 274 b 134 318 112 308 112 318 l 183 318 b 212 288 196 318 206 301 b 213 287 212 287 213 288 l 213 285 b 215 245 219 272 225 255 l 179 210 b 160 200 171 203 166 200 b 137 206 154 200 145 203 b 114 210 130 209 122 210 b 82 199 102 210 89 206 b 69 164 73 190 69 177 b 99 99 69 143 79 120 z m 276 276 b 249 340 262 291 249 320 b 340 432 249 390 289 432 b 432 340 390 432 432 390 b 405 276 432 320 419 291 b 340 249 390 262 360 249 b 276 276 320 249 291 262 z',\n    },\n    wiggleArpeggiatoUp: {\n      x_min: -22,\n      x_max: 242,\n      y_min: 0,\n      y_max: 164,\n      ha: 164,\n      o: 'm 343 122 b 323 143 343 122 334 132 b 308 148 318 147 312 148 b 298 144 304 148 301 147 b 282 128 295 141 291 137 b 274 124 279 125 276 124 b 265 128 268 124 265 128 b 158 220 265 128 173 207 b 112 236 143 232 127 236 b 43 206 82 236 55 219 l -26 137 b -32 125 -30 132 -32 130 b -26 112 -32 118 -26 112 b -6 92 -26 112 -17 102 b 7 86 -1 88 3 86 b 17 91 12 86 14 88 b 33 107 20 94 24 98 b 42 111 36 109 39 111 b 52 107 48 111 52 107 b 158 16 52 107 144 29 b 204 0 174 4 190 0 b 274 30 235 0 262 17 l 343 99 b 348 111 347 104 348 108 b 343 122 348 118 343 122 z',\n    },\n    repeat1Bar: {\n      x_min: 0,\n      x_max: 481,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 693 -181 b 602 -91 693 -131 651 -91 b 511 -181 552 -91 511 -131 b 602 -272 511 -232 552 -272 b 693 -181 651 -272 693 -232 z',\n    },\n    repeat2Bars: {\n      x_min: 0,\n      x_max: 735,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 1058 -181 b 968 -91 1058 -131 1017 -91 b 877 -181 917 -91 877 -131 b 968 -272 877 -232 917 -272 b 1058 -181 1017 -272 1058 -232 z m 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 1058 360 l 877 360 l 366 -360 l 547 -360 z',\n    },\n    repeat4Bars: {\n      x_min: 0,\n      x_max: 1243,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 1058 360 l 877 360 l 366 -360 l 547 -360 z m 1424 360 l 1243 360 l 732 -360 l 913 -360 z m 1790 360 l 1608 360 l 1097 -360 l 1279 -360 z m 1790 -181 b 1699 -91 1790 -131 1748 -91 b 1608 -181 1649 -91 1608 -131 b 1699 -272 1608 -232 1649 -272 b 1790 -181 1748 -272 1790 -232 z',\n    },\n    repeatBarSlash: {\n      x_min: 0,\n      x_max: 481,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 693 360 l 511 360 l 0 -360 l 181 -360 z',\n    },\n    csymDiminished: {\n      x_min: 0,\n      x_max: 501,\n      y_min: 0,\n      y_max: 501,\n      ha: 501,\n      o: 'm 361 721 b 0 361 161 721 0 560 b 361 0 0 161 161 0 b 721 361 560 0 721 161 b 361 721 721 560 560 721 z m 557 164 b 361 82 505 111 435 82 b 164 164 287 82 216 111 b 82 361 111 216 82 287 b 164 557 82 436 111 505 b 361 639 216 611 287 639 b 557 557 436 639 505 611 b 639 361 611 505 639 436 b 557 164 639 287 609 216 z',\n    },\n    csymHalfDiminished: {\n      x_min: -1,\n      x_max: 502,\n      y_min: -1,\n      y_max: 502,\n      ha: 503,\n      o: 'm 723 684 l 684 723 l 596 634 b 361 721 533 688 451 721 b 0 361 161 721 0 560 b 88 125 0 271 33 189 l -1 36 l 36 -1 l 125 88 b 361 0 189 33 271 0 b 721 361 560 0 721 161 b 634 596 721 451 688 533 z m 82 361 b 164 557 82 436 111 505 b 361 639 216 611 287 639 b 537 576 426 639 488 616 l 145 184 b 82 361 105 233 82 295 z m 639 361 b 557 164 639 287 609 216 b 361 82 505 111 435 82 b 184 145 295 82 233 105 l 576 537 b 639 361 616 488 639 426 z',\n    },\n    csymAugmented: {\n      x_min: 1,\n      x_max: 321,\n      y_min: 90,\n      y_max: 410,\n      ha: 320,\n      o: 'm 462 400 l 272 400 l 272 590 l 192 590 l 192 400 l 1 400 l 1 320 l 192 320 l 192 130 l 272 130 l 272 320 l 462 320 z',\n    },\n    csymMajorSeventh: {\n      x_min: 0,\n      x_max: 500,\n      y_min: 10,\n      y_max: 490,\n      ha: 480,\n      o: 'm 360 528 l 585 96 l 135 96 z m 360 706 l 0 14 l 720 14 z',\n    },\n    accidentalNarrowReversedFlat: {\n      x_min: 0,\n      x_max: 160,\n      y_min: -176,\n      y_max: 452,\n      ha: 628,\n      o: 'm 0 84 b 101 -153 0 -26 65 -107 b 196 -249 153 -217 196 -249 b 206 -253 199 -251 202 -253 b 225 -235 216 -253 225 -245 l 230 632 b 212 651 230 642 222 651 l 199 651 b 180 632 189 651 180 642 l 184 204 b 125 217 184 204 171 217 b 0 84 53 217 0 173 z m 145 154 b 184 107 181 154 184 120 l 187 -179 b 114 -72 167 -158 132 -112 b 82 58 86 -13 82 36 b 145 154 82 79 82 154 z',\n    },\n    accidentalNarrowReversedFlatAndFlat: {\n      x_min: 0,\n      x_max: 416,\n      y_min: -176,\n      y_max: 452,\n      ha: 628,\n      o: 'm 462 217 b 330 174 374 217 338 181 l 334 632 b 315 651 334 642 325 651 l 302 651 b 284 632 292 651 284 642 l 289 -235 b 308 -253 289 -245 298 -253 b 320 -249 312 -253 317 -251 b 492 -138 320 -249 433 -194 b 599 84 534 -98 599 -26 b 462 217 599 173 534 217 z m 501 58 b 459 -72 501 36 498 -19 b 327 -179 431 -111 359 -164 l 330 85 l 330 91 b 422 154 330 125 359 154 b 501 58 503 154 501 79 z m 0 84 b 101 -153 0 -26 65 -107 b 196 -249 153 -217 196 -249 b 206 -253 199 -251 202 -253 b 225 -235 216 -253 225 -245 l 230 632 b 212 651 230 642 222 651 l 199 651 b 180 632 189 651 180 642 l 184 204 b 125 217 184 204 171 217 b 0 84 53 217 0 173 z m 145 154 b 184 107 181 154 184 120 l 187 -179 b 114 -72 167 -158 132 -112 b 82 58 86 -13 82 36 b 145 154 82 79 82 154 z',\n    },\n  },\n  fontFamily: 'Leland',\n  resolution: 1000,\n  generatedOn: '2022-12-19T23:52:37.756Z',\n};\n","export const PetalumaFont = {\n  glyphs: {\n    bracketTop: {\n      x_min: 0,\n      x_max: 508,\n      y_min: 0,\n      y_max: 370,\n      ha: 370,\n      o: 'm 22 0 b 122 0 55 1 89 0 l 157 0 b 713 376 425 0 622 137 b 732 467 724 406 732 436 b 726 514 732 482 730 498 b 711 533 723 528 719 533 b 693 526 707 533 700 530 b 674 498 683 520 678 508 b 635 406 662 467 652 435 b 310 164 560 281 458 193 b 154 151 258 154 206 151 b 39 154 117 151 78 154 b 1 120 17 154 4 145 b 0 84 0 108 0 96 b 0 20 0 63 1 40 b 22 0 0 4 7 0 z',\n    },\n    bracketBottom: {\n      x_min: 0,\n      x_max: 496,\n      y_min: -393,\n      y_max: 0,\n      ha: 393,\n      o: 'm 696 -566 b 711 -539 713 -566 708 -549 b 714 -521 713 -533 714 -527 b 713 -508 714 -517 713 -513 b 661 -327 706 -445 688 -384 b 392 -42 603 -203 513 -109 b 206 0 331 -7 266 0 b 160 -1 190 0 174 -1 b 26 -1 107 -1 66 -3 b 0 -19 12 -1 0 -4 l 0 -23 b 3 -50 1 -32 3 -42 b 1 -86 3 -62 1 -73 b 4 -118 1 -96 1 -108 b 45 -151 10 -145 23 -154 b 180 -143 89 -144 135 -145 b 621 -419 392 -135 523 -236 b 662 -539 641 -456 655 -497 b 696 -566 667 -557 680 -566 z',\n    },\n    barlineTick: {\n      x_min: 0,\n      x_max: 56,\n      y_min: 877,\n      y_max: 1122,\n      ha: 245,\n      o: 'm 42 1263 b 66 1287 62 1261 66 1272 b 81 1583 65 1387 72 1485 b 35 1614 82 1610 53 1610 b 14 1591 17 1619 16 1604 b 0 1408 7 1525 0 1459 l 0 1292 b 42 1263 1 1263 23 1266 z',\n    },\n    breathMarkTick: {\n      x_min: 0,\n      x_max: 568,\n      y_min: 0,\n      y_max: 621,\n      ha: 621,\n      o: 'm 258 0 b 278 39 276 0 274 24 b 279 56 279 45 279 50 l 279 73 b 278 117 279 88 278 102 b 281 148 278 127 279 138 b 536 600 312 330 387 487 b 744 719 600 651 670 690 b 815 779 775 730 808 740 b 818 824 818 793 818 808 b 815 868 818 838 818 852 b 796 894 814 881 808 894 b 779 888 791 894 786 893 b 719 864 760 878 739 871 b 372 602 580 806 459 724 b 229 252 298 498 251 383 b 220 268 225 262 222 264 b 209 302 217 279 213 291 b 75 527 181 387 143 467 b 16 563 58 543 39 573 b 0 539 3 557 0 549 b 12 492 0 524 9 507 b 56 400 19 459 22 425 b 163 269 104 367 138 323 b 238 36 197 194 216 115 b 258 0 242 22 243 0 z',\n    },\n    segno: {\n      x_min: 0,\n      x_max: 798,\n      y_min: -65,\n      y_max: 806,\n      ha: 871,\n      o: 'm 16 -94 b 66 -69 39 -92 53 -85 b 177 59 102 -26 138 17 b 543 456 298 192 420 324 b 726 300 615 420 680 373 b 753 217 744 271 753 243 b 655 112 753 170 719 131 b 599 104 636 107 618 104 b 461 173 544 104 495 128 b 432 190 454 183 444 190 b 409 179 425 190 418 187 b 359 118 390 160 373 141 b 341 72 347 101 341 86 b 373 24 341 56 351 40 b 409 6 384 17 396 10 b 550 -13 454 -12 501 -14 b 599 -6 566 -12 583 -10 b 864 213 720 27 806 104 b 886 300 878 242 886 271 b 857 395 886 331 877 363 b 799 467 840 420 821 445 b 648 572 755 513 704 546 b 1110 1083 802 743 955 914 b 1140 1129 1123 1097 1136 1110 b 1149 1148 1142 1135 1149 1142 b 1145 1153 1149 1149 1148 1152 b 1123 1161 1139 1158 1130 1161 b 1109 1156 1119 1161 1113 1159 b 1089 1138 1102 1151 1094 1145 b 946 988 1040 1089 989 1041 b 595 602 834 855 711 732 l 590 598 l 549 615 b 432 793 462 647 432 723 b 534 888 432 851 474 888 b 671 834 588 888 631 864 b 710 818 684 824 696 818 b 724 821 714 818 719 819 b 809 883 757 834 788 852 b 816 901 814 890 816 896 b 802 923 816 910 812 916 b 706 984 770 945 742 971 b 593 1011 668 998 631 1011 b 516 991 567 1011 541 1005 b 333 799 433 949 380 876 b 302 693 312 765 302 729 b 330 589 302 658 311 624 b 469 488 360 533 415 511 b 485 482 475 487 480 485 b 266 249 412 405 338 327 b 121 88 217 196 170 141 b 9 -65 78 40 37 -7 b 0 -85 4 -72 0 -79 b 16 -94 0 -91 4 -94 z m 861 536 b 927 575 890 539 909 557 b 965 628 952 598 965 613 b 926 680 965 644 952 658 b 865 713 900 701 883 713 b 805 667 845 713 828 698 b 768 611 791 649 770 631 b 812 564 766 589 798 582 b 861 536 824 550 840 537 z m 251 350 b 363 436 285 348 353 403 b 354 456 366 448 360 452 b 271 518 327 477 298 497 b 243 528 261 526 252 528 b 210 513 232 528 222 523 b 157 454 190 494 176 472 b 141 428 147 444 141 436 b 158 406 141 420 147 413 b 216 361 180 393 197 376 b 245 350 225 356 235 350 z',\n    },\n    coda: {\n      x_min: 0,\n      x_max: 1380,\n      y_min: -196,\n      y_max: 1037,\n      ha: 1233,\n      o: 'm 1028 -282 b 1057 -245 1045 -282 1053 -261 b 1060 -203 1060 -232 1060 -217 b 1063 9 1060 -132 1061 -62 b 1390 194 1192 22 1303 81 b 1531 543 1467 298 1512 415 b 1532 556 1531 547 1532 552 b 1904 559 1656 557 1780 559 b 1950 582 1920 559 1941 569 b 1987 674 1970 609 1987 638 b 1984 698 1987 681 1986 690 b 1950 700 1973 698 1961 700 l 1941 700 l 1545 696 b 1535 776 1545 723 1541 749 b 1103 1113 1477 996 1326 1107 b 1080 1115 1096 1115 1087 1115 b 1081 1322 1080 1184 1080 1253 b 1079 1467 1083 1371 1081 1418 b 1061 1493 1079 1476 1080 1493 l 1060 1493 b 1028 1467 1044 1490 1031 1485 b 1020 1403 1025 1446 1020 1424 b 1017 1110 1020 1305 1018 1208 l 962 1106 b 569 914 808 1087 671 1035 b 451 683 510 844 472 766 l 161 678 b 118 680 148 678 132 680 b 79 670 101 680 86 678 b 0 544 48 636 29 592 l 37 544 l 429 549 b 428 518 428 539 428 528 b 488 285 428 435 458 360 b 681 81 526 192 593 124 b 946 9 763 40 854 19 b 1008 6 966 7 988 6 b 1005 -137 1008 -42 1005 -89 b 1012 -243 1005 -173 1005 -209 b 1028 -282 1015 -258 1011 -282 z m 1074 690 b 1079 935 1077 772 1077 852 b 1326 855 1166 932 1250 909 b 1446 694 1385 814 1426 759 b 1269 693 1387 694 1328 693 b 1074 690 1204 693 1139 691 z m 577 684 b 766 874 618 763 678 828 b 989 932 837 912 913 923 b 1015 933 998 932 1007 933 b 1014 822 1015 896 1014 860 b 1011 688 1012 791 1012 743 z m 1067 184 b 1071 553 1070 307 1068 429 b 1439 556 1194 553 1316 554 b 1437 554 1439 554 1437 554 b 1341 337 1413 478 1387 402 b 1119 192 1286 261 1211 212 b 1067 184 1102 189 1084 186 z m 1008 180 b 660 264 886 181 770 212 b 524 471 570 305 524 374 b 528 524 524 488 526 505 l 533 549 b 792 552 619 550 706 550 b 1009 553 865 553 937 552 b 1008 180 1009 428 1008 288 z',\n    },\n    gClef: {\n      x_min: 0,\n      x_max: 664,\n      y_min: -559,\n      y_max: 1009,\n      ha: 1568,\n      o: 'm 343 -805 b 366 -801 350 -805 357 -804 b 409 -773 383 -795 397 -786 b 582 -328 528 -648 577 -497 b 583 -294 582 -315 583 -294 b 612 -279 583 -294 603 -282 b 747 -197 660 -256 706 -230 b 949 143 857 -109 920 10 b 956 206 955 164 956 186 b 791 384 956 297 906 363 b 704 393 762 390 733 393 b 498 336 632 393 563 374 b 481 325 490 331 481 325 l 444 465 b 442 485 442 472 442 485 b 609 880 442 485 589 746 b 619 996 616 919 619 958 b 613 1084 619 1027 618 1056 b 534 1387 599 1188 560 1286 b 482 1453 527 1417 517 1453 b 422 1407 456 1453 438 1428 b 305 1063 348 1305 312 1188 b 304 1002 304 1043 304 1022 b 338 654 304 886 323 769 b 343 629 338 645 341 636 b 144 356 278 537 206 451 b 23 144 101 288 53 220 b 0 20 7 107 0 63 b 82 -210 0 -69 30 -160 b 207 -288 112 -239 160 -271 b 410 -328 274 -312 340 -328 b 474 -324 431 -328 452 -327 l 491 -321 b 491 -341 491 -321 492 -334 b 402 -585 475 -428 454 -513 b 294 -668 374 -622 348 -664 b 271 -693 278 -670 271 -680 b 274 -708 271 -698 272 -703 b 302 -775 282 -730 292 -753 b 343 -805 311 -795 325 -805 z m 400 717 b 382 922 389 786 382 854 b 481 1286 382 1047 408 1169 b 507 1125 498 1233 507 1179 b 500 1040 507 1097 504 1068 b 400 717 481 927 455 818 z m 252 -135 b 196 -121 232 -134 215 -127 b 117 -69 158 -108 127 -94 b 111 -32 112 -58 111 -45 b 117 19 111 -16 114 1 b 130 56 118 27 127 52 b 324 337 186 156 253 246 l 384 416 l 395 384 b 416 291 406 348 416 291 b 350 213 416 291 376 239 b 243 -42 278 143 243 55 b 251 -117 243 -66 246 -91 b 252 -135 252 -122 252 -127 z m 563 -91 b 510 168 552 3 530 78 b 513 192 508 179 508 186 b 624 202 550 199 586 202 b 730 192 660 202 694 199 b 850 141 773 183 816 176 b 858 134 852 138 855 135 b 595 -121 801 19 716 -68 l 569 -131 z m 410 -160 b 311 -147 360 -160 311 -147 b 307 -98 311 -147 307 -127 b 314 -33 307 -79 308 -56 b 429 131 328 36 377 85 b 441 138 433 135 438 138 b 449 122 446 138 448 132 b 490 -131 462 37 484 -46 b 490 -153 491 -140 490 -153 b 410 -160 490 -153 452 -163 z',\n    },\n    cClef: {\n      x_min: 0,\n      x_max: 731,\n      y_min: -543,\n      y_max: 543,\n      ha: 1086,\n      o: 'm 131 -782 b 141 -755 138 -782 140 -773 b 147 -490 143 -667 145 -577 b 160 207 150 -258 153 -24 b 168 618 164 344 158 481 b 81 768 173 690 132 732 b 45 782 66 778 55 782 b 3 740 26 782 13 768 b 0 724 1 736 0 730 l 1 710 b 4 596 4 672 4 634 l 4 382 b 9 102 4 288 4 196 b 17 -301 13 -32 10 -166 l 17 -672 b 50 -736 17 -701 27 -720 b 109 -772 69 -749 91 -759 b 131 -782 120 -778 127 -782 z m 615 -770 b 881 -684 710 -770 801 -739 b 1020 -395 986 -612 1020 -510 b 1017 -334 1020 -374 1018 -354 b 769 -62 1007 -209 896 -75 b 746 -60 762 -60 755 -60 b 639 -73 710 -60 675 -69 b 524 -109 598 -79 560 -92 b 528 -36 526 -85 528 -60 b 527 -4 528 -26 528 -14 b 528 39 527 10 528 24 b 526 99 528 59 527 79 b 592 94 549 95 570 94 b 648 99 611 94 629 95 b 912 157 744 94 844 117 b 1053 377 1009 215 1053 284 b 1050 425 1053 393 1053 409 b 914 665 1037 521 986 602 b 717 753 855 717 791 753 b 626 734 688 753 658 747 l 462 665 b 347 500 374 628 347 580 b 350 449 347 484 348 468 b 392 419 353 428 367 416 b 492 438 425 425 459 428 b 541 498 524 448 541 468 b 540 514 541 503 541 508 b 537 546 537 524 537 536 b 573 639 537 580 550 611 b 606 657 582 649 593 657 l 609 657 b 716 622 647 652 684 647 b 834 372 801 556 834 469 b 831 323 834 356 832 338 b 743 187 825 266 795 217 b 710 176 732 180 720 176 b 694 179 704 176 700 177 b 527 223 638 193 582 206 b 495 229 516 228 505 229 b 454 220 481 229 468 225 b 395 189 432 213 415 200 b 363 180 384 186 374 181 b 348 168 356 179 348 176 b 340 161 343 167 340 164 b 347 150 340 157 343 154 b 356 147 348 148 353 147 b 364 92 361 130 363 111 b 369 -37 367 49 369 6 b 363 -154 369 -76 367 -115 b 357 -236 360 -183 357 -210 b 376 -264 357 -253 361 -259 b 456 -289 402 -284 429 -289 b 521 -282 478 -289 500 -285 b 549 -255 537 -279 546 -271 b 598 -177 556 -225 577 -202 b 622 -164 605 -168 613 -164 b 636 -167 626 -164 631 -166 b 749 -225 678 -177 714 -199 b 848 -405 814 -276 848 -337 b 824 -507 848 -436 840 -471 b 657 -657 792 -582 730 -625 b 608 -668 638 -664 622 -668 b 534 -602 572 -668 547 -645 b 513 -575 530 -589 523 -575 b 507 -576 510 -575 508 -575 b 478 -582 497 -580 488 -582 b 405 -570 454 -582 428 -570 b 389 -572 399 -570 395 -570 l 363 -572 b 321 -575 348 -572 333 -569 l 321 631 b 323 662 323 641 323 652 b 315 716 323 681 321 698 b 304 736 314 723 317 736 l 302 736 b 281 716 294 734 285 729 b 275 665 276 700 275 683 l 275 382 b 276 99 275 288 275 193 b 279 -170 278 10 276 -81 b 284 -399 282 -246 284 -323 b 282 -629 284 -475 282 -553 b 289 -721 282 -660 289 -690 b 300 -736 289 -727 291 -736 b 312 -724 307 -736 310 -730 b 321 -667 323 -706 321 -687 l 321 -632 l 328 -644 l 340 -657 b 510 -757 386 -707 445 -740 b 615 -770 546 -766 580 -770 z',\n    },\n    fClef: {\n      x_min: 0,\n      x_max: 776,\n      y_min: -496,\n      y_max: 216,\n      ha: 712,\n      o: 'm 402 -706 b 804 -405 592 -678 716 -566 b 876 -53 861 -298 874 -183 b 868 33 876 -32 873 1 b 560 311 845 217 723 311 b 524 310 549 311 536 311 b 131 134 373 297 239 242 b 17 -29 84 86 37 39 b 9 -89 12 -50 9 -71 b 112 -238 9 -154 43 -206 b 124 -243 117 -239 120 -242 b 186 -261 145 -255 166 -261 b 268 -228 215 -261 242 -249 b 351 -59 325 -181 351 -124 b 343 10 351 -36 348 -13 b 340 36 341 19 340 27 b 409 105 340 75 363 102 b 441 107 420 107 431 107 b 624 36 510 107 573 86 b 744 -200 688 -27 724 -109 b 747 -230 747 -210 747 -222 b 717 -323 747 -264 736 -292 b 608 -445 688 -370 654 -410 b 307 -541 518 -513 415 -541 l 213 -541 b 39 -521 154 -541 96 -539 b 0 -552 17 -514 0 -531 b 1 -564 0 -556 0 -560 b 17 -611 6 -580 10 -596 b 101 -694 35 -648 50 -684 b 288 -714 164 -707 225 -714 b 402 -706 325 -714 363 -711 z m 1018 92 b 1080 118 1041 91 1068 96 b 1117 219 1099 150 1117 180 b 1113 252 1117 229 1116 240 b 1045 288 1102 297 1068 276 b 1017 262 1028 297 1024 274 b 984 124 989 220 996 170 b 1008 91 979 108 986 91 z m 972 -281 b 1070 -148 1024 -279 1070 -210 b 1025 -105 1070 -105 1045 -112 b 989 -127 1004 -96 998 -114 b 949 -249 963 -164 963 -209 b 969 -281 943 -265 949 -281 z',\n    },\n    unpitchedPercussionClef1: {\n      x_min: 0,\n      x_max: 379,\n      y_min: -250,\n      y_max: 250,\n      ha: 500,\n      o: 'm 481 -360 b 507 -357 491 -360 500 -360 b 546 -295 541 -346 547 -325 b 536 79 543 -170 540 -46 b 523 311 533 157 534 235 b 475 359 518 340 508 359 b 425 360 459 359 442 360 b 400 359 416 360 409 360 b 337 294 348 353 340 347 l 337 -73 b 336 -264 337 -137 337 -200 b 343 -294 336 -274 338 -284 b 481 -360 359 -330 431 -360 z m 144 -341 b 207 -320 167 -341 189 -331 b 217 -301 215 -315 217 -308 b 210 -262 217 -289 210 -275 b 228 187 212 -112 209 37 b 228 287 228 220 229 253 b 174 353 228 336 222 343 b 120 359 157 357 138 359 b 48 357 96 359 72 356 b 17 323 29 357 19 344 b 7 120 16 255 9 187 b 6 -109 6 43 6 -33 l 6 -204 b 0 -251 6 -220 0 -235 b 3 -269 0 -256 0 -262 b 127 -340 24 -330 79 -328 b 144 -341 132 -341 138 -341 z',\n    },\n    '6stringTabClef': {\n      x_min: 0,\n      x_max: 438,\n      y_min: -768,\n      y_max: 767,\n      ha: 1535,\n      o: 'm 369 438 b 374 439 370 438 372 438 b 384 462 383 444 384 452 l 384 474 b 390 697 386 547 390 622 b 373 1002 390 799 390 901 l 533 1002 b 560 1001 541 1004 552 1001 b 573 1007 567 1001 572 1002 b 546 1050 579 1025 559 1038 b 536 1056 543 1053 539 1053 b 324 1104 472 1102 397 1104 b 72 1090 238 1104 154 1099 b 55 1093 66 1090 60 1092 b 37 1073 46 1093 37 1089 b 60 1045 37 1061 48 1051 b 203 1001 105 1022 151 1001 b 233 1004 213 1001 223 1002 b 246 1005 238 1004 243 1005 b 272 975 264 1005 272 996 l 272 965 b 258 596 264 842 265 719 b 315 474 253 540 272 504 l 343 455 b 369 438 351 448 357 438 z m 114 -320 b 127 -304 120 -320 124 -315 b 171 -174 141 -261 158 -219 b 222 -135 179 -147 196 -137 b 426 -122 289 -131 359 -128 b 498 -164 462 -120 482 -127 b 628 -301 521 -226 575 -264 b 631 -288 631 -295 631 -291 b 628 -269 631 -281 629 -276 b 569 -134 616 -220 589 -179 b 408 225 514 -14 462 107 b 314 357 384 274 351 318 b 278 380 298 372 288 379 b 251 351 268 380 261 372 b 4 -209 156 171 75 -17 b 0 -228 1 -215 0 -222 b 19 -258 0 -240 7 -249 b 102 -314 45 -279 75 -294 b 114 -320 107 -318 111 -320 z m 425 6 b 360 20 403 17 382 20 b 274 14 331 20 302 14 l 246 14 l 340 206 b 425 6 369 137 395 75 z m 245 -1106 b 281 -1104 256 -1106 269 -1106 b 511 -888 400 -1094 511 -1035 b 454 -688 511 -814 504 -744 b 448 -678 449 -685 448 -681 b 454 -667 448 -675 449 -671 b 504 -497 503 -619 507 -559 b 324 -288 500 -383 436 -308 b 295 -287 314 -287 304 -287 l 282 -287 b 115 -330 223 -287 168 -307 b 94 -366 102 -336 94 -348 l 94 -370 b 96 -435 96 -392 96 -413 b 73 -858 89 -576 71 -717 b 78 -919 73 -878 78 -899 b 72 -950 78 -930 76 -940 b 63 -992 66 -965 63 -978 b 66 -1015 63 -999 65 -1008 b 173 -1104 84 -1106 84 -1106 b 245 -1106 197 -1104 220 -1104 z m 161 -622 b 147 -618 156 -622 151 -621 b 140 -600 141 -612 140 -606 b 144 -564 140 -589 144 -575 b 143 -554 144 -560 144 -557 l 143 -546 b 220 -451 144 -467 143 -465 b 278 -445 239 -446 259 -444 b 418 -497 328 -445 376 -461 b 429 -516 426 -504 429 -510 b 415 -533 429 -521 423 -527 b 219 -608 357 -579 287 -590 b 215 -609 217 -608 216 -609 b 161 -622 197 -609 177 -622 z m 154 -953 b 130 -933 135 -953 130 -948 l 130 -865 l 128 -865 b 135 -788 130 -838 124 -808 b 203 -769 145 -769 180 -776 b 259 -762 223 -765 242 -762 b 441 -852 330 -762 386 -805 b 449 -867 446 -858 449 -863 b 436 -884 449 -874 444 -878 b 318 -942 402 -914 363 -935 b 154 -953 264 -950 209 -953 z',\n    },\n    timeSig0: {\n      x_min: 20,\n      x_max: 513,\n      y_min: -358,\n      y_max: 359,\n      ha: 717,\n      o: 'm 341 -516 b 420 -510 367 -516 395 -514 b 675 -338 533 -494 622 -448 b 737 -92 716 -256 734 -171 b 739 -35 739 -73 739 -53 b 680 305 739 86 720 207 b 400 517 622 449 537 517 b 337 514 380 517 359 517 b 289 507 321 511 305 513 b 91 317 192 477 127 412 b 29 9 50 212 29 108 b 217 -458 29 -157 88 -312 b 341 -516 251 -494 291 -518 z m 412 -452 b 359 -425 393 -452 376 -444 b 187 14 242 -301 179 -158 b 268 334 193 127 212 235 b 387 448 295 383 330 428 b 406 452 395 451 400 452 b 428 444 413 452 420 449 b 517 324 471 413 497 372 b 586 -29 560 222 586 86 b 556 -271 586 -112 585 -193 b 468 -422 536 -327 508 -377 b 412 -452 449 -442 431 -452 z',\n    },\n    timeSig1: {\n      x_min: 20,\n      x_max: 283,\n      y_min: -364,\n      y_max: 366,\n      ha: 730,\n      o: 'm 264 -524 b 357 -510 297 -524 325 -516 b 374 -490 369 -508 374 -501 b 380 -438 376 -472 380 -455 l 406 246 b 408 301 408 265 408 282 b 400 445 408 348 405 396 b 288 527 395 491 338 527 b 253 520 276 527 264 526 b 240 508 249 517 245 513 b 49 409 192 445 127 413 b 29 396 33 408 29 403 b 32 380 29 392 30 386 b 59 363 36 366 49 364 b 164 348 95 356 130 348 b 222 357 183 348 203 351 b 238 361 228 360 233 360 b 252 334 248 361 252 353 b 243 59 252 242 249 150 b 219 -490 229 -124 233 -307 b 264 -524 217 -516 232 -524 z',\n    },\n    timeSig2: {\n      x_min: 20,\n      x_max: 660,\n      y_min: -379,\n      y_max: 382,\n      ha: 761,\n      o: 'm 99 -543 b 130 -533 111 -550 121 -540 b 255 -448 168 -501 213 -475 b 338 -425 282 -431 310 -425 b 392 -431 356 -425 374 -426 b 485 -462 423 -438 454 -451 b 648 -497 540 -482 595 -497 b 834 -441 711 -497 773 -480 b 950 -242 906 -395 958 -334 b 942 -210 950 -230 950 -215 b 912 -220 932 -204 920 -213 b 861 -264 894 -235 877 -248 b 775 -317 835 -289 808 -305 b 675 -334 742 -328 708 -334 b 510 -295 619 -334 563 -318 b 372 -264 465 -278 420 -264 b 305 -272 350 -264 328 -266 b 331 -242 318 -256 324 -249 b 490 -73 386 -187 438 -131 b 675 340 595 43 664 180 b 677 369 677 350 677 360 b 556 536 677 461 638 508 b 468 550 526 546 497 550 b 297 508 409 550 353 533 b 111 354 220 475 168 412 b 29 197 65 308 29 261 b 32 164 29 187 29 176 b 29 140 33 157 29 147 b 43 125 29 132 32 125 b 73 147 55 125 65 138 b 86 163 79 153 82 158 b 238 320 134 219 183 272 b 425 389 292 367 360 389 b 575 341 480 389 531 373 b 606 298 590 330 606 317 b 600 278 606 292 603 285 b 501 107 576 217 544 158 b 304 -104 439 33 372 -35 b 111 -356 230 -180 167 -265 b 84 -446 92 -386 84 -415 b 86 -481 84 -458 85 -469 b 88 -514 88 -491 88 -503 b 99 -543 89 -526 91 -537 z',\n    },\n    timeSig3: {\n      x_min: 20,\n      x_max: 540,\n      y_min: -392,\n      y_max: 392,\n      ha: 784,\n      o: 'm 216 -540 b 354 -564 264 -556 310 -564 b 605 -465 445 -564 530 -530 b 729 -161 697 -383 729 -275 b 724 -82 729 -135 727 -108 b 589 95 716 -1 670 62 b 523 114 567 102 546 108 b 750 418 606 213 677 315 b 778 503 769 444 778 472 b 773 540 778 514 776 527 b 750 564 769 557 762 564 b 736 562 746 564 742 563 b 641 552 704 553 672 552 b 402 554 562 552 481 554 l 346 554 b 84 546 258 554 170 554 b 36 501 55 543 40 531 b 29 412 30 472 32 442 b 52 384 27 393 32 384 l 56 384 b 210 392 107 389 158 392 l 602 392 b 354 108 523 285 445 192 b 246 -65 300 58 246 12 b 252 -108 246 -78 248 -92 l 252 -111 b 264 -141 251 -122 251 -135 b 291 -132 274 -145 284 -140 b 425 -72 328 -95 377 -84 b 475 -65 442 -68 459 -65 b 592 -108 517 -65 557 -79 b 645 -179 615 -125 645 -147 b 642 -194 645 -184 644 -189 b 485 -376 616 -278 569 -344 b 361 -399 444 -392 402 -399 b 151 -340 289 -399 219 -376 b 88 -275 122 -323 98 -310 b 71 -249 86 -268 85 -249 b 63 -251 68 -249 66 -249 b 36 -288 48 -255 36 -266 b 55 -423 33 -336 45 -377 b 101 -482 60 -448 78 -468 b 216 -540 138 -504 174 -526 z',\n    },\n    timeSig4: {\n      x_min: 20,\n      x_max: 633,\n      y_min: -490,\n      y_max: 491,\n      ha: 981,\n      o: 'm 608 -704 b 641 -684 622 -708 634 -696 b 667 -602 660 -660 662 -631 b 685 -190 683 -465 680 -327 l 685 -176 b 831 -127 736 -166 783 -148 b 912 0 901 -94 913 -76 b 886 53 912 36 904 52 b 848 40 877 53 864 49 l 838 36 b 687 -13 789 14 739 -3 b 681 177 687 50 684 114 b 672 338 678 230 677 285 b 654 373 671 350 672 373 b 622 340 636 373 624 361 b 615 262 621 314 613 288 b 619 -22 616 167 619 72 b 569 -22 602 -23 585 -23 b 305 -3 481 -16 395 -1 b 210 -9 274 -3 242 -4 b 301 163 242 52 268 108 b 513 552 377 288 459 412 b 536 652 526 585 536 618 b 533 683 536 662 534 672 b 520 707 531 691 531 707 b 487 693 508 708 494 704 b 474 668 482 684 477 677 b 384 490 454 603 418 547 b 253 281 343 419 295 351 b 73 -13 194 181 145 78 b 29 -108 50 -42 29 -72 b 37 -147 29 -121 32 -134 b 50 -186 43 -160 50 -173 b 68 -216 52 -207 56 -215 b 92 -207 73 -216 82 -213 b 288 -166 156 -180 220 -166 b 556 -186 377 -166 467 -180 b 586 -189 566 -187 576 -187 b 616 -186 596 -189 606 -189 b 606 -432 613 -268 612 -350 b 596 -625 603 -495 596 -559 b 598 -670 596 -641 596 -655 b 608 -704 598 -683 596 -700 z',\n    },\n    timeSig5: {\n      x_min: 20,\n      x_max: 583,\n      y_min: -389,\n      y_max: 389,\n      ha: 778,\n      o: 'm 132 -536 b 249 -560 168 -553 209 -559 b 507 -462 351 -560 454 -514 b 677 -183 588 -384 642 -289 b 694 -85 688 -150 694 -117 b 540 138 694 12 642 94 b 422 173 501 154 462 167 b 400 187 408 174 400 177 b 405 202 400 190 402 196 b 428 284 416 228 426 255 b 469 312 431 307 442 312 b 757 372 569 312 662 343 b 840 490 821 392 840 432 b 812 560 840 540 834 560 b 763 546 801 560 785 556 b 757 543 762 546 759 544 b 465 484 665 505 570 484 b 396 484 452 484 425 487 b 353 454 377 482 366 474 b 281 300 323 405 304 351 b 245 164 262 255 245 212 b 246 144 245 158 246 151 b 233 63 249 115 243 89 b 225 35 228 50 225 40 b 264 14 225 22 236 19 b 445 -26 325 7 387 0 b 569 -151 501 -52 547 -89 b 575 -180 573 -161 575 -170 b 527 -275 575 -217 547 -245 b 347 -367 484 -334 419 -367 b 261 -351 318 -367 289 -363 b 95 -300 206 -333 154 -307 b 55 -321 73 -297 65 -302 b 29 -468 29 -367 40 -419 b 56 -505 26 -482 36 -500 b 132 -536 82 -514 108 -524 z',\n    },\n    timeSig6: {\n      x_min: 20,\n      x_max: 565,\n      y_min: -363,\n      y_max: 363,\n      ha: 726,\n      o: 'm 390 -518 b 621 -458 469 -507 549 -494 b 814 -134 753 -390 814 -281 b 652 59 814 -16 750 58 b 580 48 629 59 606 55 b 233 -334 392 -9 276 -138 b 115 -228 181 -314 143 -278 b 98 -160 104 -206 98 -183 b 107 -109 98 -144 101 -127 b 167 37 124 -59 145 -12 b 508 340 236 189 347 292 b 575 353 530 347 553 353 b 648 327 600 353 625 346 b 665 320 654 321 661 320 b 687 336 674 320 681 325 b 703 405 697 359 703 382 b 684 472 703 429 697 451 b 593 523 664 504 631 521 b 576 521 588 523 582 523 b 297 403 472 508 380 465 b 115 177 217 344 164 264 b 29 -121 60 82 29 -17 b 53 -278 29 -173 36 -225 b 226 -497 82 -374 131 -454 b 347 -523 265 -514 305 -523 b 390 -518 361 -523 376 -521 z m 351 -357 b 312 -351 337 -356 320 -363 b 325 -315 304 -340 320 -327 b 543 -120 373 -222 448 -158 b 622 -104 570 -108 596 -102 b 717 -132 655 -104 687 -112 b 740 -167 732 -143 740 -153 b 730 -196 740 -176 737 -184 b 563 -321 690 -258 634 -300 b 359 -357 497 -341 428 -354 z',\n    },\n    timeSig7: {\n      x_min: 20,\n      x_max: 592,\n      y_min: -345,\n      y_max: 345,\n      ha: 690,\n      o: 'm 253 -497 b 318 -485 276 -497 297 -487 b 366 -441 348 -482 360 -468 b 487 -104 390 -323 433 -210 b 835 403 580 82 701 246 b 852 436 847 416 852 428 b 815 467 852 451 840 461 b 762 474 798 471 779 474 b 674 445 732 474 701 465 b 603 410 652 431 628 420 b 383 360 533 379 459 360 b 200 435 315 360 249 382 b 88 494 168 469 131 485 b 66 497 81 495 73 497 b 33 484 52 497 39 492 b 50 436 22 469 39 451 b 295 310 114 360 199 324 b 406 301 331 304 369 301 b 593 324 468 301 530 308 b 585 307 589 314 588 310 b 265 -249 451 137 338 -46 b 207 -442 242 -312 223 -377 b 204 -462 206 -449 204 -456 b 253 -497 204 -487 220 -497 z',\n    },\n    timeSig8: {\n      x_min: 20,\n      x_max: 504,\n      y_min: -428,\n      y_max: 428,\n      ha: 856,\n      o: 'm 265 -616 b 289 -615 274 -616 281 -616 b 710 -271 492 -592 657 -485 b 726 -148 721 -229 727 -187 b 585 108 726 -48 687 42 b 572 127 576 114 573 120 b 576 144 572 132 575 138 b 598 301 590 196 598 249 b 586 413 598 338 593 376 b 356 616 559 531 467 616 b 233 582 317 616 275 606 b 29 233 101 505 29 384 b 104 9 29 153 46 72 b 189 -48 127 -16 160 -27 b 92 -158 141 -73 114 -114 b 37 -343 63 -217 50 -279 b 33 -390 35 -359 33 -374 b 265 -616 33 -524 148 -616 z m 258 105 b 124 148 215 105 167 117 b 96 196 105 163 96 177 b 99 217 96 202 96 209 b 197 384 120 281 151 337 b 350 451 242 429 297 451 b 516 364 412 451 472 422 b 530 331 523 354 530 343 l 530 327 l 530 320 b 468 151 520 261 507 200 b 419 122 455 135 442 125 b 258 105 370 117 320 105 z m 328 -438 b 158 -276 233 -436 160 -359 b 166 -239 158 -264 161 -252 b 230 -157 176 -203 202 -179 b 367 -72 274 -125 320 -98 b 448 -49 396 -56 423 -49 b 562 -118 491 -49 528 -72 b 611 -251 590 -157 611 -199 b 569 -341 611 -288 595 -318 b 328 -438 500 -402 416 -432 z',\n    },\n    timeSig9: {\n      x_min: 20,\n      x_max: 494,\n      y_min: -421,\n      y_max: 421,\n      ha: 842,\n      o: 'm 235 -606 b 361 -564 275 -606 318 -593 b 619 -229 487 -482 566 -366 b 706 127 664 -114 694 4 b 711 233 708 163 711 197 b 700 346 711 271 708 308 b 389 606 658 517 530 606 b 351 605 376 606 364 606 b 56 272 171 586 56 441 b 96 98 56 216 69 156 b 334 -53 144 -3 238 -53 b 544 36 408 -53 484 -24 b 652 176 586 78 622 124 b 631 71 645 141 639 105 b 467 -302 599 -63 562 -196 b 271 -442 412 -364 354 -422 b 225 -448 255 -446 239 -448 b 95 -305 148 -448 98 -395 b 89 -255 95 -288 94 -271 b 73 -233 86 -246 85 -233 b 52 -248 65 -233 56 -239 b 29 -317 42 -271 30 -291 b 49 -448 29 -361 40 -405 b 235 -606 69 -541 144 -606 z m 340 104 b 144 209 264 108 194 141 b 127 258 132 225 127 240 b 137 297 127 271 130 284 b 366 449 184 396 269 449 b 517 408 415 449 467 436 b 595 348 546 392 572 372 b 616 305 608 336 616 321 b 609 281 616 298 613 289 b 340 104 557 184 477 104 z',\n    },\n    timeSigCommon: {\n      x_min: 20,\n      x_max: 585,\n      y_min: -298,\n      y_max: 294,\n      ha: 592,\n      o: 'm 444 -405 b 829 -45 626 -346 740 -207 b 842 26 842 -23 842 1 b 821 58 842 39 841 58 b 795 40 811 58 802 48 b 765 3 785 29 773 16 b 469 -223 690 -104 596 -183 b 354 -242 431 -235 392 -242 b 180 -177 292 -242 235 -223 b 135 -99 154 -157 140 -131 b 132 -59 134 -85 132 -72 b 141 7 132 -37 135 -16 b 449 274 189 160 297 243 b 477 278 459 276 468 276 b 546 203 517 278 539 253 b 517 157 550 177 533 166 b 485 143 507 153 497 143 l 482 143 b 467 148 478 143 472 144 b 374 183 438 170 406 181 b 264 118 333 183 292 161 b 238 48 246 92 238 69 b 261 -9 238 29 245 10 b 383 -73 287 -39 337 -73 b 412 -68 392 -73 402 -72 b 631 164 526 -27 586 59 b 649 252 644 193 649 222 b 636 328 649 278 645 304 b 504 423 615 400 579 429 b 242 318 408 415 317 387 b 29 -158 104 190 29 33 b 30 -176 29 -164 29 -170 b 115 -364 42 -246 52 -315 b 307 -429 177 -410 240 -429 b 444 -405 351 -429 397 -420 z',\n    },\n    timeSigCutCommon: {\n      x_min: 20,\n      x_max: 695,\n      y_min: -687,\n      y_max: 687,\n      ha: 1374,\n      o: 'm 564 -989 b 595 -945 585 -991 589 -963 l 599 -922 b 605 -628 600 -824 603 -726 l 609 -399 b 878 -251 706 -363 798 -320 b 996 -85 932 -204 976 -153 b 1001 -63 998 -78 1001 -71 b 989 -46 1001 -56 998 -49 b 978 -43 985 -45 982 -43 b 950 -59 968 -43 959 -49 b 733 -216 894 -132 815 -177 b 611 -259 694 -235 652 -249 b 616 -20 612 -179 615 -99 b 680 29 642 -7 665 9 b 698 43 685 36 690 40 b 870 251 792 82 840 160 b 877 294 874 265 877 279 b 818 410 877 338 855 382 b 683 458 779 442 730 448 b 625 468 664 462 644 465 l 625 514 b 638 958 626 662 636 811 b 626 989 638 979 635 989 b 603 981 621 989 613 986 b 422 840 534 945 481 888 b 412 805 412 832 413 818 b 426 713 410 773 420 743 b 445 678 429 690 435 678 b 474 691 452 678 461 683 b 563 755 503 710 530 732 b 564 724 564 740 564 733 b 559 469 563 639 560 554 b 462 454 526 469 494 464 b 112 143 302 399 199 281 b 33 -94 66 71 45 -10 b 29 -148 30 -112 29 -131 b 105 -351 29 -223 52 -291 b 359 -455 171 -426 258 -451 b 517 -431 409 -451 464 -446 l 539 -422 l 539 -477 b 533 -739 536 -563 539 -651 b 530 -824 531 -768 530 -795 b 546 -948 530 -865 533 -907 b 564 -989 552 -962 543 -989 z m 410 -288 b 193 -197 328 -288 253 -264 b 141 -60 160 -161 141 -108 b 157 6 141 -35 147 -12 b 259 158 189 58 217 112 b 438 291 311 215 364 266 b 528 305 468 301 498 305 b 554 304 537 305 546 304 b 553 212 554 274 554 242 b 426 115 498 199 446 164 b 416 68 419 99 416 84 b 425 12 416 49 420 30 b 474 -39 432 -17 448 -32 b 513 -43 487 -42 498 -43 b 547 -40 524 -43 536 -42 l 543 -272 b 461 -285 516 -278 488 -281 b 410 -288 444 -287 426 -288 z m 694 197 b 668 203 685 197 677 199 b 621 216 654 210 638 215 b 622 294 622 242 622 268 b 706 268 651 287 678 278 b 746 235 721 261 734 249 b 752 222 749 230 752 226 b 743 213 752 219 749 215 b 694 197 727 206 711 197 z',\n    },\n    timeSigPlus: {\n      x_min: 0,\n      x_max: 661,\n      y_min: -358,\n      y_max: 358,\n      ha: 716,\n      o: 'm 605 -516 b 629 -490 624 -516 629 -507 b 628 -475 629 -485 628 -481 b 613 -131 624 -405 616 -174 b 612 -96 612 -114 612 -96 l 647 -98 b 897 -115 730 -99 814 -109 b 940 -89 919 -117 935 -109 b 952 -24 946 -69 952 -46 b 948 9 952 -14 950 -3 b 912 39 942 26 933 37 b 609 60 822 48 609 60 b 616 392 609 60 608 291 b 567 488 619 436 605 467 b 511 516 550 498 531 514 b 498 511 507 516 503 514 b 478 446 475 501 480 469 b 467 150 474 348 469 249 b 465 59 465 121 465 59 l 372 49 b 73 14 272 36 173 24 b 49 13 65 13 56 13 b 0 -33 9 13 0 6 b 60 -141 0 -117 6 -140 b 112 -135 73 -141 91 -140 b 413 -102 213 -125 314 -112 b 464 -98 441 -99 464 -98 l 464 -145 b 477 -456 464 -249 468 -353 b 526 -510 478 -488 491 -507 b 589 -513 546 -511 569 -510 b 605 -516 595 -514 600 -516 z',\n    },\n    timeSigPlusSmall: {\n      x_min: 0,\n      x_max: 418,\n      y_min: -197,\n      y_max: 199,\n      ha: 396,\n      o: 'm 301 -284 b 330 -238 320 -284 324 -255 b 348 -46 350 -176 341 -111 b 374 -20 351 -27 356 -23 b 481 -17 409 -16 445 -17 b 566 -9 510 -17 537 -16 b 602 3 579 -7 602 -16 b 566 29 602 19 582 24 b 526 33 553 32 539 33 b 384 39 478 36 432 39 b 356 62 363 39 356 42 l 356 68 b 359 177 359 104 359 141 l 359 251 b 341 287 359 264 361 285 b 311 255 324 287 314 272 b 310 228 311 246 310 236 l 301 69 b 275 39 301 49 295 39 l 271 39 b 210 40 251 40 230 40 b 167 39 196 40 181 40 b 89 40 141 37 115 40 b 24 30 68 40 46 37 b 0 17 17 27 0 30 l 0 13 b 27 -17 3 0 7 -13 b 91 -22 49 -22 71 -22 b 153 -22 115 -22 137 -20 l 275 -22 b 295 -40 289 -22 295 -27 l 295 -48 b 288 -235 288 -109 287 -171 b 287 -264 288 -243 287 -253 b 301 -284 287 -275 289 -284 z',\n    },\n    timeSigMinus: {\n      x_min: 0,\n      x_max: 662,\n      y_min: -54,\n      y_max: 55,\n      ha: 109,\n      o: 'm 39 -78 b 49 -76 42 -78 45 -76 b 452 -75 94 -75 272 -75 b 861 -76 632 -75 814 -76 b 953 -20 927 -79 953 -66 b 948 27 953 -7 950 9 b 946 37 948 30 948 35 b 896 79 940 63 929 79 b 471 78 827 78 648 78 l 42 78 b 0 37 14 78 0 69 b 23 -66 0 0 17 -32 b 39 -78 24 -75 32 -76 z',\n    },\n    timeSigParensRight: {\n      x_min: 0,\n      x_max: 274,\n      y_min: -723,\n      y_max: 725,\n      ha: 1448,\n      o: 'm 37 -1038 b 69 -1031 48 -1044 59 -1038 b 88 -1015 76 -1027 82 -1021 b 164 -886 120 -976 147 -933 b 333 -351 233 -711 292 -534 b 395 118 366 -204 399 -59 b 389 245 392 144 392 194 b 120 996 369 521 265 766 b 68 1044 99 1030 84 1044 b 19 988 50 1044 36 1024 b 0 922 7 965 0 945 b 20 858 0 901 6 881 b 259 215 141 660 236 449 b 271 -1 266 143 271 71 b 252 -239 271 -82 265 -161 b 148 -667 228 -384 183 -524 b 39 -1009 120 -785 66 -893 b 33 -1031 37 -1017 33 -1024 b 37 -1038 33 -1034 35 -1037 z',\n    },\n    timeSigParensRightSmall: {\n      x_min: 0,\n      x_max: 154,\n      y_min: -422,\n      y_max: 422,\n      ha: 844,\n      o: 'm 43 -608 b 60 -598 48 -608 53 -605 b 117 -511 82 -572 102 -543 b 222 23 193 -350 219 -177 b 213 166 225 55 216 109 b 115 531 206 294 174 416 b 45 603 99 562 76 588 b 30 608 39 606 35 608 b 10 598 23 608 17 603 b 0 546 3 590 0 570 b 23 451 0 507 9 458 b 102 351 66 429 84 390 b 167 42 150 252 167 148 b 163 -49 167 12 166 -19 b 35 -449 151 -192 121 -330 b 14 -504 22 -467 14 -485 b 17 -527 14 -511 16 -520 l 30 -590 b 43 -608 33 -603 37 -608 z',\n    },\n    timeSigParensLeft: {\n      x_min: 1,\n      x_max: 400,\n      y_min: -728,\n      y_max: 728,\n      ha: 1456,\n      o: 'm 562 -1048 b 573 -1043 566 -1048 570 -1047 b 553 -988 582 -1025 564 -1004 b 472 -884 527 -952 497 -920 b 210 -354 366 -717 275 -541 b 148 -6 170 -240 148 -124 b 160 148 148 45 153 96 b 315 678 189 331 242 508 b 431 901 350 755 380 834 b 459 950 451 926 461 939 b 435 995 459 962 451 972 b 364 1048 405 1034 383 1048 b 305 996 343 1048 325 1028 b 127 624 226 881 174 753 b 1 30 56 432 9 235 b 1 -32 1 9 0 -12 b 180 -629 13 -245 92 -438 b 363 -936 230 -739 298 -835 b 526 -1041 402 -995 448 -1041 b 562 -1048 537 -1040 552 -1048 z',\n    },\n    timeSigParensLeftSmall: {\n      x_min: 0,\n      x_max: 173,\n      y_min: -405,\n      y_max: 404,\n      ha: 809,\n      o: 'm 197 -583 b 222 -553 212 -582 219 -566 b 229 -497 226 -534 229 -516 b 213 -425 229 -472 225 -448 b 102 -177 173 -344 132 -262 b 62 30 78 -111 58 -42 b 91 183 66 82 75 134 b 215 426 118 271 156 356 b 249 552 246 465 252 505 b 230 582 249 563 246 582 b 197 563 219 582 206 576 b 71 356 144 500 105 429 b 0 50 26 259 3 158 b 13 -112 4 -3 7 -58 b 176 -559 29 -275 105 -416 b 196 -583 180 -569 186 -583 z',\n    },\n    noteheadDoubleWhole: {\n      x_min: 0,\n      x_max: 614,\n      y_min: -223,\n      y_max: 223,\n      ha: 446,\n      o: 'm 35 -321 b 62 -266 58 -318 58 -288 l 62 -194 b 63 50 62 -114 63 -32 b 60 189 63 96 63 143 b 43 300 59 226 60 265 b 29 321 40 308 39 321 l 26 321 b 0 292 13 318 0 310 b 0 248 0 278 -1 262 b 6 147 4 215 6 181 b 4 48 6 114 4 81 b 6 0 4 32 6 16 b 7 -36 7 -12 7 -24 l 7 -52 b 6 -156 7 -86 6 -121 b 19 -275 6 -196 9 -236 b 35 -321 23 -291 16 -323 z m 847 -314 b 871 -288 860 -315 867 -300 b 884 -187 881 -255 886 -222 b 876 115 878 -86 876 14 b 877 255 876 161 876 209 b 868 291 877 268 873 279 b 855 304 867 301 863 304 b 844 301 852 304 848 304 b 822 265 825 292 822 278 b 824 251 822 259 822 255 b 822 170 822 225 822 197 l 822 -20 b 835 -284 827 -86 825 -186 b 847 -314 837 -295 835 -311 z m 757 -291 b 793 -171 796 -255 792 -212 b 795 -49 795 -131 795 -91 b 786 207 795 36 791 121 b 779 240 786 217 783 229 b 766 258 776 246 776 258 b 762 256 765 258 763 256 b 739 236 752 253 740 252 b 733 177 737 216 732 197 b 737 20 737 125 739 73 l 737 -107 b 740 -202 737 -138 739 -170 b 757 -291 740 -230 743 -261 z m 128 -261 b 144 -251 135 -264 141 -256 b 158 -203 156 -236 157 -220 b 161 -137 161 -181 161 -158 b 157 30 161 -81 157 -26 b 158 76 157 45 157 60 l 158 101 b 156 225 158 141 158 183 b 137 253 156 235 154 253 l 134 253 b 109 222 120 251 109 242 b 104 91 108 179 104 134 b 108 -58 104 42 109 -9 b 107 -105 108 -73 108 -89 b 105 -127 107 -112 107 -120 b 118 -245 105 -167 114 -204 b 128 -261 118 -252 121 -259 z m 488 -242 b 693 -79 595 -249 685 -166 l 693 -55 b 690 0 693 -36 691 -17 b 540 187 684 84 621 164 b 449 200 508 196 480 200 b 210 104 363 200 282 163 b 186 56 196 92 186 76 b 207 -82 186 9 192 -37 b 300 -204 225 -132 248 -181 b 488 -242 356 -229 415 -240 z m 490 -88 b 449 -86 477 -88 464 -88 b 287 -56 399 -85 341 -78 b 258 -33 275 -52 258 -48 b 282 -7 258 -20 272 -13 b 458 43 340 23 399 43 b 580 14 497 43 537 35 b 618 -20 606 1 619 -9 b 592 -58 618 -30 609 -42 b 490 -88 562 -82 528 -88 z',\n    },\n    noteheadWhole: {\n      x_min: 0,\n      x_max: 380,\n      y_min: -186,\n      y_max: 165,\n      ha: 351,\n      o: 'm 547 40 b 223 -268 543 -151 367 -259 b 102 -233 180 -271 143 -248 l 62 -216 b 0 -127 22 -197 0 -166 b 6 -91 0 -115 1 -104 b 122 141 33 -9 69 71 b 327 238 170 204 249 238 b 514 158 397 238 467 212 b 547 40 544 125 549 84 z m 248 -107 b 384 -63 295 -102 341 -88 b 426 -23 402 -53 415 -40 b 435 3 432 -14 435 -6 b 413 32 435 14 428 24 b 301 73 376 49 343 73 b 272 69 291 73 282 72 b 121 -35 207 53 157 20 b 111 -58 117 -42 111 -50 b 125 -75 111 -65 115 -71 b 248 -107 164 -89 202 -107 z',\n    },\n    noteheadHalf: {\n      x_min: 0,\n      x_max: 334,\n      y_min: -174,\n      y_max: 175,\n      ha: 349,\n      o: 'm 480 56 b 167 -251 478 -115 331 -251 b 94 -242 143 -251 118 -248 b 9 -141 43 -229 20 -192 b 0 -68 3 -115 0 -91 b 284 249 0 95 127 200 b 304 252 289 251 297 252 b 481 78 374 252 481 170 b 480 56 481 71 481 63 z m 213 -102 b 399 6 274 -81 341 -48 b 402 17 400 7 402 13 b 399 27 402 22 400 26 b 311 94 373 53 353 88 b 292 95 305 95 300 95 b 130 27 230 95 181 55 b 69 -62 98 9 62 -29 b 161 -98 76 -98 128 -91 b 213 -102 174 -101 186 -101 z',\n    },\n    noteheadBlack: {\n      x_min: 0,\n      x_max: 334,\n      y_min: -164,\n      y_max: 164,\n      ha: 328,\n      o: 'm 112 -233 b 141 -236 122 -235 131 -236 b 481 104 279 -236 485 -48 b 403 222 477 141 478 192 b 334 236 382 232 359 236 b 1 -59 180 236 13 59 b 0 -85 1 -68 0 -76 b 112 -233 0 -157 32 -215 z',\n    },\n    noteheadXDoubleWhole: {\n      x_min: 0,\n      x_max: 730,\n      y_min: -266,\n      y_max: 267,\n      ha: 533,\n      o: 'm 1018 -373 b 1032 -361 1025 -376 1028 -367 b 1051 -287 1047 -338 1051 -314 b 1050 -252 1051 -276 1051 -264 b 1030 186 1031 -107 1037 40 b 1031 266 1028 213 1031 239 b 1018 363 1031 300 1028 331 b 1005 384 1015 373 1017 384 l 1004 384 b 984 363 992 384 986 373 b 982 343 982 356 982 348 b 981 235 982 307 981 271 b 996 -285 981 60 986 -112 b 1009 -360 998 -311 1005 -336 b 1018 -373 1011 -364 1014 -373 z m 16 -383 b 49 -328 39 -367 48 -350 b 69 56 58 -202 62 -73 b 75 212 72 107 72 160 b 78 278 76 233 78 255 b 59 382 78 312 73 347 b 29 328 33 372 29 350 b 13 -29 29 209 23 88 b 3 -222 7 -95 10 -157 b 0 -265 1 -236 0 -252 b 16 -383 0 -304 6 -343 z m 923 -314 b 955 -240 948 -289 952 -265 b 965 -65 962 -181 965 -125 b 963 0 965 -45 965 -22 b 962 111 960 37 962 73 b 953 240 962 154 960 197 b 939 275 952 253 952 275 b 913 239 924 274 913 258 b 913 173 914 217 913 194 b 914 135 913 160 913 147 b 920 27 919 98 920 63 b 909 -128 920 -26 917 -78 b 906 -179 906 -147 906 -163 b 923 -314 906 -223 913 -266 z m 121 -301 b 143 -272 134 -301 138 -284 b 147 -255 145 -268 145 -261 b 173 160 161 -117 166 22 b 173 233 173 184 174 209 b 157 264 171 243 171 264 b 137 235 143 264 138 249 b 132 207 135 226 132 216 b 121 43 128 153 124 96 b 105 -186 117 -36 105 -111 b 111 -269 105 -215 107 -242 b 121 -301 114 -281 104 -300 z m 210 -238 b 376 -193 274 -239 327 -226 b 471 -134 406 -173 439 -154 b 534 -94 491 -120 513 -107 b 671 -192 579 -127 624 -161 b 733 -226 691 -204 708 -228 b 746 -225 737 -228 742 -226 b 845 -204 782 -226 814 -213 b 868 -194 854 -203 865 -203 b 852 -173 871 -183 860 -179 b 661 -40 789 -128 724 -84 b 642 -27 654 -36 648 -32 b 861 114 716 17 791 63 b 886 132 870 120 886 121 l 886 137 b 852 164 883 151 867 161 b 776 176 827 170 801 176 b 685 145 744 176 714 168 b 530 45 638 107 583 76 b 403 132 487 73 444 101 b 279 176 364 161 324 171 b 223 160 259 176 229 176 b 258 115 215 141 242 127 b 431 -17 314 71 372 26 b 173 -196 341 -73 253 -130 b 157 -209 168 -200 157 -203 b 158 -215 157 -212 157 -215 b 183 -236 166 -223 168 -235 b 210 -238 194 -236 206 -239 z m 768 -207 b 533 -40 687 -150 609 -94 b 321 -173 462 -85 392 -130 b 261 -194 304 -184 287 -196 b 239 -193 253 -196 246 -194 b 387 -95 294 -157 340 -125 b 505 -20 426 -71 465 -45 l 484 -4 b 353 89 441 27 396 56 b 320 115 341 96 330 107 b 297 141 311 124 297 132 b 300 148 297 144 298 145 b 336 135 311 164 324 143 b 528 -4 400 89 464 42 l 723 121 b 770 140 737 131 753 138 b 792 132 779 140 789 141 b 778 115 795 122 783 120 b 586 -6 714 75 651 35 b 557 -24 576 -13 567 -19 b 726 -147 613 -66 670 -109 b 768 -207 744 -161 765 -173 z',\n    },\n    noteheadXWhole: {\n      x_min: 0,\n      x_max: 506,\n      y_min: -143,\n      y_max: 144,\n      ha: 287,\n      o: 'm 53 -206 b 219 -163 117 -207 170 -196 b 314 -102 249 -141 282 -122 b 377 -63 334 -89 356 -76 b 514 -161 422 -96 468 -128 b 576 -196 534 -174 552 -196 b 589 -193 580 -196 585 -196 b 688 -174 625 -194 657 -181 b 711 -158 698 -171 711 -173 b 696 -143 711 -151 701 -147 b 503 -9 632 -98 567 -52 l 485 4 b 704 145 559 49 634 95 b 729 164 711 150 729 151 l 729 168 b 696 196 726 183 710 193 b 621 207 671 202 645 207 b 528 177 589 207 557 200 b 373 76 480 140 426 108 b 246 164 330 104 287 132 b 122 206 207 193 167 203 b 66 192 102 207 72 207 b 99 147 58 173 85 158 b 274 14 157 102 215 58 b 16 -164 184 -42 96 -98 b 0 -179 12 -168 0 -170 b 1 -183 0 -180 0 -183 b 26 -204 6 -193 12 -204 b 53 -206 37 -206 49 -206 z m 611 -177 b 376 -9 530 -118 452 -63 l 164 -143 b 104 -164 147 -154 130 -164 b 82 -161 96 -164 89 -164 b 230 -65 137 -125 183 -95 l 347 12 b 327 26 341 16 334 22 l 196 121 b 163 147 184 128 173 137 b 140 173 154 154 140 163 b 143 180 140 176 141 177 b 179 166 154 194 167 174 l 372 27 l 566 153 b 613 171 580 161 596 170 b 635 160 624 171 635 174 b 621 147 635 153 626 150 l 429 24 b 400 6 419 19 409 13 b 569 -117 456 -35 513 -75 b 611 -177 588 -130 608 -143 z',\n    },\n    noteheadXHalf: {\n      x_min: 0,\n      x_max: 421,\n      y_min: -146,\n      y_max: 151,\n      ha: 297,\n      o: 'm 490 -209 b 539 -207 505 -207 521 -207 b 606 -209 560 -207 583 -209 b 598 -196 602 -203 600 -199 l 406 -19 l 540 130 b 547 144 546 135 547 140 b 536 156 547 148 543 153 b 488 192 518 166 503 176 b 416 217 471 209 444 217 b 323 180 380 217 344 204 l 264 115 b 239 138 256 122 248 131 b 33 197 180 196 108 200 b 3 186 23 197 6 193 b 19 154 -1 174 10 163 b 171 12 69 107 120 59 b 19 -157 120 -45 69 -101 b 0 -177 14 -163 0 -166 b 1 -181 0 -179 0 -180 b 39 -203 9 -197 22 -203 l 186 -203 b 197 -202 190 -202 193 -200 l 213 -202 b 262 -180 228 -202 246 -199 l 314 -122 b 490 -209 363 -170 412 -216 z m 435 -148 b 291 -30 379 -112 337 -69 l 213 -118 b 190 -137 207 -125 202 -137 b 145 -111 173 -130 154 -127 b 160 -79 137 -98 151 -88 b 238 16 184 -48 212 -16 b 141 99 204 43 173 72 l 124 117 b 115 132 121 121 115 127 b 118 137 115 134 117 137 b 141 132 127 147 135 138 l 253 36 b 347 150 285 75 315 112 b 370 164 354 160 363 163 b 403 145 382 164 393 156 b 416 127 412 140 416 132 b 405 102 416 118 412 111 l 307 -10 b 413 -105 343 -42 379 -73 b 435 -148 425 -115 436 -125 z',\n    },\n    noteheadXBlack: {\n      x_min: 0,\n      x_max: 289,\n      y_min: -156,\n      y_max: 157,\n      ha: 313,\n      o: 'm 23 -225 b 69 -204 40 -223 56 -219 b 137 -131 92 -180 115 -157 l 209 -50 b 377 -197 264 -101 321 -148 b 403 -210 384 -203 393 -210 l 408 -210 b 416 -192 416 -207 416 -199 l 416 -186 b 403 -148 416 -171 413 -158 b 344 -81 384 -125 367 -101 b 252 -1 312 -55 282 -29 b 377 157 297 49 340 101 b 402 202 387 170 402 187 b 395 217 402 207 400 213 b 376 226 389 223 382 226 b 334 192 360 226 346 204 b 206 42 289 143 248 94 b 96 161 167 81 131 120 b 60 193 86 174 76 189 b 33 206 52 196 42 206 b 22 199 29 206 26 204 b 10 173 14 190 10 181 b 22 147 10 166 14 157 b 148 7 62 98 104 52 b 164 -7 154 1 158 -3 b 10 -189 111 -66 55 -122 b 0 -212 6 -197 0 -203 b 1 -217 0 -213 0 -216 b 23 -225 4 -226 14 -222 z',\n    },\n    noteheadCircleXDoubleWhole: {\n      x_min: 0,\n      x_max: 437,\n      y_min: -220,\n      y_max: 219,\n      ha: 439,\n      o: 'm 10 -304 b 40 -206 43 -275 37 -239 b 55 168 48 -81 50 45 b 53 269 56 202 55 236 b 33 315 52 287 46 314 b 3 269 9 317 4 291 b 0 239 1 259 0 249 l 0 -196 b 10 -304 1 -232 7 -268 z m 592 -317 b 621 -220 619 -287 621 -253 b 622 -121 622 -187 622 -154 b 625 -20 622 -88 622 -55 b 629 101 628 20 629 60 b 628 220 629 141 628 181 b 618 253 628 232 625 243 b 608 275 613 259 616 274 b 602 272 606 275 603 275 b 575 249 590 269 575 266 l 575 246 b 573 222 575 239 573 230 l 573 -50 b 592 -317 575 -137 570 -225 z m 79 -285 b 114 -6 96 -261 109 -131 b 117 -63 114 -24 114 -45 b 249 -242 124 -151 166 -212 b 324 -256 275 -252 300 -256 b 504 -137 406 -256 478 -209 b 505 -265 504 -180 505 -222 b 513 -282 505 -269 510 -275 b 533 -248 526 -272 528 -261 b 540 -174 539 -223 540 -199 l 540 -127 b 553 207 546 -16 549 95 b 543 232 553 216 554 232 b 518 207 530 233 518 222 b 511 118 520 177 510 148 l 511 92 b 330 216 488 174 420 223 b 301 215 320 216 311 216 b 122 65 202 204 151 163 b 114 9 117 46 114 27 b 115 75 114 32 115 53 b 101 248 115 157 109 228 b 76 206 78 242 76 225 l 76 91 b 75 -26 76 52 76 13 b 69 -189 72 -81 66 -134 b 79 -285 71 -219 76 -249 z m 317 4 b 219 109 285 40 252 75 l 209 120 b 331 153 248 141 289 151 b 420 137 360 153 390 147 b 446 120 435 131 442 127 l 436 108 l 328 -7 z m 215 -131 b 216 -101 215 -122 215 -114 b 219 -45 217 -82 219 -63 b 197 94 219 3 213 49 l 197 95 b 199 94 199 95 199 94 l 310 -27 b 233 -108 285 -55 259 -81 z m 442 -141 b 432 -122 441 -134 436 -128 l 344 -26 l 426 58 l 445 81 b 444 75 445 78 444 76 b 428 -13 433 46 428 16 b 446 -104 428 -45 433 -75 b 452 -122 449 -111 452 -117 b 442 -141 452 -131 448 -137 z m 323 -190 b 272 -180 305 -187 288 -184 b 217 -158 239 -173 225 -168 l 327 -45 b 330 -48 328 -46 328 -48 b 432 -150 363 -82 393 -121 b 323 -190 400 -174 364 -189 z',\n    },\n    noteheadCircleXWhole: {\n      x_min: 0,\n      x_max: 323,\n      y_min: -190,\n      y_max: 184,\n      ha: 374,\n      o: 'm 156 -258 b 240 -274 184 -268 213 -274 b 455 -101 347 -274 441 -202 b 465 19 462 -60 465 -22 b 464 71 465 36 465 52 b 246 265 455 194 370 274 b 216 264 236 265 226 264 b 12 94 102 251 45 203 b 0 13 3 66 1 40 b 4 -55 0 -10 3 -32 b 156 -258 14 -154 60 -222 z m 245 10 b 233 23 242 14 238 19 b 121 144 196 65 158 104 l 109 154 b 249 192 156 179 202 192 b 351 174 284 192 317 186 b 380 154 366 168 376 163 b 379 153 380 154 380 153 b 369 141 376 148 372 145 b 245 10 327 98 287 53 z m 115 -131 b 118 -96 117 -121 117 -111 b 121 -27 120 -73 121 -50 b 98 124 121 24 115 75 b 96 127 96 125 98 125 b 99 125 98 127 98 125 b 225 -12 140 79 181 33 l 138 -105 b 115 -131 131 -114 122 -121 z m 376 -143 b 363 -121 374 -134 369 -128 b 265 -12 331 -85 298 -48 l 357 85 b 379 111 364 94 372 101 b 377 102 379 108 377 105 b 359 4 364 71 359 37 b 382 -99 359 -32 366 -66 b 387 -121 384 -108 386 -115 b 376 -143 387 -130 382 -135 z m 239 -197 b 181 -187 220 -194 200 -192 b 121 -161 145 -177 128 -173 b 243 -33 161 -118 203 -75 l 248 -36 b 364 -153 285 -75 320 -118 b 239 -197 327 -180 287 -197 z',\n    },\n    noteheadCircleXHalf: {\n      x_min: 0,\n      x_max: 309,\n      y_min: -179,\n      y_max: 179,\n      ha: 358,\n      o: 'm 232 -258 b 435 -94 328 -258 412 -196 b 445 6 444 -60 445 -27 b 444 69 445 27 445 48 b 258 258 439 170 374 258 l 230 258 l 207 256 b 14 107 111 248 45 202 b 0 12 4 75 0 43 b 12 -82 0 -20 4 -50 b 144 -242 27 -160 69 -212 b 232 -258 174 -252 203 -258 z m 192 60 b 115 141 166 88 141 115 l 108 150 b 226 189 141 173 186 189 b 253 186 236 189 245 187 b 305 180 271 183 288 183 b 192 60 268 140 229 101 z m 56 -78 b 45 6 43 -56 45 -23 b 65 84 49 39 50 45 b 85 121 72 96 78 107 b 95 124 88 124 92 127 b 171 39 120 95 145 68 z m 360 -132 b 348 -112 359 -124 353 -118 l 300 -58 l 387 37 b 410 63 397 48 405 56 b 413 26 412 52 413 40 b 360 -132 413 -42 393 -95 z m 232 -183 b 184 -177 217 -183 202 -181 l 281 -78 b 348 -143 301 -101 323 -122 b 232 -183 318 -168 279 -183 z',\n    },\n    noteheadCircleX: {\n      x_min: 0,\n      x_max: 344,\n      y_min: -179,\n      y_max: 175,\n      ha: 354,\n      o: 'm 99 -210 b 236 -258 137 -242 186 -258 b 418 -183 305 -258 374 -230 b 495 33 475 -120 495 -48 b 494 66 495 45 494 55 b 302 252 487 183 405 256 b 181 243 262 249 222 248 b 46 171 128 236 79 219 b 0 19 14 127 0 73 b 99 -210 0 -68 35 -156 z m 245 42 l 124 156 b 200 176 145 166 170 173 b 337 183 245 181 291 184 b 377 176 351 183 364 180 b 245 42 333 131 288 86 z m 392 -99 l 285 3 l 400 121 b 418 154 409 131 418 140 b 465 50 448 130 465 94 b 405 -112 462 -17 439 -73 z m 89 -120 b 48 0 56 -82 48 -42 b 89 112 48 35 59 76 b 109 101 96 111 102 108 l 210 7 l 187 -17 b 89 -120 151 -53 125 -82 z m 176 -183 b 127 -163 158 -179 141 -171 l 252 -32 l 372 -144 b 233 -189 334 -173 285 -189 b 176 -183 215 -189 196 -187 z',\n    },\n    noteheadCircledDoubleWhole: {\n      x_min: 0,\n      x_max: 672,\n      y_min: -291,\n      y_max: 291,\n      ha: 582,\n      o: 'm 27 -419 b 43 -369 37 -403 43 -387 b 49 -82 45 -272 49 -177 b 50 370 50 69 50 219 b 30 419 50 389 50 419 b 7 369 7 419 7 389 b 0 -284 4 151 1 -66 b 16 -418 0 -328 10 -373 z m 945 -374 b 968 -282 963 -343 968 -312 b 966 -245 968 -269 968 -258 b 958 -45 959 -179 962 -111 b 948 262 949 56 952 160 b 936 377 946 301 946 340 b 922 399 933 386 933 399 l 919 397 b 897 374 909 396 899 389 b 894 308 897 353 893 331 b 904 120 899 246 903 183 b 913 -111 907 43 909 -35 b 927 -297 916 -173 919 -235 b 945 -374 930 -320 927 -347 z m 95 -347 b 120 -292 115 -325 117 -310 b 124 -223 122 -269 124 -246 b 122 -141 124 -196 122 -168 b 121 -85 121 -122 121 -104 b 462 -297 170 -209 300 -297 b 727 -219 543 -294 639 -271 b 828 -118 773 -190 808 -157 b 842 -268 831 -168 834 -219 b 851 -288 844 -275 840 -287 b 865 -272 861 -289 863 -279 b 873 -225 871 -256 873 -240 b 873 -171 873 -207 871 -190 b 858 196 868 -48 863 75 b 848 295 857 229 854 262 b 840 315 848 301 850 315 l 837 315 b 816 295 827 314 816 307 b 809 216 815 268 808 243 b 815 102 812 179 814 140 b 672 295 780 176 733 240 b 500 370 621 340 566 370 b 436 361 480 370 459 367 b 120 95 288 321 183 233 l 120 256 b 115 287 120 266 118 276 b 104 305 112 292 115 305 l 101 305 b 82 284 91 304 82 297 b 76 216 81 262 76 239 b 84 -253 78 59 79 -96 b 95 -347 84 -282 89 -311 z m 780 -33 b 779 -24 780 -30 779 -27 b 704 92 766 22 743 62 b 544 173 655 128 599 147 b 400 206 497 194 448 204 b 307 193 369 206 338 202 b 202 118 264 181 226 153 b 235 168 212 135 222 151 b 505 337 302 262 396 312 b 523 338 511 337 517 338 b 611 288 559 338 586 312 b 763 62 678 225 733 151 b 780 -33 776 26 782 -4 z m 435 -88 b 337 -23 387 -88 354 -65 b 333 6 334 -14 333 -6 b 366 86 333 35 344 66 b 456 122 390 111 423 121 b 602 27 517 122 582 88 b 606 1 605 19 606 10 b 575 -49 606 -20 596 -36 b 435 -88 530 -76 481 -82 z m 441 -269 b 194 -96 327 -262 249 -194 b 167 1 176 -62 167 -30 b 177 59 167 22 171 42 b 174 39 176 52 174 46 b 266 -104 174 -27 210 -73 b 511 -151 346 -148 435 -144 l 552 -151 b 740 -104 616 -145 683 -141 b 776 -66 756 -94 769 -81 b 700 -174 766 -105 740 -140 b 441 -269 632 -232 533 -268 z',\n    },\n    noteheadCircledWhole: {\n      x_min: -50,\n      x_max: 472,\n      y_min: -231,\n      y_max: 232,\n      ha: 463,\n      o: 'm 289 -333 b 553 -255 370 -330 465 -307 b 680 -62 635 -206 680 -138 b 662 22 680 -36 674 -7 b 500 259 626 112 573 193 b 327 334 448 304 393 334 b 264 325 307 334 287 331 b -59 49 111 284 4 193 b -72 -19 -68 26 -72 4 b 289 -333 -72 -192 84 -334 z m 608 -69 b 605 -60 606 -66 606 -63 b 530 56 592 -14 570 26 b 372 137 482 92 425 111 b 228 170 324 158 275 168 b 134 157 196 170 166 166 b 29 82 91 145 53 117 b 60 132 37 99 49 115 b 333 301 128 226 223 276 b 350 302 338 301 344 302 b 438 252 386 302 413 276 b 590 26 505 189 560 115 b 608 -69 603 -10 608 -40 z m 262 -124 b 164 -59 215 -124 180 -101 b 160 -32 161 -50 160 -42 b 193 50 160 -3 171 30 b 284 86 217 75 251 85 b 429 -9 344 86 409 52 b 433 -36 432 -17 433 -26 b 402 -85 433 -56 423 -72 b 262 -124 357 -112 307 -118 z m 268 -305 b 22 -132 154 -298 76 -230 b -6 -33 3 -98 -6 -65 b 3 23 -6 -14 -3 6 b 1 3 1 16 1 10 b 94 -140 1 -63 37 -109 b 338 -187 173 -184 261 -180 l 379 -187 b 566 -140 444 -181 510 -177 b 602 -102 582 -130 595 -117 b 526 -210 592 -141 567 -176 b 268 -305 459 -268 360 -304 z',\n    },\n    noteheadCircledHalf: {\n      x_min: -50,\n      x_max: 393,\n      y_min: -175,\n      y_max: 175,\n      ha: 350,\n      o: 'm 540 39 b 408 187 503 94 464 148 b 259 252 356 223 301 252 b 35 192 160 252 95 229 b -68 50 -17 160 -53 112 b -72 13 -71 37 -72 24 b 69 -204 -72 -79 -1 -161 b 246 -252 125 -238 186 -252 b 500 -164 336 -252 426 -219 b 566 -42 543 -132 566 -88 b 540 39 566 -14 557 14 z m 9 -42 b 12 -68 10 -50 10 -59 b -7 6 3 -46 -4 -22 b 131 189 1 98 55 153 b 243 220 167 206 204 215 b 261 222 249 222 255 222 b 377 161 308 222 341 189 b 435 89 402 141 420 117 b 431 92 433 89 432 91 b 346 120 402 102 372 107 b 253 143 314 135 282 143 b 85 79 193 143 138 115 b 9 -42 45 52 10 13 z m 356 39 b 343 1 356 24 351 12 b 206 -111 304 -46 259 -84 b 181 -118 196 -115 189 -118 b 156 -71 163 -118 154 -102 b 238 35 164 -22 199 9 b 324 66 264 52 294 59 b 356 39 348 71 356 62 z m 488 -78 b 392 -176 471 -125 433 -154 b 246 -225 346 -200 297 -217 b 230 -226 240 -226 235 -226 b 157 -204 203 -226 180 -215 b 78 -154 128 -190 101 -174 b 232 -184 128 -171 180 -184 b 344 -161 269 -184 307 -179 b 491 -39 405 -135 455 -94 b 500 -23 495 -33 497 -29 b 488 -78 500 -40 494 -59 z',\n    },\n    noteheadCircledBlack: {\n      x_min: -70,\n      x_max: 326,\n      y_min: -168,\n      y_max: 192,\n      ha: 360,\n      o: 'm 176 -239 b 190 -242 180 -240 186 -240 b 262 -232 213 -242 238 -235 b 469 -19 384 -225 469 -131 b 467 22 469 -6 468 9 b 383 194 455 86 436 151 b 183 276 315 249 251 275 b 32 236 134 276 85 264 b -94 88 -30 207 -75 160 b -101 30 -98 69 -101 49 b 176 -239 -101 -107 9 -251 z m 177 -212 b -30 -27 81 -213 -13 -131 b -33 17 -33 -13 -33 3 b 127 226 -33 111 14 187 b 194 239 151 233 173 238 b 301 203 232 239 266 226 b 364 134 330 184 350 160 b 233 181 341 160 279 180 b 192 171 216 181 202 179 b 13 1 117 131 46 86 b 3 -48 6 -17 3 -33 b 60 -115 3 -79 20 -101 b 203 -135 105 -131 151 -138 b 229 -138 212 -137 220 -137 b 295 -122 251 -138 274 -135 b 400 -33 337 -99 373 -71 b 228 -206 393 -125 330 -192 b 177 -212 209 -209 192 -213 z',\n    },\n    noteheadDoubleWholeSquare: {\n      x_min: 0,\n      x_max: 474,\n      y_min: -209,\n      y_max: 211,\n      ha: 420,\n      o: 'm 648 -301 b 668 -287 658 -304 665 -295 b 683 -209 678 -262 683 -235 b 677 258 681 -55 678 102 b 672 284 677 266 677 276 b 661 304 670 291 672 304 l 658 304 b 635 279 647 301 635 297 b 629 240 635 266 629 252 l 629 236 b 631 225 629 232 631 228 b 583 194 631 197 611 194 l 528 194 b 125 207 393 194 259 202 b 89 207 114 209 101 206 b 63 210 79 207 71 207 b 52 229 55 213 52 220 b 55 258 52 238 55 248 b 53 266 55 261 55 264 b 36 298 48 276 53 298 l 35 298 b 4 264 14 298 7 284 b 0 187 0 238 0 213 b 4 50 0 143 3 96 b 6 -10 6 30 6 10 b 4 -130 6 -50 4 -91 b 12 -268 4 -176 6 -222 b 19 -287 13 -275 10 -284 b 35 -275 26 -288 30 -281 b 52 -220 50 -261 48 -239 b 75 -199 55 -206 58 -199 l 141 -197 l 274 -197 l 634 -197 b 639 -281 635 -219 636 -251 b 648 -301 641 -288 638 -300 z m 72 -66 b 55 -56 59 -69 55 -65 l 55 -50 b 53 53 55 -16 55 20 b 69 73 53 69 60 72 l 79 72 b 330 65 163 66 246 63 l 592 65 b 634 81 606 65 618 71 b 635 -30 634 39 635 6 b 605 -58 635 -49 628 -58 b 451 -60 553 -60 503 -60 b 219 -59 373 -60 295 -59 l 166 -59 b 72 -66 134 -59 104 -60 z',\n    },\n    noteheadSquareWhite: {\n      x_min: 0,\n      x_max: 350,\n      y_min: -131,\n      y_max: 131,\n      ha: 262,\n      o: 'm 468 -189 b 485 -187 474 -189 480 -189 b 500 -176 495 -187 500 -183 b 498 -168 500 -174 498 -171 b 497 -166 498 -167 497 -167 l 498 -164 b 504 -154 503 -163 504 -158 b 503 -138 504 -150 503 -144 l 503 -135 l 503 -94 b 492 66 500 -45 494 10 b 488 135 492 89 488 112 b 484 150 488 141 485 145 b 482 154 482 151 482 153 b 429 189 472 177 456 189 b 53 184 304 186 179 186 l 39 184 b 33 181 36 183 35 183 b 12 160 20 181 12 177 b 0 -109 9 71 4 -19 b 19 -137 0 -125 7 -134 b 23 -151 19 -141 20 -145 b 85 -187 37 -173 55 -187 b 468 -189 212 -187 340 -187 z m 246 -125 l 63 -125 b 66 -111 65 -122 66 -117 b 73 72 69 -50 71 10 l 73 130 b 88 128 78 128 82 128 b 148 130 108 130 128 130 b 271 128 190 130 230 128 l 271 130 l 420 130 b 428 20 425 92 425 56 l 436 -127 l 246 -127 z',\n    },\n    noteheadSquareBlack: {\n      x_min: 0,\n      x_max: 342,\n      y_min: -130,\n      y_max: 132,\n      ha: 262,\n      o: 'm 217 190 b 439 186 304 190 372 190 b 467 180 448 184 458 183 b 492 145 484 176 492 167 b 490 -124 490 56 490 -33 b 488 -141 490 -130 488 -135 b 456 -170 488 -163 478 -168 b 118 -183 344 -176 230 -181 b 29 -184 89 -183 60 -192 b 0 -148 4 -180 0 -168 b 1 29 1 -89 1 -30 l 1 156 b 36 190 3 187 4 190 b 217 190 102 192 168 190 z',\n    },\n    noteheadTriangleDownDoubleWhole: {\n      x_min: 0,\n      x_max: 510,\n      y_min: -213,\n      y_max: 213,\n      ha: 426,\n      o: 'm 16 -307 b 30 -289 26 -307 29 -297 b 43 -236 36 -272 42 -253 l 65 219 b 59 285 62 240 69 264 b 46 307 55 294 58 307 l 43 307 b 19 279 30 304 20 295 b 13 184 17 248 14 216 b 1 -125 9 81 7 -23 b 0 -163 0 -138 0 -150 b 6 -287 0 -204 4 -245 b 16 -307 6 -295 7 -305 z m 707 -294 b 734 -213 733 -271 734 -242 b 729 245 733 -60 730 92 b 719 285 729 259 724 272 b 707 298 716 291 714 298 l 703 298 b 685 284 696 297 687 292 b 683 253 683 274 683 264 b 691 -181 685 108 685 -36 b 707 -294 693 -217 690 -256 z m 108 -238 b 125 -203 125 -238 121 -216 b 127 -190 127 -199 127 -194 b 120 -138 127 -173 120 -156 l 120 -66 b 114 167 120 12 118 89 l 118 161 b 314 -153 184 58 248 -48 b 350 -184 327 -173 338 -184 b 387 -154 361 -184 374 -174 b 567 108 449 -68 508 20 b 626 193 588 137 608 164 b 615 -132 622 85 619 -24 l 615 -166 b 619 -207 615 -180 615 -194 b 638 -226 622 -217 629 -225 b 651 -209 648 -226 649 -216 b 658 -177 655 -199 658 -187 l 658 -171 b 667 49 655 -98 667 -23 b 665 88 667 62 667 75 b 665 220 665 135 667 179 b 641 265 664 238 660 265 b 626 243 629 265 626 255 b 628 222 626 236 628 228 b 612 225 624 223 619 225 b 384 223 537 223 461 223 l 384 225 l 170 225 b 131 215 157 225 144 222 b 112 200 122 210 117 206 b 88 266 111 225 108 249 b 75 239 76 259 75 249 b 73 147 75 207 73 179 b 82 -189 73 35 79 -78 b 84 -203 82 -194 82 -199 b 108 -238 86 -219 91 -238 z m 361 -79 b 295 78 336 -26 314 26 b 284 151 287 101 284 125 b 310 177 284 171 291 177 b 419 176 346 176 383 174 l 423 176 b 445 153 441 176 445 168 l 445 147 b 361 -79 442 65 415 -10 z',\n    },\n    noteheadTriangleDownWhole: {\n      x_min: 0,\n      x_max: 366,\n      y_min: -145,\n      y_max: 138,\n      ha: 283,\n      o: 'm 242 -209 b 279 -180 253 -209 266 -200 b 459 84 341 -92 400 -4 b 520 170 480 112 501 141 b 527 189 524 177 527 183 b 504 199 527 196 520 199 l 55 199 b 23 190 45 199 33 196 b 0 161 9 181 0 173 b 10 135 0 154 3 145 b 206 -177 76 32 140 -73 b 242 -209 219 -199 230 -209 z m 253 -105 b 187 52 228 -52 206 0 b 176 127 179 76 176 101 b 197 151 176 144 181 151 l 202 151 b 256 150 220 151 238 150 b 311 151 275 150 294 151 b 337 128 331 151 337 144 l 337 122 b 253 -105 334 39 307 -35 z',\n    },\n    noteheadTriangleDownHalf: {\n      x_min: 0,\n      x_max: 341,\n      y_min: -159,\n      y_max: 159,\n      ha: 318,\n      o: 'm 266 -229 b 282 -215 274 -229 278 -225 b 487 153 350 -92 418 30 b 491 170 490 158 491 164 b 480 189 491 177 487 183 b 425 215 464 202 448 213 b 33 226 297 217 168 222 b 13 229 29 223 22 229 b 1 222 9 229 4 228 b 14 184 -4 207 7 196 b 210 -176 81 65 145 -56 b 253 -225 222 -194 230 -213 b 266 -229 259 -226 264 -228 z m 134 22 b 147 43 138 27 141 37 b 206 163 174 79 179 127 b 213 170 209 166 212 167 l 340 167 b 193 -75 287 89 251 1 b 190 -82 192 -76 190 -79 z',\n    },\n    noteheadTriangleDownBlack: {\n      x_min: 0,\n      x_max: 346,\n      y_min: -149,\n      y_max: 149,\n      ha: 298,\n      o: 'm 229 -215 b 259 -202 238 -215 248 -210 b 284 -173 269 -194 278 -184 l 482 173 b 498 209 488 184 498 194 b 481 215 492 215 487 215 b 63 213 343 215 203 213 b 12 197 45 213 29 206 b 0 180 4 193 0 187 b 3 168 0 177 1 173 b 13 150 6 163 9 156 l 196 -189 b 229 -215 206 -206 216 -215 z',\n    },\n    noteheadTriangleUpDoubleWhole: {\n      x_min: 0,\n      x_max: 510,\n      y_min: -213,\n      y_max: 213,\n      ha: 426,\n      o: 'm 16 -307 b 30 -289 26 -307 29 -297 b 43 -236 36 -272 42 -253 l 65 219 b 59 285 62 240 69 264 b 46 307 55 294 58 307 l 43 307 b 19 279 30 304 20 295 b 13 184 17 248 14 216 b 1 -125 9 81 7 -23 b 0 -163 0 -138 0 -150 b 6 -287 0 -204 4 -245 b 16 -307 6 -295 7 -305 z m 707 -298 b 734 -217 733 -275 734 -246 b 729 240 733 -65 730 88 b 719 281 729 255 724 268 b 707 294 716 287 714 294 l 703 294 b 685 279 696 292 687 288 b 683 249 683 269 683 259 b 691 -186 685 104 685 -40 b 707 -298 693 -222 690 -261 z m 88 -266 b 112 -200 108 -249 111 -225 b 131 -215 117 -206 122 -210 b 170 -225 144 -222 157 -225 l 384 -225 l 384 -223 b 612 -225 461 -223 537 -223 b 628 -222 619 -225 624 -223 b 641 -265 628 -238 622 -265 b 665 -220 660 -265 664 -238 b 665 -88 667 -179 665 -135 b 667 -49 667 -75 667 -62 b 658 171 667 23 655 98 b 651 209 660 184 655 197 b 638 226 649 216 648 226 b 619 207 629 225 622 217 b 615 166 615 194 615 180 l 615 132 b 626 -193 619 24 622 -85 b 567 -108 608 -164 588 -137 b 387 154 508 -20 449 68 b 350 184 374 174 361 184 b 314 153 338 184 327 173 b 118 -161 248 48 184 -58 l 114 -167 b 120 66 118 -89 120 -12 l 120 138 b 127 190 120 156 127 173 b 125 203 127 194 127 199 b 108 238 121 216 125 238 b 84 203 91 238 86 219 b 82 189 82 199 82 194 b 73 -147 79 78 73 -35 b 75 -239 73 -179 75 -207 b 88 -266 75 -249 76 -259 z m 310 -177 b 284 -151 291 -177 284 -171 b 295 -78 284 -125 287 -101 b 361 79 314 -26 336 26 b 445 -147 415 10 442 -65 b 423 -176 446 -166 442 -176 l 419 -176 b 310 -177 383 -174 346 -176 z',\n    },\n    noteheadTriangleUpWhole: {\n      x_min: 0,\n      x_max: 366,\n      y_min: -145,\n      y_max: 138,\n      ha: 283,\n      o: 'm 504 -209 b 527 -199 520 -209 527 -206 b 520 -180 527 -193 524 -187 b 459 -94 501 -151 480 -122 b 279 170 400 -6 341 82 b 242 199 266 190 253 199 b 206 167 230 199 219 189 b 10 -145 140 63 76 -42 b 0 -171 3 -156 0 -164 b 23 -200 0 -183 9 -192 b 55 -209 33 -206 45 -209 z m 202 -161 b 176 -137 183 -163 176 -156 b 187 -62 176 -111 179 -86 b 253 95 206 -10 228 42 b 337 -132 307 24 334 -49 b 311 -161 338 -153 334 -161 b 256 -160 294 -161 275 -160 b 202 -161 238 -160 220 -161 z',\n    },\n    noteheadTriangleUpHalf: {\n      x_min: 0,\n      x_max: 341,\n      y_min: -159,\n      y_max: 159,\n      ha: 318,\n      o: 'm 458 -226 b 478 -229 462 -223 469 -229 b 490 -222 482 -229 487 -228 b 477 -184 495 -207 484 -196 b 281 176 410 -65 346 56 b 238 225 269 194 261 213 b 225 229 232 226 228 228 b 209 215 217 229 213 225 b 4 -153 141 92 73 -30 b 0 -170 1 -158 0 -164 b 12 -189 0 -177 4 -183 b 66 -215 27 -202 43 -213 b 458 -226 194 -217 323 -222 z m 151 -167 b 298 75 204 -89 240 -1 b 301 82 300 76 301 79 l 357 -22 b 344 -43 353 -27 350 -37 b 285 -163 317 -79 312 -127 b 278 -170 282 -166 279 -167 z',\n    },\n    noteheadTriangleUpBlack: {\n      x_min: 0,\n      x_max: 346,\n      y_min: -149,\n      y_max: 149,\n      ha: 298,\n      o: 'm 481 -215 b 498 -209 487 -215 492 -215 b 482 -173 498 -194 488 -184 l 284 173 b 259 202 278 184 269 194 b 229 215 248 210 238 215 b 196 189 216 215 206 206 l 13 -150 b 3 -168 9 -156 6 -163 b 0 -180 1 -173 0 -177 b 12 -197 0 -187 4 -193 b 63 -213 29 -206 45 -213 b 481 -215 203 -213 343 -215 z',\n    },\n    noteheadSlashedDoubleWhole1: {\n      x_min: 0,\n      x_max: 697,\n      y_min: -290,\n      y_max: 290,\n      ha: 580,\n      o: 'm 20 -418 b 42 -376 40 -418 37 -392 b 43 -356 45 -370 43 -363 l 43 -348 b 50 -197 43 -298 49 -248 b 78 317 58 -24 69 147 b 72 387 75 343 82 366 b 52 418 68 397 69 418 l 49 416 b 24 380 33 413 24 399 b 19 235 23 333 20 284 b 7 -82 14 130 10 24 b 0 -264 6 -143 0 -203 b 10 -382 0 -302 1 -343 b 20 -418 13 -393 6 -418 z m 976 -344 b 991 -331 985 -346 988 -337 b 1004 -271 999 -312 1004 -292 l 1004 -194 b 996 184 1004 -68 1001 59 b 996 281 996 216 998 249 b 984 379 995 314 991 347 b 971 397 981 392 976 396 b 952 386 965 397 959 392 b 943 361 943 380 945 370 b 937 288 939 337 937 312 b 945 158 937 245 942 203 b 959 -248 950 23 953 -112 b 966 -325 960 -274 963 -300 b 976 -344 966 -334 968 -344 z m 102 -331 b 124 -272 120 -314 122 -294 b 135 -278 127 -276 131 -278 l 141 -278 b 320 -199 206 -262 272 -252 b 348 -171 328 -189 338 -180 b 482 -199 392 -190 436 -199 b 704 -173 576 -199 641 -187 b 847 -82 760 -158 809 -130 l 855 -69 l 855 -73 b 863 -229 857 -125 860 -177 b 876 -255 863 -239 863 -255 b 893 -233 886 -255 888 -242 b 900 -189 899 -219 900 -203 l 900 66 b 900 192 899 108 900 150 b 893 301 900 228 899 265 b 877 325 890 310 893 325 l 876 325 b 855 301 865 324 855 315 b 850 202 852 268 847 235 b 854 50 854 151 854 101 b 821 99 847 68 835 85 b 733 167 795 127 765 148 b 831 253 766 196 799 225 b 851 265 837 258 844 261 b 829 282 840 275 835 279 b 772 295 815 291 795 295 b 685 271 739 295 704 287 b 624 215 665 252 645 233 l 566 232 b 527 239 553 236 540 239 b 490 228 514 239 501 236 b 451 219 475 217 467 219 b 275 176 389 219 331 200 b 184 53 216 150 184 105 b 199 -14 184 32 189 10 b 262 -108 215 -52 236 -82 l 125 -230 b 134 225 130 -78 132 73 b 135 269 134 239 135 255 b 121 330 135 291 132 311 b 95 287 99 323 95 307 b 92 124 94 233 95 179 b 85 -143 88 36 85 -53 b 89 -300 85 -196 86 -248 b 102 -331 89 -311 89 -323 z m 367 -14 b 350 43 359 3 351 22 b 392 122 350 82 363 107 b 544 171 439 150 492 160 b 572 168 554 174 563 171 z m 564 -132 b 467 -105 528 -138 497 -121 b 442 -89 458 -101 449 -95 l 658 101 b 690 30 677 82 690 59 b 688 10 690 24 690 17 b 564 -132 678 -45 611 -127 z',\n    },\n    noteheadSlashedWhole1: {\n      x_min: -76,\n      x_max: 498,\n      y_min: -168,\n      y_max: 168,\n      ha: 336,\n      o: 'm -79 -242 b 55 -202 -32 -236 14 -228 l 145 -143 b 333 -171 203 -166 265 -171 b 429 -164 361 -174 395 -168 b 582 -130 481 -158 534 -154 b 657 -20 631 -105 657 -65 b 619 68 657 9 644 40 b 552 120 599 89 577 107 b 582 138 562 127 572 132 b 717 226 625 167 668 194 b 638 242 688 236 662 242 b 543 213 603 242 573 232 b 455 154 514 194 484 174 b 325 199 412 167 367 179 b 233 215 298 210 265 215 b 75 156 173 215 124 186 b 0 27 24 122 0 76 b 66 -98 0 -17 22 -63 b 72 -102 69 -99 71 -101 b -89 -209 17 -137 -36 -173 b -109 -225 -95 -213 -109 -216 b -108 -229 -109 -226 -108 -228 b -85 -242 -104 -239 -95 -242 z m 181 -29 b 167 14 171 -13 167 1 b 187 62 167 30 173 46 b 301 137 217 99 258 118 b 312 138 304 138 308 138 l 317 138 b 389 109 340 125 364 118 l 383 105 z m 337 -109 b 239 -82 301 -107 268 -99 l 468 65 b 482 24 477 53 482 40 b 480 4 482 19 481 12 b 337 -109 467 -56 399 -111 z',\n    },\n    noteheadSlashedHalf1: {\n      x_min: -79,\n      x_max: 471,\n      y_min: -184,\n      y_max: 184,\n      ha: 368,\n      o: 'm -112 -251 b -94 -265 -107 -261 -101 -264 b -52 -242 -79 -265 -63 -249 l 89 -148 b 212 -180 125 -170 167 -179 b 238 -177 220 -180 229 -179 l 262 -180 b 346 -171 289 -180 318 -176 b 576 -91 431 -166 507 -140 b 641 4 619 -60 641 -29 b 592 96 641 35 625 65 l 583 104 b 533 147 567 121 550 134 l 613 200 b 678 261 636 216 664 232 b 658 265 671 264 664 265 b 611 248 641 265 625 258 l 491 171 b 337 204 444 194 392 204 b 281 200 318 204 300 204 b 27 62 180 187 92 145 b -1 -19 9 37 -1 10 b 36 -107 -1 -50 12 -82 b 52 -121 42 -112 46 -117 l -72 -203 b -112 -251 -91 -216 -122 -233 z m 161 -49 b 158 -29 160 -42 158 -35 b 183 33 158 -7 167 16 b 395 137 239 95 311 122 b 420 125 405 134 413 130 z m 276 -128 b 261 -131 271 -130 266 -131 b 181 -86 233 -131 203 -114 l 454 94 l 468 72 b 481 36 477 60 481 49 b 469 1 481 26 477 14 b 276 -128 422 -66 354 -105 z',\n    },\n    noteheadSlashedBlack1: {\n      x_min: -110,\n      x_max: 452,\n      y_min: -190,\n      y_max: 190,\n      ha: 380,\n      o: 'm -131 -274 b -102 -262 -121 -272 -111 -266 b 7 -186 -65 -239 -29 -212 b 50 -157 22 -176 36 -166 b 105 -176 65 -166 84 -173 b 207 -183 140 -181 173 -183 b 239 -184 219 -184 229 -184 b 428 -91 327 -184 377 -150 b 487 43 461 -52 487 -7 b 482 76 487 53 485 65 b 459 128 478 95 469 112 b 507 161 475 138 491 150 l 651 262 b 622 274 641 271 632 274 b 605 271 616 274 611 272 b 514 233 573 262 541 252 l 422 167 b 317 203 392 190 354 203 b 271 196 301 203 285 200 b 168 157 236 186 200 173 b 6 -16 94 120 33 68 b -1 -62 1 -32 -1 -48 b 17 -125 -1 -86 4 -108 b -81 -196 -16 -148 -48 -173 b -145 -242 -102 -212 -128 -219 b -158 -256 -150 -246 -158 -251 b -157 -261 -158 -258 -157 -259 b -131 -274 -153 -269 -141 -274 z',\n    },\n    noteheadSlashedDoubleWhole2: {\n      x_min: 0,\n      x_max: 697,\n      y_min: -295,\n      y_max: 295,\n      ha: 590,\n      o: 'm 870 -338 b 891 -315 884 -341 887 -325 b 906 -183 907 -274 903 -228 b 914 186 912 -60 904 62 b 914 240 914 203 916 222 b 916 276 913 251 916 265 b 899 300 916 289 913 300 b 871 253 874 300 871 274 b 858 -168 871 111 858 -27 b 860 -235 858 -190 860 -213 l 736 -131 b 834 -20 799 -111 834 -69 b 789 85 834 13 819 49 b 683 160 760 118 723 140 b 383 216 589 209 487 215 b 330 213 364 217 347 216 b 228 300 295 242 261 271 b 86 347 184 337 138 348 b 58 343 76 347 63 350 l 58 360 b 35 425 58 384 53 423 b 6 382 9 425 6 403 l 6 131 b 0 -164 6 33 4 -66 b 24 -327 -1 -216 6 -271 b 50 -262 46 -305 50 -284 l 50 -154 b 52 -45 50 -118 50 -81 b 58 325 55 79 58 202 b 73 310 60 320 68 315 b 94 294 79 304 86 298 b 89 271 89 287 89 278 l 89 94 b 104 -194 101 -20 88 -108 b 118 -245 107 -213 104 -248 b 140 -190 140 -243 140 -212 l 140 -62 b 132 258 140 46 138 153 l 132 259 l 235 173 b 193 132 219 161 204 148 b 153 26 167 101 153 63 b 164 -35 153 7 157 -16 b 341 -170 196 -114 261 -158 b 433 -177 372 -174 403 -177 b 619 -157 497 -177 559 -170 l 706 -230 b 799 -276 736 -258 765 -276 b 818 -274 806 -276 812 -276 l 861 -274 b 863 -312 861 -287 863 -300 b 870 -338 864 -321 858 -337 z m 966 -425 b 986 -397 979 -425 982 -408 b 991 -373 989 -390 989 -382 b 995 -239 991 -328 995 -284 b 1004 334 1001 -49 1002 143 b 995 380 1005 350 1005 367 b 982 402 989 386 992 402 l 978 400 b 949 374 965 396 950 390 b 948 333 948 360 948 346 l 948 -37 b 949 -84 949 -52 949 -68 b 946 -248 949 -132 946 -189 b 953 -396 946 -297 948 -346 b 966 -425 955 -408 950 -425 z m 624 -36 b 416 140 554 22 485 81 b 482 156 439 150 461 154 b 625 81 537 156 588 124 b 647 27 639 63 647 46 b 624 -36 647 7 638 -14 z m 469 -117 b 320 14 386 -118 320 -60 b 343 81 320 37 327 60 l 547 -95 b 469 -117 521 -105 494 -111 z',\n    },\n    noteheadSlashedWhole2: {\n      x_min: -83,\n      x_max: 510,\n      y_min: -201,\n      y_max: 198,\n      ha: 399,\n      o: 'm 734 -289 b 696 -245 726 -266 710 -256 b 586 -164 660 -217 622 -192 l 589 -161 b 654 -50 631 -135 654 -94 b 616 40 654 -19 641 13 b 305 174 536 127 420 174 b 171 151 261 174 215 167 b 166 150 170 151 168 150 b 86 209 140 170 112 189 b -94 284 32 249 -22 289 l -108 285 b -120 274 -114 285 -120 284 b -104 251 -120 266 -112 258 b 71 124 -46 209 12 166 l 85 114 b 36 72 66 102 50 89 b 0 -30 12 40 0 4 b 122 -186 0 -96 45 -160 b 343 -222 194 -210 268 -222 b 514 -197 410 -220 467 -213 l 554 -228 b 734 -289 609 -268 668 -275 z m 477 -82 b 268 73 408 -30 338 22 l 301 91 b 336 101 314 96 324 101 b 370 88 347 101 359 96 b 459 9 405 66 436 43 b 481 -56 474 -13 481 -35 b 477 -82 481 -65 480 -73 z m 310 -161 b 216 -143 276 -161 246 -156 b 166 -72 181 -128 166 -105 b 168 -46 166 -65 167 -55 b 206 26 176 -16 189 7 b 436 -140 282 -29 360 -84 b 382 -158 420 -150 402 -157 b 310 -161 357 -161 333 -161 z',\n    },\n    noteheadSlashedHalf2: {\n      x_min: -73,\n      x_max: 454,\n      y_min: -188,\n      y_max: 188,\n      ha: 376,\n      o: 'm 654 -271 b 603 -202 649 -233 625 -217 b 481 -115 563 -173 523 -144 b 564 -60 510 -101 539 -82 b 615 40 596 -33 615 4 b 609 69 615 50 613 60 b 505 167 590 120 554 151 b 336 190 451 184 392 190 b 124 134 259 190 189 171 l -42 248 b -88 271 -56 256 -75 271 b -101 265 -94 271 -98 269 b -105 252 -104 259 -105 255 b -66 210 -105 235 -82 222 l 85 107 b 0 -24 42 73 0 35 b 183 -183 0 -118 75 -184 b 262 -176 206 -180 233 -177 b 438 -135 324 -171 383 -158 b 570 -228 482 -166 527 -197 b 654 -271 595 -243 621 -259 z m 393 -53 l 311 4 l 225 65 b 392 134 274 102 331 122 b 455 50 425 141 455 101 b 439 -3 455 35 451 14 b 393 -53 425 -22 409 -37 z m 287 -121 b 246 -130 272 -127 259 -130 b 171 -89 215 -130 189 -115 b 156 -40 161 -73 156 -58 b 186 29 156 -17 166 7 l 192 35 l 359 -82 b 287 -121 337 -98 312 -111 z',\n    },\n    noteheadSlashedBlack2: {\n      x_min: -84,\n      x_max: 405,\n      y_min: -189,\n      y_max: 189,\n      ha: 378,\n      o: 'm 557 -265 b 573 -272 562 -268 567 -272 b 583 -261 577 -272 580 -269 b 575 -242 580 -253 579 -248 b 524 -190 563 -220 544 -204 b 405 -99 485 -160 445 -130 b 497 50 449 -60 482 -9 b 500 72 498 58 500 65 b 478 122 500 91 492 107 b 331 186 438 167 387 186 b 120 131 258 186 186 167 l 107 124 b -52 242 53 163 1 203 b -89 265 -63 251 -76 259 b -107 272 -95 268 -101 272 b -117 266 -109 272 -114 271 b -121 251 -120 262 -121 256 b -114 235 -121 245 -120 239 b -60 186 -96 217 -81 199 b 63 95 -20 156 22 125 b -1 -35 26 66 -1 27 b 137 -183 -1 -130 46 -183 b 174 -180 148 -183 161 -181 l 245 -171 b 366 -128 289 -166 331 -150 l 426 -171 b 557 -265 469 -203 514 -233 z',\n    },\n    noteheadDiamondDoubleWhole: {\n      x_min: 0,\n      x_max: 429,\n      y_min: -221,\n      y_max: 221,\n      ha: 442,\n      o: 'm 22 -318 b 42 -294 33 -318 37 -302 b 46 -266 45 -285 45 -275 b 50 -219 49 -249 50 -233 b 48 -153 50 -197 49 -176 b 43 120 43 -62 43 29 l 43 253 b 37 298 43 269 45 284 b 26 318 35 305 35 318 l 24 318 b 1 295 13 317 3 308 b 0 268 0 285 0 276 l 0 -121 b 10 -291 0 -177 1 -235 b 22 -318 12 -301 10 -318 z m 593 -312 b 618 -256 611 -294 616 -276 l 618 -186 b 611 253 618 -40 612 108 b 605 276 611 261 608 268 b 589 295 600 284 600 297 b 567 272 577 294 569 285 l 567 251 b 575 -197 573 102 575 -48 b 593 -312 575 -233 579 -271 z m 99 -268 b 114 -256 107 -269 111 -262 b 127 -196 124 -238 125 -217 b 128 -144 128 -179 128 -161 b 122 -9 128 -99 125 -55 l 135 -19 b 344 -179 206 -71 276 -122 b 370 -190 354 -186 363 -190 b 395 -173 379 -190 386 -184 b 492 -33 426 -127 459 -79 b 491 -86 491 -50 491 -68 b 507 -251 491 -138 495 -193 b 534 -184 530 -228 533 -206 b 541 144 537 -75 539 35 b 530 204 541 164 539 186 b 520 220 528 210 528 220 b 500 203 511 219 503 213 b 498 192 498 200 498 194 l 498 176 b 494 7 497 120 497 63 l 490 12 l 287 176 b 258 190 279 181 274 190 b 212 153 239 186 225 168 l 127 40 b 121 32 124 37 122 35 b 118 114 120 59 118 86 b 102 249 117 158 122 206 b 75 219 85 246 79 236 b 72 187 72 209 72 197 b 76 117 72 164 75 141 b 85 -151 79 27 79 -62 b 91 -251 86 -184 91 -217 b 99 -268 91 -258 92 -266 z m 392 -128 b 374 -122 387 -134 380 -127 l 180 29 b 170 45 173 35 170 39 b 176 56 170 48 173 52 b 236 122 204 101 219 122 b 308 76 252 122 272 107 l 433 -26 b 449 -50 439 -32 449 -36 b 392 -128 432 -75 413 -102 z',\n    },\n    noteheadDiamondWhole: {\n      x_min: 0,\n      x_max: 271,\n      y_min: -132,\n      y_max: 132,\n      ha: 264,\n      o: 'm 230 -177 b 256 -190 240 -186 249 -190 b 281 -173 265 -190 272 -184 b 382 -29 314 -124 347 -76 b 390 -10 387 -22 390 -14 b 376 12 390 -3 386 4 b 173 177 308 66 240 121 b 144 190 166 183 160 190 b 98 153 127 186 112 170 b 13 40 69 115 42 76 b 0 13 4 29 0 20 b 22 -19 0 3 7 -9 b 230 -177 92 -69 163 -122 z m 279 -128 b 261 -122 274 -134 266 -127 l 66 30 b 56 45 59 35 56 39 b 62 56 56 48 59 52 b 122 122 91 101 105 122 b 194 76 138 122 158 107 l 320 -26 b 336 -50 325 -32 336 -35 b 279 -128 318 -75 300 -102 z',\n    },\n    noteheadDiamondHalf: {\n      x_min: 0,\n      x_max: 295,\n      y_min: -148,\n      y_max: 148,\n      ha: 296,\n      o: 'm 228 -207 b 245 -213 235 -210 240 -213 b 264 -203 252 -213 258 -210 b 415 -46 314 -150 364 -98 b 425 -27 420 -40 425 -35 b 416 -10 425 -22 422 -16 b 217 200 350 60 284 131 b 194 213 212 207 204 213 b 170 196 181 213 177 203 b 14 33 118 143 68 86 b 0 7 4 23 0 16 b 17 -20 0 -1 6 -10 b 118 -114 52 -50 82 -85 b 228 -207 156 -144 184 -184 z m 209 -157 b 134 -69 177 -138 141 -115 b 130 -26 131 -55 130 -40 b 215 148 130 42 160 99 b 225 156 217 151 220 156 b 230 153 226 156 228 156 b 323 -26 276 104 321 55 b 298 -75 324 -42 315 -59 b 265 -109 287 -86 276 -99 b 209 -157 245 -125 228 -167 z',\n    },\n    noteheadDiamondBlack: {\n      x_min: 0,\n      x_max: 310,\n      y_min: -146,\n      y_max: 146,\n      ha: 292,\n      o: 'm 266 -210 b 289 -194 278 -209 284 -200 b 406 -76 330 -156 367 -115 b 446 -23 433 -49 446 -36 b 412 29 446 -10 435 3 b 405 36 409 30 408 33 b 252 196 354 89 304 143 b 225 210 243 204 235 210 b 204 202 219 210 212 209 b 10 24 141 141 75 82 b 0 9 4 19 0 14 b 9 -6 0 4 3 0 l 232 -192 b 266 -210 242 -200 256 -204 z',\n    },\n    noteheadParenthesis: {\n      x_min: -70,\n      x_max: 329,\n      y_min: -196,\n      y_max: 201,\n      ha: 397,\n      o: 'm 344 -279 b 382 -262 361 -288 370 -272 b 405 -233 390 -255 399 -245 b 474 9 455 -158 468 -73 b 416 228 474 78 448 174 b 364 282 403 249 387 271 b 344 289 359 285 350 288 b 331 279 338 289 333 287 b 325 248 328 269 325 258 b 338 225 325 238 328 229 b 412 138 379 207 396 174 b 445 1 433 92 445 45 b 346 -217 445 -81 410 -154 b 336 -252 340 -223 336 -238 b 344 -279 336 -265 338 -276 z m 19 -274 b 35 -282 24 -279 30 -281 b 49 -265 42 -282 46 -275 b 52 -243 50 -256 52 -249 b 36 -210 52 -230 49 -220 b -60 -59 -16 -173 -35 -114 b -73 9 -69 -39 -73 -16 b 33 223 -73 92 -24 189 b 50 265 43 229 50 249 b 33 288 50 278 46 289 b 4 272 23 288 14 275 b -9 261 0 269 -4 265 b -101 23 -58 193 -105 124 b -37 -206 -104 -52 -75 -130 b 19 -274 -23 -232 -6 -255 z',\n    },\n    noteheadParenthesisRight: {\n      x_min: -30,\n      x_max: 82,\n      y_min: -199,\n      y_max: 206,\n      ha: 405,\n      o: 'm -17 -282 b 24 -264 -6 -297 12 -272 b 60 -219 40 -253 52 -236 b 117 1 96 -150 112 -75 b 118 16 118 6 118 12 b 109 73 118 36 112 55 b 4 279 99 154 68 226 b -23 297 -4 287 -13 297 b -37 289 -27 297 -32 294 b -43 266 -42 285 -43 276 b -32 225 -43 251 -37 229 b 84 -7 48 170 84 82 b 32 -184 84 -69 65 -132 b -10 -222 22 -200 4 -209 b -24 -258 -20 -232 -24 -245 b -17 -282 -24 -266 -22 -276 z',\n    },\n    noteheadParenthesisLeft: {\n      x_min: 0,\n      x_max: 106,\n      y_min: -197,\n      y_max: 197,\n      ha: 394,\n      o: 'm 134 -284 b 138 -281 135 -284 137 -284 b 145 -268 144 -278 145 -274 l 144 -253 b 107 -180 138 -225 121 -204 b 42 13 71 -120 42 -56 b 49 73 42 32 43 52 b 137 210 62 128 95 171 b 153 255 147 219 153 239 b 145 278 153 265 151 274 b 130 284 140 281 135 284 b 98 259 117 284 108 268 b 0 37 35 203 1 131 b 118 -268 9 -69 53 -173 b 134 -284 121 -274 127 -284 z',\n    },\n    noteheadMoonBlack: {\n      x_min: 0,\n      x_max: 328,\n      y_min: -125,\n      y_max: 125,\n      ha: 250,\n      o: 'm 353 -160 b 465 -40 412 -140 451 -102 b 472 30 471 -17 472 6 b 469 124 472 60 469 92 b 406 179 469 170 459 177 l 128 179 b 37 180 98 179 68 179 b 0 141 7 180 0 170 b 3 -20 3 88 3 33 b 69 -134 3 -72 26 -109 b 240 -180 125 -164 181 -180 b 353 -160 278 -180 315 -174 z',\n    },\n    noteheadTriangleLeftBlack: {\n      x_min: 0,\n      x_max: 391,\n      y_min: -142,\n      y_max: 142,\n      ha: 284,\n      o: 'm 138 -204 b 318 -197 197 -199 258 -197 l 431 -197 b 544 -192 469 -196 507 -193 b 563 -184 552 -190 560 -193 b 553 -167 564 -177 559 -171 l 540 -157 b 232 60 436 -85 334 -12 l 50 190 b 20 204 42 197 32 204 b 10 202 17 204 14 204 b 0 184 1 197 0 192 b 1 164 0 177 1 170 b 6 -150 3 59 6 -45 b 39 -193 7 -176 17 -186 b 138 -204 72 -204 105 -204 z',\n    },\n    noteheadTriangleRightBlack: {\n      x_min: 0,\n      x_max: 398,\n      y_min: -139,\n      y_max: 140,\n      ha: 279,\n      o: 'm 543 -200 b 573 -176 566 -200 573 -194 l 573 -168 b 554 141 566 -66 560 37 b 520 197 553 167 546 187 b 495 202 511 200 504 202 b 454 184 481 202 467 196 l 35 -137 b 0 -171 22 -147 -4 -154 b 52 -199 6 -193 33 -193 b 69 -199 58 -200 63 -199 z',\n    },\n    noteheadTriangleRoundDownBlack: {\n      x_min: 0,\n      x_max: 334,\n      y_min: -134,\n      y_max: 136,\n      ha: 270,\n      o: 'm 252 -192 b 285 -176 269 -196 276 -187 b 468 52 346 -99 406 -23 b 481 79 477 62 481 71 b 465 104 481 88 475 95 b 441 124 456 109 449 117 b 249 196 380 174 314 194 b 13 104 157 196 69 154 b 0 86 6 98 0 92 b 7 69 0 82 3 76 b 202 -164 73 -7 137 -85 b 252 -192 216 -181 235 -186 z',\n    },\n    augmentationDot: {\n      x_min: 0,\n      x_max: 96,\n      y_min: -57,\n      y_max: 57,\n      ha: 114,\n      o: 'm 13 -82 b 16 -81 14 -82 14 -82 b 105 -73 46 -76 75 -76 b 131 -48 121 -72 131 -60 b 138 26 134 -24 138 0 b 137 48 138 33 138 40 b 108 82 134 71 125 82 b 95 81 104 82 99 82 b 33 71 75 78 53 75 b 4 46 20 68 6 62 b 0 -66 1 9 0 -29 b 13 -82 0 -73 1 -82 z',\n    },\n    tremolo1: {\n      x_min: -158,\n      x_max: 156,\n      y_min: -88,\n      y_max: 88,\n      ha: 176,\n      o: 'm -206 -127 b -194 -125 -203 -127 -199 -127 b 173 -36 -72 -94 50 -65 b 220 16 202 -29 215 -12 b 225 50 223 30 225 45 b 216 107 226 76 222 91 b 194 127 210 120 204 127 b 183 124 192 127 189 127 l -192 33 b -226 -9 -213 27 -222 14 b -228 -32 -226 -16 -228 -23 b -222 -108 -228 -58 -222 -82 b -206 -127 -222 -120 -217 -127 z',\n    },\n    flag8thUp: {\n      x_min: 0,\n      x_max: 261,\n      y_min: -819,\n      y_max: 0,\n      ha: 819,\n      o: 'm 265 -1171 b 351 -1035 301 -1130 336 -1087 b 376 -867 369 -979 376 -923 b 367 -755 376 -829 373 -792 b 233 -422 350 -632 311 -520 b 131 -291 199 -379 166 -334 b 65 -125 91 -239 66 -192 b 62 -75 65 -112 62 -91 b 42 0 62 -49 52 -24 l 35 0 b 0 -63 6 -13 0 -36 l 0 -144 b 96 -445 0 -255 29 -356 b 177 -547 124 -478 150 -514 b 308 -831 246 -629 298 -721 b 317 -890 310 -851 317 -871 b 311 -919 317 -900 315 -910 b 256 -1005 297 -950 282 -984 b 228 -1068 233 -1024 228 -1045 b 230 -1106 228 -1080 229 -1093 b 240 -1162 232 -1125 239 -1143 b 251 -1179 242 -1174 246 -1179 b 265 -1171 255 -1179 259 -1176 z',\n    },\n    flag8thDown: {\n      x_min: 0,\n      x_max: 261,\n      y_min: 0,\n      y_max: 819,\n      ha: 819,\n      o: 'm 265 1171 b 251 1179 259 1176 255 1179 b 240 1162 246 1179 242 1174 b 230 1106 239 1143 232 1125 b 228 1068 229 1093 228 1080 b 256 1005 228 1045 233 1024 b 311 919 282 984 297 950 b 317 890 315 910 317 900 b 308 831 317 871 310 851 b 177 547 298 721 246 629 b 96 445 150 514 124 478 b 0 144 29 356 0 255 l 0 63 b 35 0 0 36 6 13 l 42 0 b 62 75 52 24 62 49 b 59 117 62 91 59 104 b 131 291 60 183 91 239 b 233 422 166 334 199 379 b 367 755 311 520 350 632 b 376 867 373 792 376 829 b 351 1035 376 923 369 979 b 265 1171 336 1087 301 1130 z',\n    },\n    flag16thUp: {\n      x_min: 0,\n      x_max: 327,\n      y_min: -819,\n      y_max: 0,\n      ha: 819,\n      o: 'm 415 -1179 b 435 -1168 423 -1182 429 -1174 b 451 -1138 442 -1159 446 -1149 b 465 -1020 464 -1102 467 -1064 b 461 -962 464 -1004 464 -984 b 471 -821 467 -916 472 -870 b 465 -721 472 -791 467 -756 b 415 -520 459 -651 441 -585 b 200 -245 370 -408 284 -327 b 96 -114 160 -206 118 -168 b 75 -24 84 -85 85 -53 b 59 0 72 -16 72 0 b 53 -1 58 0 56 -1 b 27 -32 40 -6 27 -10 b 29 -68 27 -43 29 -55 b 10 -79 20 -69 13 -72 b 1 -109 6 -89 1 -99 b 0 -170 0 -130 0 -148 b 35 -410 0 -252 12 -333 b 258 -793 76 -557 156 -681 b 409 -1158 350 -896 410 -1014 b 415 -1179 409 -1165 405 -1175 z m 413 -816 b 331 -681 392 -769 364 -723 b 145 -420 266 -596 189 -521 b 86 -281 125 -374 102 -330 b 156 -370 105 -312 128 -343 b 318 -539 210 -425 269 -478 b 413 -816 383 -621 420 -713 z',\n    },\n    flag16thDown: {\n      x_min: 0,\n      x_max: 327,\n      y_min: 0,\n      y_max: 819,\n      ha: 819,\n      o: 'm 59 0 b 75 24 72 0 72 16 b 96 114 85 53 84 85 b 200 245 118 168 160 206 b 415 520 284 327 370 408 b 465 721 441 585 459 651 b 471 821 467 756 472 791 b 461 962 472 870 467 916 b 465 1020 464 984 464 1004 b 451 1138 467 1064 464 1102 b 435 1168 446 1149 442 1159 b 418 1179 431 1172 425 1179 l 415 1179 b 408 1169 409 1176 408 1174 b 409 1158 408 1165 409 1161 b 258 793 410 1014 350 896 b 35 410 156 681 76 557 b 0 170 12 333 0 252 l 0 88 b 29 7 0 71 6 23 b 59 0 33 4 58 0 z m 86 281 b 145 420 102 330 125 374 b 331 681 189 521 266 596 b 413 816 364 723 392 769 b 415 791 413 808 415 799 b 318 539 415 698 377 613 b 156 370 269 478 210 425 b 86 281 128 343 105 312 z',\n    },\n    flag32ndUp: {\n      x_min: 0,\n      x_max: 268,\n      y_min: -849,\n      y_max: 149,\n      ha: 999,\n      o: 'm 323 -1223 b 351 -1198 337 -1227 344 -1210 b 359 -1184 354 -1194 356 -1188 b 386 -999 377 -1122 387 -1060 b 341 -783 386 -927 372 -855 b 330 -736 334 -769 330 -753 b 333 -708 330 -727 330 -717 b 344 -621 340 -678 344 -649 b 341 -579 344 -608 343 -593 b 328 -500 338 -553 328 -526 b 331 -475 328 -491 328 -484 b 347 -370 343 -438 348 -402 b 151 27 348 -212 288 -56 b 53 176 98 59 50 102 b 45 197 53 183 48 192 b 33 215 40 203 40 216 l 30 215 b 6 194 22 212 9 209 b 0 120 3 170 -1 145 b 0 -43 4 65 0 13 b 0 -98 0 -60 1 -79 b 4 -276 0 -157 6 -216 b 7 -456 4 -337 7 -397 b 66 -638 7 -523 22 -585 b 158 -724 94 -671 127 -697 b 318 -1011 246 -801 295 -899 b 321 -1044 321 -1021 321 -1032 b 312 -1152 321 -1080 312 -1116 b 317 -1192 312 -1165 314 -1179 b 323 -1223 320 -1202 311 -1220 z m 285 -376 b 121 -180 249 -289 173 -245 b 91 -105 104 -158 92 -135 b 288 -354 181 -144 288 -269 b 285 -376 288 -363 287 -370 z m 275 -657 b 111 -492 226 -589 163 -547 b 65 -376 78 -456 66 -418 b 71 -323 65 -360 68 -341 b 275 -657 164 -418 265 -504 z',\n    },\n    flag32ndDown: {\n      x_min: -3,\n      x_max: 268,\n      y_min: -169,\n      y_max: 829,\n      ha: 999,\n      o: 'm 323 1194 b 317 1164 311 1191 320 1174 b 312 1123 314 1151 312 1136 b 321 1015 312 1087 321 1051 b 318 982 321 1004 321 992 b 158 696 295 870 246 772 b 66 609 127 668 94 642 b 7 428 22 556 7 494 b 4 248 7 369 4 308 b -1 78 6 187 -10 137 b 0 14 0 59 0 32 l 0 -148 b 6 -223 0 -174 3 -199 b 30 -243 9 -238 22 -240 l 33 -243 b 45 -226 40 -245 40 -232 b 53 -204 48 -220 53 -212 b 151 -56 50 -131 98 -88 b 347 341 288 27 348 183 b 331 446 348 373 343 409 b 328 471 328 455 328 462 b 341 550 328 497 338 524 b 344 592 343 564 344 579 b 333 680 344 621 340 649 b 330 707 330 688 330 698 b 341 755 330 724 334 740 b 386 971 372 827 386 899 b 359 1155 387 1031 377 1093 b 351 1169 356 1159 354 1165 b 323 1194 344 1181 337 1198 z m 275 628 b 71 294 265 475 164 389 b 65 347 68 312 65 331 b 111 464 66 389 78 428 b 275 628 163 518 226 560 z m 285 347 b 288 325 287 341 288 334 b 91 76 288 240 181 115 b 121 151 92 107 104 130 b 285 347 173 216 249 261 z',\n    },\n    flag64thUp: {\n      x_min: -4,\n      x_max: 282,\n      y_min: -824,\n      y_max: 347,\n      ha: 1171,\n      o: 'm 350 -1185 b 380 -1162 364 -1189 374 -1175 b 406 -1022 399 -1119 406 -1071 b 359 -798 406 -945 384 -871 b 348 -756 353 -785 348 -772 b 350 -744 348 -753 350 -749 b 363 -621 356 -704 363 -664 b 360 -580 363 -608 363 -593 b 359 -560 359 -573 359 -567 b 373 -490 359 -536 366 -513 b 393 -346 386 -444 393 -395 b 387 -269 393 -320 390 -294 b 348 -127 382 -219 348 -173 b 351 -104 348 -120 348 -111 b 353 -65 351 -91 353 -78 b 341 37 353 -26 348 6 b 226 215 323 108 278 164 b 86 336 181 258 127 288 b 62 395 72 353 62 370 b 42 481 62 423 55 454 b 27 500 37 488 36 500 b 24 498 26 500 26 500 b -1 480 14 497 1 492 b -6 444 -4 467 -6 455 l -6 435 b -1 341 -1 403 -1 372 l -1 266 b 6 156 -1 230 0 193 b 13 35 12 117 13 75 l 13 -35 b 14 -85 13 -52 14 -68 b 29 -276 19 -150 33 -213 b 20 -448 24 -334 20 -392 b 24 -534 20 -477 22 -505 b 114 -708 30 -605 59 -664 b 197 -780 143 -732 171 -755 b 344 -1153 301 -884 341 -1011 b 343 -1172 344 -1159 343 -1166 b 350 -1185 343 -1176 344 -1182 z m 287 -88 b 62 193 186 -17 79 48 b 229 52 121 144 174 98 b 289 -33 256 29 274 -3 b 295 -56 294 -42 295 -49 b 287 -88 295 -66 292 -76 z m 298 -410 b 118 -235 238 -351 176 -295 b 76 -88 82 -197 78 -147 b 268 -252 137 -153 203 -202 b 330 -360 304 -279 330 -315 b 323 -402 330 -373 327 -387 b 311 -418 318 -413 315 -418 b 298 -410 307 -418 302 -415 z m 300 -691 b 117 -508 243 -616 168 -575 b 82 -408 94 -480 82 -448 b 84 -379 82 -397 82 -387 b 259 -553 135 -451 206 -492 b 301 -667 287 -583 301 -619 b 300 -691 301 -674 301 -683 z',\n    },\n    flag64thDown: {\n      x_min: -5,\n      x_max: 281,\n      y_min: -375,\n      y_max: 796,\n      ha: 1171,\n      o: 'm 348 1145 b 341 1132 343 1142 341 1136 b 343 1113 341 1126 343 1119 b 196 740 340 971 300 844 b 112 668 170 714 141 691 b 23 494 58 624 29 564 b 19 408 20 465 19 436 b 27 236 19 351 23 294 b 13 45 32 173 17 109 b 12 -6 13 27 12 12 l 12 -75 b 4 -196 12 -115 10 -157 b -3 -307 -1 -233 -3 -271 l -3 -382 b -7 -475 -3 -412 -3 -444 l -7 -484 b -3 -520 -7 -495 -6 -507 b 23 -539 0 -533 13 -537 b 26 -540 24 -540 24 -540 b 40 -521 35 -540 36 -528 b 60 -435 53 -494 60 -464 b 85 -376 60 -410 71 -393 b 225 -255 125 -328 180 -298 b 340 -78 276 -204 321 -148 b 351 24 347 -46 351 -14 b 350 63 351 37 350 50 b 347 86 347 71 347 79 b 386 229 347 132 380 179 b 392 305 389 253 392 279 b 372 449 392 354 384 403 b 357 520 364 472 357 495 b 359 540 357 527 357 533 b 361 580 361 553 361 567 b 348 704 361 624 354 664 b 347 716 348 708 347 713 b 357 757 347 732 351 744 b 405 982 383 831 405 904 b 379 1122 405 1031 397 1079 b 348 1145 373 1135 363 1149 z m 298 651 b 300 626 300 642 300 634 b 258 513 300 579 285 543 b 82 338 204 452 134 410 b 81 367 81 347 81 357 b 115 468 81 408 92 439 b 298 651 167 534 242 576 z m 297 370 b 310 377 301 374 305 377 b 321 361 314 377 317 373 b 328 320 325 347 328 333 b 266 212 328 275 302 239 b 75 48 202 161 135 112 b 117 194 76 107 81 157 b 297 370 174 255 236 311 z m 285 48 b 294 16 291 36 294 26 b 288 -7 294 9 292 1 b 228 -92 272 -37 255 -69 b 60 -233 173 -138 120 -184 b 285 48 78 -88 184 -23 z',\n    },\n    flag128thUp: {\n      x_min: 0,\n      x_max: 252,\n      y_min: -804,\n      y_max: 530,\n      ha: 1334,\n      o: 'm 298 -1158 b 328 -1126 312 -1158 320 -1139 b 330 -1116 330 -1123 330 -1119 b 347 -996 343 -1076 347 -1037 b 328 -837 347 -943 338 -890 b 320 -778 324 -816 320 -798 b 330 -733 320 -763 323 -749 b 340 -665 338 -714 337 -688 b 341 -645 340 -660 341 -652 b 333 -534 341 -609 333 -572 b 343 -471 333 -513 334 -492 b 361 -366 356 -436 361 -402 b 331 -202 361 -311 348 -256 b 328 -187 330 -197 328 -193 b 331 -179 328 -184 328 -181 b 363 -55 353 -137 363 -96 b 337 79 363 -12 351 33 b 327 114 333 92 327 104 b 344 144 327 124 331 132 b 359 174 353 150 357 163 b 361 228 360 193 361 210 b 243 517 361 337 325 435 b 147 596 213 546 179 569 b 75 708 111 626 75 655 b 62 744 75 723 68 733 b 50 763 58 752 58 763 b 46 762 49 763 48 762 b 17 742 36 757 22 757 b 0 697 14 726 0 711 b 1 595 0 662 3 631 b 0 469 0 552 0 511 b 1 429 0 456 0 442 b 22 289 6 382 22 337 b 24 128 22 238 24 184 b 22 66 24 108 23 86 b 19 -19 20 37 19 10 b 20 -132 19 -56 20 -95 b 13 -276 20 -180 19 -229 b 9 -359 10 -304 9 -330 b 12 -487 9 -402 12 -445 b 56 -582 12 -526 29 -554 b 197 -742 107 -632 160 -681 b 288 -1100 265 -851 276 -976 b 288 -1122 288 -1107 287 -1115 b 287 -1145 289 -1129 287 -1138 b 298 -1158 287 -1153 288 -1158 z m 304 150 b 75 475 229 256 112 334 b 304 150 233 357 305 287 z m 271 -73 b 127 72 233 -14 179 26 b 81 167 96 98 81 127 b 84 194 81 176 82 184 b 271 -73 148 102 242 39 z m 279 -396 b 132 -223 233 -330 180 -279 b 81 -112 104 -192 81 -156 b 82 -91 81 -105 81 -98 b 279 -396 167 -125 269 -281 z m 249 -609 b 69 -357 197 -520 88 -471 b 249 -609 131 -441 229 -498 z',\n    },\n    flag128thDown: {\n      x_min: -1,\n      x_max: 252,\n      y_min: -580,\n      y_max: 754,\n      ha: 1334,\n      o: 'm 298 1086 b 287 1073 288 1086 287 1081 b 288 1050 287 1066 289 1057 b 288 1028 287 1043 288 1035 b 197 670 276 904 265 779 b 56 510 160 609 107 560 b 12 415 29 482 12 454 b 9 287 12 373 9 330 b 13 204 9 258 10 232 b 20 60 19 157 20 108 b 19 -53 20 23 19 -16 b 22 -138 19 -82 20 -109 b 24 -200 23 -158 24 -180 b 22 -361 24 -256 22 -310 b 1 -501 22 -409 6 -454 b 0 -541 0 -514 0 -528 b 0 -667 0 -583 -3 -624 b 0 -809 0 -675 -3 -791 b 46 -834 4 -825 36 -829 b 50 -835 48 -834 49 -835 b 62 -816 58 -835 58 -824 b 75 -780 68 -805 75 -795 b 147 -668 75 -727 111 -698 b 243 -589 179 -641 213 -618 b 361 -300 325 -507 361 -409 b 359 -246 361 -282 360 -265 b 344 -216 357 -235 353 -222 b 327 -186 331 -204 327 -196 b 337 -151 327 -176 333 -164 b 363 -17 351 -105 363 -60 b 331 107 363 24 353 65 b 328 115 328 109 328 112 b 331 130 328 121 330 125 b 361 294 348 184 361 239 b 343 399 361 330 356 364 b 333 462 334 420 333 441 b 341 573 333 500 341 537 b 340 593 341 580 340 588 b 330 661 337 616 338 642 b 320 706 323 677 320 691 b 328 765 320 726 324 744 b 347 924 338 818 347 871 b 330 1044 347 965 343 1004 b 328 1054 330 1047 330 1051 b 298 1086 320 1067 312 1086 z m 249 537 b 69 285 229 426 131 369 b 249 537 88 399 197 448 z m 279 324 b 82 19 269 209 167 53 b 81 40 81 26 81 33 b 132 151 81 84 104 120 b 279 324 180 207 233 258 z m 271 1 b 84 -266 242 -111 148 -174 b 81 -239 82 -256 81 -248 b 127 -144 81 -199 96 -170 b 271 1 179 -98 233 -58 z m 304 -222 b 75 -547 305 -359 233 -429 b 304 -222 112 -406 229 -328 z',\n    },\n    accidentalFlat: {\n      x_min: 1,\n      x_max: 209,\n      y_min: -208,\n      y_max: 472,\n      ha: 680,\n      o: 'm 29 -300 b 46 -289 33 -300 39 -297 b 107 -243 65 -274 86 -258 b 301 127 233 -153 301 -30 b 298 186 301 147 301 166 b 190 297 291 256 251 297 b 147 289 177 297 163 294 b 86 265 127 284 107 274 l 85 264 l 85 301 b 91 465 85 356 88 410 b 94 559 91 497 94 527 b 84 651 94 589 91 621 b 66 680 81 661 81 680 l 65 680 b 37 645 49 678 37 665 b 33 523 36 605 32 563 l 33 478 b 26 223 33 393 29 308 b 1 -141 22 101 1 -19 b 17 -287 1 -189 4 -239 b 29 -300 20 -295 23 -300 z m 68 -105 b 76 12 71 -68 72 -29 b 81 107 79 43 81 75 l 86 109 b 171 135 114 121 141 135 b 204 128 181 135 193 132 b 238 92 228 120 239 108 b 230 63 238 84 236 75 b 68 -105 193 -10 132 -59 z',\n    },\n    accidentalNatural: {\n      x_min: 0,\n      x_max: 214,\n      y_min: -456,\n      y_max: 462,\n      ha: 918,\n      o: 'm 255 -657 b 281 -624 271 -657 275 -636 b 285 -599 282 -615 285 -608 b 292 -300 288 -500 289 -400 b 289 -161 292 -253 289 -207 b 300 128 292 -65 297 32 b 304 168 300 128 302 150 l 304 173 l 305 190 l 305 199 l 307 225 b 304 259 307 229 310 246 b 272 298 297 274 302 305 b 63 266 204 279 134 272 b 72 514 68 348 72 432 b 71 595 72 541 72 567 b 56 665 71 619 66 642 b 17 579 9 651 17 608 b 3 144 19 433 7 289 b 0 -7 1 94 0 43 b 3 -134 0 -50 1 -92 b 7 -219 3 -163 7 -192 b 35 -251 7 -243 17 -251 b 49 -249 39 -251 43 -251 l 223 -223 l 230 -222 l 230 -359 b 223 -516 230 -410 223 -464 b 236 -619 223 -550 226 -585 b 255 -657 240 -634 236 -657 z m 58 -63 b 55 81 56 -14 53 33 l 56 99 b 85 99 65 99 75 98 b 232 108 134 104 183 107 l 240 109 l 236 66 b 232 -48 235 29 232 -10 b 58 -81 174 -63 115 -73 z',\n    },\n    accidentalSharp: {\n      x_min: -22,\n      x_max: 390,\n      y_min: -384,\n      y_max: 383,\n      ha: 767,\n      o: 'm 202 -553 b 219 -526 213 -552 216 -536 b 226 -471 225 -507 226 -488 b 225 -425 226 -455 225 -441 b 226 -392 225 -415 225 -402 b 233 -305 229 -363 232 -334 l 297 -292 b 331 -469 300 -353 311 -412 b 347 -485 333 -477 338 -485 b 363 -469 356 -487 359 -477 b 374 -418 373 -454 374 -435 b 376 -382 376 -405 376 -393 b 372 -276 376 -347 373 -311 l 455 -259 b 550 -156 534 -243 544 -232 b 550 -109 550 -137 552 -124 b 526 -78 549 -91 541 -78 l 523 -78 b 507 -79 517 -78 513 -78 b 403 -101 474 -88 438 -95 l 379 -105 b 382 -42 380 -85 380 -63 b 384 96 383 4 384 50 b 503 131 425 107 464 118 b 549 173 524 138 543 150 b 562 249 554 199 562 223 b 554 294 562 264 560 279 b 536 315 549 308 544 315 l 533 315 b 517 312 528 315 523 315 b 382 266 472 294 428 279 l 377 344 b 359 531 374 406 372 469 b 348 552 356 539 357 552 l 347 552 l 343 552 b 315 528 331 549 317 544 l 315 501 b 320 249 315 416 318 333 l 243 232 b 239 361 243 275 242 318 b 226 425 238 383 238 403 b 199 359 194 409 199 382 b 193 223 196 312 194 268 b 72 202 153 215 112 209 b 4 118 13 192 4 183 b 10 66 0 102 12 84 b 33 29 7 39 14 30 b 48 32 37 29 42 30 b 187 55 95 39 141 46 l 183 -75 b 176 -145 181 -99 179 -122 b 16 -179 122 -156 69 -166 b -32 -232 -14 -186 -32 -197 b -17 -331 -32 -266 -19 -298 b -1 -356 -17 -347 -13 -354 b 12 -353 1 -356 6 -354 b 167 -320 63 -341 115 -331 b 166 -377 166 -338 166 -357 b 189 -526 166 -428 171 -477 b 202 -553 192 -536 189 -553 z m 240 -132 b 243 -37 242 -101 242 -69 b 245 65 245 -3 245 30 b 315 79 269 69 292 73 b 301 -120 308 13 305 -53 z',\n    },\n    accidentalDoubleSharp: {\n      x_min: 0,\n      x_max: 287,\n      y_min: -159,\n      y_max: 159,\n      ha: 318,\n      o: 'm 84 -229 b 107 -216 91 -229 98 -225 b 200 -125 138 -186 167 -154 b 232 -95 212 -115 222 -105 b 347 -189 271 -125 310 -157 b 370 -200 356 -196 363 -200 b 396 -179 380 -200 389 -192 b 412 -102 410 -154 406 -125 b 377 -27 410 -69 400 -46 l 325 14 b 402 91 350 42 374 68 b 413 127 410 96 413 107 b 382 200 409 148 397 176 b 350 229 370 220 360 229 b 314 210 340 229 328 223 b 274 174 300 199 285 187 b 212 104 252 151 232 128 b 92 187 173 132 132 161 b 78 193 86 192 82 193 b 68 190 75 193 72 193 b 48 179 62 186 53 187 b 40 137 43 168 40 154 b 81 16 40 92 56 32 b 107 -3 89 10 98 4 b 14 -94 76 -32 45 -62 b 0 -124 6 -102 0 -114 b 12 -154 0 -134 3 -144 b 62 -215 26 -176 48 -193 b 84 -229 69 -225 76 -229 z',\n    },\n    accidentalDoubleFlat: {\n      x_min: 0,\n      x_max: 359,\n      y_min: -220,\n      y_max: 446,\n      ha: 666,\n      o: 'm 43 -317 b 72 -301 55 -317 63 -310 b 160 -186 108 -268 134 -226 b 236 -60 186 -145 212 -102 b 233 -131 235 -85 233 -108 b 239 -220 233 -161 235 -190 b 259 -246 240 -233 239 -240 b 301 -228 284 -252 291 -238 b 465 -7 369 -163 416 -85 b 517 173 500 48 517 108 b 451 307 517 229 505 284 b 409 315 436 312 422 315 b 331 287 382 315 356 305 b 311 274 324 282 320 274 l 310 274 l 310 566 b 305 621 310 585 312 603 b 294 642 301 628 305 642 l 292 642 b 264 622 282 641 266 636 b 253 575 259 606 256 590 b 246 418 248 523 246 471 b 248 243 246 360 248 302 l 248 187 b 164 238 220 225 193 238 b 85 213 140 238 112 226 b 84 229 85 220 84 225 b 86 315 85 258 86 287 b 81 528 86 386 82 458 b 71 582 81 547 78 566 b 56 603 66 590 68 603 l 53 603 b 23 580 40 600 26 598 b 19 537 20 566 19 552 b 20 514 19 530 19 521 b 26 390 24 472 26 432 b 14 66 26 282 16 174 b 0 -168 13 -12 0 -91 b 12 -279 0 -206 3 -242 b 30 -314 16 -294 14 -308 b 43 -317 35 -317 39 -317 z m 301 -72 b 302 7 302 -45 302 -19 l 302 86 b 351 158 304 121 321 145 b 383 166 361 163 373 166 b 435 143 402 166 419 157 b 445 127 441 138 445 132 b 441 114 445 122 444 118 b 301 -72 397 49 354 -14 z m 75 -147 b 73 30 75 -86 75 -29 b 118 82 73 62 92 76 b 132 84 124 84 128 84 b 190 52 156 84 174 69 b 193 40 192 49 193 45 b 192 33 193 37 193 35 b 75 -147 157 -30 125 -95 z',\n    },\n    accidentalParensLeft: {\n      x_min: 0,\n      x_max: 130,\n      y_min: -270,\n      y_max: 268,\n      ha: 538,\n      o: 'm 107 -389 b 127 -374 114 -389 120 -384 b 141 -347 132 -367 137 -357 b 151 -294 148 -330 151 -311 b 122 -207 151 -265 141 -236 b 63 -65 94 -164 72 -117 b 59 -10 60 -46 59 -27 b 145 223 59 78 94 153 b 187 354 176 262 189 305 b 177 384 187 364 190 380 b 143 373 166 387 153 383 b 124 354 137 367 130 361 b 0 -35 33 240 0 108 l 0 -92 b 85 -372 4 -193 27 -287 b 107 -389 92 -383 99 -389 z',\n    },\n    accidentalParensRight: {\n      x_min: 0,\n      x_max: 139,\n      y_min: -275,\n      y_max: 277,\n      ha: 552,\n      o: 'm 58 -396 b 96 -354 75 -396 85 -370 b 200 13 168 -238 200 -111 b 153 268 200 109 184 190 b 49 392 131 320 101 364 b 26 399 40 397 33 399 b 0 366 10 399 0 387 b 0 318 -1 350 0 334 l 0 291 b 27 238 -3 266 7 253 b 143 9 105 180 143 98 b 141 -20 143 -1 143 -10 b 63 -225 135 -92 108 -164 b 36 -307 45 -251 36 -278 b 40 -344 36 -320 37 -331 b 42 -356 42 -347 42 -351 b 58 -396 42 -374 37 -396 z',\n    },\n    accidentalQuarterToneFlatStein: {\n      x_min: 0,\n      x_max: 208,\n      y_min: -240,\n      y_max: 440,\n      ha: 680,\n      o: 'm 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z',\n    },\n    accidentalThreeQuarterTonesFlatZimmermann: {\n      x_min: 0,\n      x_max: 422,\n      y_min: -240,\n      y_max: 440,\n      ha: 680,\n      o: 'm 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 336 -346 b 353 -336 340 -346 346 -343 b 413 -289 372 -320 393 -304 b 608 81 540 -199 608 -76 b 605 140 608 101 608 120 b 497 251 598 210 557 251 b 454 243 484 251 469 248 b 393 219 433 238 413 228 l 392 217 l 392 255 b 397 419 392 310 395 364 b 400 513 397 451 400 481 b 390 605 400 543 397 575 b 373 634 387 615 387 634 l 372 634 b 344 599 356 632 344 619 b 340 477 343 559 338 517 l 340 432 b 333 177 340 347 336 262 b 308 -187 328 55 308 -65 b 324 -333 308 -235 311 -285 b 336 -346 327 -341 330 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z m 374 -151 b 383 -35 377 -114 379 -75 b 387 60 386 -3 387 29 l 393 63 b 478 89 420 75 448 89 b 511 82 488 89 500 86 b 544 46 534 73 546 62 b 537 17 544 37 543 29 b 374 -151 500 -56 439 -105 z',\n    },\n    accidentalQuarterToneSharpStein: {\n      x_min: 0,\n      x_max: 300,\n      y_min: -338,\n      y_max: 351,\n      ha: 689,\n      o: 'm 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 l 35 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z',\n    },\n    accidentalThreeQuarterTonesSharpStein: {\n      x_min: -23,\n      x_max: 388,\n      y_min: -373,\n      y_max: 445,\n      ha: 818,\n      o: 'm 114 -537 b 138 -475 137 -518 138 -495 b 147 -292 138 -413 144 -353 b 212 -278 168 -287 190 -282 b 243 -444 215 -333 225 -389 b 261 -467 248 -454 251 -465 b 281 -446 272 -469 276 -455 b 292 -347 292 -416 288 -384 b 288 -262 289 -320 288 -291 l 374 -245 b 376 -311 374 -266 374 -288 b 390 -456 379 -357 379 -405 b 416 -396 412 -436 415 -418 b 423 -287 420 -360 423 -323 b 422 -235 423 -269 423 -252 b 451 -229 432 -233 441 -232 b 547 -98 524 -215 547 -199 l 547 -89 b 521 -49 546 -59 540 -49 b 497 -52 516 -49 507 -49 b 418 -68 469 -56 444 -63 b 423 52 419 -29 422 12 b 426 140 425 81 425 109 b 495 160 449 145 472 153 b 552 219 526 170 546 189 b 559 279 557 240 553 262 b 530 341 559 324 552 341 b 490 331 520 341 507 338 b 432 311 471 324 452 318 b 449 552 436 392 442 471 b 452 588 451 563 452 575 b 446 622 452 599 451 611 b 436 641 444 629 448 641 b 418 628 428 641 420 636 b 409 602 413 621 410 611 b 386 297 396 501 390 399 b 297 274 356 288 327 281 b 291 403 295 317 294 360 b 274 550 288 452 284 501 b 259 569 271 564 265 569 b 240 559 253 569 248 563 b 230 537 232 554 230 546 l 230 488 b 233 369 230 448 232 409 b 236 261 236 333 238 297 b 156 245 210 255 183 251 b 154 396 154 295 154 346 b 150 416 154 403 153 410 b 140 438 145 423 150 438 l 138 438 b 118 413 128 436 118 428 b 112 354 118 393 114 374 b 109 238 109 315 109 276 b 49 226 89 233 69 230 b 3 163 16 222 3 202 b 7 91 3 138 9 114 b 29 62 7 69 13 62 b 39 63 32 62 35 63 b 104 73 60 66 82 71 b 101 -10 104 46 102 17 l 92 -132 l 10 -150 b -33 -204 -19 -157 -33 -170 b -19 -310 -32 -240 -19 -274 b -6 -324 -19 -321 -13 -324 b 6 -323 -1 -324 1 -324 b 82 -307 32 -317 58 -311 b 81 -376 82 -330 81 -353 b 114 -537 81 -431 94 -484 z m 294 -92 b 297 -37 295 -73 295 -56 b 300 49 300 -9 300 20 l 300 108 b 379 127 325 114 353 120 b 374 -76 376 59 374 -9 b 294 -92 347 -82 320 -86 z m 154 -120 b 157 20 154 -73 156 -26 b 158 82 158 40 158 62 b 230 95 183 86 206 89 b 225 0 229 63 226 32 b 217 -107 223 -35 220 -71 z',\n    },\n    accidentalBuyukMucennebFlat: {\n      x_min: 2,\n      x_max: 287,\n      y_min: -248,\n      y_max: 432,\n      ha: 680,\n      o: 'm 410 128 b 302 239 403 199 363 239 b 259 232 289 239 275 236 b 199 207 239 226 219 216 l 197 206 l 197 243 l 197 251 b 347 317 248 272 298 295 b 376 347 360 324 372 334 b 389 435 387 376 393 405 b 348 454 384 462 377 465 b 202 387 300 432 251 409 b 203 408 203 395 203 402 l 203 431 b 347 490 252 451 300 469 b 376 517 360 495 372 505 b 389 599 387 546 393 572 b 348 616 384 625 377 628 l 203 556 b 196 593 202 569 199 582 b 179 622 193 603 193 622 l 177 622 b 150 588 161 621 150 608 b 147 533 150 570 148 552 b 29 488 108 517 69 503 b 3 455 12 482 3 472 b 12 353 1 422 9 389 b 145 408 56 372 101 389 b 145 363 145 392 145 377 l 29 315 b 3 281 12 310 3 298 b 12 170 1 245 9 209 l 141 226 b 138 166 140 206 138 186 b 114 -199 134 43 115 -76 b 130 -344 114 -246 117 -297 b 141 -357 132 -353 135 -357 b 158 -347 145 -357 151 -354 b 219 -301 177 -331 199 -315 b 413 69 346 -210 413 -88 b 410 128 413 89 413 108 z m 350 35 b 343 6 350 26 348 17 b 180 -163 308 -69 245 -117 b 189 -46 183 -125 184 -86 b 193 49 192 -14 193 17 l 199 52 b 284 78 226 63 253 78 b 317 71 294 78 305 75 b 350 35 340 62 351 50 z',\n    },\n    accidentalBuyukMucennebSharp: {\n      x_min: -1,\n      x_max: 467,\n      y_min: -460,\n      y_max: 350,\n      ha: 810,\n      o: 'm 230 -662 b 256 -615 249 -647 255 -631 b 264 -495 261 -575 264 -534 b 261 -361 264 -451 262 -406 b 415 -324 312 -348 363 -336 b 416 -445 415 -364 416 -405 b 431 -593 416 -492 419 -541 b 458 -533 454 -573 456 -554 b 464 -418 462 -494 464 -455 b 459 -314 464 -383 462 -348 b 531 -298 484 -308 508 -304 b 570 -259 554 -292 566 -278 b 579 -192 575 -236 579 -215 b 576 -164 579 -183 577 -173 b 556 -143 573 -147 567 -143 b 543 -144 553 -143 549 -143 b 459 -164 516 -151 487 -157 b 462 -102 459 -144 461 -122 l 608 -76 b 667 -24 639 -71 660 -53 b 672 19 671 -9 671 9 l 672 46 b 641 108 668 94 662 108 b 605 101 632 108 621 105 l 580 96 b 469 72 544 88 507 79 b 471 131 469 91 471 111 b 521 141 488 135 504 138 b 573 197 550 148 570 167 b 577 271 576 222 577 246 b 553 300 577 291 567 300 b 537 297 549 300 543 298 b 480 285 517 292 498 288 b 491 410 482 327 485 369 b 494 445 492 422 494 433 b 488 482 494 458 492 469 b 477 504 487 490 491 504 b 455 484 467 504 458 495 b 451 464 452 478 452 471 b 433 275 442 402 438 338 b 282 246 383 265 333 255 l 291 346 b 294 382 292 359 294 370 b 287 418 294 395 292 406 b 276 435 284 423 289 435 b 259 423 269 435 264 429 b 251 397 255 416 252 406 b 235 239 242 346 239 292 b 166 228 212 235 189 232 b 118 170 134 223 112 207 b 120 140 120 160 120 150 b 120 84 120 121 118 102 b 131 69 120 75 122 69 b 138 71 132 69 135 71 b 226 85 168 75 197 81 b 223 30 226 66 225 49 l 223 17 l 45 -22 b -1 -92 13 -29 -1 -48 b 1 -171 -1 -118 3 -145 b 12 -187 0 -184 4 -187 b 22 -186 14 -187 17 -187 b 115 -164 53 -179 84 -170 b 217 -145 150 -158 183 -153 b 215 -225 216 -173 216 -199 l 203 -229 b 132 -275 141 -246 132 -249 b 134 -315 132 -285 134 -298 b 135 -382 134 -336 132 -359 b 144 -396 135 -386 134 -396 b 151 -395 145 -396 148 -396 b 215 -376 171 -387 193 -382 b 216 -516 215 -422 215 -468 b 230 -662 217 -563 219 -611 z m 271 27 b 274 94 272 50 274 72 b 425 122 324 102 374 112 l 425 101 b 422 62 423 88 423 75 z m 262 -177 b 264 -137 264 -164 264 -151 b 418 -109 315 -128 366 -120 b 415 -174 416 -131 416 -153 b 262 -213 364 -186 312 -199 z',\n    },\n    accidentalBakiyeFlat: {\n      x_min: 2,\n      x_max: 287,\n      y_min: -236,\n      y_max: 444,\n      ha: 680,\n      o: 'm 141 -340 b 158 -330 145 -340 151 -337 b 219 -284 177 -314 199 -298 b 413 86 346 -193 413 -71 b 410 145 413 107 413 125 b 302 256 403 216 363 256 b 259 249 289 256 275 253 b 199 225 239 243 219 233 l 197 223 l 197 261 b 199 334 197 285 199 310 b 347 406 249 357 298 382 b 376 439 360 413 372 425 b 390 516 384 465 390 490 b 389 537 390 523 390 530 b 372 564 384 556 382 564 b 348 557 367 564 359 562 b 204 487 300 537 253 510 b 206 518 206 497 206 507 b 196 611 206 549 203 580 b 179 639 193 621 193 639 l 177 639 b 150 605 161 638 150 625 b 145 482 148 564 144 523 l 145 458 b 29 405 107 439 68 420 b 3 366 12 397 3 386 b 12 243 1 325 9 287 b 143 307 56 265 99 285 l 138 183 b 114 -181 134 60 114 -59 b 130 -327 114 -229 117 -279 b 141 -340 132 -336 135 -340 z m 180 -145 b 189 -29 183 -108 184 -69 b 193 66 192 3 193 35 l 199 69 b 284 95 226 81 253 95 b 317 88 294 95 305 92 b 350 52 340 79 351 68 b 343 23 350 43 348 35 b 180 -145 305 -50 245 -99 z',\n    },\n    accidentalKomaSharp: {\n      x_min: 0,\n      x_max: 300,\n      y_min: -338,\n      y_max: 351,\n      ha: 689,\n      o: 'm 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 l 35 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z',\n    },\n    accidentalKucukMucennebSharp: {\n      x_min: 0,\n      x_max: 359,\n      y_min: -420,\n      y_max: 343,\n      ha: 763,\n      o: 'm 236 -605 b 262 -543 256 -583 261 -564 b 269 -423 268 -503 269 -464 b 266 -340 269 -396 268 -367 l 361 -318 b 405 -276 384 -312 399 -298 b 413 -189 412 -248 416 -219 b 395 -164 412 -171 409 -164 b 382 -166 392 -164 387 -164 b 264 -193 343 -176 304 -184 b 269 -102 265 -163 268 -132 b 454 -62 331 -89 392 -78 b 501 -23 477 -58 494 -45 b 517 62 511 6 517 33 b 487 112 517 95 513 112 b 471 111 482 112 477 112 b 274 66 406 95 340 81 b 276 138 275 91 276 114 b 350 154 301 144 325 148 b 402 203 377 160 396 176 b 412 284 408 230 412 258 b 392 311 412 302 406 311 b 372 308 386 311 379 310 b 287 291 343 301 314 297 l 295 405 b 298 441 297 416 298 428 b 292 475 298 452 297 464 b 282 494 289 482 294 494 b 264 481 274 494 266 490 b 255 455 259 474 256 464 b 239 282 248 397 243 340 b 148 268 209 278 179 274 b 62 164 62 252 62 253 l 62 132 b 79 108 60 117 65 108 l 86 108 l 230 130 b 229 92 230 118 229 105 b 228 56 228 79 228 68 b 66 20 173 43 120 32 b 0 -59 6 7 3 1 l 0 -138 b 14 -160 -1 -156 4 -160 b 27 -158 19 -160 23 -160 b 222 -112 92 -141 157 -127 b 220 -203 220 -143 220 -173 b 147 -217 196 -207 171 -213 b 89 -288 92 -228 89 -229 b 95 -347 85 -305 96 -325 b 112 -374 92 -366 98 -374 b 125 -373 117 -374 121 -374 l 220 -351 b 222 -458 220 -386 220 -422 b 236 -605 223 -504 225 -552 z',\n    },\n    accidentalKoron: {\n      x_min: 0,\n      x_max: 303,\n      y_min: -462,\n      y_max: 180,\n      ha: 642,\n      o: 'm 59 -665 b 72 -649 69 -662 72 -657 b 69 -626 72 -642 69 -634 b 69 -622 69 -625 69 -624 l 69 -600 b 55 -156 60 -456 68 -311 b 86 -170 66 -166 76 -170 b 112 -163 95 -170 104 -166 b 390 -35 204 -120 298 -78 b 436 -1 409 -27 436 -27 b 396 46 436 22 413 33 l 382 55 b 46 243 271 121 157 179 b 12 259 29 253 17 259 b 0 219 1 259 0 248 b 3 -372 0 22 3 -176 b 6 -616 3 -454 6 -536 b 59 -665 6 -638 40 -671 z m 55 199 b 363 24 156 141 258 84 b 55 -118 259 -24 160 -69 z',\n    },\n    accidentalSori: {\n      x_min: 0,\n      x_max: 434,\n      y_min: -295,\n      y_max: 325,\n      ha: 620,\n      o: 'm 194 -425 b 196 -409 194 -418 196 -413 b 194 -194 196 -337 196 -266 b 364 -127 251 -171 308 -150 b 361 -321 363 -192 364 -256 b 410 -387 360 -357 373 -377 b 413 -373 412 -382 413 -377 b 418 -114 418 -287 418 -200 l 418 -105 b 595 -35 477 -82 536 -59 b 625 0 612 -27 625 -22 b 593 48 624 23 618 39 l 419 117 b 423 370 419 202 423 285 b 426 403 423 382 426 393 b 418 436 426 415 425 426 b 384 468 409 449 399 468 b 369 448 370 468 369 459 b 369 436 369 444 369 441 l 369 428 l 369 423 b 367 138 369 328 367 233 l 353 143 l 192 207 l 192 367 b 173 406 192 383 184 396 b 151 422 167 413 160 422 b 144 420 148 422 147 422 b 137 403 138 416 137 410 l 137 392 l 137 229 b 33 271 102 243 68 256 b 13 276 26 274 19 276 b 0 262 6 276 0 272 b 35 199 1 239 0 212 l 138 160 b 140 -148 138 58 138 -45 b 56 -181 111 -158 84 -170 b 24 -215 35 -189 24 -199 b 29 -235 24 -220 26 -228 b 49 -253 35 -249 42 -253 b 78 -240 59 -253 69 -243 b 140 -216 98 -233 120 -225 l 140 -356 b 194 -425 140 -406 141 -406 z m 194 -125 b 193 138 194 -37 193 50 b 315 89 233 122 275 107 b 366 71 333 84 350 76 b 364 -58 366 27 366 -16 b 194 -125 308 -81 251 -104 z m 419 49 l 526 7 l 485 -10 l 419 -36 z',\n    },\n    articAccentAbove: {\n      x_min: 0,\n      x_max: 425,\n      y_min: 0,\n      y_max: 326,\n      ha: 326,\n      o: 'm 27 1 b 78 12 46 0 62 6 b 347 112 168 45 253 91 b 521 184 409 128 459 167 b 608 259 557 194 589 220 b 612 274 611 265 612 271 b 598 292 612 281 608 287 b 477 347 559 312 518 331 b 176 465 374 384 275 425 b 156 469 168 468 161 469 b 125 456 145 469 137 465 b 53 370 96 432 78 399 b 45 353 48 363 45 357 b 68 333 45 344 52 337 b 360 225 166 298 262 261 b 192 154 302 203 249 171 b 13 36 120 132 53 105 b 0 13 9 29 0 22 l 0 9 b 16 0 3 1 10 0 l 26 0 b 27 1 27 0 27 0 z',\n    },\n    articAccentBelow: {\n      x_min: 0,\n      x_max: 425,\n      y_min: -326,\n      y_max: 0,\n      ha: 326,\n      o: 'm 26 -469 l 27 -469 b 78 -458 46 -469 62 -464 b 347 -357 168 -426 253 -380 b 521 -285 409 -341 459 -302 b 608 -210 557 -276 589 -249 b 612 -196 611 -204 612 -200 b 598 -179 612 -189 608 -183 b 477 -122 559 -157 518 -138 b 176 -4 374 -85 275 -45 b 156 0 168 -1 161 0 b 125 -13 145 0 137 -4 b 53 -99 96 -37 78 -71 b 45 -117 48 -107 45 -112 b 68 -137 45 -125 52 -132 b 360 -245 166 -171 262 -209 b 192 -315 302 -266 249 -300 b 13 -433 120 -337 53 -366 b 0 -456 9 -442 0 -448 l 0 -461 b 16 -469 3 -468 10 -469 z',\n    },\n    articTenutoAbove: {\n      x_min: 0,\n      x_max: 471,\n      y_min: 0,\n      y_max: 56,\n      ha: 56,\n      o: 'm 137 0 b 197 1 156 0 179 1 b 409 6 268 1 338 6 b 482 4 432 6 459 6 b 556 0 508 3 534 0 b 651 10 588 0 621 3 b 678 27 662 12 678 10 b 654 59 680 45 672 53 b 511 75 606 73 560 73 b 255 81 426 78 341 81 b 160 79 222 81 193 79 l 36 79 b 1 71 24 78 7 85 b 19 32 -3 56 9 43 b 45 16 26 24 36 20 b 137 0 76 3 108 0 z',\n    },\n    articTenutoBelow: {\n      x_min: 0,\n      x_max: 471,\n      y_min: -59,\n      y_max: -3,\n      ha: 56,\n      o: 'm 137 -85 b 197 -84 156 -85 179 -84 b 409 -79 268 -84 338 -79 b 482 -81 432 -79 459 -79 b 556 -85 508 -82 534 -85 b 651 -75 588 -85 621 -82 b 678 -58 662 -73 678 -75 b 654 -26 680 -40 672 -32 b 511 -10 606 -12 560 -12 b 255 -4 426 -7 341 -4 b 160 -6 222 -4 193 -6 l 36 -6 b 1 -14 24 -7 7 0 b 19 -53 -3 -29 9 -42 b 45 -69 26 -60 36 -65 b 137 -85 76 -82 108 -85 z',\n    },\n    articStaccatoAbove: {\n      x_min: 1,\n      x_max: 112,\n      y_min: 0,\n      y_max: 156,\n      ha: 156,\n      o: 'm 98 0 b 132 23 109 0 122 7 b 161 112 150 50 161 79 b 158 148 161 124 161 137 b 125 186 154 167 131 167 b 63 225 117 215 85 216 b 23 197 45 222 30 219 b 3 91 12 163 12 127 b 19 66 0 79 4 69 b 65 27 40 62 53 46 b 98 0 76 9 88 0 z',\n    },\n    articStaccatoBelow: {\n      x_min: 1,\n      x_max: 112,\n      y_min: -156,\n      y_max: 0,\n      ha: 156,\n      o: 'm 132 -202 b 161 -112 151 -174 163 -145 b 158 -76 161 -101 161 -88 b 125 -39 153 -58 131 -58 b 63 0 115 -10 85 -9 b 23 -27 45 -3 30 -6 b 3 -134 12 -62 10 -98 b 19 -158 0 -145 4 -156 b 65 -197 40 -164 53 -179 b 98 -225 75 -216 88 -225 b 132 -202 109 -225 122 -217 z',\n    },\n    articStaccatissimoAbove: {\n      x_min: 0,\n      x_max: 139,\n      y_min: 0,\n      y_max: 411,\n      ha: 411,\n      o: 'm 104 0 b 144 115 143 29 138 75 b 197 423 158 217 180 320 b 200 454 199 433 200 444 b 181 540 200 482 193 513 b 112 592 167 573 141 592 b 55 567 92 592 72 585 b 0 490 32 546 3 527 l 0 484 b 27 279 14 416 14 347 b 84 20 43 193 52 104 b 96 0 86 13 92 6 z',\n    },\n    articStaccatissimoBelow: {\n      x_min: 0,\n      x_max: 139,\n      y_min: -411,\n      y_max: 0,\n      ha: 411,\n      o: 'm 88 -592 b 145 -567 108 -592 128 -585 b 200 -490 168 -546 197 -527 l 200 -484 b 173 -279 186 -416 186 -347 b 117 -20 157 -193 148 -104 b 104 0 114 -13 108 -6 l 96 0 b 56 -115 58 -29 62 -75 b 3 -423 42 -217 20 -320 b 0 -454 1 -433 0 -444 b 19 -540 0 -482 7 -513 b 88 -592 33 -573 59 -592 z',\n    },\n    articMarcatoAbove: {\n      x_min: 0,\n      x_max: 396,\n      y_min: 0,\n      y_max: 328,\n      ha: 328,\n      o: 'm 477 0 b 510 13 488 0 500 6 b 570 124 546 40 563 81 b 547 183 570 147 560 166 b 356 422 487 265 405 330 b 346 442 354 429 350 436 l 346 444 b 318 465 340 456 330 464 l 312 469 b 274 449 294 480 284 461 b 242 413 262 438 253 425 b 56 196 177 343 112 274 b 1 56 26 154 13 105 b 27 20 -4 35 9 20 b 42 23 32 20 37 20 b 84 53 59 29 72 39 b 255 269 141 125 193 200 b 275 229 262 255 266 242 b 448 14 324 151 390 86 b 477 0 456 4 467 0 z',\n    },\n    articMarcatoBelow: {\n      x_min: 0,\n      x_max: 396,\n      y_min: -328,\n      y_max: 0,\n      ha: 328,\n      o: 'm 258 -469 b 297 -449 276 -480 287 -461 b 328 -413 308 -438 317 -425 b 514 -196 393 -343 458 -274 b 569 -56 544 -154 557 -105 b 543 -20 575 -35 562 -20 b 528 -23 539 -20 533 -20 b 487 -53 511 -29 498 -39 b 315 -269 429 -125 377 -200 b 295 -229 308 -255 304 -242 b 122 -14 246 -151 180 -86 b 94 0 114 -4 104 0 b 60 -13 82 0 71 -6 b 0 -124 24 -40 7 -81 b 23 -183 0 -147 10 -166 b 215 -422 84 -265 166 -330 b 225 -442 216 -429 220 -436 l 225 -444 b 252 -465 230 -456 240 -464 z',\n    },\n    fermataAbove: {\n      x_min: 0,\n      x_max: 472,\n      y_min: 2,\n      y_max: 454,\n      ha: 452,\n      o: 'm 39 10 b 78 108 66 37 71 73 b 163 311 92 181 111 252 b 284 423 199 353 239 392 b 373 458 312 444 340 454 b 433 431 395 458 410 446 b 603 153 530 361 596 276 b 595 121 603 144 595 131 l 595 88 b 602 50 596 75 589 55 b 639 73 619 43 631 60 b 651 102 645 82 648 92 b 667 194 660 132 662 163 b 680 278 671 222 672 248 b 560 567 680 386 638 481 b 396 654 508 625 452 649 b 291 632 364 654 325 644 b 161 526 235 613 200 566 b 4 249 85 446 26 357 b 4 174 0 222 -3 196 b 10 19 4 124 4 69 b 29 4 12 6 16 0 b 39 10 35 4 33 4 z m 338 37 b 370 40 350 36 357 36 b 380 75 387 40 380 43 b 389 94 382 79 382 85 b 356 132 389 111 374 122 b 269 154 328 147 300 156 b 225 125 252 154 228 157 b 261 48 222 81 232 56 b 338 37 287 40 312 40 z',\n    },\n    fermataBelow: {\n      x_min: 0,\n      x_max: 519,\n      y_min: -430,\n      y_max: -1,\n      ha: 429,\n      o: 'm 344 -615 b 500 -543 402 -602 452 -576 b 713 -253 605 -471 661 -364 b 746 -98 737 -204 750 -153 b 727 -59 744 -82 744 -59 b 688 -88 711 -59 694 -68 b 678 -109 687 -96 683 -102 b 562 -314 648 -183 611 -252 b 387 -439 516 -373 458 -416 b 328 -449 367 -446 347 -449 b 180 -386 274 -449 225 -423 b 69 -179 111 -330 69 -262 b 75 -121 69 -160 71 -141 b 84 -58 78 -101 84 -79 b 82 -39 84 -52 84 -45 b 68 -1 79 -26 82 -4 b 26 -32 49 0 33 -12 b 20 -52 24 -39 22 -45 b 0 -223 9 -107 -3 -161 b 141 -553 1 -348 27 -468 b 304 -619 192 -590 243 -619 b 344 -615 317 -619 330 -618 z m 415 -190 b 435 -157 429 -192 435 -184 b 308 -27 435 -86 379 -27 b 271 -46 287 -27 272 -35 b 269 -69 269 -55 269 -62 b 364 -183 269 -128 302 -170 z',\n    },\n    fermataLongAbove: {\n      x_min: 0,\n      x_max: 591,\n      y_min: -6,\n      y_max: 337,\n      ha: 343,\n      o: 'm 20 -9 b 36 14 29 -9 35 3 b 49 109 45 45 49 78 b 48 143 49 121 49 131 b 42 312 40 200 45 256 b 63 338 42 331 46 338 b 68 340 65 338 66 338 b 279 333 138 336 209 334 b 760 317 439 330 599 323 b 783 298 775 317 782 315 l 796 161 b 814 17 801 115 802 68 b 851 144 840 45 855 102 b 824 396 842 228 834 312 b 760 468 816 459 812 467 l 55 485 b 1 433 12 487 1 478 l 1 387 b 0 203 1 325 0 264 b 9 17 0 141 3 79 b 20 -9 9 7 6 -9 z m 403 3 b 439 6 413 3 425 4 b 477 42 464 9 474 22 b 478 62 478 49 478 55 l 478 84 b 465 160 478 109 478 135 b 449 173 461 167 459 173 b 354 105 386 179 354 156 b 359 71 354 95 356 84 b 360 65 360 69 360 66 b 403 3 372 14 373 3 z',\n    },\n    fermataLongBelow: {\n      x_min: 0,\n      x_max: 602,\n      y_min: -335,\n      y_max: 7,\n      ha: 342,\n      o: 'm 793 -482 b 851 -444 822 -482 842 -471 b 867 -357 860 -416 867 -387 b 865 -336 867 -350 867 -343 b 851 -189 858 -287 855 -238 b 832 -32 847 -135 840 -84 b 824 -17 832 -26 832 -17 l 822 -17 b 805 -30 816 -19 806 -20 b 798 -88 802 -50 798 -69 b 805 -292 798 -157 801 -225 b 772 -327 806 -318 801 -327 b 360 -324 635 -327 497 -325 b 78 -327 265 -323 171 -327 b 50 -304 59 -327 50 -320 l 50 -297 b 62 -187 55 -261 60 -225 b 71 -60 62 -144 71 -102 b 68 -20 71 -48 71 -33 b 53 10 66 -10 69 10 l 52 10 b 22 -22 37 9 24 -1 b 14 -121 17 -55 16 -89 b 0 -359 10 -200 0 -279 b 6 -452 0 -390 3 -420 b 42 -481 9 -478 20 -481 l 415 -481 l 415 -482 z m 409 -183 b 454 -179 420 -183 435 -181 b 505 -124 487 -176 504 -158 b 505 -89 507 -112 505 -101 b 507 -58 505 -79 507 -68 b 505 -42 507 -52 507 -48 b 485 -10 503 -29 501 -10 b 448 -9 472 -9 461 -9 b 380 -22 425 -9 402 -12 b 363 -46 372 -27 363 -35 l 363 -49 b 364 -114 363 -71 361 -94 b 409 -183 374 -168 377 -183 z',\n    },\n    fermataVeryLongAbove: {\n      x_min: 0,\n      x_max: 715,\n      y_min: -14,\n      y_max: 437,\n      ha: 451,\n      o: 'm 26 -20 b 42 -4 36 -22 39 -12 b 49 53 49 14 49 33 l 49 448 b 69 478 49 467 52 478 l 72 478 b 81 480 75 478 78 478 b 144 477 102 477 122 477 l 207 477 b 943 471 452 477 698 471 b 978 442 966 471 976 467 b 989 99 985 327 985 213 b 999 -19 991 60 995 22 b 1030 62 1028 6 1030 35 b 1021 507 1028 210 1025 359 b 1012 596 1021 537 1017 567 b 976 624 1009 618 998 624 b 507 626 819 624 662 625 b 46 629 353 628 200 629 b 7 590 19 629 7 618 b 0 101 7 428 0 264 b 16 -4 0 65 13 32 b 26 -20 17 -10 22 -19 z m 187 -9 b 207 30 206 -7 204 14 b 207 55 209 37 207 46 b 200 240 210 117 197 179 b 219 262 200 256 203 262 l 223 262 b 456 252 301 258 379 255 l 772 239 b 804 209 792 238 802 235 b 818 69 806 163 809 115 b 834 -4 821 46 816 19 b 857 56 852 13 857 35 b 851 183 857 99 858 141 b 827 360 841 242 841 301 b 786 390 821 383 809 389 b 189 409 588 403 387 402 b 153 377 163 409 153 400 b 173 27 153 259 150 143 b 187 -9 176 13 177 -9 z m 478 3 b 536 10 491 3 510 6 b 582 60 569 14 580 32 l 582 89 l 580 89 b 580 117 580 98 582 107 b 540 171 577 158 572 171 b 521 171 534 171 528 170 b 459 166 500 170 480 168 b 423 132 436 164 423 154 b 428 88 423 118 425 102 b 478 3 438 22 439 4 z',\n    },\n    fermataVeryLongBelow: {\n      x_min: 0,\n      x_max: 686,\n      y_min: -427,\n      y_max: 30,\n      ha: 457,\n      o: 'm 56 -615 b 282 -612 132 -612 207 -613 b 924 -606 497 -608 710 -606 b 973 -570 953 -606 968 -593 b 988 -455 984 -533 991 -494 b 982 -262 984 -390 982 -327 b 976 -69 982 -197 981 -134 b 976 -14 975 -50 976 -33 b 966 43 976 4 975 23 b 940 20 953 37 943 35 b 933 -76 936 -12 933 -45 b 935 -121 933 -91 933 -107 b 940 -307 940 -183 940 -245 l 940 -435 b 919 -458 940 -451 935 -458 b 894 -459 910 -458 903 -458 b 206 -467 665 -461 435 -467 b 88 -467 167 -467 127 -468 b 45 -425 45 -467 42 -465 b 46 -400 46 -416 46 -408 b 43 -325 46 -376 43 -350 b 42 -59 42 -236 42 -148 b 22 17 42 -32 36 -6 b 0 -27 -1 7 0 -10 b 7 -420 0 -158 7 -289 l 7 -474 b 16 -579 7 -510 7 -544 b 56 -615 22 -603 27 -615 z m 789 -390 b 835 -357 816 -392 829 -380 b 850 -256 844 -324 850 -291 b 848 -230 850 -248 850 -239 b 845 -135 845 -199 845 -167 l 845 -72 b 837 23 845 -40 848 -9 b 809 -27 809 14 809 -7 l 809 -222 b 788 -242 809 -238 805 -242 l 203 -229 b 180 -209 186 -229 180 -223 l 180 -160 b 179 -115 180 -145 180 -131 b 179 -50 177 -94 179 -72 b 163 24 179 -26 176 0 b 137 -6 145 19 140 10 b 134 -39 134 -17 134 -27 b 138 -105 134 -60 137 -82 l 138 -197 b 145 -343 138 -246 138 -294 b 179 -377 148 -364 151 -377 b 789 -390 383 -377 586 -380 z m 480 -164 b 566 -65 549 -164 566 -140 b 527 1 566 -10 564 1 b 436 -71 426 1 436 -9 l 436 -88 l 436 -143 b 454 -163 436 -153 439 -161 b 480 -164 464 -163 472 -164 z',\n    },\n    fermataVeryShortAbove: {\n      x_min: 0,\n      x_max: 711,\n      y_min: -31,\n      y_max: 496,\n      ha: 527,\n      o: 'm 1018 -45 b 1024 -1 1021 -29 1024 -14 b 986 105 1024 40 1008 75 b 557 688 845 302 701 495 b 520 714 544 706 531 714 b 480 687 505 714 492 706 b 340 490 433 621 387 556 b 73 127 252 367 168 243 b 0 22 48 95 22 63 b 68 60 33 27 52 42 b 167 170 101 96 132 135 b 494 503 276 279 384 393 b 518 518 504 513 511 518 b 543 501 526 518 533 513 b 923 63 670 356 799 212 b 1018 -45 952 29 984 -4 z m 837 -16 b 838 1 838 -10 838 -4 b 799 82 838 37 818 60 b 560 369 721 179 639 274 b 541 396 553 377 546 386 b 518 422 533 413 527 422 b 491 400 511 422 503 415 b 347 229 445 341 396 285 b 203 45 297 170 239 117 b 184 17 199 36 184 26 b 189 9 184 14 186 12 b 226 26 200 -1 215 19 l 238 35 b 494 245 321 107 408 176 b 510 253 501 251 505 253 b 526 245 514 253 520 251 b 729 73 592 186 660 130 z m 495 0 b 511 6 500 0 505 1 b 556 32 526 16 540 30 b 586 68 583 35 586 50 b 579 115 586 86 582 101 b 533 190 566 168 553 190 b 459 154 516 190 494 177 b 442 122 448 145 442 135 b 445 105 442 117 442 111 b 477 17 456 76 465 46 b 495 0 481 7 487 0 z',\n    },\n    fermataVeryShortBelow: {\n      x_min: 0,\n      x_max: 697,\n      y_min: -475,\n      y_max: 13,\n      ha: 488,\n      o: 'm 507 -383 b 530 -369 514 -383 521 -377 b 775 -130 611 -288 694 -210 b 824 3 811 -94 822 -48 b 789 -7 808 6 799 0 b 521 -212 698 -72 611 -143 b 488 -226 508 -222 498 -226 b 452 -209 477 -226 467 -220 b 202 7 370 -135 285 -65 b 187 19 197 10 193 19 b 179 14 184 19 181 17 b 171 -3 174 10 171 4 b 173 -13 171 -6 171 -9 b 235 -122 186 -53 206 -94 l 484 -370 b 507 -383 492 -379 500 -383 z m 503 -684 b 539 -647 517 -674 528 -661 b 917 -153 665 -482 793 -318 b 999 -24 948 -112 984 -73 b 1004 -10 1001 -20 1004 -16 b 999 -3 1004 -7 1002 -4 b 973 -10 991 1 981 -1 l 963 -23 b 552 -505 825 -184 688 -344 b 528 -521 543 -517 536 -521 b 505 -505 521 -521 514 -516 b 156 -128 393 -374 274 -253 b 27 6 114 -84 72 -39 b 16 17 24 9 22 17 b 9 13 13 17 12 16 b 0 -3 6 10 0 3 b 1 -9 0 -4 0 -7 b 14 -36 4 -17 9 -27 b 117 -179 45 -86 81 -132 b 482 -667 242 -338 360 -504 b 503 -684 487 -672 491 -683 z m 487 -164 b 552 -98 523 -164 552 -137 b 544 -30 550 -78 549 -55 b 521 -1 541 -19 537 -1 l 517 -1 b 446 -29 492 -9 462 0 b 445 -42 444 -32 445 -37 b 464 -145 451 -76 458 -111 b 487 -164 468 -157 467 -164 z',\n    },\n    fermataShortAbove: {\n      x_min: 0,\n      x_max: 545,\n      y_min: -18,\n      y_max: 348,\n      ha: 366,\n      o: 'm 16 -26 b 36 -9 26 -27 30 -16 b 354 340 143 107 249 223 b 369 348 360 346 364 348 b 382 341 373 348 377 346 l 530 199 b 743 0 599 131 672 68 b 753 -7 747 -3 750 -7 b 762 -1 756 -7 759 -6 b 785 84 776 10 785 48 b 768 150 785 112 779 138 l 399 491 b 379 501 392 498 384 501 b 357 488 372 501 364 495 b 27 137 248 370 141 251 b 1 84 12 121 1 105 b 3 69 1 79 1 75 b 0 55 1 65 0 59 b 9 1 0 36 9 20 b 16 -26 10 -7 3 -22 z m 357 24 b 367 27 360 24 363 24 b 431 118 422 42 431 49 b 429 151 431 130 431 141 b 400 193 428 171 429 193 b 333 147 359 193 333 176 b 341 42 333 111 337 78 b 357 24 343 30 346 24 z',\n    },\n    fermataShortBelow: {\n      x_min: 0,\n      x_max: 565,\n      y_min: -335,\n      y_max: 10,\n      ha: 345,\n      o: 'm 386 -482 b 422 -455 395 -482 405 -474 b 732 -117 526 -343 631 -232 b 814 12 765 -79 799 -42 b 752 -22 780 14 768 -7 b 436 -320 645 -120 540 -219 b 419 -328 429 -325 425 -328 b 400 -318 413 -328 408 -325 b 35 0 279 -212 157 -105 b 16 14 29 4 23 14 b 7 12 13 14 10 14 b 0 -3 1 7 0 1 b 7 -23 0 -10 3 -17 b 20 -48 12 -30 14 -39 b 167 -238 60 -117 115 -177 b 351 -455 229 -310 289 -383 b 386 -482 367 -474 377 -482 z m 382 -213 b 406 -207 389 -213 396 -210 b 452 -156 431 -199 446 -180 b 461 -85 456 -132 458 -108 b 448 -32 461 -66 454 -49 b 418 -6 442 -12 431 -6 b 397 -9 410 -6 405 -7 b 348 -50 376 -14 350 -14 b 356 -170 348 -91 354 -130 b 382 -213 357 -199 363 -213 z',\n    },\n    breathMarkComma: {\n      x_min: 0,\n      x_max: 148,\n      y_min: 0,\n      y_max: 275,\n      ha: 275,\n      o: 'm 120 0 b 187 78 156 20 174 48 b 213 209 206 121 213 164 b 206 294 213 238 210 265 b 140 390 200 337 171 367 b 122 396 134 395 128 396 b 68 382 105 396 85 384 b 46 379 60 382 53 382 b 0 328 12 369 0 357 b 1 311 0 323 1 317 b 30 210 4 275 22 243 b 66 167 39 179 46 167 b 94 171 73 167 82 168 b 143 180 109 174 124 180 b 160 179 148 180 154 180 b 120 66 124 145 120 107 b 120 0 120 45 121 23 z',\n    },\n    breathMarkUpbow: {\n      x_min: 0,\n      x_max: 254,\n      y_min: 0,\n      y_max: 595,\n      ha: 595,\n      o: 'm 233 0 b 256 48 251 14 253 30 b 272 183 264 92 265 138 b 311 455 289 274 295 364 b 350 716 327 541 341 628 b 366 815 354 749 366 782 b 359 857 366 829 363 842 b 327 815 334 852 330 832 b 302 674 315 769 310 721 b 248 357 288 567 269 462 b 225 226 240 314 242 268 b 210 251 212 232 213 243 b 69 721 163 408 117 564 b 32 835 58 760 53 801 b 20 851 29 841 27 851 b 14 850 19 851 16 851 b 0 828 6 847 0 838 l 0 825 b 12 765 1 804 7 785 b 194 125 73 552 132 338 b 233 0 206 84 213 42 z',\n    },\n    caesura: {\n      x_min: 0,\n      x_max: 566,\n      y_min: 0,\n      y_max: 562,\n      ha: 563,\n      o: 'm 0 76 b 49 122 24 92 37 107 b 444 613 180 287 305 455 b 528 770 484 660 518 708 b 531 792 530 778 531 785 b 524 808 531 799 530 805 b 490 792 513 815 498 802 b 390 683 456 756 420 721 b 48 262 275 543 164 400 b 0 76 0 207 7 145 z m 226 1 b 248 13 238 -4 243 7 l 353 137 b 759 638 490 302 632 464 b 814 805 795 688 819 740 b 779 786 796 805 788 796 b 628 609 724 732 678 668 b 310 242 523 485 416 363 b 217 69 265 190 217 140 b 222 30 217 58 219 45 b 222 23 222 29 220 26 b 220 12 222 20 220 16 b 226 1 220 7 222 3 z',\n    },\n    caesuraCurved: {\n      x_min: 0,\n      x_max: 386,\n      y_min: -10,\n      y_max: 584,\n      ha: 594,\n      o: 'm 180 -14 b 246 14 213 -13 230 0 b 347 144 288 52 315 99 b 526 471 420 246 488 350 b 556 671 546 537 556 603 b 543 798 556 713 553 756 b 504 837 537 822 521 828 b 490 841 500 840 494 841 b 472 832 482 841 477 838 b 406 678 436 785 406 737 b 410 638 406 665 408 652 b 425 511 419 595 425 553 b 315 186 425 395 387 287 b 180 -14 271 122 228 58 z m 14 24 b 49 39 29 24 40 32 b 120 114 76 60 99 85 b 216 276 156 166 184 223 b 317 626 281 384 317 501 b 315 664 317 639 317 651 b 301 773 314 701 311 737 b 262 808 295 795 278 808 b 245 799 256 808 249 805 b 170 641 209 750 170 706 b 171 621 170 634 170 628 b 177 511 176 585 177 549 b 114 229 177 415 160 320 b 0 26 79 161 42 95 b 14 24 6 24 10 24 z',\n    },\n    restMaxima: {\n      x_min: 0,\n      x_max: 366,\n      y_min: -255,\n      y_max: 255,\n      ha: 510,\n      o: 'm 397 -367 b 504 -343 436 -367 468 -347 b 518 -318 516 -341 518 -330 b 527 -30 518 -217 527 -117 b 526 33 527 -7 527 13 l 526 301 b 501 350 526 323 520 341 b 428 367 477 361 452 367 b 374 359 410 367 393 364 b 357 333 361 354 357 347 b 356 91 357 252 356 171 l 356 30 b 340 -307 357 -82 346 -194 b 397 -367 337 -354 350 -367 z m 46 -357 b 58 -356 49 -357 53 -357 b 154 -333 91 -351 121 -338 b 173 -305 168 -330 173 -320 l 173 302 b 132 356 173 330 157 348 b 68 364 112 363 89 364 b 3 304 19 363 1 348 l 3 4 l 0 4 b 1 -302 0 -98 0 -200 b 46 -357 1 -331 16 -357 z',\n    },\n    restDoubleWhole: {\n      x_min: 0,\n      x_max: 122,\n      y_min: 0,\n      y_max: 249,\n      ha: 249,\n      o: 'm 43 0 b 58 1 48 0 52 0 b 124 20 81 6 102 17 b 176 96 173 27 176 58 b 173 220 174 138 173 179 b 176 304 173 248 176 276 b 140 353 176 331 163 346 b 95 359 125 356 111 359 b 32 346 73 359 52 354 b 0 315 20 340 0 337 b 1 243 0 291 1 268 l 1 174 l 4 174 l 4 48 b 43 0 4 16 17 0 z',\n    },\n    restWhole: {\n      x_min: 1,\n      x_max: 500,\n      y_min: -120,\n      y_max: 14,\n      ha: 134,\n      o: 'm 356 -173 l 356 -171 l 642 -171 b 719 -115 680 -171 717 -145 b 720 -82 719 -104 720 -92 b 711 -20 720 -60 719 -40 b 672 17 704 0 694 10 b 649 20 664 20 657 20 b 605 17 634 20 621 17 b 92 19 433 17 262 17 b 29 7 69 20 49 12 b 9 -17 12 4 9 -6 b 10 -43 9 -26 10 -35 b 1 -84 10 -58 3 -72 b 76 -173 0 -147 7 -173 z',\n    },\n    restWholeLegerLine: {\n      x_min: -197,\n      x_max: 685,\n      y_min: -157,\n      y_max: 29,\n      ha: 186,\n      o: 'm 96 -226 b 167 -223 121 -226 144 -225 b 300 -222 207 -222 252 -222 l 444 -222 b 660 -217 520 -222 595 -222 b 746 -131 703 -216 746 -200 b 744 -62 746 -108 747 -85 b 743 -39 743 -53 743 -46 b 789 -14 743 -16 752 -17 b 883 -16 821 -13 851 -16 b 965 -9 910 -16 937 -14 b 986 3 972 -7 986 -10 l 986 6 b 963 35 984 17 982 32 b 887 42 937 39 913 42 b 39 27 605 42 321 33 l -76 27 b -261 20 -138 27 -200 26 b -282 14 -269 20 -279 23 b -271 -7 -287 4 -276 -1 b -209 -27 -253 -23 -230 -24 b -153 -30 -190 -30 -173 -30 b -48 -29 -118 -30 -82 -27 b 6 -32 -22 -29 -6 -27 b 1 -72 3 -43 1 -58 b 4 -167 1 -105 7 -140 b 53 -223 3 -207 14 -217 b 96 -226 68 -226 82 -226 z',\n    },\n    restHalf: {\n      x_min: 0,\n      x_max: 518,\n      y_min: 0,\n      y_max: 162,\n      ha: 162,\n      o: 'm 98 0 l 556 0 b 665 1 592 0 629 0 b 746 82 720 3 743 29 b 736 174 749 114 740 144 b 670 232 729 215 708 232 b 570 229 636 232 603 229 b 356 233 498 229 426 233 l 73 233 b 0 179 19 233 0 220 b 1 154 0 171 0 164 b 6 95 4 135 6 115 b 98 0 3 27 29 0 z',\n    },\n    restHalfLegerLine: {\n      x_min: -120,\n      x_max: 448,\n      y_min: -20,\n      y_max: 143,\n      ha: 163,\n      o: 'm 397 -29 b 482 -23 426 -29 455 -27 b 526 -24 497 -24 511 -24 b 608 -17 554 -24 582 -23 b 645 -1 622 -14 644 -17 b 615 26 648 13 629 20 b 595 32 608 29 602 30 b 526 37 572 35 549 37 b 498 36 517 37 507 37 b 471 35 487 35 478 35 b 445 53 451 35 445 39 b 449 89 445 60 446 73 l 454 117 b 373 206 456 173 428 206 b 324 204 356 206 340 206 b 209 203 287 203 248 203 b 46 193 156 203 101 202 b 16 170 32 190 19 187 b 9 112 13 151 9 131 b 14 78 9 101 10 89 b 19 59 17 71 19 63 b -4 45 19 49 12 45 l -10 45 b -150 33 -58 45 -104 46 b -173 22 -158 32 -173 33 l -173 19 b -151 -13 -170 6 -168 -10 b -117 -17 -140 -16 -128 -17 b 118 -13 -37 -17 39 -13 b 397 -29 213 -13 308 -29 z',\n    },\n    restQuarter: {\n      x_min: 0,\n      x_max: 263,\n      y_min: -415,\n      y_max: 415,\n      ha: 830,\n      o: 'm 151 -596 b 164 -563 163 -589 161 -575 b 160 -546 164 -557 161 -552 b 124 -396 148 -495 135 -446 b 122 -380 122 -390 122 -384 b 199 -255 122 -331 158 -272 b 228 -256 209 -249 217 -253 b 324 -346 274 -271 298 -310 b 353 -369 331 -356 341 -369 b 360 -367 356 -369 357 -369 b 379 -336 373 -361 379 -348 l 377 -325 b 344 -232 372 -292 366 -258 b 249 -58 301 -180 278 -117 b 242 -36 245 -49 242 -42 b 258 -7 242 -26 248 -17 b 328 78 284 20 311 45 b 354 158 344 104 354 131 b 337 216 354 177 350 196 b 213 435 294 288 249 359 b 115 575 189 487 158 536 b 78 598 105 585 92 598 b 59 592 72 598 66 596 b 39 562 45 583 39 572 b 53 527 39 550 45 539 b 168 344 98 469 125 402 b 187 307 181 328 187 317 b 153 269 187 294 176 284 b 62 213 122 252 91 235 b 40 180 48 203 40 192 b 46 158 40 173 43 166 b 99 65 60 125 79 95 b 183 -79 131 20 160 -29 b 156 -86 173 -88 164 -85 b 0 -261 58 -99 -7 -173 b 96 -557 10 -366 49 -464 b 124 -585 102 -569 109 -580 b 145 -598 132 -588 138 -598 b 151 -596 147 -598 150 -598 z',\n    },\n    rest8th: {\n      x_min: 0,\n      x_max: 289,\n      y_min: -260,\n      y_max: 261,\n      ha: 521,\n      o: 'm 164 -374 b 212 -340 190 -373 203 -357 b 276 -190 238 -292 258 -242 b 410 285 333 -36 359 128 b 416 314 413 294 416 304 l 416 321 b 393 354 415 341 410 354 b 382 353 389 354 386 354 b 292 311 347 347 315 333 b 174 225 256 276 216 251 b 157 219 168 222 163 219 b 140 228 151 219 145 222 b 131 246 134 233 131 240 b 135 262 131 252 132 256 b 147 298 141 272 147 285 b 127 367 147 323 154 354 b 94 376 114 373 102 376 b 48 336 75 376 63 363 b 3 181 20 288 12 235 b 0 150 1 170 0 160 b 109 24 0 84 35 24 b 171 36 127 24 148 27 b 289 101 213 52 248 75 b 164 -374 256 -62 193 -213 z',\n    },\n    rest16th: {\n      x_min: 0,\n      x_max: 333,\n      y_min: -328,\n      y_max: 244,\n      ha: 572,\n      o: 'm 209 -471 b 246 -458 222 -477 236 -468 b 307 -338 279 -425 300 -384 b 324 -226 312 -301 317 -262 b 428 161 350 -94 386 35 b 480 318 445 215 480 259 b 467 347 480 331 477 341 b 445 351 461 350 454 351 b 408 337 432 351 419 347 b 402 333 405 336 403 334 b 223 215 344 294 294 245 b 236 259 229 233 235 246 b 238 276 238 265 238 271 b 212 338 238 302 226 334 b 193 341 206 340 199 341 b 86 289 156 341 104 317 b 59 180 66 255 59 217 b 156 27 59 76 92 27 b 236 46 179 27 204 35 b 338 101 271 59 298 82 b 289 -49 312 49 302 0 b 196 -122 276 -99 235 -107 b 176 -114 187 -127 176 -127 l 176 -111 b 157 -53 177 -88 164 -72 b 69 -9 141 -7 101 -16 b 17 -48 43 -3 29 -27 b 0 -127 4 -73 0 -99 b 6 -186 0 -147 1 -167 b 82 -294 17 -262 37 -294 b 160 -276 102 -294 128 -289 b 219 -242 181 -268 203 -259 b 236 -230 223 -236 229 -230 b 243 -232 239 -230 240 -230 b 235 -275 248 -246 239 -261 b 202 -456 220 -334 202 -395 b 209 -471 202 -462 203 -468 z',\n    },\n    rest32nd: {\n      x_min: 0,\n      x_max: 347,\n      y_min: -498,\n      y_max: 483,\n      ha: 981,\n      o: 'm 177 -716 b 217 -690 194 -720 209 -704 b 233 -655 225 -680 230 -668 b 292 -390 253 -567 275 -480 b 361 -48 312 -275 336 -161 b 452 400 393 102 422 252 b 497 629 467 477 482 553 b 500 647 498 635 500 641 b 480 691 500 665 492 684 b 464 696 475 694 469 696 b 418 674 448 696 431 685 l 361 626 b 333 611 353 618 343 612 b 308 629 325 611 317 616 b 239 667 292 651 265 661 b 204 670 228 668 216 670 b 86 559 141 670 95 628 b 85 537 86 552 85 544 b 107 416 85 495 95 455 b 161 372 114 389 134 372 b 174 373 166 372 170 372 b 226 383 192 374 209 377 b 387 478 285 402 330 444 b 364 386 379 444 364 415 b 276 271 364 323 320 298 b 265 266 272 268 268 266 b 252 276 261 266 256 269 b 143 333 229 311 186 333 b 107 327 130 333 118 330 b 43 243 62 314 46 291 b 58 145 43 210 52 179 b 150 63 68 92 99 63 b 315 132 213 63 259 98 b 266 -58 297 63 281 4 b 207 -101 259 -91 230 -96 b 186 -66 186 -107 199 -75 b 180 -50 181 -63 183 -55 b 101 -3 160 -23 135 -3 b 9 -66 59 -3 20 -32 b 0 -118 3 -84 0 -101 b 10 -196 0 -144 6 -170 b 104 -287 20 -256 52 -287 b 137 -282 114 -287 125 -287 b 184 -269 151 -281 171 -269 b 196 -275 190 -269 193 -271 b 199 -287 197 -278 199 -282 b 184 -343 199 -304 189 -325 b 181 -348 184 -346 183 -347 b 134 -595 158 -429 131 -508 b 156 -677 134 -624 150 -648 b 177 -716 158 -693 160 -713 z',\n    },\n    rest64th: {\n      x_min: 0,\n      x_max: 428,\n      y_min: -720,\n      y_max: 474,\n      ha: 1194,\n      o: 'm 200 -1037 b 229 -1012 215 -1037 222 -1025 b 238 -984 233 -1004 236 -994 b 282 -780 248 -914 265 -848 b 386 -369 317 -644 354 -507 b 491 104 422 -212 451 -53 b 600 541 528 249 550 399 b 616 629 611 570 616 599 b 600 680 616 648 615 671 b 550 665 586 687 566 677 b 480 618 527 649 501 635 b 464 611 474 613 468 611 b 448 622 458 611 454 615 b 366 662 425 651 397 662 b 331 658 354 662 343 661 b 242 572 285 647 253 619 b 236 528 239 557 236 543 b 266 400 236 484 251 442 b 325 373 274 377 301 373 b 436 409 366 373 403 383 l 494 452 b 474 360 485 416 474 389 b 383 248 474 297 435 269 b 320 328 377 288 351 310 b 276 341 305 337 291 341 b 186 269 235 341 194 311 b 181 230 183 256 181 243 b 187 153 181 204 186 179 b 279 63 192 86 233 63 b 304 65 288 63 295 63 b 416 115 344 72 379 92 b 387 -14 406 69 397 27 b 320 -95 380 -52 369 -86 b 318 -79 320 -89 320 -84 b 223 0 305 -29 271 0 b 122 -81 171 0 135 -30 b 118 -127 120 -96 118 -112 l 118 -196 b 137 -242 118 -215 125 -229 b 209 -275 157 -266 181 -275 b 249 -269 222 -275 235 -274 b 318 -248 272 -264 294 -255 b 281 -390 315 -301 292 -344 b 276 -400 279 -393 279 -397 b 259 -420 272 -408 266 -416 b 246 -429 255 -425 251 -429 b 233 -415 242 -429 238 -426 b 176 -359 225 -389 200 -372 b 121 -346 158 -348 140 -346 b 14 -408 73 -346 27 -370 b 0 -498 4 -438 0 -468 b 6 -564 0 -520 3 -543 b 91 -635 12 -611 45 -635 b 131 -629 104 -635 117 -634 b 223 -590 163 -622 190 -603 b 166 -824 203 -671 189 -747 b 148 -912 157 -852 148 -881 b 156 -955 148 -926 150 -940 b 177 -1008 161 -972 170 -991 b 200 -1037 181 -1020 183 -1037 z',\n    },\n    rest128th: {\n      x_min: 1,\n      x_max: 491,\n      y_min: -711,\n      y_max: 719,\n      ha: 1430,\n      o: 'm 233 -1015 b 271 -956 256 -1002 266 -981 l 314 -723 b 393 -350 337 -598 366 -474 b 543 312 442 -128 492 91 b 687 841 583 490 635 665 b 707 958 698 880 707 919 b 706 986 707 968 707 976 b 688 1025 704 999 704 1024 b 670 1027 683 1025 677 1027 b 629 1007 655 1027 639 1022 b 559 945 613 981 586 968 b 541 1004 553 968 559 991 b 456 1035 516 1024 488 1035 b 419 1030 444 1035 431 1034 b 344 953 379 1018 353 995 b 340 900 341 936 340 917 b 341 847 340 881 341 864 b 380 779 340 815 354 793 b 464 763 406 765 435 762 b 592 814 510 763 549 786 b 546 660 575 757 556 710 b 480 585 537 619 517 598 b 478 599 480 590 478 595 b 386 678 472 641 428 678 b 294 612 343 678 304 651 b 279 477 282 567 278 521 b 363 395 281 428 317 395 b 380 396 369 395 374 395 b 488 436 416 403 449 419 b 384 233 469 357 468 275 b 359 291 373 252 377 276 b 282 318 337 310 310 318 b 181 264 243 318 203 298 b 154 107 153 216 154 161 b 242 6 154 42 187 6 b 278 10 253 6 265 7 b 408 88 330 22 366 55 b 387 -1 400 56 393 27 b 301 -112 379 -55 354 -94 b 289 -65 297 -95 302 -79 b 219 -32 269 -42 245 -32 b 183 -37 207 -32 196 -35 b 112 -109 144 -46 121 -71 b 105 -219 104 -145 108 -183 b 186 -315 101 -276 134 -315 b 230 -307 199 -315 215 -312 b 324 -256 264 -295 292 -275 b 180 -491 323 -383 266 -471 b 183 -459 180 -480 180 -469 b 184 -442 184 -454 184 -448 l 184 -436 b 135 -369 184 -403 170 -383 b 102 -363 125 -364 114 -363 b 29 -399 73 -363 45 -376 b 1 -556 -4 -448 6 -503 b 109 -670 -4 -625 43 -670 b 140 -667 118 -670 130 -668 b 253 -616 180 -658 213 -638 b 238 -688 248 -644 242 -665 b 192 -959 220 -779 192 -867 b 193 -992 192 -971 192 -981 b 210 -1024 194 -1014 199 -1024 b 233 -1015 216 -1024 223 -1021 z',\n    },\n    dynamicPiano: {\n      x_min: -49,\n      x_max: 327,\n      y_min: -142,\n      y_max: 515,\n      ha: 657,\n      o: 'm -56 -204 b -42 -202 -52 -204 -46 -203 b -19 -194 -35 -202 -26 -197 b 147 -138 35 -170 91 -151 b 249 -58 194 -127 223 -95 b 262 -29 255 -50 262 -39 b 258 -17 262 -24 261 -20 b 232 -7 252 -10 242 -7 b 210 -12 225 -7 217 -9 b 125 -40 184 -23 157 -30 b 183 140 153 19 171 79 b 251 167 207 144 230 153 b 469 518 383 262 480 382 b 357 687 472 626 420 687 b 315 678 344 687 330 684 b 204 600 279 664 240 634 b 210 704 206 635 209 670 b 215 721 212 710 215 716 b 206 733 215 727 212 730 b 180 742 197 736 189 742 b 164 734 176 742 170 740 b 1 575 108 684 36 645 b -7 557 -1 569 -7 563 b -6 553 -7 556 -7 554 b 7 547 -3 547 3 547 l 17 547 b 82 575 43 547 59 567 l 82 452 b 56 46 82 317 81 180 b 17 -66 49 7 46 -36 b -62 -173 -13 -99 -37 -135 b -71 -192 -66 -179 -71 -184 b -68 -199 -71 -193 -69 -196 b -56 -204 -65 -203 -60 -204 z m 196 258 b 197 266 197 261 197 264 b 200 510 200 347 199 429 b 233 543 210 521 222 533 b 281 560 249 554 266 560 b 340 503 310 560 333 540 b 344 461 343 488 344 474 b 321 323 344 413 333 369 b 268 272 315 300 295 281 b 196 258 245 265 220 261 z',\n    },\n    dynamicMezzo: {\n      x_min: -18,\n      x_max: 559,\n      y_min: -50,\n      y_max: 365,\n      ha: 415,\n      o: 'm 43 -71 b 160 19 86 -71 143 -26 b 230 264 189 99 200 184 b 282 363 243 297 259 327 b 287 320 285 347 287 333 b 284 279 287 305 285 292 l 249 -12 b 275 -43 248 -29 245 -43 b 395 45 321 -43 389 3 b 462 271 406 124 436 197 b 523 387 475 310 490 348 l 523 346 b 504 130 521 274 513 202 b 501 81 501 114 501 98 b 510 3 501 55 504 29 b 580 -72 521 -48 543 -72 b 625 -63 593 -72 608 -69 b 789 50 690 -43 744 -3 b 805 72 795 56 805 63 b 798 85 805 76 802 81 b 778 94 792 91 785 94 b 755 85 770 94 763 91 l 693 40 b 675 33 685 36 680 33 b 658 52 668 33 662 39 b 645 144 651 82 645 112 b 658 448 641 246 660 346 b 606 507 658 485 638 507 b 583 504 599 507 592 505 b 495 446 547 497 521 471 b 420 373 471 423 448 399 b 413 458 418 406 418 432 b 361 507 408 490 386 507 b 320 491 347 507 333 501 b 160 307 256 444 207 382 l 160 337 b 174 488 160 387 174 438 b 156 521 174 501 173 513 b 137 526 148 524 143 526 b 109 513 127 526 118 520 b -16 399 66 477 23 439 b -26 383 -20 395 -26 389 l -26 379 b -14 370 -24 372 -20 370 b -6 372 -12 370 -9 372 b 19 376 4 374 12 376 b 36 359 32 376 36 370 b 30 330 36 350 35 341 l 30 323 b 9 -35 23 203 17 85 b 43 -71 6 -65 19 -71 z',\n    },\n    dynamicForte: {\n      x_min: -144,\n      x_max: 311,\n      y_min: -115,\n      y_max: 504,\n      ha: 619,\n      o: 'm -101 -166 b 173 76 7 -153 150 -30 b 206 344 192 164 202 253 b 268 338 226 343 246 341 b 384 395 317 333 353 361 b 397 419 393 405 397 412 b 367 442 397 429 387 436 b 350 444 361 444 356 444 b 206 455 302 449 255 454 l 206 474 b 202 540 204 495 202 518 b 209 593 202 557 203 576 b 236 624 215 613 225 624 b 265 612 245 624 253 619 b 308 552 287 596 302 577 b 336 533 312 534 323 533 b 448 611 366 533 444 583 b 399 696 452 648 423 671 b 382 706 395 700 387 703 b 308 726 357 720 333 726 b 207 684 272 726 239 711 b 60 455 135 622 60 560 l 10 455 b -23 448 -1 455 -13 454 b -102 372 -55 426 -76 397 b -109 357 -108 367 -109 361 b -95 347 -109 353 -105 348 b -63 346 -84 346 -73 346 b 0 344 -43 344 -22 344 l 63 344 b 53 186 63 291 59 239 b 23 0 46 124 42 60 b -35 -60 10 -42 -6 -60 b -73 -52 -45 -60 -58 -58 b -91 -48 -79 -49 -85 -48 b -109 -53 -96 -48 -102 -49 b -199 -124 -143 -72 -168 -99 b -207 -137 -203 -128 -207 -132 b -194 -148 -207 -141 -203 -145 b -101 -166 -164 -160 -132 -168 z',\n    },\n    dynamicRinforzando: {\n      x_min: -75,\n      x_max: 322,\n      y_min: -90,\n      y_max: 325,\n      ha: 415,\n      o: 'm 23 -130 b 40 -125 27 -130 33 -128 b 128 -9 81 -114 125 -53 b 145 200 132 62 141 130 b 148 238 147 212 148 225 b 308 321 184 291 245 321 b 363 314 325 321 344 318 b 377 310 369 312 373 310 b 384 311 380 310 382 310 b 464 415 410 317 464 389 b 446 433 465 429 455 429 b 390 445 428 441 409 445 b 305 429 361 445 334 438 b 167 346 252 413 202 393 b 153 325 163 338 158 333 b 148 438 154 363 151 399 b 121 468 147 456 134 468 b 101 458 115 468 108 465 b -63 310 46 409 -16 367 b -108 240 -78 289 -98 271 b 32 330 -50 256 -13 297 b 37 304 37 320 37 312 l 37 292 b 10 -101 27 161 20 30 b 23 -130 9 -120 12 -130 z',\n    },\n    dynamicSforzando: {\n      x_min: 0,\n      x_max: 296,\n      y_min: 0,\n      y_max: 379,\n      ha: 379,\n      o: 'm 151 0 b 174 1 160 0 166 0 b 392 158 272 14 346 71 b 405 207 400 174 405 190 b 359 287 405 236 389 265 b 261 325 328 308 294 315 b 168 413 216 340 181 366 b 166 426 167 418 166 423 b 176 438 166 432 167 436 b 199 441 183 441 190 441 b 310 393 238 441 295 422 b 334 370 317 376 325 370 b 363 386 343 370 353 379 b 422 445 386 402 408 420 b 426 458 425 449 426 454 b 422 469 426 462 425 465 b 274 546 395 518 333 546 b 161 503 232 546 190 531 b 86 405 132 472 108 439 b 71 347 75 387 71 367 b 112 256 71 312 85 279 b 209 215 141 232 176 226 b 284 168 238 206 266 197 b 300 131 291 157 300 144 b 298 120 300 127 298 122 b 278 107 294 109 285 108 b 262 108 271 107 266 108 l 259 108 b 114 157 200 107 156 125 b 96 181 104 163 96 170 l 96 184 b 102 202 96 190 102 196 b 96 209 102 204 101 207 b 63 194 82 215 72 204 b 7 109 42 168 26 138 b 0 86 3 101 0 94 b 13 60 0 78 4 68 b 151 0 53 23 101 0 z',\n    },\n    dynamicZ: {\n      x_min: -43,\n      x_max: 331,\n      y_min: 0,\n      y_max: 328,\n      ha: 328,\n      o: 'm -45 0 b -6 16 -32 0 -17 10 b 3 20 -3 16 0 19 b 144 60 49 48 96 60 b 284 22 190 60 238 46 b 348 4 305 10 327 4 b 461 75 393 4 435 30 b 468 91 464 81 467 86 b 456 104 468 95 465 99 b 287 173 402 131 348 167 b 239 176 271 174 255 176 b 168 174 217 176 194 174 b 367 340 236 236 298 294 b 459 423 402 363 432 392 b 477 454 467 431 475 442 b 474 462 477 456 475 459 b 454 472 469 469 462 472 b 432 468 446 472 439 469 b 356 448 406 461 380 455 b 210 422 307 433 258 422 b 109 442 177 422 144 428 b 94 445 104 444 99 445 b 69 433 85 445 76 442 b 27 390 56 419 39 406 b -9 343 16 373 -17 357 b 63 311 3 320 36 314 l 78 311 b 132 307 95 308 114 307 b 240 314 168 307 203 311 l 193 271 b -37 50 117 196 19 145 b -59 7 -46 36 -69 20 b -45 0 -55 3 -50 0 z',\n    },\n    ornamentTrill: {\n      x_min: 1,\n      x_max: 551,\n      y_min: -18,\n      y_max: 539,\n      ha: 557,\n      o: 'm 321 612 b 190 602 278 605 235 605 l 190 638 b 187 693 190 652 190 667 b 161 776 184 717 193 776 b 137 747 150 776 137 766 b 130 654 135 716 131 685 l 130 596 l 52 588 b 4 539 23 585 7 570 b 1 477 3 530 1 500 b 3 448 1 461 3 448 l 3 452 b 53 432 6 436 23 432 b 134 435 75 432 102 433 b 151 117 138 328 147 223 b 170 13 153 82 157 46 b 209 -26 179 -10 193 -26 b 222 -22 213 -26 217 -24 b 269 -17 233 -16 253 -27 b 343 135 325 19 346 66 b 343 158 343 147 344 147 b 323 192 341 171 337 187 b 291 176 311 194 300 184 l 264 148 b 229 131 261 145 238 131 b 212 170 209 131 213 154 b 194 438 203 259 199 348 l 272 442 b 284 452 276 441 279 441 b 305 462 287 461 295 462 l 312 462 b 346 477 325 462 340 464 b 366 560 357 503 366 531 b 321 612 366 598 356 618 z m 759 588 b 711 560 749 592 733 570 b 588 500 671 541 631 521 b 583 533 586 514 586 524 b 560 576 577 549 577 572 b 517 550 541 582 528 564 b 416 423 482 508 452 462 b 382 353 392 397 384 370 b 387 305 380 341 386 318 b 392 275 389 295 392 285 b 409 243 393 262 393 243 b 431 262 419 243 425 255 b 521 373 459 298 488 333 b 523 354 521 366 523 360 b 520 337 523 346 521 340 b 508 295 513 323 508 310 b 530 102 508 279 524 122 b 549 66 533 88 530 66 b 577 99 563 66 572 84 b 580 131 580 109 580 121 l 580 302 b 600 347 580 318 582 337 b 701 392 632 364 665 384 b 793 518 785 409 793 435 b 759 588 793 559 785 576 z',\n    },\n    ornamentTurn: {\n      x_min: 0,\n      x_max: 574,\n      y_min: 0,\n      y_max: 312,\n      ha: 312,\n      o: 'm 651 0 b 816 132 727 0 796 46 b 827 223 822 163 827 193 b 808 340 827 262 821 301 b 665 449 785 408 729 449 b 636 446 655 449 647 448 b 589 384 600 441 586 422 l 602 300 b 611 285 603 291 605 285 b 621 288 613 285 616 287 b 655 295 632 294 644 295 b 711 284 674 295 693 289 b 773 209 740 275 773 232 b 697 156 773 184 734 160 b 664 154 685 154 675 154 b 579 168 635 154 608 158 b 455 242 533 186 495 213 b 261 400 387 291 331 354 b 160 432 225 422 190 432 b 20 328 98 432 49 392 b 0 229 6 295 0 262 b 30 71 0 176 14 122 b 144 3 43 29 96 3 b 168 6 153 3 160 4 b 248 122 233 20 248 39 b 246 147 248 124 248 135 b 226 177 243 164 239 177 b 206 170 220 177 215 174 b 144 154 186 158 166 154 b 79 170 122 154 101 160 b 53 202 62 179 53 189 b 60 228 53 209 55 217 b 161 281 81 261 120 281 b 183 279 168 281 176 281 b 325 190 243 269 284 229 b 572 16 402 124 475 53 b 651 0 598 6 625 0 z',\n    },\n    ornamentTurnSlash: {\n      x_min: 0,\n      x_max: 574,\n      y_min: -106,\n      y_max: 405,\n      ha: 511,\n      o: 'm 441 -153 b 456 -60 455 -118 456 -89 b 455 81 455 -14 455 33 b 572 14 491 55 530 30 b 651 -1 598 4 625 -1 b 816 131 727 -1 796 45 b 827 222 822 161 827 192 b 808 338 827 261 821 300 b 665 448 785 406 729 448 b 636 445 655 448 647 446 b 589 383 600 439 586 420 l 602 298 b 611 284 603 289 605 284 b 621 287 613 284 616 285 b 655 294 632 292 644 294 b 711 282 674 294 693 288 b 773 207 740 274 773 230 b 697 154 773 183 734 158 b 664 153 685 153 675 153 b 579 167 635 153 608 157 b 455 240 533 183 495 212 b 454 242 455 240 455 242 l 454 337 b 452 488 454 386 452 439 b 433 570 452 517 451 546 b 425 583 431 575 431 583 l 422 583 b 403 566 415 582 408 573 b 402 546 400 560 402 553 l 397 287 b 261 399 353 325 310 366 b 160 431 225 420 190 431 b 20 327 98 431 48 390 b 0 228 6 294 0 261 b 30 69 0 174 14 121 b 144 1 43 27 96 1 b 168 4 153 1 160 3 b 248 121 233 19 248 37 b 246 145 248 122 248 134 b 226 176 243 163 239 176 b 206 168 220 176 215 173 b 144 153 186 157 166 153 b 79 168 122 153 101 158 b 53 200 62 177 53 187 b 60 226 53 207 55 216 b 161 279 79 259 120 279 b 183 278 168 279 176 279 b 325 189 243 266 282 226 b 395 130 348 168 372 148 b 393 71 393 109 393 89 b 441 -153 390 -6 402 -78 z',\n    },\n    ornamentMordent: {\n      x_min: 0,\n      x_max: 700,\n      y_min: 0,\n      y_max: 497,\n      ha: 497,\n      o: 'm 513 0 b 528 39 526 14 527 27 b 531 72 531 50 531 60 b 528 138 531 94 528 117 l 528 347 b 552 359 537 354 544 359 b 579 338 560 359 569 353 b 674 217 609 297 639 255 b 719 190 690 200 704 190 b 759 215 732 190 744 197 b 940 395 815 279 877 337 b 1001 490 968 422 986 455 b 1008 513 1004 495 1008 505 b 1002 524 1008 517 1007 521 b 968 516 994 530 978 524 b 960 508 965 513 963 510 b 798 356 900 464 848 410 b 778 341 791 347 783 341 b 757 354 772 341 765 346 b 661 475 720 392 690 432 b 611 517 644 504 629 517 b 563 498 598 517 583 511 b 527 471 550 490 539 481 l 527 570 b 492 716 526 619 523 671 b 472 677 480 704 472 694 b 465 399 474 585 468 491 b 439 366 456 387 448 376 b 384 320 415 336 399 320 b 330 367 369 320 354 336 b 325 376 328 369 327 373 b 226 490 291 413 265 456 b 189 505 213 500 202 505 b 157 491 177 505 167 500 b 0 229 75 420 0 346 b 1 202 0 220 0 212 b 22 215 12 203 16 209 b 124 327 55 252 89 289 b 147 343 132 337 140 343 b 171 323 156 343 164 336 b 266 197 196 276 232 236 b 337 157 291 170 314 157 b 410 207 361 157 386 174 b 461 274 428 229 444 252 b 462 166 461 238 461 202 b 513 0 465 108 487 55 z',\n    },\n    ornamentShortTrill: {\n      x_min: 0,\n      x_max: 747,\n      y_min: 0,\n      y_max: 243,\n      ha: 243,\n      o: 'm 379 0 b 428 14 395 0 410 4 b 474 56 445 26 461 39 b 552 157 500 89 526 122 b 566 168 556 163 560 168 b 575 157 569 168 572 166 b 664 36 592 107 628 72 b 733 1 685 13 710 1 b 802 35 757 1 780 13 b 1007 249 871 105 940 177 b 1067 324 1028 272 1054 295 b 1076 340 1068 330 1076 334 b 1073 346 1076 341 1076 343 b 1057 350 1068 348 1063 350 b 1047 347 1053 350 1050 350 b 1001 310 1031 336 1015 324 l 857 157 b 844 143 852 153 848 143 b 835 150 841 143 838 144 b 757 242 815 186 780 209 b 685 298 739 268 713 284 b 641 310 670 305 655 310 b 590 288 625 310 608 304 b 497 179 554 256 527 215 b 480 164 490 170 485 164 b 462 179 474 164 469 168 b 372 295 436 220 405 258 b 278 344 346 324 312 344 b 199 310 252 344 226 334 b 92 196 161 274 128 233 b 0 24 46 148 23 89 b 42 48 22 27 32 37 b 156 168 84 85 114 132 b 196 192 174 184 186 192 b 228 158 206 192 215 181 b 312 36 252 114 282 75 b 379 0 331 12 354 0 z',\n    },\n    ornamentTremblement: {\n      x_min: 0,\n      x_max: 982,\n      y_min: 0,\n      y_max: 224,\n      ha: 224,\n      o: 'm 0 0 b 63 36 30 12 48 23 b 157 124 94 66 125 94 b 177 135 164 131 170 135 b 196 122 183 135 189 131 b 268 40 217 94 245 68 b 323 6 288 16 304 6 b 369 20 336 6 350 10 b 412 53 384 29 399 40 b 501 145 442 84 472 114 b 523 158 508 154 516 158 b 543 145 528 158 536 154 b 641 45 576 112 608 78 b 698 17 658 27 677 17 b 729 23 708 17 719 20 b 804 65 756 32 780 46 b 904 154 837 95 871 124 b 920 163 910 160 916 163 b 936 153 924 163 930 160 b 1024 60 965 121 996 92 b 1112 13 1053 29 1080 13 b 1184 39 1135 13 1158 22 b 1359 194 1248 84 1305 138 b 1413 301 1388 223 1403 261 b 1404 323 1417 315 1413 323 b 1391 320 1400 323 1395 321 b 1344 294 1375 314 1358 307 b 1224 186 1305 258 1269 216 b 1194 173 1212 179 1202 173 b 1165 193 1184 173 1175 179 b 1096 271 1145 222 1122 248 b 1001 318 1061 302 1031 318 b 903 268 969 318 937 301 b 806 186 871 239 841 210 b 782 174 796 179 789 174 b 756 193 773 174 765 180 b 652 291 729 232 693 266 b 596 308 634 302 615 308 b 530 278 573 308 552 298 l 415 168 b 393 157 408 161 400 157 b 373 171 387 157 380 161 b 305 245 353 197 330 222 b 248 276 285 266 266 278 b 189 245 229 276 210 266 b 81 144 156 209 120 174 b 0 0 33 109 26 56 z',\n    },\n    ornamentPrecompAppoggTrill: {\n      x_min: 0,\n      x_max: 1066,\n      y_min: -50,\n      y_max: 533,\n      ha: 583,\n      o: 'm 187 -46 b 213 -14 197 -37 204 -26 b 285 151 251 36 266 94 b 304 189 294 177 297 189 b 337 168 311 189 320 181 b 458 33 386 131 415 76 b 495 12 472 19 484 12 b 531 40 508 12 518 22 b 580 168 557 79 569 124 b 622 235 592 213 603 235 b 683 194 636 235 655 222 b 838 26 737 140 791 86 b 919 -33 860 -1 881 -39 b 984 53 960 -27 971 19 b 1022 156 998 86 1008 122 b 1054 190 1032 179 1041 190 b 1089 167 1063 190 1074 183 b 1208 32 1129 122 1171 78 b 1244 10 1221 17 1231 10 b 1273 22 1253 10 1263 14 b 1496 206 1352 78 1427 137 b 1535 310 1526 236 1535 272 b 1531 359 1535 325 1534 343 b 1496 343 1515 360 1506 351 l 1309 192 b 1269 167 1289 176 1279 167 b 1234 199 1260 167 1251 177 b 1122 324 1200 243 1168 289 b 1074 344 1106 337 1089 344 b 1014 301 1051 344 1030 328 b 952 144 985 252 971 197 b 933 121 946 128 940 121 b 910 137 927 121 920 125 b 850 210 888 161 870 186 b 687 369 799 266 750 325 b 631 390 665 383 647 390 b 567 327 602 390 580 369 b 527 199 554 284 543 242 b 508 168 520 179 514 168 b 482 192 503 168 495 177 b 353 328 444 240 405 292 b 312 343 338 338 324 343 b 266 297 292 343 276 327 b 204 125 248 239 232 180 b 143 79 193 102 173 79 b 92 122 117 79 105 102 b 81 154 86 131 84 143 b 48 423 59 242 50 333 b 45 544 46 464 45 504 b 53 730 45 606 48 668 b 40 768 55 744 52 766 b 13 730 19 770 14 747 b 0 514 7 658 -1 586 b 26 122 3 383 6 252 b 75 -36 35 66 40 10 b 134 -72 92 -59 112 -72 b 187 -46 151 -72 170 -63 z',\n    },\n    ornamentPrecompSlideTrillDAnglebert: {\n      x_min: 0,\n      x_max: 1088,\n      y_min: -380,\n      y_max: 252,\n      ha: 632,\n      o: 'm 560 -539 b 439 -481 527 -497 484 -485 b 354 -461 409 -478 380 -477 b 131 -154 236 -389 161 -285 b 124 -98 127 -135 124 -117 b 196 55 124 -40 148 10 b 308 99 230 86 268 99 b 399 81 337 99 367 92 b 514 22 441 66 477 43 b 619 -30 567 -9 590 -30 b 719 17 642 -30 670 -16 b 861 131 769 52 818 88 b 899 150 874 144 887 150 b 936 117 913 150 926 138 b 965 43 948 94 956 68 b 1007 -1 973 24 978 -1 b 1048 30 1025 -1 1037 16 b 1070 65 1057 40 1064 52 b 1110 148 1084 92 1096 121 b 1145 190 1120 164 1120 190 b 1191 153 1169 192 1179 168 b 1256 29 1218 115 1231 68 b 1292 1 1267 10 1277 1 b 1320 10 1300 1 1309 4 b 1369 48 1339 19 1355 33 b 1515 196 1418 96 1464 148 b 1567 343 1558 238 1567 287 b 1555 363 1565 357 1562 363 b 1539 356 1551 363 1547 360 b 1433 268 1502 330 1466 301 b 1335 171 1401 236 1374 199 b 1310 163 1325 166 1318 163 b 1286 183 1302 163 1293 168 b 1218 311 1264 226 1247 272 b 1164 351 1200 337 1182 351 b 1110 308 1146 351 1128 337 b 1031 176 1084 265 1058 219 b 1015 161 1025 166 1021 161 b 999 179 1009 161 1005 167 b 955 279 985 213 973 248 b 913 307 943 300 930 307 b 887 302 904 307 896 305 b 852 281 874 298 863 291 b 693 167 804 236 747 204 b 612 140 667 150 639 140 b 549 157 592 140 570 145 b 403 220 503 181 452 202 b 271 248 360 236 315 248 b 179 229 239 248 209 242 b 0 -29 65 180 0 85 b 9 -104 0 -53 3 -78 b 397 -526 56 -317 183 -464 b 505 -547 432 -536 468 -547 b 560 -539 524 -547 541 -544 z',\n    },\n    ornamentPrecompSlideTrillBach: {\n      x_min: 0,\n      x_max: 1185,\n      y_min: -380,\n      y_max: 465,\n      ha: 845,\n      o: 'm 624 -544 b 642 -528 638 -543 642 -537 b 639 -514 642 -524 642 -520 b 590 -444 629 -487 609 -467 b 523 -413 573 -422 553 -410 b 498 -415 514 -415 507 -415 b 399 -389 464 -415 431 -405 b 89 -157 281 -330 176 -255 b 72 -117 78 -144 72 -131 b 73 -101 72 -111 72 -107 b 187 186 91 3 147 91 b 246 230 200 216 222 230 b 300 209 262 230 281 223 b 456 48 359 163 403 101 b 540 -10 494 10 518 -10 b 625 59 566 -10 589 13 b 690 148 648 88 668 118 b 711 167 697 160 704 167 b 733 153 719 167 724 163 b 844 14 769 105 808 60 b 903 -42 873 -23 886 -42 b 973 -1 919 -42 937 -27 b 1008 33 986 7 996 20 b 1048 81 1021 48 1035 65 b 1050 37 1048 66 1050 52 b 1047 -24 1050 17 1048 -3 b 1038 -275 1038 -108 1040 -192 l 1037 -289 b 1045 -302 1037 -295 1038 -301 b 1068 -284 1056 -304 1064 -292 b 1084 -242 1076 -271 1081 -256 b 1099 -109 1096 -199 1099 -154 b 1106 158 1099 -19 1106 71 b 1128 187 1113 167 1120 177 b 1168 223 1143 212 1155 223 b 1210 193 1179 223 1191 213 b 1220 183 1214 190 1215 186 b 1329 36 1261 138 1292 84 b 1374 7 1345 16 1358 7 b 1411 20 1384 7 1395 12 b 1479 84 1437 37 1459 59 b 1610 235 1521 135 1564 186 b 1706 403 1655 282 1695 334 b 1614 346 1663 400 1637 373 b 1464 170 1564 287 1515 228 b 1440 150 1453 156 1447 150 b 1414 173 1433 150 1426 158 b 1283 336 1371 228 1333 288 b 1220 366 1261 356 1240 366 b 1148 318 1194 366 1169 350 b 1103 255 1133 297 1119 275 b 1097 301 1102 271 1100 285 b 1099 334 1099 312 1099 324 b 1092 428 1099 367 1094 397 b 1071 647 1087 501 1079 575 b 1058 670 1071 657 1071 670 b 1035 648 1047 670 1038 661 b 1018 516 1024 605 1015 560 b 1041 203 1025 412 1037 307 b 1043 180 1041 196 1043 187 b 992 127 1027 161 1009 143 b 965 111 981 117 972 111 b 936 132 955 111 946 120 b 829 268 900 179 867 225 b 760 317 801 301 780 317 b 691 258 739 317 719 297 b 605 147 664 219 641 177 b 589 138 599 141 593 138 b 572 148 583 138 579 141 b 415 317 520 206 467 261 b 327 372 390 343 366 366 b 300 373 317 373 308 373 b 154 295 239 373 190 348 b 55 138 120 243 85 192 b 0 -53 22 79 0 13 b 160 -317 0 -156 49 -252 b 209 -354 177 -327 192 -343 b 510 -531 305 -419 397 -495 b 593 -547 537 -540 564 -547 b 624 -544 603 -547 613 -546 z',\n    },\n    ornamentPrecompTrillSuffixDandrieu: {\n      x_min: 0,\n      x_max: 1003,\n      y_min: -20,\n      y_max: 521,\n      ha: 541,\n      o: 'm 791 -16 b 844 33 812 -3 829 14 b 981 271 900 107 937 190 b 994 288 984 278 985 288 b 1009 269 1004 288 1007 278 b 1077 112 1034 217 1051 163 b 1158 43 1103 62 1129 43 b 1231 69 1179 43 1204 55 b 1348 189 1280 98 1315 143 b 1444 451 1407 271 1444 357 b 1431 547 1444 482 1440 514 b 1188 750 1401 665 1299 750 b 1158 747 1178 750 1168 749 b 1079 684 1119 742 1089 727 b 1063 632 1076 665 1071 648 b 1056 609 1058 622 1056 615 b 1071 599 1056 602 1060 599 b 1086 600 1076 599 1080 600 b 1130 605 1102 603 1116 605 b 1244 569 1171 605 1210 595 b 1349 346 1322 511 1349 433 b 1348 312 1349 334 1349 324 b 1289 197 1345 266 1325 228 b 1238 174 1270 181 1253 174 b 1188 215 1220 174 1202 187 b 1145 308 1172 245 1159 276 b 1096 413 1129 343 1120 382 b 1053 438 1084 431 1068 438 b 1011 413 1038 438 1022 431 b 955 324 989 384 971 354 b 850 127 920 258 886 192 b 838 112 847 121 842 112 b 824 128 828 109 825 121 b 802 193 815 150 809 171 b 730 400 779 264 766 337 b 688 431 719 420 703 431 b 647 403 674 431 660 422 b 606 338 632 383 619 361 b 513 167 575 282 546 223 b 480 122 503 150 498 122 b 452 171 459 122 459 153 b 420 255 442 199 432 228 b 337 408 399 308 380 364 b 276 436 317 428 297 436 b 215 397 253 436 230 423 b 23 72 148 289 81 184 b 0 29 17 59 0 40 b 7 17 0 23 1 20 b 59 58 26 7 46 39 b 190 276 111 127 143 206 b 216 301 202 292 207 301 b 245 279 223 301 232 294 b 311 166 278 248 292 206 b 367 16 331 117 346 65 b 402 -19 377 -7 387 -19 b 438 -4 412 -19 423 -13 b 518 88 474 17 495 55 b 628 284 562 150 592 216 b 657 223 648 266 651 243 b 717 13 677 154 696 84 b 755 -29 726 -16 737 -29 b 791 -16 765 -29 776 -24 z',\n    },\n    ornamentPrecompDoubleCadenceUpperPrefix: {\n      x_min: 0,\n      x_max: 1246,\n      y_min: -30,\n      y_max: 296,\n      ha: 326,\n      o: 'm 360 -43 b 559 59 445 -43 503 7 b 698 236 615 111 652 179 b 714 248 704 243 710 248 b 727 235 719 248 721 243 l 848 42 b 883 12 860 22 870 12 b 917 32 891 12 903 19 b 946 62 927 42 939 50 b 1037 192 972 108 1009 147 b 1057 210 1044 204 1051 210 b 1076 190 1063 210 1068 203 l 1176 12 b 1215 -19 1188 -9 1201 -19 b 1250 -6 1225 -19 1237 -14 b 1284 27 1264 3 1274 16 b 1380 190 1323 78 1351 135 b 1395 210 1384 197 1385 210 b 1413 190 1405 210 1410 197 b 1508 40 1436 134 1467 85 b 1564 3 1529 14 1547 3 b 1617 32 1580 3 1597 12 b 1767 238 1678 92 1719 167 b 1794 310 1781 259 1791 282 b 1752 294 1776 317 1764 304 b 1656 164 1711 258 1689 206 b 1629 144 1646 151 1637 144 b 1603 161 1620 144 1613 150 b 1502 315 1562 207 1525 258 b 1452 357 1490 344 1470 357 b 1397 320 1431 357 1411 344 b 1316 170 1368 271 1345 219 b 1280 127 1306 154 1303 127 b 1244 171 1256 127 1254 154 b 1145 337 1210 226 1179 282 b 1110 363 1135 354 1122 363 b 1070 338 1097 363 1084 354 b 1050 311 1063 330 1057 320 b 959 181 1017 271 992 223 b 939 167 950 173 945 167 b 920 184 933 167 927 173 b 818 343 887 238 852 291 b 759 395 795 377 778 395 b 701 344 742 395 724 377 b 698 338 700 341 700 340 b 544 154 652 272 605 207 b 412 98 501 117 458 98 b 304 130 377 98 341 108 b 95 373 204 187 144 275 b 58 426 85 393 82 428 b 19 366 26 426 26 389 b 0 307 13 346 0 327 b 4 287 0 300 1 294 b 174 36 49 194 91 102 b 360 -43 230 -9 289 -43 z',\n    },\n    ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n      x_min: 0,\n      x_max: 1226,\n      y_min: -237,\n      y_max: 436,\n      ha: 673,\n      o: 'm 1279 -341 b 1293 -252 1293 -307 1295 -278 b 1277 36 1287 -156 1282 -59 l 1273 118 b 1318 176 1289 137 1303 157 b 1349 203 1332 193 1342 203 b 1378 168 1359 203 1367 192 b 1456 35 1401 122 1428 78 b 1511 -12 1476 3 1493 -12 b 1568 23 1526 -12 1544 0 b 1597 53 1578 32 1588 42 b 1705 186 1629 101 1669 143 b 1761 284 1728 216 1751 246 b 1765 300 1763 288 1765 295 b 1763 307 1765 302 1765 305 b 1737 302 1754 311 1744 308 b 1718 287 1729 298 1725 292 b 1598 145 1673 245 1637 194 b 1578 130 1590 135 1584 130 b 1557 147 1571 130 1565 135 b 1447 321 1516 202 1488 265 b 1403 351 1433 341 1417 351 b 1358 323 1388 351 1372 341 b 1269 209 1329 285 1299 248 b 1254 521 1264 314 1259 418 b 1228 616 1253 554 1247 588 b 1218 628 1224 621 1223 628 l 1215 628 b 1201 613 1210 626 1202 619 b 1200 600 1200 609 1200 605 l 1200 586 b 1211 348 1204 507 1207 428 b 1217 166 1214 288 1215 226 b 1202 181 1212 168 1208 174 b 1094 334 1168 233 1130 284 b 1048 366 1079 356 1064 366 b 1004 331 1034 366 1018 354 b 904 154 969 275 930 220 b 873 202 887 171 880 187 b 778 356 845 256 819 311 b 737 379 763 372 750 379 b 698 353 724 379 711 370 l 621 232 b 415 114 570 154 495 114 b 302 138 377 114 340 121 b 73 400 187 192 117 284 b 55 420 69 415 62 420 b 42 410 50 420 45 416 b 0 292 23 373 0 334 b 4 262 0 282 1 272 b 168 39 32 168 92 99 b 359 -26 225 -6 292 -26 b 585 76 446 -26 530 10 b 668 202 616 115 641 160 b 693 228 680 219 687 228 b 720 203 700 228 707 219 b 801 63 752 160 775 111 b 844 7 812 42 818 7 b 910 66 877 6 894 39 b 923 94 916 75 919 85 b 995 219 945 137 968 179 b 1025 184 1009 210 1017 197 b 1119 56 1054 141 1087 98 b 1166 20 1138 32 1152 20 b 1215 50 1181 20 1195 30 b 1221 56 1217 52 1218 55 b 1228 -163 1223 -17 1225 -89 b 1279 -341 1231 -223 1251 -278 z',\n    },\n    ornamentPrecompTrillLowerSuffix: {\n      x_min: 0,\n      x_max: 833,\n      y_min: -309,\n      y_max: 319,\n      ha: 628,\n      o: 'm 778 -444 b 801 -445 785 -444 793 -445 b 1037 -338 894 -445 969 -397 b 1200 37 1149 -240 1200 -109 b 1084 406 1200 171 1172 300 b 1024 444 1064 431 1043 444 b 960 390 999 444 978 426 b 841 163 923 314 886 236 b 812 128 832 150 827 128 b 786 167 796 130 793 153 b 660 418 744 251 716 341 b 599 459 639 445 619 459 b 541 410 577 459 557 444 b 439 197 507 340 474 269 b 422 179 435 190 435 179 b 338 393 392 251 379 328 b 275 439 320 423 298 439 b 212 396 253 439 230 425 b 71 219 170 333 128 268 b 0 45 17 173 16 112 b 68 98 32 62 50 78 b 194 264 112 150 153 209 b 230 292 209 282 219 292 b 264 261 240 292 251 282 b 274 242 268 255 269 248 b 346 46 304 179 325 112 b 376 10 351 32 354 10 b 412 35 392 10 403 22 b 452 107 429 56 441 82 b 541 291 481 168 511 230 b 556 307 547 302 552 307 b 573 295 562 307 567 302 b 624 217 595 272 611 246 b 721 1 657 145 685 72 b 755 -27 732 -19 742 -27 b 786 -16 765 -27 775 -24 b 857 73 819 7 840 39 b 952 256 887 134 920 194 b 978 289 963 279 969 289 b 1009 262 985 289 994 281 b 1030 235 1017 253 1024 245 b 1110 -4 1071 161 1099 81 b 1116 -68 1113 -26 1116 -48 b 1009 -243 1116 -140 1090 -200 b 848 -291 956 -272 901 -291 b 730 -261 809 -291 770 -282 b 696 -248 714 -252 703 -248 b 671 -284 684 -248 678 -258 l 662 -312 b 657 -357 658 -330 657 -344 b 744 -439 657 -403 683 -425 z',\n    },\n    brassScoop: {\n      x_min: 0,\n      x_max: 312,\n      y_min: -390,\n      y_max: 28,\n      ha: 418,\n      o: 'm 0 -562 b 393 -256 171 -504 307 -412 b 449 -39 431 -189 449 -115 b 448 -1 449 -26 449 -14 b 433 40 446 14 448 40 b 408 -3 410 40 412 14 b 396 -66 403 -23 402 -46 b 45 -397 346 -243 209 -337 b 0 -451 13 -409 1 -423 b 0 -562 -1 -485 0 -520 z',\n    },\n    brassDoitMedium: {\n      x_min: 0,\n      x_max: 476,\n      y_min: -50,\n      y_max: 333,\n      ha: 383,\n      o: 'm 16 -72 b 27 -71 19 -72 23 -72 b 215 -33 89 -56 153 -48 b 521 114 327 -7 435 35 b 685 432 615 199 691 295 b 670 480 684 449 688 475 b 642 441 654 482 648 456 b 403 183 599 321 513 240 b 79 89 301 130 192 105 b 0 -1 -12 76 0 76 b 0 -50 0 -17 1 -33 b 16 -72 0 -65 3 -72 z',\n    },\n    brassFallLipShort: {\n      x_min: 0,\n      x_max: 298,\n      y_min: -344,\n      y_max: 65,\n      ha: 409,\n      o: 'm 396 -495 b 420 -461 412 -487 418 -474 b 429 -382 428 -435 429 -409 b 426 -330 429 -364 428 -347 b 285 -6 410 -209 356 -104 b 98 94 239 59 173 94 b 39 86 79 94 58 92 b 0 49 20 81 0 73 l 0 -52 b 10 -69 0 -62 1 -69 b 20 -68 13 -69 16 -69 b 88 -56 45 -59 66 -56 b 261 -160 156 -56 213 -95 b 396 -495 333 -259 382 -369 z',\n    },\n    brassLiftMedium: {\n      x_min: 0,\n      x_max: 807,\n      y_min: 0,\n      y_max: 838,\n      ha: 838,\n      o: 'm 50 0 b 55 1 52 0 53 0 b 58 23 65 7 59 16 b 55 58 56 36 55 48 b 130 117 55 99 75 112 b 220 213 202 121 220 141 b 315 308 220 289 238 308 l 336 308 b 408 380 393 310 406 321 b 461 452 409 438 416 452 b 485 451 468 452 477 451 b 569 510 531 448 556 464 b 573 543 572 520 572 531 b 657 619 580 605 595 618 b 698 621 670 619 684 619 b 788 700 749 625 778 649 b 798 778 792 726 793 752 b 873 857 806 841 809 845 b 985 950 927 867 973 887 b 1084 1047 1002 1035 1004 1034 b 1162 1128 1133 1056 1162 1087 b 1146 1182 1162 1145 1158 1164 b 1125 1207 1140 1191 1136 1207 l 1122 1207 b 1110 1191 1113 1205 1110 1198 b 1112 1174 1110 1185 1112 1178 b 1048 1110 1109 1126 1096 1113 b 1028 1109 1043 1110 1035 1109 b 939 1022 969 1102 948 1081 b 845 922 929 949 917 936 b 746 812 773 909 753 886 b 744 780 744 802 744 791 b 635 681 737 700 717 683 b 524 583 553 680 536 665 b 439 510 514 520 503 510 b 357 431 377 510 360 492 l 357 406 b 314 364 356 379 343 364 b 238 361 288 364 264 364 b 173 300 202 357 180 334 b 167 245 168 281 167 262 b 105 174 166 192 157 180 b 75 171 95 173 85 171 b 6 112 30 166 14 153 b 0 73 1 98 0 85 b 37 10 0 45 13 26 b 50 0 42 7 46 0 z',\n    },\n    brassFallRoughMedium: {\n      x_min: 0,\n      x_max: 791,\n      y_min: 0,\n      y_max: 819,\n      ha: 819,\n      o: 'm 1117 0 b 1139 101 1129 26 1139 71 b 1138 121 1139 109 1139 115 b 1084 193 1125 171 1110 193 b 1044 183 1073 193 1060 189 b 1022 177 1035 179 1028 177 b 1007 209 1012 177 1008 186 b 876 324 1004 292 959 330 b 799 317 850 321 825 320 b 759 354 772 314 755 320 b 760 373 760 360 760 366 b 759 392 760 379 760 384 b 681 477 753 451 730 477 b 654 474 672 477 664 475 b 606 467 638 471 622 468 b 586 465 599 465 592 465 b 564 481 570 465 564 469 b 569 505 564 487 566 495 b 575 553 572 521 575 537 b 572 585 575 564 573 575 b 481 665 560 657 539 668 b 412 665 458 664 435 665 b 382 690 392 667 382 672 b 383 700 382 693 383 696 b 386 773 387 724 387 749 b 297 858 382 828 351 857 b 229 861 274 858 251 858 b 190 897 207 863 193 871 b 163 1012 186 936 180 976 b 79 1084 145 1050 124 1084 b 66 1083 75 1084 71 1083 b 43 1096 49 1081 43 1087 b 48 1112 43 1100 45 1106 b 53 1130 52 1119 53 1125 b 39 1169 53 1145 45 1158 b 26 1179 36 1175 30 1179 b 16 1171 22 1179 17 1176 b 0 1103 10 1149 0 1126 b 9 1067 0 1092 1 1079 b 91 1021 26 1031 52 1018 b 145 978 122 1024 141 1011 b 156 913 147 956 151 935 b 291 795 170 831 210 795 b 346 768 337 795 346 796 b 344 743 346 760 344 753 b 343 716 344 733 343 724 b 455 600 343 651 390 602 b 505 605 471 599 490 605 b 528 598 514 605 523 603 b 536 579 534 592 536 586 b 524 523 536 562 526 541 b 523 505 524 517 523 511 b 621 405 523 442 560 405 b 639 406 626 405 634 406 b 677 413 652 408 664 410 b 701 416 687 415 696 416 b 721 392 716 416 721 410 b 720 373 721 386 720 380 b 831 255 714 301 759 252 b 897 261 854 255 876 261 b 926 262 909 261 919 262 b 969 197 963 262 965 252 b 971 184 969 193 971 189 b 1031 115 979 137 998 115 b 1071 122 1043 115 1056 118 b 1096 130 1079 125 1086 127 b 1087 59 1094 107 1087 82 b 1117 0 1087 37 1094 17 z',\n    },\n    brassBend: {\n      x_min: 0,\n      x_max: 381,\n      y_min: 0,\n      y_max: 367,\n      ha: 367,\n      o: 'm 298 0 b 472 50 359 0 418 14 b 537 135 501 71 530 92 b 543 216 543 163 543 190 l 543 266 b 544 308 543 281 543 295 b 549 433 546 354 549 395 b 543 507 549 459 547 482 b 533 528 541 516 544 528 b 511 508 524 528 514 520 b 508 478 510 498 508 488 b 504 318 507 425 504 372 b 505 264 504 300 505 282 b 446 181 505 220 484 199 b 294 150 396 160 344 150 b 92 194 226 150 158 167 b 45 269 62 207 45 230 b 46 359 46 300 46 328 b 37 497 46 405 45 451 b 27 523 36 507 37 523 b 4 498 14 524 6 513 b 3 481 3 492 3 487 b 0 409 1 456 0 433 b 4 228 0 348 4 288 b 3 177 4 210 4 194 b 68 53 1 125 20 84 b 200 10 108 27 154 17 b 298 0 233 4 266 0 z',\n    },\n    brassMuteClosed: {\n      x_min: 0,\n      x_max: 274,\n      y_min: 0,\n      y_max: 260,\n      ha: 260,\n      o: 'm 203 0 b 209 1 206 0 207 0 b 216 13 215 4 216 9 l 215 27 l 215 153 b 216 161 216 156 216 158 b 372 164 268 163 318 164 b 395 184 383 164 395 166 l 395 189 b 357 229 392 209 386 229 b 219 228 311 229 265 228 l 223 310 b 209 357 225 328 219 344 b 189 374 203 364 197 374 b 184 373 187 374 186 373 b 177 359 179 372 177 366 l 177 348 l 173 222 l 39 222 b 0 206 12 222 0 219 b 10 174 0 199 3 189 b 46 157 19 157 30 157 b 108 160 68 158 88 160 b 171 161 130 161 150 161 l 167 58 b 184 16 167 40 171 26 b 203 0 192 12 196 0 z',\n    },\n    brassMuteOpen: {\n      x_min: 1,\n      x_max: 313,\n      y_min: 0,\n      y_max: 309,\n      ha: 309,\n      o: 'm 265 0 b 451 189 363 7 452 88 l 451 215 b 348 383 441 285 405 343 b 209 445 288 426 248 445 b 84 379 168 445 132 420 b 69 364 79 373 73 369 b 1 213 30 323 1 275 b 230 0 1 88 94 0 z m 210 62 b 128 73 181 62 154 66 b 40 171 71 91 42 125 b 52 226 40 187 45 206 b 197 374 79 295 130 344 b 228 382 207 380 217 382 b 300 361 252 382 276 370 b 374 308 328 350 353 331 b 410 223 397 284 410 253 b 393 163 410 202 405 181 b 210 62 354 91 288 63 z',\n    },\n    brassFlip: {\n      x_min: 0,\n      x_max: 402,\n      y_min: 0,\n      y_max: 361,\n      ha: 361,\n      o: 'm 579 0 b 511 153 579 68 557 117 b 52 504 359 271 206 387 b 29 520 45 510 39 520 b 20 517 26 520 23 518 b 0 477 3 510 0 494 l 0 125 b 17 20 1 92 1 56 b 40 84 37 40 40 60 b 42 287 40 151 42 219 l 42 363 z',\n    },\n    brassJazzTurn: {\n      x_min: 0,\n      x_max: 646,\n      y_min: 0,\n      y_max: 212,\n      ha: 212,\n      o: 'm 310 0 b 367 33 327 0 344 10 b 389 55 374 40 382 49 b 490 145 423 85 456 114 b 507 154 495 151 501 154 b 524 144 513 154 517 151 b 598 72 547 120 575 98 b 700 24 625 42 662 24 b 765 43 721 24 744 30 b 893 147 812 72 855 105 b 930 212 910 166 923 186 b 912 215 923 213 917 215 b 871 199 896 215 883 209 b 812 153 852 183 832 167 b 789 144 805 148 796 144 b 773 156 782 144 776 147 b 691 251 757 199 720 222 b 603 301 658 282 631 301 b 527 258 580 301 556 288 b 420 156 494 222 455 190 b 399 143 412 147 405 143 b 377 157 392 143 386 147 b 259 282 340 200 300 242 b 219 305 245 298 232 305 b 177 279 204 305 192 297 b 55 127 137 228 95 177 b 0 52 36 104 20 79 b 14 50 6 50 10 50 b 53 66 32 50 45 58 b 115 131 75 88 98 108 b 135 148 124 143 130 148 b 157 132 141 148 148 143 b 252 33 186 96 219 65 b 310 0 275 12 292 0 z',\n    },\n    brassSmear: {\n      x_min: 0,\n      x_max: 334,\n      y_min: 0,\n      y_max: 151,\n      ha: 151,\n      o: 'm 321 0 b 475 125 390 0 436 43 b 481 143 478 131 481 137 b 475 154 481 147 480 151 b 449 148 468 158 458 154 b 395 132 432 137 413 132 b 343 140 377 132 360 137 b 229 194 301 148 266 173 b 168 217 206 209 186 217 b 109 192 148 217 130 209 b 0 26 59 148 32 89 b 59 63 32 29 45 48 b 98 84 72 78 84 84 b 130 73 108 84 118 81 b 213 26 157 58 183 37 b 321 0 255 9 289 0 z',\n    },\n    stringsDownBow: {\n      x_min: 0,\n      x_max: 306,\n      y_min: 0,\n      y_max: 366,\n      ha: 366,\n      o: 'm 405 0 b 425 17 413 -1 420 9 b 439 66 435 32 439 48 b 441 268 439 137 441 202 b 436 412 441 314 439 361 l 435 413 b 423 469 435 436 431 456 b 344 508 406 501 373 501 b 204 527 298 520 251 527 b 60 498 156 527 108 518 b 7 438 32 485 10 468 l 7 426 b 4 337 7 396 7 367 b 0 140 0 272 0 206 b 1 42 0 107 0 73 b 13 3 1 27 -3 4 b 40 39 29 3 35 24 b 42 53 42 43 40 49 b 49 141 48 84 49 112 b 48 215 49 167 48 192 b 49 252 48 228 48 240 l 49 312 b 130 343 72 331 99 340 b 206 347 156 346 180 347 b 372 314 262 347 318 338 l 390 307 l 390 245 b 390 138 392 212 390 176 b 397 23 390 101 392 62 b 405 0 399 14 393 1 z',\n    },\n    stringsUpBow: {\n      x_min: 0,\n      x_max: 219,\n      y_min: 0,\n      y_max: 489,\n      ha: 489,\n      o: 'm 151 0 b 184 42 170 12 180 26 b 297 554 223 212 261 382 b 315 690 305 598 318 645 b 304 704 315 697 311 704 b 276 670 288 704 282 697 b 157 131 236 490 196 311 l 157 144 b 73 526 134 276 104 396 b 30 677 60 576 52 638 b 13 694 26 684 22 694 b 0 674 9 694 0 691 l 0 671 b 10 603 3 649 6 626 b 105 174 42 461 72 317 b 150 0 117 117 128 58 z',\n    },\n    stringsHarmonic: {\n      x_min: 0,\n      x_max: 191,\n      y_min: 0,\n      y_max: 202,\n      ha: 202,\n      o: 'm 143 0 b 275 122 217 0 275 53 b 127 291 275 206 202 291 b 0 154 63 291 0 222 b 143 0 0 76 71 0 z m 122 68 b 43 105 89 66 59 75 b 39 124 40 111 39 117 b 79 199 39 148 56 180 b 145 226 101 216 122 226 b 199 210 163 226 180 220 b 235 150 223 196 235 173 b 203 92 235 128 225 107 b 122 68 181 76 150 68 z',\n    },\n    pluckedSnapPizzicatoAbove: {\n      x_min: 0,\n      x_max: 201,\n      y_min: 0,\n      y_max: 325,\n      ha: 325,\n      o: 'm 171 0 b 289 99 240 0 289 45 b 258 183 289 130 274 156 b 174 269 236 217 203 240 l 174 408 b 174 429 174 415 176 422 b 131 468 168 451 153 468 b 117 451 120 468 117 461 b 118 429 117 444 118 435 b 115 307 117 389 115 347 b 0 166 59 295 0 223 b 171 0 0 85 89 0 z m 134 55 b 52 131 84 55 52 85 b 115 233 52 179 81 209 b 114 192 114 220 114 206 b 174 120 114 137 114 137 l 174 228 b 233 148 200 207 223 183 b 236 130 235 143 236 135 b 197 72 236 105 223 85 b 134 55 177 60 157 55 z',\n    },\n    pluckedSnapPizzicatoBelow: {\n      x_min: 0,\n      x_max: 211,\n      y_min: 0,\n      y_max: 307,\n      ha: 307,\n      o: 'm 145 7 b 163 0 153 3 158 0 b 173 23 170 0 173 7 l 173 140 l 170 140 l 170 163 l 171 163 b 206 170 179 164 193 166 b 304 287 264 186 304 233 b 281 354 304 308 297 333 b 118 442 240 412 186 439 b 0 324 69 442 0 370 b 115 176 0 266 55 202 l 115 56 b 145 7 114 33 125 19 z m 115 220 b 62 256 92 223 73 230 b 53 292 56 269 53 281 b 78 344 53 311 60 328 b 168 384 105 372 135 384 b 213 376 183 384 199 382 b 253 321 239 366 253 346 b 246 291 253 311 251 301 b 170 226 230 256 203 236 l 170 258 b 148 305 171 278 163 292 b 128 315 143 310 135 315 l 124 315 b 115 301 117 314 115 308 z',\n    },\n    pluckedLeftHandPizzicato: {\n      x_min: 0,\n      x_max: 271,\n      y_min: 0,\n      y_max: 284,\n      ha: 284,\n      o: 'm 213 0 b 223 14 222 0 223 7 b 222 35 223 22 222 29 l 222 176 b 373 170 272 174 323 170 b 390 180 382 170 390 171 l 390 184 b 347 232 386 207 382 232 b 219 238 307 233 266 235 l 219 364 b 171 409 219 395 193 409 b 156 393 160 409 156 402 b 158 370 156 384 158 376 l 158 240 b 16 239 115 240 66 239 b 0 226 7 239 0 238 l 0 223 b 50 179 1 203 29 179 b 158 177 86 179 122 179 l 158 63 b 161 29 158 52 158 40 b 213 0 166 -1 194 1 z',\n    },\n    keyboardPedalPed: {\n      x_min: 0,\n      x_max: 944,\n      y_min: -13,\n      y_max: 550,\n      ha: 563,\n      o: 'm 22 0 b 109 78 53 0 105 46 l 144 333 b 163 376 147 347 140 372 b 364 465 238 390 301 426 b 454 599 416 497 454 540 b 452 618 454 605 454 612 b 320 770 442 694 396 747 b 248 779 295 778 272 779 b 193 778 229 779 212 779 b 160 780 181 778 167 775 b 137 792 153 789 144 791 b 109 789 128 792 118 789 b 7 719 59 789 48 737 b 23 708 16 714 20 708 b 36 710 29 710 33 710 b 53 684 52 710 53 698 l 53 674 b 43 386 53 577 53 482 b 20 164 36 312 30 238 b 1 30 14 120 7 75 b 0 19 0 26 0 22 b 22 0 0 9 4 0 z m 171 425 b 156 442 160 425 156 429 b 157 475 157 452 157 464 b 164 602 161 517 164 560 b 161 698 164 635 163 667 b 184 729 161 720 167 729 l 193 729 b 348 563 278 719 348 641 b 346 539 348 554 347 547 b 171 425 328 459 229 422 z m 979 6 b 1008 13 986 6 995 9 b 1081 101 1047 29 1079 46 b 1116 449 1087 217 1104 333 b 1143 654 1123 518 1133 586 b 1148 685 1145 664 1148 675 b 1140 704 1148 693 1146 700 b 1107 716 1130 713 1119 716 b 1056 706 1092 716 1073 710 b 1037 671 1035 703 1038 685 b 1004 439 1025 595 1014 517 b 986 419 1001 428 999 419 b 979 419 985 419 982 420 b 935 426 965 423 949 425 b 795 376 884 426 838 405 b 664 153 714 323 664 249 b 665 130 664 145 665 138 b 753 29 671 65 704 29 b 815 40 773 29 792 33 b 975 147 873 65 923 101 b 965 45 971 108 968 76 b 979 6 963 17 966 6 z m 393 -17 b 634 145 494 16 579 52 b 638 160 636 151 638 156 b 625 168 638 166 634 168 b 621 167 624 168 622 168 b 524 118 582 164 544 160 b 495 79 517 104 505 92 b 435 33 471 49 452 33 b 380 96 416 33 397 55 b 369 145 373 114 369 131 b 442 225 369 186 395 213 b 468 232 451 228 459 229 b 654 344 539 255 606 285 b 677 395 667 360 677 376 b 672 415 677 402 675 408 b 612 459 661 442 639 455 b 589 461 602 461 592 461 b 348 328 500 461 409 408 b 269 120 302 268 269 199 b 379 -19 269 45 318 -19 b 393 -17 383 -19 389 -19 z m 395 240 b 494 383 418 300 452 344 l 521 405 b 544 419 528 409 536 418 b 554 415 547 419 550 418 b 570 383 564 406 570 396 l 570 379 b 552 331 570 360 562 344 b 395 240 511 285 462 253 z m 827 89 b 792 111 815 89 804 96 b 766 204 775 131 766 158 b 845 360 772 256 799 314 b 871 372 854 369 863 372 b 897 366 880 372 888 369 b 978 279 942 353 963 320 b 976 259 981 272 981 265 b 858 104 942 203 909 147 b 827 89 847 94 837 89 z m 1282 12 b 1336 35 1303 14 1320 23 b 1359 71 1351 45 1359 58 b 1338 102 1359 82 1352 95 b 1254 130 1312 118 1284 130 b 1187 88 1223 130 1202 109 b 1178 65 1182 81 1178 72 b 1195 37 1178 55 1182 45 b 1282 12 1223 23 1253 19 z',\n    },\n    keyboardPedalUp: {\n      x_min: 0,\n      x_max: 437,\n      y_min: 0,\n      y_max: 461,\n      ha: 461,\n      o: 'm 330 0 b 334 1 331 0 333 0 b 340 12 338 4 340 7 l 338 26 b 340 264 338 105 338 184 b 526 95 400 206 461 148 b 559 71 536 88 547 71 b 564 72 560 71 563 71 b 580 121 580 79 580 102 l 580 127 b 543 203 585 158 573 184 b 472 259 518 219 495 238 l 445 285 b 590 292 494 288 541 291 b 622 318 609 294 618 302 b 628 359 625 331 626 346 b 586 402 632 393 621 405 b 464 395 546 399 504 396 l 559 491 b 567 524 567 500 567 510 b 564 543 567 527 567 536 b 539 596 559 563 560 590 b 494 564 521 600 508 577 b 340 413 442 514 390 464 l 340 560 b 287 664 340 600 321 632 b 271 518 274 612 272 566 b 268 445 269 494 269 469 b 117 569 219 488 168 530 b 96 579 109 575 102 579 b 85 560 89 579 85 573 b 124 446 85 518 82 477 b 209 380 153 426 181 403 b 45 374 154 377 99 376 b 0 324 9 374 0 359 b 63 266 0 265 1 265 b 144 272 89 269 117 272 l 196 272 b 108 193 167 246 138 219 b 60 135 76 164 60 151 b 99 73 60 121 73 105 b 104 68 101 72 102 71 b 114 58 107 60 111 58 b 130 66 120 58 124 62 b 259 186 173 107 217 145 b 256 117 259 163 256 140 b 311 13 256 72 271 37 b 330 0 317 10 323 0 z',\n    },\n    pictChokeCymbal: {\n      x_min: 1,\n      x_max: 147,\n      y_min: 0,\n      y_max: 242,\n      ha: 242,\n      o: 'm 79 4 b 207 158 153 32 192 88 b 212 200 210 173 212 187 b 143 336 212 253 187 298 b 98 348 131 344 115 348 b 4 295 60 348 16 327 b 1 276 1 289 1 282 b 9 249 1 266 3 258 b 121 183 35 206 72 183 b 156 186 132 183 144 183 b 26 53 134 115 91 73 b 7 39 13 49 7 45 b 19 20 7 33 12 27 b 59 0 30 9 43 0 b 79 4 65 0 72 1 z',\n    },\n    wiggleArpeggiatoUp: {\n      x_min: -22,\n      x_max: 300,\n      y_min: 0,\n      y_max: 176,\n      ha: 176,\n      o: 'm 173 4 b 196 0 180 1 189 0 b 246 26 215 0 230 9 b 301 117 271 53 285 85 b 312 131 305 125 307 131 b 327 124 315 131 321 128 b 373 86 341 112 353 101 b 412 69 389 75 402 69 b 432 94 425 69 432 79 b 373 181 432 117 413 154 b 235 252 323 216 285 245 b 220 253 229 253 225 253 b 168 215 196 253 181 240 b 111 112 151 180 140 141 b 94 102 105 105 99 102 b 78 111 89 102 84 105 b 0 181 55 135 35 160 b -32 153 -20 194 -32 168 b 0 86 -32 124 -32 109 b 94 36 22 71 73 46 b 173 4 134 16 131 17 z',\n    },\n    arpeggiatoUp: {\n      x_min: 0,\n      x_max: 262,\n      y_min: 0,\n      y_max: 1459,\n      ha: 1459,\n      o: 'm 190 0 b 160 63 187 29 170 45 b 145 108 150 81 145 95 b 183 163 145 128 157 145 b 300 246 222 190 262 216 b 347 318 333 272 347 295 b 301 393 347 341 331 364 b 258 413 289 403 272 408 b 145 449 220 425 183 436 b 117 464 135 452 120 452 b 140 491 115 477 128 484 b 294 593 192 526 243 557 b 330 647 318 611 330 626 b 314 693 330 660 324 675 b 262 736 302 714 285 729 b 170 763 230 744 200 753 b 122 783 153 768 125 768 b 160 831 120 804 143 818 b 288 922 202 861 246 890 b 333 999 318 945 333 972 b 266 1083 333 1032 310 1064 b 189 1115 240 1094 215 1103 b 122 1178 145 1133 122 1153 b 168 1250 122 1200 138 1223 l 180 1257 b 269 1333 210 1283 240 1306 b 305 1405 294 1356 305 1381 b 284 1469 305 1426 298 1447 b 228 1525 269 1492 251 1511 b 183 1600 197 1545 183 1571 b 190 1640 183 1613 184 1626 b 197 1670 193 1650 194 1660 b 272 1735 213 1719 230 1735 b 295 1734 279 1735 287 1735 b 323 1732 305 1732 314 1732 b 350 1731 333 1732 341 1732 b 377 1742 369 1729 377 1732 b 370 1761 377 1747 374 1754 l 301 1898 b 217 2066 274 1954 248 2012 b 186 2101 204 2089 196 2101 b 154 2069 177 2101 167 2091 b 12 1824 105 1987 59 1907 b 0 1787 4 1810 0 1797 b 59 1744 0 1761 20 1745 b 160 1738 92 1744 125 1740 b 145 1692 156 1721 151 1706 b 135 1633 138 1672 135 1652 b 184 1518 135 1591 151 1552 b 229 1475 199 1503 213 1488 b 259 1431 249 1456 259 1444 b 229 1388 259 1420 249 1407 b 151 1325 203 1365 177 1345 b 105 1279 134 1310 118 1296 b 73 1202 84 1251 73 1227 b 108 1123 73 1176 85 1152 b 255 1031 148 1077 199 1051 b 282 1014 274 1025 282 1021 b 262 991 282 1008 275 1001 b 151 914 226 963 189 939 b 79 851 125 896 99 877 b 63 809 69 837 63 824 b 79 769 63 796 68 783 b 202 697 111 729 154 710 b 266 670 225 690 266 688 b 210 622 266 648 232 635 b 82 534 167 593 120 570 b 55 491 63 518 55 505 b 79 448 55 478 63 465 b 255 361 127 395 192 380 b 288 343 269 359 288 357 b 266 312 288 331 275 320 b 144 223 229 278 184 253 b 85 134 104 193 85 166 b 118 53 85 111 96 85 b 190 0 135 29 160 14 z',\n    },\n    arpeggiatoDown: {\n      x_min: 0,\n      x_max: 218,\n      y_min: 0,\n      y_max: 1440,\n      ha: 1440,\n      o: 'm 161 16 b 310 261 210 98 259 180 b 314 275 312 266 314 271 b 302 295 314 282 310 289 b 252 311 287 308 269 311 b 217 310 240 311 229 310 b 190 333 202 310 194 315 b 151 412 186 363 171 389 b 102 501 120 452 102 477 b 150 588 102 524 118 547 b 161 603 154 592 158 598 b 181 661 176 622 181 641 b 173 704 181 675 179 690 b 86 795 156 746 121 770 b 53 829 63 811 53 819 b 78 868 53 840 62 851 b 102 888 85 876 94 883 b 180 956 128 912 156 933 b 216 1028 204 979 216 1002 b 203 1081 216 1044 212 1061 b 115 1171 186 1123 148 1145 b 75 1221 88 1191 75 1207 b 114 1272 75 1237 88 1251 b 173 1308 132 1284 154 1296 b 226 1339 190 1318 209 1328 b 265 1405 253 1359 265 1380 b 258 1447 265 1418 264 1431 b 154 1541 242 1499 199 1521 b 109 1581 124 1555 109 1567 b 141 1627 109 1594 121 1608 b 204 1680 163 1646 184 1662 b 233 1742 223 1699 233 1719 b 226 1777 233 1752 230 1764 b 135 1862 210 1822 173 1840 b 104 1895 114 1875 104 1884 b 118 1930 104 1904 109 1914 b 192 2006 135 1961 161 1986 b 206 2029 203 2013 206 2022 b 192 2064 206 2040 197 2052 b 180 2074 187 2071 184 2074 b 156 2061 171 2074 163 2065 b 84 1983 125 2040 102 2013 b 65 1921 71 1961 65 1941 b 88 1853 65 1899 72 1876 b 171 1784 108 1820 138 1801 b 190 1764 184 1777 190 1770 b 174 1741 190 1757 184 1750 b 107 1683 153 1722 128 1704 b 68 1610 81 1659 68 1636 b 88 1548 68 1591 75 1571 b 177 1470 109 1512 141 1489 b 223 1431 209 1453 223 1443 b 179 1390 223 1420 209 1408 b 128 1361 163 1380 145 1371 b 71 1322 108 1348 88 1338 b 32 1253 45 1300 32 1277 b 48 1198 32 1236 37 1218 b 147 1090 71 1152 108 1120 b 174 1057 166 1076 174 1067 b 153 1022 174 1047 167 1037 b 109 982 140 1008 124 995 b 37 919 85 962 59 942 b 9 860 17 899 9 880 b 26 806 9 844 14 827 b 120 717 50 769 84 740 b 138 691 132 708 138 700 b 130 668 138 684 135 677 b 92 618 118 651 105 635 b 59 531 71 589 59 560 b 84 455 59 507 68 481 b 132 386 98 431 115 408 b 148 341 144 372 148 357 b 144 317 148 333 147 324 b 121 305 140 307 131 305 l 98 305 b 82 304 94 304 88 304 l 32 304 b 0 292 10 304 0 302 b 12 266 0 287 4 279 b 60 164 32 233 46 199 b 127 20 84 117 105 68 b 144 0 132 9 137 0 b 161 16 150 0 154 4 z',\n    },\n    repeat1Bar: {\n      x_min: 0,\n      x_max: 599,\n      y_min: -250,\n      y_max: 175,\n      ha: 425,\n      o: 'm 216 98 b 255 75 236 84 246 75 b 291 104 265 75 274 85 b 323 147 304 117 327 125 b 289 215 323 168 314 184 b 238 252 269 239 253 252 b 187 222 222 252 207 242 b 173 206 183 216 177 212 b 157 170 163 194 157 183 b 174 138 157 160 161 150 b 216 98 189 127 200 109 z m 76 -334 b 181 -285 111 -315 148 -302 b 831 52 396 -168 613 -58 b 863 114 855 63 864 82 b 828 202 855 140 855 176 b 808 213 821 209 815 213 b 793 209 804 213 799 212 l 422 19 b 26 -179 291 -48 164 -124 b 0 -213 10 -186 0 -196 b 3 -232 0 -219 0 -225 b 52 -325 14 -265 37 -294 b 66 -337 55 -331 59 -337 b 76 -334 69 -337 72 -336 z m 769 -360 b 829 -264 779 -360 829 -284 b 769 -176 822 -232 799 -200 b 742 -163 760 -167 750 -163 b 716 -184 733 -163 723 -168 b 683 -228 708 -202 693 -213 b 672 -253 675 -236 672 -245 b 683 -281 672 -262 675 -271 b 752 -353 703 -308 732 -327 b 769 -360 756 -357 763 -360 z',\n    },\n    repeat2Bars: {\n      x_min: 0,\n      x_max: 775,\n      y_min: -247,\n      y_max: 363,\n      ha: 610,\n      o: 'm 909 412 b 873 351 906 384 893 367 b 436 50 729 249 585 147 l 91 -179 b 62 -174 76 -189 68 -183 b 12 -96 48 -147 24 -125 b 36 -16 -7 -53 -6 -43 b 220 104 96 24 158 65 b 819 507 425 232 624 369 b 881 495 852 530 861 528 b 909 412 899 469 900 439 z m 333 338 b 302 240 330 307 317 274 b 276 235 297 225 287 228 l 233 269 b 203 376 186 307 183 318 b 225 441 212 397 217 419 b 246 454 228 452 232 458 b 333 338 284 441 333 380 z m 1116 228 b 1067 158 1115 192 1092 174 b 910 59 1015 125 963 92 b 478 -240 762 -33 622 -140 b 311 -350 423 -279 366 -314 b 285 -344 298 -360 289 -356 b 239 -258 272 -314 251 -288 b 261 -196 228 -228 235 -210 b 517 -29 348 -144 436 -91 b 1030 321 681 98 861 202 b 1093 307 1060 343 1076 340 b 1116 228 1107 281 1109 252 z m 1070 -105 b 1020 -210 1057 -143 1038 -176 b 998 -210 1014 -219 1004 -215 l 924 -153 b 913 -88 899 -135 897 -112 b 949 -22 926 -66 939 -45 b 998 -7 960 6 976 9 b 1070 -105 1032 -32 1058 -63 z',\n    },\n    repeat4Bars: {\n      x_min: 0,\n      x_max: 1374,\n      y_min: -304,\n      y_max: 304,\n      ha: 608,\n      o: 'm 78 -266 b 92 -258 82 -266 88 -264 b 114 -240 98 -251 107 -246 b 638 107 289 -125 467 -14 b 873 271 716 161 793 216 b 907 337 894 285 906 305 b 887 400 901 354 897 379 b 852 438 877 426 867 438 b 814 420 842 438 829 432 b 135 -33 592 262 366 111 b 12 -121 92 -60 48 -84 b 0 -144 4 -128 0 -135 b 4 -160 0 -148 1 -154 b 63 -255 17 -196 45 -223 b 78 -266 68 -262 72 -266 z m 291 148 b 325 223 302 148 308 170 b 333 256 328 235 330 246 b 264 363 330 305 298 336 b 242 373 255 369 248 373 b 220 347 232 373 225 364 b 202 288 216 327 213 305 b 190 252 193 275 190 262 b 222 200 190 232 202 215 b 291 148 264 170 279 148 z m 815 -367 b 829 -359 819 -367 824 -364 b 851 -343 835 -353 844 -347 b 1375 6 1027 -228 1205 -117 l 1610 170 b 1644 235 1632 184 1643 203 b 1626 300 1639 253 1634 276 b 1590 337 1614 325 1604 337 b 1551 320 1580 337 1567 330 b 873 -135 1329 161 1103 10 b 749 -222 829 -161 785 -184 b 737 -245 742 -230 737 -238 b 742 -261 737 -249 739 -255 b 802 -357 755 -297 782 -325 b 815 -367 805 -363 809 -367 z m 396 -360 b 408 -356 400 -360 403 -359 b 609 -223 471 -307 543 -269 b 896 -19 706 -156 795 -81 b 1164 154 985 37 1074 96 b 1214 223 1189 170 1211 187 b 1176 321 1204 253 1205 292 b 1159 330 1169 327 1165 330 b 1145 324 1155 330 1151 328 b 1048 258 1113 302 1081 278 b 357 -202 809 117 598 -65 b 333 -238 341 -212 333 -223 b 338 -262 333 -245 334 -253 b 384 -350 350 -294 372 -318 b 396 -360 386 -354 390 -360 z m 1162 -438 b 1174 -433 1166 -438 1169 -436 b 1374 -300 1237 -384 1309 -346 b 1660 -96 1470 -233 1561 -158 b 1930 76 1751 -39 1840 19 b 1979 147 1954 92 1977 109 b 1943 243 1968 177 1971 216 b 1924 253 1935 251 1930 253 b 1911 248 1920 253 1915 252 b 1814 181 1878 225 1848 202 b 1123 -279 1575 40 1364 -141 b 1099 -315 1106 -289 1099 -300 b 1103 -338 1099 -321 1100 -330 b 1149 -426 1115 -370 1138 -396 b 1162 -438 1151 -432 1156 -438 z m 1875 -295 b 1882 -291 1878 -295 1879 -294 b 1934 -189 1904 -258 1921 -223 b 1872 -96 1925 -147 1901 -120 b 1840 -78 1858 -84 1848 -78 b 1812 -109 1830 -78 1823 -88 l 1777 -173 b 1770 -199 1773 -181 1770 -190 b 1786 -230 1770 -210 1774 -220 b 1862 -289 1809 -253 1837 -269 b 1875 -295 1865 -292 1871 -295 z',\n    },\n    repeatBarSlash: {\n      x_min: 0,\n      x_max: 630,\n      y_min: -225,\n      y_max: 265,\n      ha: 490,\n      o: 'm 78 -324 b 92 -314 82 -325 88 -321 b 114 -298 96 -307 107 -302 b 638 49 289 -183 467 -72 b 873 215 716 104 792 161 b 907 279 894 229 906 248 b 887 344 901 298 897 321 b 852 382 877 369 867 380 b 814 363 842 383 829 376 b 135 -91 603 192 364 55 b 12 -177 92 -118 45 -137 b 0 -202 4 -186 0 -192 b 4 -217 0 -206 1 -212 b 63 -312 17 -253 42 -284 b 78 -324 68 -318 72 -323 z',\n    },\n    csymDiminished: {\n      x_min: 0,\n      x_max: 506,\n      y_min: 0,\n      y_max: 500,\n      ha: 500,\n      o: 'm 397 0 b 729 265 576 -1 729 95 b 711 367 729 297 723 331 b 472 670 668 498 586 595 b 315 720 423 701 372 720 b 253 713 295 720 275 719 b 32 514 144 687 75 615 b 0 374 12 468 0 420 b 27 251 0 333 9 292 b 140 117 52 196 92 153 b 397 0 223 52 317 4 z m 340 95 b 132 314 233 84 122 216 b 324 589 145 438 200 539 b 415 611 360 603 389 611 b 544 505 469 611 505 576 b 590 392 564 471 583 432 b 596 343 593 374 596 359 b 340 95 596 210 485 96 z',\n    },\n    csymHalfDiminished: {\n      x_min: -32,\n      x_max: 496,\n      y_min: -33,\n      y_max: 492,\n      ha: 525,\n      o: 'm -29 -48 b 0 -36 -19 -48 -9 -40 b 17 -20 7 -32 12 -24 b 134 94 56 19 95 56 b 372 0 207 43 282 0 b 455 13 397 0 426 4 b 677 258 556 45 671 141 b 678 289 677 268 678 278 b 593 539 678 380 654 467 b 592 541 593 540 592 540 l 684 632 b 713 678 700 647 711 665 b 714 691 714 684 714 688 b 707 704 714 698 711 701 b 691 708 701 707 696 708 b 660 691 680 708 670 701 l 552 585 b 478 634 530 606 507 624 b 361 684 438 648 397 661 b 301 703 341 697 320 703 b 226 677 275 703 251 693 b 27 449 140 618 72 543 b 0 324 9 410 -4 370 b 88 128 -1 243 30 177 b -30 -7 43 86 0 46 b -46 -33 -35 -16 -46 -24 b -42 -42 -46 -36 -45 -39 b -29 -48 -37 -46 -33 -48 z m 141 179 b 121 251 128 200 121 225 b 128 297 121 265 124 281 b 351 575 163 420 248 505 b 377 582 359 579 369 580 b 501 536 422 586 468 567 b 141 179 382 416 261 298 z m 281 105 b 179 137 240 105 206 117 b 210 168 189 147 200 157 l 537 487 b 547 455 541 477 544 467 b 556 370 552 426 556 397 b 429 154 556 274 503 207 b 281 105 384 122 336 105 z',\n    },\n    csymAugmented: {\n      x_min: 0,\n      x_max: 530,\n      y_min: 0,\n      y_max: 539,\n      ha: 539,\n      o: 'm 380 0 b 393 14 384 4 390 9 b 397 46 397 24 397 36 l 397 333 b 736 327 511 331 624 330 b 763 343 755 327 763 333 b 755 361 763 348 760 354 b 635 431 726 402 688 431 l 390 431 l 390 485 b 386 606 392 526 386 566 b 392 664 386 625 387 645 b 395 690 393 672 395 681 b 376 753 395 711 389 734 b 357 776 372 762 369 776 b 350 775 354 776 353 776 b 327 740 337 769 327 759 b 327 621 328 700 327 661 b 330 438 328 559 328 498 l 29 438 b 4 431 20 438 7 442 b 0 413 3 425 0 419 b 7 399 0 408 1 403 b 131 338 45 369 85 340 b 331 334 199 336 265 334 b 333 163 333 276 333 220 b 366 13 333 109 348 63 b 380 0 367 7 374 4 z',\n    },\n    csymMajorSeventh: {\n      x_min: 0,\n      x_max: 593,\n      y_min: 0,\n      y_max: 569,\n      ha: 569,\n      o: 'm 124 1 l 497 27 b 819 50 605 35 711 43 b 854 98 847 52 855 63 b 812 200 845 128 835 166 b 564 585 730 328 648 456 b 435 786 521 652 480 720 b 397 819 419 809 408 819 b 369 792 387 819 379 811 b 7 173 248 585 128 379 b 0 150 3 166 0 158 b 7 128 0 143 3 135 b 89 10 30 86 65 50 b 109 0 95 1 102 0 z m 163 147 b 153 153 158 147 156 148 b 164 179 147 163 158 170 b 426 644 251 334 338 488 b 442 660 432 655 436 660 b 458 645 446 660 452 655 b 727 220 547 503 636 361 b 736 202 732 213 736 206 b 714 190 736 196 730 192 b 179 148 537 177 359 163 b 163 147 174 150 168 147 z',\n    },\n    csymMinor: {\n      x_min: 0,\n      x_max: 482,\n      y_min: 193,\n      y_max: 265,\n      ha: 72,\n      o: 'm 168 278 b 197 279 177 278 187 278 b 431 292 275 287 353 288 l 431 291 b 661 302 508 295 585 300 b 693 311 672 304 688 300 b 674 346 697 324 685 338 b 564 382 641 366 606 384 l 27 360 b 0 347 17 360 1 366 b 19 314 0 333 3 321 b 168 278 66 291 115 278 z',\n    },\n    csymParensLeftTall: {\n      x_min: 0,\n      x_max: 185,\n      y_min: 0,\n      y_max: 1034,\n      ha: 1034,\n      o: 'm 215 0 b 226 17 223 1 223 10 b 229 37 229 24 229 32 b 220 81 229 52 225 66 b 167 203 206 124 181 160 b 86 616 124 338 89 474 b 82 765 85 665 82 716 b 91 886 82 805 84 845 b 245 1319 120 1038 171 1184 b 266 1397 259 1346 266 1371 b 259 1443 266 1411 264 1427 b 226 1489 253 1463 248 1489 b 193 1454 212 1489 203 1467 b 114 1292 158 1404 140 1346 b 0 806 40 1138 0 978 b 3 721 0 779 0 750 b 1 677 1 707 1 693 b 36 418 1 593 16 504 b 144 96 62 307 95 199 b 196 12 158 66 179 39 b 212 0 200 7 204 0 z',\n    },\n    csymParensRightTall: {\n      x_min: -40,\n      x_max: 189,\n      y_min: 0,\n      y_max: 1058,\n      ha: 1058,\n      o: 'm 30 1 b 63 14 42 -3 55 6 b 122 99 86 40 108 68 b 189 258 145 153 166 204 b 271 667 239 379 268 503 b 246 852 275 708 261 780 b 10 1495 197 1077 128 1295 b -14 1524 4 1505 1 1524 b -16 1522 -14 1524 -16 1524 b -46 1489 -33 1521 -43 1503 b -58 1417 -53 1464 -58 1440 b -36 1335 -58 1390 -52 1364 b 68 1138 0 1270 35 1204 b 163 883 108 1056 137 969 b 206 668 184 814 200 742 b 207 631 207 655 207 642 b 166 426 207 560 192 492 b 46 143 130 330 111 228 b 19 29 19 109 17 69 b 30 1 20 19 24 3 z',\n    },\n    csymBracketLeftTall: {\n      x_min: 0,\n      x_max: 328,\n      y_min: 2,\n      y_max: 807,\n      ha: 805,\n      o: 'm 68 3 b 76 4 71 3 73 3 b 186 13 112 12 150 13 b 240 13 204 13 222 13 l 287 13 b 379 17 317 13 348 13 b 472 121 435 24 472 69 b 467 156 472 132 469 144 b 446 174 462 168 456 174 l 439 174 b 327 166 402 167 364 166 b 265 167 307 166 285 167 l 209 167 b 187 475 199 269 189 372 b 166 985 186 645 187 815 l 377 1002 b 415 1001 389 1002 402 1001 b 456 1027 432 1001 448 1005 b 472 1096 467 1048 472 1073 b 464 1146 472 1113 469 1130 b 439 1162 459 1161 452 1162 b 40 1129 305 1151 173 1139 b 1 1093 17 1128 1 1120 b 0 1009 0 1064 0 1037 b 13 975 0 991 3 981 b 30 670 23 873 30 772 b 29 608 30 649 29 628 l 29 563 b 56 88 29 405 49 246 b 53 22 55 66 55 43 b 68 3 53 12 56 3 z',\n    },\n    csymBracketRightTall: {\n      x_min: 1,\n      x_max: 306,\n      y_min: 0,\n      y_max: 829,\n      ha: 829,\n      o: 'm 117 0 b 372 29 203 -3 287 20 l 373 29 b 406 32 383 30 395 30 b 436 60 428 33 432 43 b 441 109 439 76 441 92 b 433 200 441 140 436 170 b 409 696 422 366 409 530 b 416 887 409 763 416 831 b 415 920 416 899 415 910 l 415 1106 b 412 1135 415 1116 415 1126 l 412 1145 b 373 1189 413 1171 408 1192 b 321 1189 356 1189 338 1189 l 215 1189 l 215 1194 l 56 1194 b 6 1153 27 1195 10 1187 b 1 1064 3 1123 4 1093 b 22 1043 0 1050 6 1043 b 84 1044 42 1044 63 1044 b 264 1038 144 1044 203 1040 b 265 958 264 1011 265 985 b 262 845 265 920 264 883 b 259 710 259 801 259 755 b 279 243 259 554 271 399 b 285 170 281 219 284 194 b 95 151 222 161 158 156 b 29 81 27 147 27 147 l 29 73 b 105 0 33 0 33 0 z',\n    },\n    csymParensLeftVeryTall: {\n      x_min: 0,\n      x_max: 116,\n      y_min: 0,\n      y_max: 934,\n      ha: 934,\n      o: 'm 128 0 b 147 17 137 0 144 9 b 167 102 160 45 167 73 b 158 154 167 120 164 137 b 117 307 141 204 130 256 b 63 698 84 435 71 567 b 62 788 62 729 62 757 b 69 916 62 829 63 873 b 109 1172 81 1001 94 1087 b 132 1320 118 1221 137 1269 b 124 1345 131 1329 134 1342 b 96 1332 114 1346 102 1341 b 71 1269 82 1313 75 1292 b 39 1104 59 1214 48 1159 b 0 742 19 988 0 871 b 10 559 3 688 6 624 b 58 226 16 446 33 336 b 112 20 73 157 94 89 b 128 0 115 13 118 0 z',\n    },\n    csymParensRightVeryTall: {\n      x_min: -20,\n      x_max: 111,\n      y_min: 0,\n      y_max: 1009,\n      ha: 1009,\n      o: 'm -3 0 b 20 22 9 -1 14 12 b 36 56 26 33 32 45 b 99 274 58 128 84 199 b 160 788 135 439 163 605 b 122 1181 164 912 145 1047 b 50 1431 108 1267 86 1351 b 36 1453 48 1439 46 1453 l 35 1453 l 30 1453 b 7 1423 17 1449 7 1440 b 27 1287 9 1377 10 1331 b 96 963 71 1184 85 1074 b 105 818 102 914 105 867 b 91 624 105 753 99 688 b -4 213 72 484 48 344 b -29 101 -19 174 -29 138 b -16 27 -29 76 -24 52 b -3 0 -13 17 -14 3 z',\n    },\n    csymDiagonalArrangementSlash: {\n      x_min: 0,\n      x_max: 990,\n      y_min: -27,\n      y_max: 1028,\n      ha: 1054,\n      o: 'm 14 -37 b 58 -9 35 -45 46 -22 b 392 333 170 105 279 217 l 765 711 b 1372 1329 968 916 1168 1125 b 1424 1439 1403 1359 1417 1397 b 1426 1457 1424 1444 1426 1450 b 1416 1477 1426 1466 1423 1475 b 1374 1462 1400 1485 1385 1473 b 1181 1269 1309 1397 1246 1331 b 736 831 1031 1122 884 979 b 356 452 609 704 485 576 b 32 132 246 347 143 236 b 0 50 7 109 1 84 b 6 9 -1 37 3 23 b 14 -37 10 -9 0 -32 z',\n    },\n    accidentalNarrowReversedFlat: {\n      x_min: 0,\n      x_max: 208,\n      y_min: -231,\n      y_max: 449,\n      ha: 680,\n      o: 'm 272 -333 b 284 -320 278 -333 281 -328 b 300 -174 297 -272 300 -222 b 275 190 298 -52 279 68 b 268 445 272 275 268 360 l 268 490 b 264 612 269 530 265 572 b 236 647 264 632 252 645 l 235 647 b 217 618 220 647 220 628 b 207 526 210 588 207 556 b 210 432 207 494 210 464 b 216 268 213 377 215 323 l 216 230 l 215 232 b 154 256 194 240 174 251 b 111 264 138 261 124 264 b 3 153 50 264 10 223 b 0 94 0 132 0 114 b 194 -276 0 -63 68 -186 b 255 -323 215 -291 236 -307 b 272 -333 262 -330 268 -333 z m 233 -138 b 71 30 168 -92 105 -45 b 63 59 65 42 63 50 b 96 95 62 75 73 86 b 130 102 108 99 120 102 b 215 76 160 102 187 88 l 220 73 b 225 -22 220 42 222 10 b 233 -138 229 -62 230 -101 z',\n    },\n    accidentalNarrowReversedFlatAndFlat: {\n      x_min: 0,\n      x_max: 335,\n      y_min: -231,\n      y_max: 449,\n      ha: 680,\n      o: 'm 151 490 b 148 612 151 530 150 572 b 132 647 148 632 141 645 b 122 618 124 647 124 628 b 117 526 118 588 117 556 b 118 432 117 494 118 464 b 121 268 120 377 121 323 l 121 232 b 86 256 109 240 98 251 b 62 264 78 261 69 264 b 1 153 29 264 6 223 b 0 94 0 132 0 114 b 109 -276 0 -63 37 -186 b 144 -323 121 -291 132 -307 b 153 -333 147 -330 151 -333 b 160 -320 157 -333 158 -328 b 168 -174 167 -272 168 -222 b 154 190 168 -52 157 68 b 151 445 153 275 151 360 z m 480 153 b 372 264 472 223 432 264 b 328 256 359 264 344 261 b 268 232 308 251 288 240 l 266 230 l 266 268 b 272 432 266 323 269 377 b 275 526 272 464 275 494 b 265 618 275 556 272 588 b 248 647 262 628 262 647 l 246 647 b 219 612 230 645 219 632 b 215 490 217 572 213 530 l 215 445 b 207 190 215 360 210 275 b 183 -174 203 68 183 -52 b 199 -320 183 -222 186 -272 b 210 -333 202 -328 204 -333 b 228 -323 215 -333 220 -330 b 288 -276 246 -307 268 -291 b 482 94 415 -186 482 -63 b 480 153 482 114 482 132 z m 40 30 b 36 59 36 42 36 50 b 55 95 35 75 42 86 b 73 102 60 99 68 102 b 121 76 89 102 105 88 l 124 73 b 127 -22 124 42 125 10 l 131 -138 b 40 30 95 -92 60 -43 z m 419 59 b 412 30 419 50 418 42 b 249 -138 374 -43 314 -92 b 258 -22 252 -101 253 -62 b 262 73 261 10 262 42 l 268 76 b 353 102 295 88 323 102 b 386 95 363 102 374 99 b 419 59 409 86 420 75 z',\n    },\n    accidentalWilsonPlus: {\n      x_min: 0,\n      x_max: 298,\n      y_min: -218,\n      y_max: 218,\n      ha: 436,\n      o: 'm 232 -314 b 236 -301 236 -310 236 -305 l 236 -295 b 243 -52 239 -213 242 -132 l 369 62 b 429 200 413 101 425 147 b 416 243 429 216 428 236 b 383 225 406 251 393 232 l 377 220 b 246 98 336 177 291 138 b 249 242 248 145 246 193 b 225 304 251 265 242 287 b 209 314 220 308 215 314 b 204 312 207 314 206 312 b 196 292 196 310 196 300 b 193 184 194 256 194 220 b 187 48 192 140 190 94 b 46 -72 141 7 94 -32 b 0 -163 13 -98 0 -127 b 1 -187 0 -170 0 -179 b 10 -235 4 -203 6 -219 b 20 -255 12 -242 14 -251 b 36 -245 26 -259 30 -249 b 181 -109 85 -200 132 -154 b 176 -258 180 -158 176 -209 b 232 -314 176 -298 186 -307 z',\n    },\n    accidentalWilsonMinus: {\n      x_min: 0,\n      x_max: 284,\n      y_min: -163,\n      y_max: 163,\n      ha: 326,\n      o: 'm 386 -232 b 409 -163 415 -222 408 -180 b 382 -69 410 -120 408 -89 b 32 228 264 30 141 118 b 17 235 26 233 22 235 b 3 219 9 235 3 228 b 0 157 3 199 0 179 b 29 69 0 125 6 95 b 323 -194 115 -29 222 -111 b 374 -235 338 -206 353 -235 b 386 -232 377 -235 382 -233 z',\n    },\n  },\n  fontFamily: 'Petaluma',\n  resolution: 1000,\n  generatedOn: '2022-12-18T09:07:50.817Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { PetalumaFont } from './petaluma_glyphs';\nimport { ChordSymbolGlyphMetrics } from '../chordsymbol';\nimport { FontMetrics } from '../font';\n\nconst petalumaChordMetrics: Record<string, ChordSymbolGlyphMetrics> = {\n  csymDiminished: {\n    scale: 0.8,\n    leftSideBearing: -95,\n    advanceWidth: 506,\n    yOffset: 0,\n  },\n  csymHalfDiminished: {\n    scale: 0.8,\n    leftSideBearing: -32,\n    advanceWidth: 506,\n    yOffset: 0,\n  },\n  csymAugmented: {\n    scale: 1,\n    leftSideBearing: -25,\n    advanceWidth: 530,\n    yOffset: 0,\n  },\n  csymParensLeftTall: {\n    scale: 0.8,\n    leftSideBearing: 0,\n    advanceWidth: 155,\n    yOffset: 150,\n  },\n  csymParensRightTall: {\n    scale: 0.8,\n    leftSideBearing: 40,\n    advanceWidth: 189,\n    yOffset: 150,\n  },\n  csymBracketLeftTall: {\n    scale: 0.8,\n    leftSideBearing: 0,\n    advanceWidth: 328,\n    yOffset: 0,\n  },\n  csymBracketRightTall: {\n    scale: 0.8,\n    leftSideBearing: 1,\n    advanceWidth: 600,\n    yOffset: 0,\n  },\n  csymParensLeftVeryTall: {\n    scale: 0.95,\n    leftSideBearing: 0,\n    advanceWidth: 210,\n    yOffset: 250,\n  },\n  csymParensRightVeryTall: {\n    scale: 0.9,\n    leftSideBearing: -100,\n    advanceWidth: 111,\n    yOffset: 250,\n  },\n  csymDiagonalArrangementSlash: {\n    scale: 0.6,\n    leftSideBearing: -1,\n    advanceWidth: 990,\n    yOffset: 0,\n  },\n  csymMinor: {\n    scale: 0.7,\n    leftSideBearing: 0,\n    advanceWidth: 482,\n    yOffset: 0,\n  },\n  csymMajorSeventh: {\n    scale: 0.8,\n    leftSideBearing: 100,\n    yOffset: 0,\n    advanceWidth: 600,\n  },\n  accidentalSharp: {\n    scale: 0.7,\n    leftSideBearing: 0,\n    advanceWidth: 425,\n    yOffset: -422,\n  },\n  accidentalFlat: {\n    scale: 0.8,\n    leftSideBearing: -10,\n    advanceWidth: 228,\n    yOffset: -284,\n  }\n}\nexport function loadPetaluma() {\n  const metrics: FontMetrics = JSON.parse(JSON.stringify(CommonMetrics));\n  const chordMetrics = metrics.chordSymbol;\n  if (chordMetrics) {\n    chordMetrics.glyphs = petalumaChordMetrics;\n  }\n  Font.load('Petaluma', PetalumaFont, metrics);\n}\n","export const PetalumaScriptFont = {\n  spacing: 50,\n  glyphs: {\n    ' ': {\n      x_min: 0,\n      x_max: 250,\n      y_min: 0,\n      y_max: 500,\n      ha: 500,\n      leftSideBearing: 0,\n      advanceWidth: 250,\n    },\n    '0': {\n      x_min: 33,\n      x_max: 534,\n      y_min: -13,\n      y_max: 751,\n      ha: 764,\n      leftSideBearing: 33,\n      advanceWidth: 570,\n    },\n    '1': {\n      x_min: 48,\n      x_max: 235,\n      y_min: -17,\n      y_max: 734,\n      ha: 751,\n      leftSideBearing: 48,\n      advanceWidth: 286,\n    },\n    '2': {\n      x_min: 56,\n      x_max: 571,\n      y_min: -19,\n      y_max: 741,\n      ha: 760,\n      leftSideBearing: 56,\n      advanceWidth: 626,\n    },\n    '3': {\n      x_min: 50,\n      x_max: 528,\n      y_min: -7,\n      y_max: 731,\n      ha: 738,\n      leftSideBearing: 50,\n      advanceWidth: 589,\n    },\n    '4': {\n      x_min: 38,\n      x_max: 564,\n      y_min: -13,\n      y_max: 743,\n      ha: 756,\n      leftSideBearing: 38,\n      advanceWidth: 614,\n    },\n    '5': {\n      x_min: 42,\n      x_max: 601,\n      y_min: -34,\n      y_max: 743,\n      ha: 777,\n      leftSideBearing: 42,\n      advanceWidth: 648,\n    },\n    '6': {\n      x_min: 47,\n      x_max: 606,\n      y_min: -16,\n      y_max: 743,\n      ha: 759,\n      leftSideBearing: 47,\n      advanceWidth: 667,\n    },\n    '7': {\n      x_min: 47,\n      x_max: 567,\n      y_min: 5,\n      y_max: 739,\n      ha: 734,\n      leftSideBearing: 0,\n      advanceWidth: 615,\n    },\n    '8': {\n      x_min: 40,\n      x_max: 541,\n      y_min: -15,\n      y_max: 752,\n      ha: 767,\n      leftSideBearing: 40,\n      advanceWidth: 585,\n    },\n    '9': {\n      x_min: 40,\n      x_max: 537,\n      y_min: -52,\n      y_max: 736,\n      ha: 788,\n      leftSideBearing: 40,\n      advanceWidth: 592,\n    },\n    '!': {\n      x_min: 49,\n      x_max: 180,\n      y_min: -7,\n      y_max: 761,\n      ha: 768,\n      leftSideBearing: 49,\n      advanceWidth: 230,\n    },\n    '\"': {\n      x_min: 39,\n      x_max: 304,\n      y_min: 596,\n      y_max: 804,\n      ha: 208,\n      leftSideBearing: 39,\n      advanceWidth: 353,\n    },\n    '#': {\n      x_min: 33,\n      x_max: 599,\n      y_min: -8,\n      y_max: 765,\n      ha: 773,\n      leftSideBearing: 33,\n      advanceWidth: 648,\n    },\n    $: {\n      x_min: 53,\n      x_max: 495,\n      y_min: -111,\n      y_max: 823,\n      ha: 934,\n      leftSideBearing: 53,\n      advanceWidth: 560,\n    },\n    '%': {\n      x_min: 35,\n      x_max: 656,\n      y_min: -128,\n      y_max: 808,\n      ha: 936,\n      leftSideBearing: 35,\n      advanceWidth: 711,\n    },\n    '&': {\n      x_min: 53,\n      x_max: 441,\n      y_min: -3,\n      y_max: 753,\n      ha: 756,\n      leftSideBearing: 53,\n      advanceWidth: 500,\n    },\n    \"'\": {\n      x_min: 43,\n      x_max: 161,\n      y_min: 590,\n      y_max: 811,\n      ha: 221,\n      leftSideBearing: 43,\n      advanceWidth: 217,\n    },\n    '(': {\n      x_min: 41,\n      x_max: 311,\n      y_min: -36,\n      y_max: 845,\n      ha: 881,\n      leftSideBearing: 41,\n      advanceWidth: 308,\n    },\n    ')': {\n      x_min: -8,\n      x_max: 257,\n      y_min: -21,\n      y_max: 852,\n      ha: 873,\n      leftSideBearing: -8,\n      advanceWidth: 280,\n    },\n    '*': {\n      x_min: 59,\n      x_max: 539,\n      y_min: 175,\n      y_max: 589,\n      ha: 414,\n      leftSideBearing: 59,\n      advanceWidth: 601,\n    },\n    '+': {\n      x_min: 33,\n      x_max: 361,\n      y_min: 180,\n      y_max: 587,\n      ha: 407,\n      leftSideBearing: 33,\n      advanceWidth: 400,\n    },\n    ',': {\n      x_min: 15,\n      x_max: 176,\n      y_min: -129,\n      y_max: 92,\n      ha: 221,\n      leftSideBearing: 15,\n      advanceWidth: 205,\n    },\n    '-': {\n      x_min: 40,\n      x_max: 380,\n      y_min: 317,\n      y_max: 452,\n      ha: 135,\n      leftSideBearing: 40,\n      advanceWidth: 422,\n    },\n    '.': {\n      x_min: 48,\n      x_max: 185,\n      y_min: -56,\n      y_max: 84,\n      ha: 140,\n      leftSideBearing: 48,\n      advanceWidth: 227,\n    },\n    '/': {\n      x_min: -58,\n      x_max: 654,\n      y_min: -122,\n      y_max: 844,\n      ha: 966,\n      leftSideBearing: -58,\n      advanceWidth: 626,\n    },\n    ':': {\n      x_min: 65,\n      x_max: 225,\n      y_min: 97,\n      y_max: 536,\n      ha: 439,\n      leftSideBearing: 65,\n      advanceWidth: 302,\n    },\n    ';': {\n      x_min: 13,\n      x_max: 295,\n      y_min: -139,\n      y_max: 536,\n      ha: 675,\n      leftSideBearing: 13,\n      advanceWidth: 334,\n    },\n    '<': {\n      x_min: 28,\n      x_max: 438,\n      y_min: -1,\n      y_max: 607,\n      ha: 608,\n      leftSideBearing: 28,\n      advanceWidth: 475,\n    },\n    '=': {\n      x_min: 40,\n      x_max: 383,\n      y_min: 199.9598640852289,\n      y_max: 541,\n      ha: 341.0401359147711,\n      leftSideBearing: 40,\n      advanceWidth: 422,\n    },\n    '>': {\n      x_min: 35,\n      x_max: 421,\n      y_min: 28,\n      y_max: 632,\n      ha: 604,\n      leftSideBearing: 35,\n      advanceWidth: 466,\n    },\n    '?': {\n      x_min: 45,\n      x_max: 548,\n      y_min: -17,\n      y_max: 767,\n      ha: 784,\n      leftSideBearing: 45,\n      advanceWidth: 592,\n    },\n    '@': {\n      x_min: 51,\n      x_max: 730,\n      y_min: -78,\n      y_max: 753,\n      ha: 831,\n      leftSideBearing: 51,\n      advanceWidth: 781,\n    },\n    A: {\n      x_min: 37,\n      x_max: 554,\n      y_min: -4,\n      y_max: 746,\n      ha: 750,\n      leftSideBearing: 37,\n      advanceWidth: 617,\n    },\n    B: {\n      x_min: 37,\n      x_max: 532,\n      y_min: 3,\n      y_max: 783,\n      ha: 780,\n      leftSideBearing: 37,\n      advanceWidth: 579,\n    },\n    C: {\n      x_min: 37,\n      x_max: 583,\n      y_min: -3,\n      y_max: 775,\n      ha: 778,\n      leftSideBearing: 37,\n      advanceWidth: 623,\n    },\n    D: {\n      x_min: 50,\n      x_max: 530,\n      y_min: -15,\n      y_max: 749,\n      ha: 764,\n      leftSideBearing: 50,\n      advanceWidth: 579,\n    },\n    E: {\n      x_min: 45,\n      x_max: 531,\n      y_min: -1,\n      y_max: 743,\n      ha: 744,\n      leftSideBearing: 45,\n      advanceWidth: 585,\n    },\n    F: {\n      x_min: 45,\n      x_max: 459,\n      y_min: 23,\n      y_max: 727,\n      ha: 704,\n      leftSideBearing: 45,\n      advanceWidth: 510,\n    },\n    G: {\n      x_min: 31,\n      x_max: 577,\n      y_min: -8,\n      y_max: 733,\n      ha: 741,\n      leftSideBearing: 31,\n      advanceWidth: 611,\n    },\n    H: {\n      x_min: 37,\n      x_max: 493,\n      y_min: -22,\n      y_max: 758,\n      ha: 780,\n      leftSideBearing: 37,\n      advanceWidth: 535,\n    },\n    I: {\n      x_min: 47,\n      x_max: 501,\n      y_min: -3,\n      y_max: 731,\n      ha: 734,\n      leftSideBearing: 47,\n      advanceWidth: 541,\n    },\n    J: {\n      x_min: 33,\n      x_max: 531,\n      y_min: -23,\n      y_max: 725,\n      ha: 748,\n      leftSideBearing: 33,\n      advanceWidth: 573,\n    },\n    K: {\n      x_min: 43,\n      x_max: 505,\n      y_min: -10,\n      y_max: 740,\n      ha: 750,\n      leftSideBearing: 43,\n      advanceWidth: 560,\n    },\n    L: {\n      x_min: 49,\n      x_max: 457,\n      y_min: -2,\n      y_max: 746,\n      ha: 748,\n      leftSideBearing: 49,\n      advanceWidth: 510,\n    },\n    M: {\n      x_min: 35,\n      x_max: 699,\n      y_min: 1,\n      y_max: 744,\n      ha: 743,\n      leftSideBearing: 35,\n      advanceWidth: 743,\n    },\n    N: {\n      x_min: 34,\n      x_max: 533,\n      y_min: -17,\n      y_max: 761,\n      ha: 778,\n      leftSideBearing: 34,\n      advanceWidth: 579,\n    },\n    O: {\n      x_min: 41,\n      x_max: 608,\n      y_min: -5,\n      y_max: 735,\n      ha: 740,\n      leftSideBearing: 41,\n      advanceWidth: 667,\n    },\n    P: {\n      x_min: 53,\n      x_max: 451,\n      y_min: -18,\n      y_max: 735,\n      ha: 753,\n      leftSideBearing: 53,\n      advanceWidth: 497,\n    },\n    Q: {\n      x_min: 40,\n      x_max: 599,\n      y_min: -67,\n      y_max: 744,\n      ha: 811,\n      leftSideBearing: 40,\n      advanceWidth: 648,\n    },\n    R: {\n      x_min: 39,\n      x_max: 487,\n      y_min: 16,\n      y_max: 735,\n      ha: 719,\n      leftSideBearing: 39,\n      advanceWidth: 535,\n    },\n    S: {\n      x_min: 35,\n      x_max: 552,\n      y_min: -47,\n      y_max: 708,\n      ha: 755,\n      leftSideBearing: 35,\n      advanceWidth: 604,\n    },\n    T: {\n      x_min: 26,\n      x_max: 656,\n      y_min: -13,\n      y_max: 718,\n      ha: 731,\n      leftSideBearing: 26,\n      advanceWidth: 705,\n    },\n    U: {\n      x_min: 41,\n      x_max: 518,\n      y_min: -20,\n      y_max: 748,\n      ha: 768,\n      leftSideBearing: 41,\n      advanceWidth: 567,\n    },\n    V: {\n      x_min: 47,\n      x_max: 509,\n      y_min: -26,\n      y_max: 744,\n      ha: 770,\n      leftSideBearing: 47,\n      advanceWidth: 567,\n    },\n    W: {\n      x_min: 44,\n      x_max: 789,\n      y_min: -35,\n      y_max: 720,\n      ha: 755,\n      leftSideBearing: 44,\n      advanceWidth: 833,\n    },\n    X: {\n      x_min: 63,\n      x_max: 635,\n      y_min: -10,\n      y_max: 745,\n      ha: 755,\n      leftSideBearing: 63,\n      advanceWidth: 680,\n    },\n    Y: {\n      x_min: 43,\n      x_max: 503,\n      y_min: -21,\n      y_max: 734,\n      ha: 755,\n      leftSideBearing: 43,\n      advanceWidth: 541,\n    },\n    Z: {\n      x_min: 42,\n      x_max: 584,\n      y_min: -10,\n      y_max: 739,\n      ha: 749,\n      leftSideBearing: 42,\n      advanceWidth: 629,\n    },\n    '[': {\n      x_min: 46,\n      x_max: 346,\n      y_min: -150,\n      y_max: 884,\n      ha: 1034,\n      leftSideBearing: 46,\n      advanceWidth: 291,\n    },\n    '\\\\': {\n      x_min: 20,\n      x_max: 616,\n      y_min: -100,\n      y_max: 797,\n      ha: 897,\n      leftSideBearing: 20,\n      advanceWidth: 645,\n    },\n    ']': {\n      x_min: -76,\n      x_max: 226,\n      y_min: -150,\n      y_max: 881,\n      ha: 1031,\n      leftSideBearing: -76,\n      advanceWidth: 297,\n    },\n    '^': {\n      x_min: 43,\n      x_max: 437,\n      y_min: 517,\n      y_max: 812,\n      ha: 295,\n      leftSideBearing: 43,\n      advanceWidth: 478,\n    },\n    _: {\n      x_min: 29,\n      x_max: 563,\n      y_min: -110,\n      y_max: -1,\n      ha: 109,\n      leftSideBearing: 29,\n      advanceWidth: 598,\n    },\n    '`': {\n      x_min: 54,\n      x_max: 321,\n      y_min: 540,\n      y_max: 747,\n      ha: 207,\n      leftSideBearing: 54,\n      advanceWidth: 368,\n    },\n    a: {\n      x_min: 20,\n      x_max: 447,\n      y_min: -17,\n      y_max: 495,\n      ha: 512,\n      leftSideBearing: 20,\n      advanceWidth: 494,\n    },\n    b: {\n      x_min: 37,\n      x_max: 466,\n      y_min: -27,\n      y_max: 770,\n      ha: 797,\n      leftSideBearing: 37,\n      advanceWidth: 510,\n    },\n    c: {\n      x_min: 35,\n      x_max: 456,\n      y_min: -9,\n      y_max: 507,\n      ha: 516,\n      leftSideBearing: 35,\n      advanceWidth: 460,\n    },\n    d: {\n      x_min: 45,\n      x_max: 520,\n      y_min: -15,\n      y_max: 764,\n      ha: 779,\n      leftSideBearing: 45,\n      advanceWidth: 560,\n    },\n    e: {\n      x_min: 33,\n      x_max: 370,\n      y_min: -5,\n      y_max: 501,\n      ha: 506,\n      leftSideBearing: 33,\n      advanceWidth: 397,\n    },\n    f: {\n      x_min: 35,\n      x_max: 411,\n      y_min: -13,\n      y_max: 695,\n      ha: 708,\n      leftSideBearing: 35,\n      advanceWidth: 453,\n    },\n    g: {\n      x_min: 33,\n      x_max: 551,\n      y_min: -257,\n      y_max: 505,\n      ha: 762,\n      leftSideBearing: 33,\n      advanceWidth: 611,\n    },\n    h: {\n      x_min: 32,\n      x_max: 458,\n      y_min: -29,\n      y_max: 743,\n      ha: 772,\n      leftSideBearing: 32,\n      advanceWidth: 491,\n    },\n    i: {\n      x_min: 45,\n      x_max: 167,\n      y_min: -13,\n      y_max: 631,\n      ha: 644,\n      leftSideBearing: 45,\n      advanceWidth: 220,\n    },\n    j: {\n      x_min: -127,\n      x_max: 261,\n      y_min: -231,\n      y_max: 601,\n      ha: 832,\n      leftSideBearing: -127,\n      advanceWidth: 308,\n    },\n    k: {\n      x_min: 39,\n      x_max: 443,\n      y_min: -3,\n      y_max: 700,\n      ha: 703,\n      leftSideBearing: 39,\n      advanceWidth: 497,\n    },\n    l: {\n      x_min: 58,\n      x_max: 168,\n      y_min: -8,\n      y_max: 686,\n      ha: 694,\n      leftSideBearing: 58,\n      advanceWidth: 227,\n    },\n    m: {\n      x_min: 39,\n      x_max: 688,\n      y_min: -14,\n      y_max: 501,\n      ha: 515,\n      leftSideBearing: 39,\n      advanceWidth: 718,\n    },\n    n: {\n      x_min: 45,\n      x_max: 491,\n      y_min: -32,\n      y_max: 512,\n      ha: 544,\n      leftSideBearing: 45,\n      advanceWidth: 541,\n    },\n    o: {\n      x_min: 41,\n      x_max: 424,\n      y_min: -12,\n      y_max: 493,\n      ha: 505,\n      leftSideBearing: 41,\n      advanceWidth: 447,\n    },\n    p: {\n      x_min: 25,\n      x_max: 529,\n      y_min: -260,\n      y_max: 500,\n      ha: 760,\n      leftSideBearing: 25,\n      advanceWidth: 573,\n    },\n    q: {\n      x_min: 53,\n      x_max: 603,\n      y_min: -235,\n      y_max: 514,\n      ha: 749,\n      leftSideBearing: 53,\n      advanceWidth: 623,\n    },\n    r: {\n      x_min: 32,\n      x_max: 407,\n      y_min: -7,\n      y_max: 492,\n      ha: 499,\n      leftSideBearing: 32,\n      advanceWidth: 460,\n    },\n    s: {\n      x_min: 49,\n      x_max: 416,\n      y_min: -12,\n      y_max: 519,\n      ha: 531,\n      leftSideBearing: 49,\n      advanceWidth: 460,\n    },\n    t: {\n      x_min: 32,\n      x_max: 442,\n      y_min: -5,\n      y_max: 684,\n      ha: 689,\n      leftSideBearing: 32,\n      advanceWidth: 469,\n    },\n    u: {\n      x_min: 41,\n      x_max: 487,\n      y_min: -5,\n      y_max: 507,\n      ha: 512,\n      leftSideBearing: 41,\n      advanceWidth: 510,\n    },\n    v: {\n      x_min: 16,\n      x_max: 441,\n      y_min: -20,\n      y_max: 542,\n      ha: 562,\n      leftSideBearing: 16,\n      advanceWidth: 456,\n    },\n    w: {\n      x_min: 39,\n      x_max: 639,\n      y_min: -22,\n      y_max: 505,\n      ha: 527,\n      leftSideBearing: 39,\n      advanceWidth: 661,\n    },\n    x: {\n      x_min: 15,\n      x_max: 505,\n      y_min: -39,\n      y_max: 539,\n      ha: 578,\n      leftSideBearing: 15,\n      advanceWidth: 541,\n    },\n    y: {\n      x_min: -98,\n      x_max: 501,\n      y_min: -242,\n      y_max: 511,\n      ha: 753,\n      leftSideBearing: -98,\n      advanceWidth: 548,\n    },\n    z: {\n      x_min: 27,\n      x_max: 479,\n      y_min: -3,\n      y_max: 494,\n      ha: 497,\n      leftSideBearing: 27,\n      advanceWidth: 494,\n    },\n    '{': {\n      x_min: 0,\n      x_max: 0,\n      y_min: 0,\n      y_max: 0,\n      ha: 0,\n      leftSideBearing: 0,\n      advanceWidth: 308,\n    },\n    '|': {\n      x_min: 0,\n      x_max: 0,\n      y_min: 0,\n      y_max: 0,\n      ha: 0,\n      leftSideBearing: 0,\n      advanceWidth: 308,\n    },\n    '}': {\n      x_min: 0,\n      x_max: 0,\n      y_min: 0,\n      y_max: 0,\n      ha: 0,\n      leftSideBearing: 0,\n      advanceWidth: 308,\n    },\n    '~': {\n      x_min: 0,\n      x_max: 0,\n      y_min: 0,\n      y_max: 0,\n      ha: 0,\n      leftSideBearing: 0,\n      advanceWidth: 308,\n    },\n  },\n  fontFamily: 'PetalumaScript',\n  resolution: 1000,\n  generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n  spacing: 50,\n  glyphs: {\n    ' ': {\n      x_min: 0,\n      x_max: 509,\n      y_min: 0,\n      y_max: 2000,\n      ha: 2000,\n      leftSideBearing: 0,\n      advanceWidth: 509,\n    },\n    '0': {\n      x_min: 121,\n      x_max: 1048,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 121,\n      advanceWidth: 1168,\n    },\n    '1': {\n      x_min: 117,\n      x_max: 767,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 117,\n      advanceWidth: 844,\n    },\n    '2': {\n      x_min: 75.8474576645637,\n      x_max: 1040,\n      y_min: 0,\n      y_max: 1477,\n      ha: 1477,\n      leftSideBearing: 75,\n      advanceWidth: 1131,\n    },\n    '3': {\n      x_min: 74.85365853658536,\n      x_max: 994,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 74,\n      advanceWidth: 1106,\n    },\n    '4': {\n      x_min: 63,\n      x_max: 1114,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 63,\n      advanceWidth: 1187,\n    },\n    '5': {\n      x_min: 96.8448275474953,\n      x_max: 982,\n      y_min: -21,\n      y_max: 1456,\n      ha: 1477,\n      leftSideBearing: 96,\n      advanceWidth: 1081,\n    },\n    '6': {\n      x_min: 121,\n      x_max: 1067,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 121,\n      advanceWidth: 1144,\n    },\n    '7': {\n      x_min: 76,\n      x_max: 1060,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: -30,\n      advanceWidth: 1128,\n    },\n    '8': {\n      x_min: 92,\n      x_max: 1039,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 92,\n      advanceWidth: 1131,\n    },\n    '9': {\n      x_min: 84,\n      x_max: 1026,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 84,\n      advanceWidth: 1154,\n    },\n    '!': {\n      x_min: 143,\n      x_max: 340,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 143,\n      advanceWidth: 483,\n    },\n    '\"': {\n      x_min: 166,\n      x_max: 634,\n      y_min: 1055,\n      y_max: 1560,\n      ha: 505,\n      leftSideBearing: 166,\n      advanceWidth: 770,\n    },\n    '#': {\n      x_min: 63,\n      x_max: 1179,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 63,\n      advanceWidth: 1246,\n    },\n    $: {\n      x_min: 81.92156915727656,\n      x_max: 1012,\n      y_min: -208,\n      y_max: 1693,\n      ha: 1901,\n      leftSideBearing: 81,\n      advanceWidth: 1110,\n    },\n    '%': {\n      x_min: 77,\n      x_max: 1384,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 77,\n      advanceWidth: 1460,\n    },\n    '&': {\n      x_min: 74,\n      x_max: 1242,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 74,\n      advanceWidth: 1289,\n    },\n    \"'\": {\n      x_min: 166,\n      x_max: 324,\n      y_min: 1055,\n      y_max: 1560,\n      ha: 505,\n      leftSideBearing: 166,\n      advanceWidth: 460,\n    },\n    '(': {\n      x_min: 114,\n      x_max: 650,\n      y_min: -463,\n      y_max: 1636,\n      ha: 2099,\n      leftSideBearing: 114,\n      advanceWidth: 662,\n    },\n    ')': {\n      x_min: 11,\n      x_max: 547,\n      y_min: -463,\n      y_max: 1636,\n      ha: 2099,\n      leftSideBearing: 11,\n      advanceWidth: 654,\n    },\n    '*': {\n      x_min: 66,\n      x_max: 893,\n      y_min: 607,\n      y_max: 1456,\n      ha: 849,\n      leftSideBearing: 66,\n      advanceWidth: 958,\n    },\n    '+': {\n      x_min: 73,\n      x_max: 1071,\n      y_min: 146,\n      y_max: 1206,\n      ha: 1060,\n      leftSideBearing: 73,\n      advanceWidth: 1145,\n    },\n    ',': {\n      x_min: 23,\n      x_max: 315,\n      y_min: -311,\n      y_max: 221,\n      ha: 532,\n      leftSideBearing: 23,\n      advanceWidth: 404,\n    },\n    '-': {\n      x_min: 154,\n      x_max: 643,\n      y_min: 538,\n      y_max: 692,\n      ha: 154,\n      leftSideBearing: 154,\n      advanceWidth: 797,\n    },\n    '.': {\n      x_min: 145,\n      x_max: 342,\n      y_min: 0,\n      y_max: 202,\n      ha: 202,\n      leftSideBearing: 145,\n      advanceWidth: 493,\n    },\n    '/': {\n      x_min: 0,\n      x_max: 774,\n      y_min: -125,\n      y_max: 1456,\n      ha: 1581,\n      leftSideBearing: 0,\n      advanceWidth: 824,\n    },\n    ':': {\n      x_min: 145,\n      x_max: 342,\n      y_min: 0,\n      y_max: 1082,\n      ha: 1082,\n      leftSideBearing: 145,\n      advanceWidth: 419,\n    },\n    ';': {\n      x_min: 53,\n      x_max: 345,\n      y_min: -311,\n      y_max: 1082,\n      ha: 1393,\n      leftSideBearing: 53,\n      advanceWidth: 424,\n    },\n    '<': {\n      x_min: 76,\n      x_max: 892,\n      y_min: 107,\n      y_max: 1013,\n      ha: 906,\n      leftSideBearing: 76,\n      advanceWidth: 1017,\n    },\n    '=': {\n      x_min: 147,\n      x_max: 981,\n      y_min: 407,\n      y_max: 987,\n      ha: 580,\n      leftSideBearing: 147,\n      advanceWidth: 1127,\n    },\n    '>': {\n      x_min: 125,\n      x_max: 980,\n      y_min: 87,\n      y_max: 993,\n      ha: 906,\n      leftSideBearing: 125,\n      advanceWidth: 1060,\n    },\n    '?': {\n      x_min: 65.92660602419838,\n      x_max: 890,\n      y_min: 0,\n      y_max: 1477,\n      ha: 1477,\n      leftSideBearing: 65,\n      advanceWidth: 953,\n    },\n    '@': {\n      x_min: 84.3592218305664,\n      x_max: 1705.2346925277395,\n      y_min: -453,\n      y_max: 1431,\n      ha: 1884,\n      leftSideBearing: 84,\n      advanceWidth: 1821,\n    },\n    A: {\n      x_min: 70,\n      x_max: 1463,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 70,\n      advanceWidth: 1533,\n    },\n    B: {\n      x_min: 81,\n      x_max: 1253,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 1322,\n    },\n    C: {\n      x_min: 80,\n      x_max: 1174,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 80,\n      advanceWidth: 1290,\n    },\n    D: {\n      x_min: 81,\n      x_max: 1291,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 1356,\n    },\n    E: {\n      x_min: 81,\n      x_max: 1190,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 1306,\n    },\n    F: {\n      x_min: 81,\n      x_max: 1176,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 1256,\n    },\n    G: {\n      x_min: 80,\n      x_max: 1226,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 80,\n      advanceWidth: 1346,\n    },\n    H: {\n      x_min: 81,\n      x_max: 1497,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 1578,\n    },\n    I: {\n      x_min: 81,\n      x_max: 604,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 685,\n    },\n    J: {\n      x_min: 60,\n      x_max: 1100,\n      y_min: -21,\n      y_max: 1456,\n      ha: 1477,\n      leftSideBearing: 60,\n      advanceWidth: 1169,\n    },\n    K: {\n      x_min: 81,\n      x_max: 1427,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 1501,\n    },\n    L: {\n      x_min: 81,\n      x_max: 1130,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 1210,\n    },\n    M: {\n      x_min: 94,\n      x_max: 1888,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 94,\n      advanceWidth: 1982,\n    },\n    N: {\n      x_min: 83,\n      x_max: 1509,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 83,\n      advanceWidth: 1592,\n    },\n    O: {\n      x_min: 70,\n      x_max: 1281,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 70,\n      advanceWidth: 1351,\n    },\n    P: {\n      x_min: 81,\n      x_max: 1242,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 81,\n      advanceWidth: 1297,\n    },\n    Q: {\n      x_min: 70,\n      x_max: 1348,\n      y_min: -245,\n      y_max: 1477,\n      ha: 1722,\n      leftSideBearing: 70,\n      advanceWidth: 1376,\n    },\n    R: {\n      x_min: 81,\n      x_max: 1285,\n      y_min: 0,\n      y_max: 1455,\n      ha: 1455,\n      leftSideBearing: 81,\n      advanceWidth: 1385,\n    },\n    S: {\n      x_min: 115,\n      x_max: 1116,\n      y_min: -21,\n      y_max: 1477,\n      ha: 1498,\n      leftSideBearing: 115,\n      advanceWidth: 1206,\n    },\n    T: {\n      x_min: 96,\n      x_max: 1306,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 96,\n      advanceWidth: 1406,\n    },\n    U: {\n      x_min: 70,\n      x_max: 1452,\n      y_min: -21,\n      y_max: 1456,\n      ha: 1477,\n      leftSideBearing: 70,\n      advanceWidth: 1522,\n    },\n    V: {\n      x_min: 65,\n      x_max: 1443,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 65,\n      advanceWidth: 1508,\n    },\n    W: {\n      x_min: 72,\n      x_max: 2057,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 72,\n      advanceWidth: 2129,\n    },\n    X: {\n      x_min: 80,\n      x_max: 1449,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 80,\n      advanceWidth: 1529,\n    },\n    Y: {\n      x_min: 65,\n      x_max: 1396,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 65,\n      advanceWidth: 1461,\n    },\n    Z: {\n      x_min: 90,\n      x_max: 1107,\n      y_min: 0,\n      y_max: 1456,\n      ha: 1456,\n      leftSideBearing: 90,\n      advanceWidth: 1197,\n    },\n    '[': {\n      x_min: 157,\n      x_max: 541,\n      y_min: -312,\n      y_max: 1664,\n      ha: 1976,\n      leftSideBearing: 157,\n      advanceWidth: 573,\n    },\n    '\\\\': {\n      x_min: 36,\n      x_max: 830,\n      y_min: -125,\n      y_max: 1456,\n      ha: 1581,\n      leftSideBearing: 36,\n      advanceWidth: 841,\n    },\n    ']': {\n      x_min: 23,\n      x_max: 408,\n      y_min: -312,\n      y_max: 1664,\n      ha: 1976,\n      leftSideBearing: 23,\n      advanceWidth: 552,\n    },\n    '^': {\n      x_min: 71,\n      x_max: 802,\n      y_min: 729,\n      y_max: 1456,\n      ha: 727,\n      leftSideBearing: 71,\n      advanceWidth: 864,\n    },\n    _: {\n      x_min: 119,\n      x_max: 1041,\n      y_min: -154,\n      y_max: 0,\n      ha: 154,\n      leftSideBearing: 119,\n      advanceWidth: 1168,\n    },\n    '`': {\n      x_min: 40,\n      x_max: 456,\n      y_min: 1288,\n      y_max: 1560,\n      ha: 272,\n      leftSideBearing: 40,\n      advanceWidth: 496,\n    },\n    a: {\n      x_min: 79,\n      x_max: 1053,\n      y_min: -21,\n      y_max: 1102,\n      ha: 1123,\n      leftSideBearing: 79,\n      advanceWidth: 1132,\n    },\n    b: {\n      x_min: -16,\n      x_max: 1071,\n      y_min: -21,\n      y_max: 1560,\n      ha: 1581,\n      leftSideBearing: -16,\n      advanceWidth: 1145,\n    },\n    c: {\n      x_min: 78,\n      x_max: 988,\n      y_min: -21,\n      y_max: 1102,\n      ha: 1123,\n      leftSideBearing: 78,\n      advanceWidth: 1067,\n    },\n    d: {\n      x_min: 78,\n      x_max: 1156,\n      y_min: -21,\n      y_max: 1560,\n      ha: 1581,\n      leftSideBearing: 78,\n      advanceWidth: 1218,\n    },\n    e: {\n      x_min: 74,\n      x_max: 980,\n      y_min: -21,\n      y_max: 1102,\n      ha: 1123,\n      leftSideBearing: 74,\n      advanceWidth: 1059,\n    },\n    f: {\n      x_min: 64,\n      x_max: 731,\n      y_min: 0,\n      y_max: 1581,\n      ha: 1581,\n      leftSideBearing: 64,\n      advanceWidth: 725,\n    },\n    g: {\n      x_min: 78,\n      x_max: 1133,\n      y_min: -437,\n      y_max: 1102,\n      ha: 1539,\n      leftSideBearing: 78,\n      advanceWidth: 1157,\n    },\n    h: {\n      x_min: 49,\n      x_max: 1255,\n      y_min: 0,\n      y_max: 1560,\n      ha: 1560,\n      leftSideBearing: 49,\n      advanceWidth: 1315,\n    },\n    i: {\n      x_min: 67,\n      x_max: 590,\n      y_min: 0,\n      y_max: 1560,\n      ha: 1560,\n      leftSideBearing: 67,\n      advanceWidth: 652,\n    },\n    j: {\n      x_min: -56,\n      x_max: 381,\n      y_min: -437,\n      y_max: 1560,\n      ha: 1997,\n      leftSideBearing: -56,\n      advanceWidth: 525,\n    },\n    k: {\n      x_min: 64,\n      x_max: 1248,\n      y_min: 0,\n      y_max: 1560,\n      ha: 1560,\n      leftSideBearing: 64,\n      advanceWidth: 1287,\n    },\n    l: {\n      x_min: 64,\n      x_max: 587,\n      y_min: 0,\n      y_max: 1560,\n      ha: 1560,\n      leftSideBearing: 64,\n      advanceWidth: 653,\n    },\n    m: {\n      x_min: 74,\n      x_max: 1905,\n      y_min: 0,\n      y_max: 1102,\n      ha: 1102,\n      leftSideBearing: 74,\n      advanceWidth: 1977,\n    },\n    n: {\n      x_min: 74,\n      x_max: 1278,\n      y_min: 0,\n      y_max: 1102,\n      ha: 1102,\n      leftSideBearing: 74,\n      advanceWidth: 1343,\n    },\n    o: {\n      x_min: 78,\n      x_max: 1046,\n      y_min: -21,\n      y_max: 1102,\n      ha: 1123,\n      leftSideBearing: 78,\n      advanceWidth: 1124,\n    },\n    p: {\n      x_min: 34,\n      x_max: 1119,\n      y_min: -416,\n      y_max: 1102,\n      ha: 1518,\n      leftSideBearing: 34,\n      advanceWidth: 1197,\n    },\n    q: {\n      x_min: 78,\n      x_max: 1135,\n      y_min: -416,\n      y_max: 1102,\n      ha: 1518,\n      leftSideBearing: 78,\n      advanceWidth: 1139,\n    },\n    r: {\n      x_min: 72,\n      x_max: 808,\n      y_min: 0,\n      y_max: 1102,\n      ha: 1102,\n      leftSideBearing: 72,\n      advanceWidth: 854,\n    },\n    s: {\n      x_min: 104,\n      x_max: 933,\n      y_min: -21,\n      y_max: 1102,\n      ha: 1123,\n      leftSideBearing: 104,\n      advanceWidth: 1022,\n    },\n    t: {\n      x_min: 24,\n      x_max: 678,\n      y_min: -17,\n      y_max: 1343,\n      ha: 1360,\n      leftSideBearing: 24,\n      advanceWidth: 730,\n    },\n    u: {\n      x_min: 52,\n      x_max: 1181,\n      y_min: -21,\n      y_max: 1082,\n      ha: 1103,\n      leftSideBearing: 52,\n      advanceWidth: 1245,\n    },\n    v: {\n      x_min: 26,\n      x_max: 1176,\n      y_min: 0,\n      y_max: 1082,\n      ha: 1082,\n      leftSideBearing: 26,\n      advanceWidth: 1206,\n    },\n    w: {\n      x_min: 52,\n      x_max: 1777,\n      y_min: 0,\n      y_max: 1082,\n      ha: 1082,\n      leftSideBearing: 52,\n      advanceWidth: 1823,\n    },\n    x: {\n      x_min: 42,\n      x_max: 1163,\n      y_min: 0,\n      y_max: 1082,\n      ha: 1082,\n      leftSideBearing: 42,\n      advanceWidth: 1203,\n    },\n    y: {\n      x_min: 24,\n      x_max: 1172,\n      y_min: -437,\n      y_max: 1082,\n      ha: 1519,\n      leftSideBearing: 24,\n      advanceWidth: 1192,\n    },\n    z: {\n      x_min: 88,\n      x_max: 960,\n      y_min: 0,\n      y_max: 1082,\n      ha: 1082,\n      leftSideBearing: 88,\n      advanceWidth: 1032,\n    },\n    '{': {\n      x_min: 63,\n      x_max: 671,\n      y_min: -364,\n      y_max: 1597,\n      ha: 1961,\n      leftSideBearing: 63,\n      advanceWidth: 701,\n    },\n    '|': {\n      x_min: 150,\n      x_max: 307,\n      y_min: -270,\n      y_max: 1456,\n      ha: 1726,\n      leftSideBearing: 150,\n      advanceWidth: 451,\n    },\n    '}': {\n      x_min: 27,\n      x_max: 635,\n      y_min: -364,\n      y_max: 1597,\n      ha: 1961,\n      leftSideBearing: 27,\n      advanceWidth: 701,\n    },\n    '~': {\n      x_min: 121,\n      x_max: 1257,\n      y_min: 401,\n      y_max: 803,\n      ha: 402,\n      leftSideBearing: 121,\n      advanceWidth: 1386,\n    },\n  },\n  fontFamily: 'Roboto Slab',\n  resolution: 2048,\n  generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","export const SansFontBold = {\n  glyphs: {\n    '0': {\n      x_min: 86,\n      x_max: 1038,\n      y_min: -25,\n      y_max: 1472,\n      ha: 1497,\n      leftSideBearing: 86,\n      advanceWidth: 1139,\n    },\n    '1': {\n      x_min: 162,\n      x_max: 806,\n      y_min: 0,\n      y_max: 1472,\n      ha: 1472,\n      leftSideBearing: 162,\n      advanceWidth: 1139,\n    },\n    '2': {\n      x_min: 51,\n      x_max: 1036,\n      y_min: 0,\n      y_max: 1472,\n      ha: 1472,\n      leftSideBearing: 51,\n      advanceWidth: 1139,\n    },\n    '3': {\n      x_min: 77,\n      x_max: 1051,\n      y_min: -25,\n      y_max: 1472,\n      ha: 1497,\n      leftSideBearing: 77,\n      advanceWidth: 1139,\n    },\n    '4': {\n      x_min: 38,\n      x_max: 1092,\n      y_min: 0,\n      y_max: 1472,\n      ha: 1472,\n      leftSideBearing: 38,\n      advanceWidth: 1139,\n    },\n    '5': {\n      x_min: 91,\n      x_max: 1077,\n      y_min: -25,\n      y_max: 1446,\n      ha: 1471,\n      leftSideBearing: 91,\n      advanceWidth: 1139,\n    },\n    '6': {\n      x_min: 87,\n      x_max: 1066,\n      y_min: -25,\n      y_max: 1472,\n      ha: 1497,\n      leftSideBearing: 87,\n      advanceWidth: 1139,\n    },\n    '7': {\n      x_min: 87,\n      x_max: 1048,\n      y_min: 0,\n      y_max: 1446,\n      ha: 1446,\n      leftSideBearing: 87,\n      advanceWidth: 1139,\n    },\n    '8': {\n      x_min: 83,\n      x_max: 1047,\n      y_min: -26,\n      y_max: 1472,\n      ha: 1498,\n      leftSideBearing: 83,\n      advanceWidth: 1139,\n    },\n    '9': {\n      x_min: 65,\n      x_max: 1044,\n      y_min: -26,\n      y_max: 1472,\n      ha: 1498,\n      leftSideBearing: 65,\n      advanceWidth: 1139,\n    },\n    ' ': {\n      x_min: 0,\n      x_max: 0,\n      y_min: 0,\n      y_max: 0,\n      ha: 0,\n      leftSideBearing: 0,\n      advanceWidth: 569,\n    },\n    '!': {\n      x_min: 184,\n      x_max: 488,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 184,\n      advanceWidth: 682,\n    },\n    '\"': {\n      x_min: 112,\n      x_max: 869,\n      y_min: 945,\n      y_max: 1466,\n      ha: 521,\n      leftSideBearing: 112,\n      advanceWidth: 971,\n    },\n    '#': {\n      x_min: 18,\n      x_max: 1115,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 18,\n      advanceWidth: 1139,\n    },\n    $: {\n      x_min: 70,\n      x_max: 1048,\n      y_min: -205,\n      y_max: 1584,\n      ha: 1789,\n      leftSideBearing: 70,\n      advanceWidth: 1139,\n    },\n    '%': {\n      x_min: 89,\n      x_max: 1725,\n      y_min: -59,\n      y_max: 1491,\n      ha: 1550,\n      leftSideBearing: 89,\n      advanceWidth: 1821,\n    },\n    '&': {\n      x_min: 90,\n      x_max: 1446,\n      y_min: -38,\n      y_max: 1491,\n      ha: 1529,\n      leftSideBearing: 90,\n      advanceWidth: 1479,\n    },\n    \"'\": {\n      x_min: 92,\n      x_max: 398,\n      y_min: 945,\n      y_max: 1466,\n      ha: 521,\n      leftSideBearing: 92,\n      advanceWidth: 487,\n    },\n    '(': {\n      x_min: 107,\n      x_max: 616,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 107,\n      advanceWidth: 682,\n    },\n    ')': {\n      x_min: 67,\n      x_max: 576,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 67,\n      advanceWidth: 682,\n    },\n    '*': {\n      x_min: 28,\n      x_max: 753,\n      y_min: 792,\n      y_max: 1491,\n      ha: 699,\n      leftSideBearing: 28,\n      advanceWidth: 797,\n    },\n    '+': {\n      x_min: 85,\n      x_max: 1110,\n      y_min: 211,\n      y_max: 1236,\n      ha: 1025,\n      leftSideBearing: 85,\n      advanceWidth: 1196,\n    },\n    ',': {\n      x_min: 117,\n      x_max: 421,\n      y_min: -327,\n      y_max: 281,\n      ha: 608,\n      leftSideBearing: 117,\n      advanceWidth: 569,\n    },\n    '-': {\n      x_min: 115,\n      x_max: 667,\n      y_min: 391,\n      y_max: 672,\n      ha: 281,\n      leftSideBearing: 115,\n      advanceWidth: 682,\n    },\n    '.': {\n      x_min: 147,\n      x_max: 428,\n      y_min: 0,\n      y_max: 281,\n      ha: 281,\n      leftSideBearing: 147,\n      advanceWidth: 569,\n    },\n    '/': {\n      x_min: -3,\n      x_max: 571,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: -3,\n      advanceWidth: 569,\n    },\n    ':': {\n      x_min: 201,\n      x_max: 482,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 201,\n      advanceWidth: 682,\n    },\n    ';': {\n      x_min: 170,\n      x_max: 474,\n      y_min: -327,\n      y_max: 1062,\n      ha: 1389,\n      leftSideBearing: 170,\n      advanceWidth: 682,\n    },\n    '<': {\n      x_min: 95,\n      x_max: 1100,\n      y_min: 167,\n      y_max: 1281,\n      ha: 1114,\n      leftSideBearing: 95,\n      advanceWidth: 1196,\n    },\n    '=': {\n      x_min: 85,\n      x_max: 1110,\n      y_min: 372,\n      y_max: 1074,\n      ha: 702,\n      leftSideBearing: 85,\n      advanceWidth: 1196,\n    },\n    '>': {\n      x_min: 95,\n      x_max: 1101,\n      y_min: 166,\n      y_max: 1279,\n      ha: 1113,\n      leftSideBearing: 95,\n      advanceWidth: 1196,\n    },\n    '?': {\n      x_min: 106,\n      x_max: 1158,\n      y_min: 0,\n      y_max: 1481,\n      ha: 1481,\n      leftSideBearing: 106,\n      advanceWidth: 1251,\n    },\n    '@': {\n      x_min: 61,\n      x_max: 1990,\n      y_min: -431,\n      y_max: 1492,\n      ha: 1923,\n      leftSideBearing: 61,\n      advanceWidth: 1997,\n    },\n    A: {\n      x_min: 0,\n      x_max: 1471,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 0,\n      advanceWidth: 1479,\n    },\n    B: {\n      x_min: 150,\n      x_max: 1378,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 150,\n      advanceWidth: 1479,\n    },\n    C: {\n      x_min: 97,\n      x_max: 1374,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 97,\n      advanceWidth: 1479,\n    },\n    D: {\n      x_min: 148,\n      x_max: 1377,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 148,\n      advanceWidth: 1479,\n    },\n    E: {\n      x_min: 149,\n      x_max: 1264,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 149,\n      advanceWidth: 1366,\n    },\n    F: {\n      x_min: 151,\n      x_max: 1156,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 151,\n      advanceWidth: 1251,\n    },\n    G: {\n      x_min: 98,\n      x_max: 1469,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 98,\n      advanceWidth: 1593,\n    },\n    H: {\n      x_min: 150,\n      x_max: 1322,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 150,\n      advanceWidth: 1479,\n    },\n    I: {\n      x_min: 140,\n      x_max: 436,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 140,\n      advanceWidth: 569,\n    },\n    J: {\n      x_min: 35,\n      x_max: 973,\n      y_min: -25,\n      y_max: 1466,\n      ha: 1491,\n      leftSideBearing: 35,\n      advanceWidth: 1139,\n    },\n    K: {\n      x_min: 153,\n      x_max: 1475,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 153,\n      advanceWidth: 1479,\n    },\n    L: {\n      x_min: 157,\n      x_max: 1189,\n      y_min: 0,\n      y_max: 1454,\n      ha: 1454,\n      leftSideBearing: 157,\n      advanceWidth: 1251,\n    },\n    M: {\n      x_min: 145,\n      x_max: 1561,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 145,\n      advanceWidth: 1706,\n    },\n    N: {\n      x_min: 152,\n      x_max: 1315,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 152,\n      advanceWidth: 1479,\n    },\n    O: {\n      x_min: 89,\n      x_max: 1511,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 89,\n      advanceWidth: 1593,\n    },\n    P: {\n      x_min: 149,\n      x_max: 1272,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 149,\n      advanceWidth: 1366,\n    },\n    Q: {\n      x_min: 89,\n      x_max: 1566,\n      y_min: -147,\n      y_max: 1491,\n      ha: 1638,\n      leftSideBearing: 89,\n      advanceWidth: 1593,\n    },\n    R: {\n      x_min: 150,\n      x_max: 1468,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 150,\n      advanceWidth: 1479,\n    },\n    S: {\n      x_min: 74,\n      x_max: 1266,\n      y_min: -26,\n      y_max: 1491,\n      ha: 1517,\n      leftSideBearing: 74,\n      advanceWidth: 1366,\n    },\n    T: {\n      x_min: 44,\n      x_max: 1209,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 44,\n      advanceWidth: 1251,\n    },\n    U: {\n      x_min: 147,\n      x_max: 1316,\n      y_min: -25,\n      y_max: 1466,\n      ha: 1491,\n      leftSideBearing: 147,\n      advanceWidth: 1479,\n    },\n    V: {\n      x_min: -1,\n      x_max: 1364,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: -1,\n      advanceWidth: 1366,\n    },\n    W: {\n      x_min: 7,\n      x_max: 1931,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 7,\n      advanceWidth: 1933,\n    },\n    X: {\n      x_min: 0,\n      x_max: 1363,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 0,\n      advanceWidth: 1366,\n    },\n    Y: {\n      x_min: -3,\n      x_max: 1368,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: -3,\n      advanceWidth: 1366,\n    },\n    Z: {\n      x_min: 22,\n      x_max: 1213,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 22,\n      advanceWidth: 1251,\n    },\n    '[': {\n      x_min: 146,\n      x_max: 644,\n      y_min: -413,\n      y_max: 1466,\n      ha: 1879,\n      leftSideBearing: 146,\n      advanceWidth: 682,\n    },\n    '\\\\': {\n      x_min: -3,\n      x_max: 571,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: -3,\n      advanceWidth: 569,\n    },\n    ']': {\n      x_min: 38,\n      x_max: 536,\n      y_min: -413,\n      y_max: 1466,\n      ha: 1879,\n      leftSideBearing: 38,\n      advanceWidth: 682,\n    },\n    '^': {\n      x_min: 115,\n      x_max: 1080,\n      y_min: 692,\n      y_max: 1491,\n      ha: 799,\n      leftSideBearing: 115,\n      advanceWidth: 1196,\n    },\n    _: {\n      x_min: -19,\n      x_max: 1149,\n      y_min: -405,\n      y_max: -223,\n      ha: 182,\n      leftSideBearing: -19,\n      advanceWidth: 1139,\n    },\n    '`': {\n      x_min: 42,\n      x_max: 495,\n      y_min: 1192,\n      y_max: 1491,\n      ha: 299,\n      leftSideBearing: 42,\n      advanceWidth: 682,\n    },\n    a: {\n      x_min: 73,\n      x_max: 1070,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 73,\n      advanceWidth: 1139,\n    },\n    b: {\n      x_min: 135,\n      x_max: 1172,\n      y_min: -24,\n      y_max: 1466,\n      ha: 1490,\n      leftSideBearing: 135,\n      advanceWidth: 1251,\n    },\n    c: {\n      x_min: 85,\n      x_max: 1087,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 85,\n      advanceWidth: 1139,\n    },\n    d: {\n      x_min: 84,\n      x_max: 1121,\n      y_min: -24,\n      y_max: 1466,\n      ha: 1490,\n      leftSideBearing: 84,\n      advanceWidth: 1251,\n    },\n    e: {\n      x_min: 65,\n      x_max: 1057.2517482517483,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 65,\n      advanceWidth: 1139,\n    },\n    f: {\n      x_min: 24,\n      x_max: 742,\n      y_min: 0,\n      y_max: 1491,\n      ha: 1491,\n      leftSideBearing: 24,\n      advanceWidth: 682,\n    },\n    g: {\n      x_min: 84,\n      x_max: 1120,\n      y_min: -431,\n      y_max: 1086,\n      ha: 1517,\n      leftSideBearing: 84,\n      advanceWidth: 1251,\n    },\n    h: {\n      x_min: 146,\n      x_max: 1113,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 146,\n      advanceWidth: 1251,\n    },\n    i: {\n      x_min: 147,\n      x_max: 428,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 147,\n      advanceWidth: 569,\n    },\n    j: {\n      x_min: -94,\n      x_max: 422,\n      y_min: -431,\n      y_max: 1466,\n      ha: 1897,\n      leftSideBearing: -94,\n      advanceWidth: 569,\n    },\n    k: {\n      x_min: 137,\n      x_max: 1119,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 137,\n      advanceWidth: 1139,\n    },\n    l: {\n      x_min: 147,\n      x_max: 428,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 147,\n      advanceWidth: 569,\n    },\n    m: {\n      x_min: 126,\n      x_max: 1688,\n      y_min: 0,\n      y_max: 1086,\n      ha: 1086,\n      leftSideBearing: 126,\n      advanceWidth: 1821,\n    },\n    n: {\n      x_min: 145,\n      x_max: 1113,\n      y_min: 0,\n      y_max: 1086,\n      ha: 1086,\n      leftSideBearing: 145,\n      advanceWidth: 1251,\n    },\n    o: {\n      x_min: 82,\n      x_max: 1178,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 82,\n      advanceWidth: 1251,\n    },\n    p: {\n      x_min: 139,\n      x_max: 1175,\n      y_min: -404,\n      y_max: 1086,\n      ha: 1490,\n      leftSideBearing: 139,\n      advanceWidth: 1251,\n    },\n    q: {\n      x_min: 91,\n      x_max: 1122,\n      y_min: -404,\n      y_max: 1086,\n      ha: 1490,\n      leftSideBearing: 91,\n      advanceWidth: 1251,\n    },\n    r: {\n      x_min: 135,\n      x_max: 823,\n      y_min: 0,\n      y_max: 1086,\n      ha: 1086,\n      leftSideBearing: 135,\n      advanceWidth: 797,\n    },\n    s: {\n      x_min: 48,\n      x_max: 1040,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 48,\n      advanceWidth: 1139,\n    },\n    t: {\n      x_min: 31,\n      x_max: 657,\n      y_min: -24,\n      y_max: 1437,\n      ha: 1461,\n      leftSideBearing: 31,\n      advanceWidth: 682,\n    },\n    u: {\n      x_min: 141,\n      x_max: 1107,\n      y_min: -24,\n      y_max: 1062,\n      ha: 1086,\n      leftSideBearing: 141,\n      advanceWidth: 1251,\n    },\n    v: {\n      x_min: 11,\n      x_max: 1114,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 11,\n      advanceWidth: 1139,\n    },\n    w: {\n      x_min: 9,\n      x_max: 1592,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 9,\n      advanceWidth: 1593,\n    },\n    x: {\n      x_min: 12,\n      x_max: 1120,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 12,\n      advanceWidth: 1139,\n    },\n    y: {\n      x_min: 14,\n      x_max: 1106,\n      y_min: -431,\n      y_max: 1062,\n      ha: 1493,\n      leftSideBearing: 14,\n      advanceWidth: 1139,\n    },\n    z: {\n      x_min: 34,\n      x_max: 982,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 34,\n      advanceWidth: 1024,\n    },\n    '{': {\n      x_min: 60,\n      x_max: 744,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 60,\n      advanceWidth: 797,\n    },\n    '|': {\n      x_min: 176,\n      x_max: 399,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 176,\n      advanceWidth: 573,\n    },\n    '}': {\n      x_min: 45,\n      x_max: 729,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 45,\n      advanceWidth: 797,\n    },\n    '~': {\n      x_min: 67,\n      x_max: 1129,\n      y_min: 519,\n      y_max: 924,\n      ha: 405,\n      leftSideBearing: 67,\n      advanceWidth: 1196,\n    },\n  },\n  fontFamily: 'Arial',\n  resolution: 2048,\n  generatedOn: '2022-11-04T20:05:21.000Z',\n};\n","export const SansFont = {\n  smufl: false,\n  name: 'SANS',\n  spacing: 50,\n  Description: 'Built-in sans-serif font',\n  bold: true,\n  italic: true,\n  monospaced: false,\n  serifs: false,\n  glyphs: {\n    '0': {\n      x_min: 85,\n      x_max: 1041,\n      y_min: -25,\n      y_max: 1472,\n      ha: 1497,\n      leftSideBearing: 85,\n      advanceWidth: 1139,\n    },\n    '1': {\n      x_min: 223,\n      x_max: 763,\n      y_min: 0,\n      y_max: 1472,\n      ha: 1472,\n      leftSideBearing: 223,\n      advanceWidth: 1139,\n    },\n    '2': {\n      x_min: 61.840001123045234,\n      x_max: 1031,\n      y_min: 0,\n      y_max: 1472,\n      ha: 1472,\n      leftSideBearing: 61,\n      advanceWidth: 1139,\n    },\n    '3': {\n      x_min: 86,\n      x_max: 1046,\n      y_min: -26,\n      y_max: 1472,\n      ha: 1498,\n      leftSideBearing: 86,\n      advanceWidth: 1139,\n    },\n    '4': {\n      x_min: 26,\n      x_max: 1040,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 26,\n      advanceWidth: 1139,\n    },\n    '5': {\n      x_min: 85,\n      x_max: 1057,\n      y_min: -25,\n      y_max: 1446,\n      ha: 1471,\n      leftSideBearing: 85,\n      advanceWidth: 1139,\n    },\n    '6': {\n      x_min: 77,\n      x_max: 1045,\n      y_min: -25,\n      y_max: 1472,\n      ha: 1497,\n      leftSideBearing: 77,\n      advanceWidth: 1139,\n    },\n    '7': {\n      x_min: 97,\n      x_max: 1046,\n      y_min: 0,\n      y_max: 1447,\n      ha: 1447,\n      leftSideBearing: 97,\n      advanceWidth: 1139,\n    },\n    '8': {\n      x_min: 83,\n      x_max: 1049,\n      y_min: -25,\n      y_max: 1472,\n      ha: 1497,\n      leftSideBearing: 83,\n      advanceWidth: 1139,\n    },\n    '9': {\n      x_min: 85,\n      x_max: 1049,\n      y_min: -25,\n      y_max: 1472,\n      ha: 1497,\n      leftSideBearing: 85,\n      advanceWidth: 1139,\n    },\n    ' ': {\n      x_min: 0,\n      x_max: 0,\n      y_min: 0,\n      y_max: 0,\n      ha: 0,\n      leftSideBearing: 0,\n      advanceWidth: 569,\n    },\n    '!': {\n      x_min: 176,\n      x_max: 399,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 176,\n      advanceWidth: 569,\n    },\n    '\"': {\n      x_min: 94,\n      x_max: 631,\n      y_min: 947,\n      y_max: 1466,\n      ha: 519,\n      leftSideBearing: 94,\n      advanceWidth: 727,\n    },\n    '#': {\n      x_min: 21,\n      x_max: 1113,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 21,\n      advanceWidth: 1139,\n    },\n    $: {\n      x_min: 73,\n      x_max: 1043,\n      y_min: -211,\n      y_max: 1601,\n      ha: 1812,\n      leftSideBearing: 73,\n      advanceWidth: 1139,\n    },\n    '%': {\n      x_min: 119,\n      x_max: 1695,\n      y_min: -54,\n      y_max: 1491,\n      ha: 1545,\n      leftSideBearing: 119,\n      advanceWidth: 1821,\n    },\n    '&': {\n      x_min: 88,\n      x_max: 1319,\n      y_min: -34,\n      y_max: 1491,\n      ha: 1525,\n      leftSideBearing: 88,\n      advanceWidth: 1366,\n    },\n    \"'\": {\n      x_min: 90,\n      x_max: 295,\n      y_min: 947,\n      y_max: 1466,\n      ha: 519,\n      leftSideBearing: 90,\n      advanceWidth: 391,\n    },\n    '(': {\n      x_min: 124,\n      x_max: 608,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 124,\n      advanceWidth: 682,\n    },\n    ')': {\n      x_min: 124,\n      x_max: 608,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 124,\n      advanceWidth: 682,\n    },\n    '*': {\n      x_min: 64,\n      x_max: 725,\n      y_min: 867,\n      y_max: 1491,\n      ha: 624,\n      leftSideBearing: 64,\n      advanceWidth: 797,\n    },\n    '+': {\n      x_min: 114,\n      x_max: 1082,\n      y_min: 237,\n      y_max: 1206,\n      ha: 969,\n      leftSideBearing: 114,\n      advanceWidth: 1196,\n    },\n    ',': {\n      x_min: 170,\n      x_max: 387,\n      y_min: -290,\n      y_max: 205,\n      ha: 495,\n      leftSideBearing: 170,\n      advanceWidth: 569,\n    },\n    '-': {\n      x_min: 65,\n      x_max: 618,\n      y_min: 440,\n      y_max: 621,\n      ha: 181,\n      leftSideBearing: 65,\n      advanceWidth: 682,\n    },\n    '.': {\n      x_min: 186,\n      x_max: 391,\n      y_min: 0,\n      y_max: 205,\n      ha: 205,\n      leftSideBearing: 186,\n      advanceWidth: 569,\n    },\n    '/': {\n      x_min: 0,\n      x_max: 569,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 0,\n      advanceWidth: 569,\n    },\n    ':': {\n      x_min: 185,\n      x_max: 390,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 185,\n      advanceWidth: 569,\n    },\n    ';': {\n      x_min: 170,\n      x_max: 387,\n      y_min: -290,\n      y_max: 1062,\n      ha: 1352,\n      leftSideBearing: 170,\n      advanceWidth: 569,\n    },\n    '<': {\n      x_min: 112,\n      x_max: 1083,\n      y_min: 226,\n      y_max: 1219,\n      ha: 993,\n      leftSideBearing: 112,\n      advanceWidth: 1196,\n    },\n    '=': {\n      x_min: 114,\n      x_max: 1082,\n      y_min: 417,\n      y_max: 1030,\n      ha: 613,\n      leftSideBearing: 114,\n      advanceWidth: 1196,\n    },\n    '>': {\n      x_min: 112,\n      x_max: 1083,\n      y_min: 226,\n      y_max: 1219,\n      ha: 993,\n      leftSideBearing: 112,\n      advanceWidth: 1196,\n    },\n    '?': {\n      x_min: 90,\n      x_max: 1036,\n      y_min: 0,\n      y_max: 1491,\n      ha: 1491,\n      leftSideBearing: 90,\n      advanceWidth: 1139,\n    },\n    '@': {\n      x_min: 111,\n      x_max: 2005,\n      y_min: -431,\n      y_max: 1493,\n      ha: 1924,\n      leftSideBearing: 111,\n      advanceWidth: 2079,\n    },\n    A: {\n      x_min: -3,\n      x_max: 1369,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: -3,\n      advanceWidth: 1366,\n    },\n    B: {\n      x_min: 150,\n      x_max: 1257,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 150,\n      advanceWidth: 1366,\n    },\n    C: {\n      x_min: 102,\n      x_max: 1398,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 102,\n      advanceWidth: 1479,\n    },\n    D: {\n      x_min: 158,\n      x_max: 1370,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 158,\n      advanceWidth: 1479,\n    },\n    E: {\n      x_min: 162,\n      x_max: 1256,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 162,\n      advanceWidth: 1366,\n    },\n    F: {\n      x_min: 168,\n      x_max: 1157,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 168,\n      advanceWidth: 1251,\n    },\n    G: {\n      x_min: 109,\n      x_max: 1465,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 109,\n      advanceWidth: 1593,\n    },\n    H: {\n      x_min: 164,\n      x_max: 1314,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 164,\n      advanceWidth: 1479,\n    },\n    I: {\n      x_min: 191,\n      x_max: 385,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 191,\n      advanceWidth: 569,\n    },\n    J: {\n      x_min: 58.84976474807333,\n      x_max: 865,\n      y_min: -25,\n      y_max: 1466,\n      ha: 1491,\n      leftSideBearing: 58,\n      advanceWidth: 1024,\n    },\n    K: {\n      x_min: 150,\n      x_max: 1362,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 150,\n      advanceWidth: 1366,\n    },\n    L: {\n      x_min: 150,\n      x_max: 1066,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 150,\n      advanceWidth: 1139,\n    },\n    M: {\n      x_min: 152,\n      x_max: 1551,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 152,\n      advanceWidth: 1706,\n    },\n    N: {\n      x_min: 156,\n      x_max: 1311,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 156,\n      advanceWidth: 1479,\n    },\n    O: {\n      x_min: 99,\n      x_max: 1501,\n      y_min: -25,\n      y_max: 1492,\n      ha: 1517,\n      leftSideBearing: 99,\n      advanceWidth: 1593,\n    },\n    P: {\n      x_min: 158,\n      x_max: 1277,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 158,\n      advanceWidth: 1366,\n    },\n    Q: {\n      x_min: 88,\n      x_max: 1518,\n      y_min: -114,\n      y_max: 1492,\n      ha: 1606,\n      leftSideBearing: 88,\n      advanceWidth: 1593,\n    },\n    R: {\n      x_min: 161,\n      x_max: 1453,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 161,\n      advanceWidth: 1479,\n    },\n    S: {\n      x_min: 92,\n      x_max: 1259,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 92,\n      advanceWidth: 1366,\n    },\n    T: {\n      x_min: 48,\n      x_max: 1210,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 48,\n      advanceWidth: 1251,\n    },\n    U: {\n      x_min: 161,\n      x_max: 1314,\n      y_min: -25,\n      y_max: 1466,\n      ha: 1491,\n      leftSideBearing: 161,\n      advanceWidth: 1479,\n    },\n    V: {\n      x_min: 9,\n      x_max: 1350,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 9,\n      advanceWidth: 1366,\n    },\n    W: {\n      x_min: 25,\n      x_max: 1910,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 25,\n      advanceWidth: 1933,\n    },\n    X: {\n      x_min: 9,\n      x_max: 1353,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 9,\n      advanceWidth: 1366,\n    },\n    Y: {\n      x_min: 6,\n      x_max: 1350,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 6,\n      advanceWidth: 1366,\n    },\n    Z: {\n      x_min: 41,\n      x_max: 1200,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 41,\n      advanceWidth: 1251,\n    },\n    '[': {\n      x_min: 139,\n      x_max: 536,\n      y_min: -407,\n      y_max: 1466,\n      ha: 1873,\n      leftSideBearing: 139,\n      advanceWidth: 569,\n    },\n    '\\\\': {\n      x_min: 0,\n      x_max: 569,\n      y_min: -25,\n      y_max: 1491,\n      ha: 1516,\n      leftSideBearing: 0,\n      advanceWidth: 569,\n    },\n    ']': {\n      x_min: 39,\n      x_max: 436,\n      y_min: -407,\n      y_max: 1466,\n      ha: 1873,\n      leftSideBearing: 39,\n      advanceWidth: 569,\n    },\n    '^': {\n      x_min: 54,\n      x_max: 907,\n      y_min: 690,\n      y_max: 1491,\n      ha: 801,\n      leftSideBearing: 54,\n      advanceWidth: 961,\n    },\n    _: {\n      x_min: -31,\n      x_max: 1162,\n      y_min: -407,\n      y_max: -277,\n      ha: 130,\n      leftSideBearing: -31,\n      advanceWidth: 1139,\n    },\n    '`': {\n      x_min: 89,\n      x_max: 465,\n      y_min: 1194,\n      y_max: 1474,\n      ha: 280,\n      leftSideBearing: 89,\n      advanceWidth: 682,\n    },\n    a: {\n      x_min: 74,\n      x_max: 1052,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 74,\n      advanceWidth: 1139,\n    },\n    b: {\n      x_min: 134,\n      x_max: 1055,\n      y_min: -24,\n      y_max: 1466,\n      ha: 1490,\n      leftSideBearing: 134,\n      advanceWidth: 1139,\n    },\n    c: {\n      x_min: 80,\n      x_max: 1005,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 80,\n      advanceWidth: 1024,\n    },\n    d: {\n      x_min: 70,\n      x_max: 991,\n      y_min: -24,\n      y_max: 1466,\n      ha: 1490,\n      leftSideBearing: 70,\n      advanceWidth: 1139,\n    },\n    e: {\n      x_min: 75,\n      x_max: 1054,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 75,\n      advanceWidth: 1139,\n    },\n    f: {\n      x_min: 19,\n      x_max: 640,\n      y_min: 0,\n      y_max: 1491,\n      ha: 1491,\n      leftSideBearing: 19,\n      advanceWidth: 569,\n    },\n    g: {\n      x_min: 66,\n      x_max: 1002,\n      y_min: -431,\n      y_max: 1086,\n      ha: 1517,\n      leftSideBearing: 66,\n      advanceWidth: 1139,\n    },\n    h: {\n      x_min: 135,\n      x_max: 1000,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 135,\n      advanceWidth: 1139,\n    },\n    i: {\n      x_min: 136,\n      x_max: 316,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 136,\n      advanceWidth: 455,\n    },\n    j: {\n      x_min: -94,\n      x_max: 314,\n      y_min: -431,\n      y_max: 1466,\n      ha: 1897,\n      leftSideBearing: -94,\n      advanceWidth: 455,\n    },\n    k: {\n      x_min: 136,\n      x_max: 1016,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 136,\n      advanceWidth: 1024,\n    },\n    l: {\n      x_min: 131,\n      x_max: 311,\n      y_min: 0,\n      y_max: 1466,\n      ha: 1466,\n      leftSideBearing: 131,\n      advanceWidth: 455,\n    },\n    m: {\n      x_min: 135,\n      x_max: 1574,\n      y_min: 0,\n      y_max: 1086,\n      ha: 1086,\n      leftSideBearing: 135,\n      advanceWidth: 1706,\n    },\n    n: {\n      x_min: 135,\n      x_max: 998,\n      y_min: 0,\n      y_max: 1086,\n      ha: 1086,\n      leftSideBearing: 135,\n      advanceWidth: 1139,\n    },\n    o: {\n      x_min: 68,\n      x_max: 1063,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 68,\n      advanceWidth: 1139,\n    },\n    p: {\n      x_min: 135,\n      x_max: 1057,\n      y_min: -407,\n      y_max: 1086,\n      ha: 1493,\n      leftSideBearing: 135,\n      advanceWidth: 1139,\n    },\n    q: {\n      x_min: 72,\n      x_max: 992,\n      y_min: -407,\n      y_max: 1086,\n      ha: 1493,\n      leftSideBearing: 72,\n      advanceWidth: 1139,\n    },\n    r: {\n      x_min: 133,\n      x_max: 710,\n      y_min: 0,\n      y_max: 1086,\n      ha: 1086,\n      leftSideBearing: 133,\n      advanceWidth: 682,\n    },\n    s: {\n      x_min: 63,\n      x_max: 945,\n      y_min: -24,\n      y_max: 1086,\n      ha: 1110,\n      leftSideBearing: 63,\n      advanceWidth: 1024,\n    },\n    t: {\n      x_min: 36,\n      x_max: 554,\n      y_min: -14,\n      y_max: 1433,\n      ha: 1447,\n      leftSideBearing: 36,\n      advanceWidth: 569,\n    },\n    u: {\n      x_min: 131,\n      x_max: 992,\n      y_min: -24,\n      y_max: 1062,\n      ha: 1086,\n      leftSideBearing: 131,\n      advanceWidth: 1139,\n    },\n    v: {\n      x_min: 26,\n      x_max: 1000,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 26,\n      advanceWidth: 1024,\n    },\n    w: {\n      x_min: 6,\n      x_max: 1463,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 6,\n      advanceWidth: 1479,\n    },\n    x: {\n      x_min: 15,\n      x_max: 1009,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 15,\n      advanceWidth: 1024,\n    },\n    y: {\n      x_min: 33,\n      x_max: 1006,\n      y_min: -431,\n      y_max: 1062,\n      ha: 1493,\n      leftSideBearing: 33,\n      advanceWidth: 1024,\n    },\n    z: {\n      x_min: 40,\n      x_max: 980,\n      y_min: 0,\n      y_max: 1062,\n      ha: 1062,\n      leftSideBearing: 40,\n      advanceWidth: 1024,\n    },\n    '{': {\n      x_min: 57,\n      x_max: 636,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 57,\n      advanceWidth: 684,\n    },\n    '|': {\n      x_min: 188,\n      x_max: 345,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 188,\n      advanceWidth: 532,\n    },\n    '}': {\n      x_min: 47,\n      x_max: 626,\n      y_min: -431,\n      y_max: 1491,\n      ha: 1922,\n      leftSideBearing: 47,\n      advanceWidth: 684,\n    },\n    '~': {\n      x_min: 87,\n      x_max: 1110,\n      y_min: 557,\n      y_max: 885,\n      ha: 328,\n      leftSideBearing: 87,\n      advanceWidth: 1196,\n    },\n  },\n  fontFamily: 'sans-serif',\n  resolution: 2048,\n  generatedOn: '2020-10-18T18:48:11.823Z',\n};\n","export const SerifFont = {\n  smufl: false,\n  name: 'SERIF',\n  spacing: 50,\n  Description: 'Built-in serif font',\n  bold: true,\n  italic: true,\n  monospaced: false,\n  serifs: true,\n\n  glyphs: {\n    '0': {\n      x_min: 49,\n      x_max: 975,\n      y_min: -27,\n      y_max: 1383,\n      ha: 1410,\n      leftSideBearing: 49,\n      advanceWidth: 1024,\n    },\n    '1': {\n      x_min: 227,\n      x_max: 811,\n      y_min: 0,\n      y_max: 1383,\n      ha: 1383,\n      leftSideBearing: 227,\n      advanceWidth: 1024,\n    },\n    '2': {\n      x_min: 61,\n      x_max: 965,\n      y_min: 0,\n      y_max: 1383,\n      ha: 1383,\n      leftSideBearing: 61,\n      advanceWidth: 1024,\n    },\n    '3': {\n      x_min: 88,\n      x_max: 883,\n      y_min: -27,\n      y_max: 1383,\n      ha: 1410,\n      leftSideBearing: 88,\n      advanceWidth: 1024,\n    },\n    '4': {\n      x_min: 25,\n      x_max: 967,\n      y_min: 0,\n      y_max: 1384,\n      ha: 1384,\n      leftSideBearing: 25,\n      advanceWidth: 1024,\n    },\n    '5': {\n      x_min: 66,\n      x_max: 898,\n      y_min: -27,\n      y_max: 1409,\n      ha: 1436,\n      leftSideBearing: 66,\n      advanceWidth: 1024,\n    },\n    '6': {\n      x_min: 70,\n      x_max: 958,\n      y_min: -27,\n      y_max: 1401,\n      ha: 1428,\n      leftSideBearing: 70,\n      advanceWidth: 1024,\n    },\n    '7': {\n      x_min: 41,\n      x_max: 920,\n      y_min: -16,\n      y_max: 1356,\n      ha: 1372,\n      leftSideBearing: 41,\n      advanceWidth: 1024,\n    },\n    '8': {\n      x_min: 115,\n      x_max: 911,\n      y_min: -27,\n      y_max: 1383,\n      ha: 1410,\n      leftSideBearing: 115,\n      advanceWidth: 1024,\n    },\n    '9': {\n      x_min: 61,\n      x_max: 940,\n      y_min: -41,\n      y_max: 1383,\n      ha: 1424,\n      leftSideBearing: 61,\n      advanceWidth: 1024,\n    },\n    ' ': {\n      x_min: 0,\n      x_max: 0,\n      y_min: 0,\n      y_max: 0,\n      ha: 0,\n      leftSideBearing: 0,\n      advanceWidth: 512,\n    },\n    '!': {\n      x_min: 266,\n      x_max: 488,\n      y_min: -22,\n      y_max: 1383,\n      ha: 1405,\n      leftSideBearing: 266,\n      advanceWidth: 682,\n    },\n    '\"': {\n      x_min: 157.2000021972655,\n      x_max: 678.2500021457677,\n      y_min: 881,\n      y_max: 1385,\n      ha: 504,\n      leftSideBearing: 157,\n      advanceWidth: 836,\n    },\n    '#': {\n      x_min: 10,\n      x_max: 1016,\n      y_min: -1,\n      y_max: 1356,\n      ha: 1357,\n      leftSideBearing: 10,\n      advanceWidth: 1024,\n    },\n    $: {\n      x_min: 90,\n      x_max: 936,\n      y_min: -180,\n      y_max: 1492,\n      ha: 1672,\n      leftSideBearing: 90,\n      advanceWidth: 1024,\n    },\n    '%': {\n      x_min: 125,\n      x_max: 1581,\n      y_min: -30,\n      y_max: 1388,\n      ha: 1418,\n      leftSideBearing: 125,\n      advanceWidth: 1706,\n    },\n    '&': {\n      x_min: 86,\n      x_max: 1536,\n      y_min: -28,\n      y_max: 1383,\n      ha: 1411,\n      leftSideBearing: 86,\n      advanceWidth: 1593,\n    },\n    \"'\": {\n      x_min: 97.20000219726548,\n      x_max: 273.2500021457677,\n      y_min: 881,\n      y_max: 1385,\n      ha: 504,\n      leftSideBearing: 97,\n      advanceWidth: 369,\n    },\n    '(': {\n      x_min: 98,\n      x_max: 623,\n      y_min: -363,\n      y_max: 1383,\n      ha: 1746,\n      leftSideBearing: 98,\n      advanceWidth: 682,\n    },\n    ')': {\n      x_min: 59,\n      x_max: 584,\n      y_min: -363,\n      y_max: 1383,\n      ha: 1746,\n      leftSideBearing: 59,\n      advanceWidth: 682,\n    },\n    '*': {\n      x_min: 137.96078522291893,\n      x_max: 886.039214777081,\n      y_min: 543,\n      y_max: 1383,\n      ha: 840,\n      leftSideBearing: 137,\n      advanceWidth: 1024,\n    },\n    '+': {\n      x_min: 61,\n      x_max: 1093,\n      y_min: 2,\n      y_max: 1034,\n      ha: 1032,\n      leftSideBearing: 61,\n      advanceWidth: 1155,\n    },\n    ',': {\n      x_min: 115,\n      x_max: 399,\n      y_min: -291,\n      y_max: 208,\n      ha: 499,\n      leftSideBearing: 115,\n      advanceWidth: 512,\n    },\n    '-': {\n      x_min: 80,\n      x_max: 584,\n      y_min: 396,\n      y_max: 525,\n      ha: 129,\n      leftSideBearing: 80,\n      advanceWidth: 682,\n    },\n    '.': {\n      x_min: 143,\n      x_max: 371,\n      y_min: -22,\n      y_max: 205,\n      ha: 227,\n      leftSideBearing: 143,\n      advanceWidth: 512,\n    },\n    '/': {\n      x_min: -17,\n      x_max: 586,\n      y_min: -27,\n      y_max: 1383,\n      ha: 1410,\n      leftSideBearing: -17,\n      advanceWidth: 569,\n    },\n    ':': {\n      x_min: 166,\n      x_max: 394,\n      y_min: -22,\n      y_max: 943,\n      ha: 965,\n      leftSideBearing: 166,\n      advanceWidth: 569,\n    },\n    ';': {\n      x_min: 164,\n      x_max: 448,\n      y_min: -290,\n      y_max: 943,\n      ha: 1233,\n      leftSideBearing: 164,\n      advanceWidth: 569,\n    },\n    '<': {\n      x_min: 57,\n      x_max: 1098,\n      y_min: -15,\n      y_max: 1051,\n      ha: 1066,\n      leftSideBearing: 57,\n      advanceWidth: 1155,\n    },\n    '=': {\n      x_min: 61,\n      x_max: 1093,\n      y_min: 246,\n      y_max: 791,\n      ha: 545,\n      leftSideBearing: 61,\n      advanceWidth: 1155,\n    },\n    '>': {\n      x_min: 57,\n      x_max: 1098,\n      y_min: -15,\n      y_max: 1051,\n      ha: 1066,\n      leftSideBearing: 57,\n      advanceWidth: 1155,\n    },\n    '?': {\n      x_min: 139,\n      x_max: 848,\n      y_min: -15,\n      y_max: 1383,\n      ha: 1398,\n      leftSideBearing: 139,\n      advanceWidth: 909,\n    },\n    '@': {\n      x_min: 238,\n      x_max: 1657,\n      y_min: -29,\n      y_max: 1386,\n      ha: 1415,\n      leftSideBearing: 238,\n      advanceWidth: 1886,\n    },\n    A: {\n      x_min: 31,\n      x_max: 1445,\n      y_min: 0,\n      y_max: 1380,\n      ha: 1380,\n      leftSideBearing: 31,\n      advanceWidth: 1479,\n    },\n    B: {\n      x_min: 35,\n      x_max: 1214,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 35,\n      advanceWidth: 1366,\n    },\n    C: {\n      x_min: 57,\n      x_max: 1296,\n      y_min: -28,\n      y_max: 1383,\n      ha: 1411,\n      leftSideBearing: 57,\n      advanceWidth: 1366,\n    },\n    D: {\n      x_min: 33,\n      x_max: 1403,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 33,\n      advanceWidth: 1479,\n    },\n    E: {\n      x_min: 25,\n      x_max: 1222,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 25,\n      advanceWidth: 1251,\n    },\n    F: {\n      x_min: 25,\n      x_max: 1119,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 25,\n      advanceWidth: 1139,\n    },\n    G: {\n      x_min: 66,\n      x_max: 1452,\n      y_min: -28,\n      y_max: 1383,\n      ha: 1411,\n      leftSideBearing: 66,\n      advanceWidth: 1479,\n    },\n    H: {\n      x_min: 39,\n      x_max: 1438,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 39,\n      advanceWidth: 1479,\n    },\n    I: {\n      x_min: 37,\n      x_max: 642,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 37,\n      advanceWidth: 682,\n    },\n    J: {\n      x_min: 20,\n      x_max: 758,\n      y_min: -28,\n      y_max: 1356,\n      ha: 1384,\n      leftSideBearing: 20,\n      advanceWidth: 797,\n    },\n    K: {\n      x_min: 70,\n      x_max: 1479,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 70,\n      advanceWidth: 1479,\n    },\n    L: {\n      x_min: 25,\n      x_max: 1224,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 25,\n      advanceWidth: 1251,\n    },\n    M: {\n      x_min: 25,\n      x_max: 1768,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 25,\n      advanceWidth: 1821,\n    },\n    N: {\n      x_min: 25,\n      x_max: 1450,\n      y_min: -22,\n      y_max: 1356,\n      ha: 1378,\n      leftSideBearing: 25,\n      advanceWidth: 1479,\n    },\n    O: {\n      x_min: 70,\n      x_max: 1409,\n      y_min: -28,\n      y_max: 1383,\n      ha: 1411,\n      leftSideBearing: 70,\n      advanceWidth: 1479,\n    },\n    P: {\n      x_min: 33,\n      x_max: 1110,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 33,\n      advanceWidth: 1139,\n    },\n    Q: {\n      x_min: 70,\n      x_max: 1435,\n      y_min: -364.28571588721996,\n      y_max: 1383,\n      ha: 1747.28571588722,\n      leftSideBearing: 70,\n      advanceWidth: 1479,\n    },\n    R: {\n      x_min: 35,\n      x_max: 1347,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 35,\n      advanceWidth: 1366,\n    },\n    S: {\n      x_min: 86,\n      x_max: 1006,\n      y_min: -28,\n      y_max: 1383,\n      ha: 1411,\n      leftSideBearing: 86,\n      advanceWidth: 1139,\n    },\n    T: {\n      x_min: 35,\n      x_max: 1214,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 35,\n      advanceWidth: 1251,\n    },\n    U: {\n      x_min: 29,\n      x_max: 1444,\n      y_min: -28,\n      y_max: 1356,\n      ha: 1384,\n      leftSideBearing: 29,\n      advanceWidth: 1479,\n    },\n    V: {\n      x_min: 33,\n      x_max: 1428,\n      y_min: -22,\n      y_max: 1356,\n      ha: 1378,\n      leftSideBearing: 33,\n      advanceWidth: 1479,\n    },\n    W: {\n      x_min: 10,\n      x_max: 1906,\n      y_min: -22,\n      y_max: 1356,\n      ha: 1378,\n      leftSideBearing: 10,\n      advanceWidth: 1933,\n    },\n    X: {\n      x_min: 20,\n      x_max: 1449,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 20,\n      advanceWidth: 1479,\n    },\n    Y: {\n      x_min: 45,\n      x_max: 1441,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 45,\n      advanceWidth: 1479,\n    },\n    Z: {\n      x_min: 18,\n      x_max: 1222,\n      y_min: 0,\n      y_max: 1356,\n      ha: 1356,\n      leftSideBearing: 18,\n      advanceWidth: 1251,\n    },\n    '[': {\n      x_min: 180,\n      x_max: 612,\n      y_min: -319,\n      y_max: 1355,\n      ha: 1674,\n      leftSideBearing: 180,\n      advanceWidth: 682,\n    },\n    '\\\\': {\n      x_min: -17,\n      x_max: 586,\n      y_min: -27,\n      y_max: 1383,\n      ha: 1410,\n      leftSideBearing: -17,\n      advanceWidth: 569,\n    },\n    ']': {\n      x_min: 70,\n      x_max: 502,\n      y_min: -319,\n      y_max: 1355,\n      ha: 1674,\n      leftSideBearing: 70,\n      advanceWidth: 682,\n    },\n    '^': {\n      x_min: 49,\n      x_max: 914,\n      y_min: 608,\n      y_max: 1355,\n      ha: 747,\n      leftSideBearing: 49,\n      advanceWidth: 961,\n    },\n    _: {\n      x_min: 0,\n      x_max: 1024,\n      y_min: -255,\n      y_max: -153,\n      ha: 102,\n      leftSideBearing: 0,\n      advanceWidth: 1024,\n    },\n    '`': {\n      x_min: 39,\n      x_max: 499,\n      y_min: 1037,\n      y_max: 1392.509803639748,\n      ha: 355.50980363974804,\n      leftSideBearing: 39,\n      advanceWidth: 682,\n    },\n    a: {\n      x_min: 76,\n      x_max: 905,\n      y_min: -20,\n      y_max: 942,\n      ha: 962,\n      leftSideBearing: 76,\n      advanceWidth: 909,\n    },\n    b: {\n      x_min: 6,\n      x_max: 958,\n      y_min: -20,\n      y_max: 1399,\n      ha: 1419,\n      leftSideBearing: 6,\n      advanceWidth: 1024,\n    },\n    c: {\n      x_min: 51,\n      x_max: 843,\n      y_min: -20,\n      y_max: 942,\n      ha: 962,\n      leftSideBearing: 51,\n      advanceWidth: 909,\n    },\n    d: {\n      x_min: 55,\n      x_max: 1006,\n      y_min: -20,\n      y_max: 1399,\n      ha: 1419,\n      leftSideBearing: 55,\n      advanceWidth: 1024,\n    },\n    e: {\n      x_min: 51,\n      x_max: 868,\n      y_min: -20,\n      y_max: 942,\n      ha: 962,\n      leftSideBearing: 51,\n      advanceWidth: 909,\n    },\n    f: {\n      x_min: 41,\n      x_max: 783,\n      y_min: 0,\n      y_max: 1399,\n      ha: 1399,\n      leftSideBearing: 41,\n      advanceWidth: 682,\n    },\n    g: {\n      x_min: 57,\n      x_max: 963,\n      y_min: -446,\n      y_max: 942,\n      ha: 1388,\n      leftSideBearing: 57,\n      advanceWidth: 1024,\n    },\n    h: {\n      x_min: 18,\n      x_max: 997,\n      y_min: 0,\n      y_max: 1399,\n      ha: 1399,\n      leftSideBearing: 18,\n      advanceWidth: 1024,\n    },\n    i: {\n      x_min: 33,\n      x_max: 516,\n      y_min: 0,\n      y_max: 1399,\n      ha: 1399,\n      leftSideBearing: 33,\n      advanceWidth: 569,\n    },\n    j: {\n      x_min: -142,\n      x_max: 397,\n      y_min: -446,\n      y_max: 1399,\n      ha: 1845,\n      leftSideBearing: -142,\n      advanceWidth: 569,\n    },\n    k: {\n      x_min: 14,\n      x_max: 1029,\n      y_min: 0,\n      y_max: 1399,\n      ha: 1399,\n      leftSideBearing: 14,\n      advanceWidth: 1024,\n    },\n    l: {\n      x_min: 39,\n      x_max: 523,\n      y_min: 0,\n      y_max: 1399,\n      ha: 1399,\n      leftSideBearing: 39,\n      advanceWidth: 569,\n    },\n    m: {\n      x_min: 33,\n      x_max: 1587,\n      y_min: 0,\n      y_max: 944,\n      ha: 944,\n      leftSideBearing: 33,\n      advanceWidth: 1593,\n    },\n    n: {\n      x_min: 33,\n      x_max: 993,\n      y_min: 0,\n      y_max: 944,\n      ha: 944,\n      leftSideBearing: 33,\n      advanceWidth: 1024,\n    },\n    o: {\n      x_min: 59,\n      x_max: 963,\n      y_min: -20,\n      y_max: 942,\n      ha: 962,\n      leftSideBearing: 59,\n      advanceWidth: 1024,\n    },\n    p: {\n      x_min: 10,\n      x_max: 964,\n      y_min: -443,\n      y_max: 944,\n      ha: 1387,\n      leftSideBearing: 10,\n      advanceWidth: 1024,\n    },\n    q: {\n      x_min: 49,\n      x_max: 999,\n      y_min: -443,\n      y_max: 942.0135137169275,\n      ha: 1385.0135137169275,\n      leftSideBearing: 49,\n      advanceWidth: 1024,\n    },\n    r: {\n      x_min: 10,\n      x_max: 685,\n      y_min: 0,\n      y_max: 944,\n      ha: 944,\n      leftSideBearing: 10,\n      advanceWidth: 682,\n    },\n    s: {\n      x_min: 104,\n      x_max: 713,\n      y_min: -20,\n      y_max: 942.0263161804552,\n      ha: 962.0263161804552,\n      leftSideBearing: 104,\n      advanceWidth: 797,\n    },\n    t: {\n      x_min: 27,\n      x_max: 572,\n      y_min: -18,\n      y_max: 1186,\n      ha: 1204,\n      leftSideBearing: 27,\n      advanceWidth: 569,\n    },\n    u: {\n      x_min: 18,\n      x_max: 981,\n      y_min: -21,\n      y_max: 921,\n      ha: 942,\n      leftSideBearing: 18,\n      advanceWidth: 1024,\n    },\n    v: {\n      x_min: 39,\n      x_max: 976,\n      y_min: -28,\n      y_max: 921,\n      ha: 949,\n      leftSideBearing: 39,\n      advanceWidth: 1024,\n    },\n    w: {\n      x_min: 43,\n      x_max: 1423,\n      y_min: -28,\n      y_max: 921,\n      ha: 949,\n      leftSideBearing: 43,\n      advanceWidth: 1479,\n    },\n    x: {\n      x_min: 35,\n      x_max: 989,\n      y_min: 0,\n      y_max: 921,\n      ha: 921,\n      leftSideBearing: 35,\n      advanceWidth: 1024,\n    },\n    y: {\n      x_min: 29,\n      x_max: 976,\n      y_min: -445,\n      y_max: 921,\n      ha: 1366,\n      leftSideBearing: 29,\n      advanceWidth: 1024,\n    },\n    z: {\n      x_min: 55,\n      x_max: 855,\n      y_min: 0,\n      y_max: 921,\n      ha: 921,\n      leftSideBearing: 55,\n      advanceWidth: 909,\n    },\n    '{': {\n      x_min: 205,\n      x_max: 717,\n      y_min: -377,\n      y_max: 1397,\n      ha: 1774,\n      leftSideBearing: 205,\n      advanceWidth: 983,\n    },\n    '|': {\n      x_min: 137,\n      x_max: 273,\n      y_min: -512,\n      y_max: 1535,\n      ha: 2047,\n      leftSideBearing: 137,\n      advanceWidth: 410,\n    },\n    '}': {\n      x_min: 266,\n      x_max: 778,\n      y_min: -377,\n      y_max: 1397,\n      ha: 1774,\n      leftSideBearing: 266,\n      advanceWidth: 983,\n    },\n    '~': {\n      x_min: 82,\n      x_max: 1028,\n      y_min: 380,\n      y_max: 666,\n      ha: 286,\n      leftSideBearing: 82,\n      advanceWidth: 1108,\n    },\n  },\n  fontFamily: 'serif',\n  resolution: 2048,\n  generatedOn: '2020-10-18T19:03:12.514Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\n\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\n\nexport class Vex {\n  static Flow = Flow;\n\n  // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n  // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n  //   arr.forEach(callbackFn);\n  // }\n\n  /**\n   * Take `arr` and return a new list consisting of the sorted, unique,\n   * contents of arr. Does not modify `arr`.\n   */\n  // eslint-disable-next-line\n  static sortAndUnique(arr: any[], cmp: any, eq: any): any[] {\n    if (arr.length > 1) {\n      const newArr = [];\n      let last;\n      arr.sort(cmp);\n\n      for (let i = 0; i < arr.length; ++i) {\n        if (i === 0 || !eq(arr[i], last)) {\n          newArr.push(arr[i]);\n        }\n        last = arr[i];\n      }\n\n      return newArr;\n    } else {\n      return arr;\n    }\n  }\n\n  /** Check if array `arr` contains `obj`. */\n  // eslint-disable-next-line\n  static contains(arr: any[], obj: any): boolean {\n    let i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Get the 2D Canvas context from DOM element `canvas_sel`.\n  static getCanvasContext(canvasSelector: string): RenderingContext {\n    if (!canvasSelector) {\n      throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n    }\n\n    const canvas = document.getElementById(canvasSelector) as HTMLCanvasElement;\n    if (!(canvas && canvas.getContext)) {\n      throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n    }\n\n    return canvas.getContext('2d') as RenderingContext;\n  }\n\n  /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n  // eslint-disable-next-line\n  static benchmark(s: any, f: any): void {\n    const start_time = new Date().getTime();\n    f();\n    const elapsed = new Date().getTime() - start_time;\n    log(s, elapsed + 'ms');\n  }\n\n  // Get stack trace.\n  static stackTrace(): string | undefined {\n    const err = new Error();\n    return err.stack;\n  }\n\n  // Backwards compatability with 3.0.9.\n  static RERR: RuntimeError;\n\n  // Backwards compatability with 3.0.9.\n  static RuntimeError: RuntimeError;\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\n\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { CommonMetrics } from './common_metrics';\n\nexport function loadBravura() {\n  Font.load('Bravura', BravuraFont, CommonMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { GonvilleSmuflFont } from './gonville_glyphs';\n\nexport function loadGonville() {\n  Font.load('Gonville', GonvilleSmuflFont, CommonMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow.js statically bundles & preloads all of our music engraving fonts.\n\nimport { loadBravura } from './load_bravura';\nimport { loadCustom } from './load_custom';\nimport { loadGonville } from './load_gonville';\nimport { loadLeland } from './load_leland';\nimport { loadPetaluma } from './load_petaluma';\n// ADD_MUSIC_FONT\n// import { loadXXX } from './load_xxx';\n\n// Populate our font \"database\" with all our music fonts.\nexport function loadAllMusicFonts(): void {\n  loadBravura();\n  loadGonville();\n  loadPetaluma();\n  loadCustom();\n  loadLeland();\n  // ADD_MUSIC_FONT\n  // loadXXX();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { CustomFont } from './custom_glyphs';\n\nexport function loadCustom() {\n  Font.load('Custom', CustomFont, CommonMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { LelandFont } from './leland_glyphs';\n\nexport function loadLeland() {\n  Font.load('Leland', LelandFont, CommonMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow.ts is the entry point for the build output file vexflow.js.\n// It statically bundles all the music engraving fonts, and sets the music font stack to:\n// Flow.setMusicFont('Bravura', 'Gonville', 'Custom');\n\n// The webpack config inside Gruntfile.js sets the mode to 'production' to produce a minified build.\n\nimport { Flow } from '../src/flow';\nimport { loadAllMusicFonts } from '../src/fonts/load_all';\nimport { loadTextFonts } from '../src/fonts/textfonts';\n\nloadAllMusicFonts();\nFlow.setMusicFont('Bravura', 'Gonville', 'Custom');\nloadTextFonts();\n\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nimport { SansFontBold } from './sans_bold_text_metrics';\nimport { SansFont } from './sans_text_metrics';\nimport { SerifFont } from './serif_text_metrics';\n\nexport function loadTextFonts() {\n  // Sans-serif fallback font, very close to Arial\n  {\n    const fontData = SansFontBold;\n    const { fontFamily, resolution, glyphs } = fontData;\n    Font.load(fontFamily, fontData);\n    // Usually @ is the tallest and widest character, although not the\n    // highest since it starts below the baseline.\n    const maxSizeGlyph = '@';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: true,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: false,\n      description: 'Generic SANS font',\n    });\n  }\n  // Sans-serif fallback font, very close to Arial\n  {\n    const fontData = SansFont;\n    const { fontFamily, resolution, glyphs } = fontData;\n    Font.load(fontFamily, fontData);\n    // Usually @ is the tallest and widest character, although not the\n    // highest since it starts below the baseline.\n    const maxSizeGlyph = '@';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: false,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: false,\n      description: 'Generic SANS font',\n    });\n  }\n  // Serif fallback font, very close to Times\n  {\n    const fontData = SerifFont;\n    const { fontFamily, resolution, glyphs } = fontData;\n    Font.load(fontFamily, fontData);\n    // M is wider, but H is taller. :-)\n    // Lowercase b is also taller in this font.\n    const maxSizeGlyph = '@';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: false,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: true,\n      description: 'Generic SERIF font',\n    });\n  }\n  // Roboto Slab\n  {\n    const fontData = RobotoSlabFont;\n    const { fontFamily, resolution, glyphs } = fontData;\n    Font.load(fontFamily, fontData);\n    // Previously we used 'H', but it isn't actually the tallest or the widest.\n    // Interestingly, the lowercase 'b' is the tallest glyph.\n    const maxSizeGlyph = 'b';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: false,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: true,\n      description: 'Text font to pair with the Bravura / Gonville music fonts.',\n    });\n  }\n\n  // PetalumaScript\n  {\n    const fontData = PetalumaScriptFont;\n    const { fontFamily, resolution, glyphs } = fontData;\n    Font.load(fontFamily, fontData);\n    // M is wider, but H is taller. :-)\n    // Lowercase b is also taller in this font.\n    const maxSizeGlyph = 'b';\n    TextFormatter.registerInfo({\n      family: fontFamily,\n      resolution,\n      glyphs,\n      maxSizeGlyph,\n      monospaced: false,\n      bold: false,\n      italic: false,\n      superscriptOffset: 0.66,\n      subscriptOffset: 0.66,\n      serifs: false,\n      description: 'Text font to pair with the Petaluma music font.',\n    });\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","mid_line","n","parseInt","prefix","text","normalizeAngle","Math","PI","sumArray","arr","reduce","Fraction","GCD","Number","isNaN","t","LCM","LCMM","length","shift","numerator","denominator","set","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","i","split","BoundingBox","that","y","w","h","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","max","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","FontWeight","FontStyle","fontParser","Fonts","Font","convertSizeToPixelValue","fontSize","SIZE","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","convertSizeToPointValue","validate","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","toCSSString","fontInfo","st","trim","wt","sz","scaleSize","scaleFactor","isBold","parsedWeight","isItalic","ITALIC","loadWebFont","fontName","woffURL","includeWoff2","fontFace","FontFace","load","fonts","loadWebFonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","data","metrics","setData","setMetrics","name","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","getDefaultRegistry","defaultRegistry","enableDefaultRegistry","registry","disableDefaultRegistry","index","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","getElementsByAttribute","attribute","index_attr","index_attr_val","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","Element","newID","ID","children","attrs","getCategory","rendered","addChildElement","child","push","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","indexOf","addClass","removeClass","splice","isRendered","setRendered","getAttributes","getSVGElement","suffix","element","oldID","getBoundingBox","getContext","setContext","setFont","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","fontSizeInPixels","RESOLUTION","durations","durationAliases","keySignatures","C","num","Am","F","acc","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","int_val","CN","accidental","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","octave","shift_right","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","currentMusicFont","MUSIC_FONT_STACK","clefProperties","clef","keyProperties","keyOctaveGlyph","params","options","octave_shift","duration","sanitizeDuration","pieces","toUpperCase","stroke","int_value","customNoteHeadProps","glyphName","codeNoteHead","displaced","integerToNote","integer","noteValue","tabToGlyphProps","fret","scale","glyph","shift_y","glyphMetrics","Glyph","TABLATURE_FONT_SCALE","textWidth","getWidth","articulationCodes","artic","accidentalCodes","ornamentCodes","keySignature","spec","keySpec","notes","acc_list","getKeySignatures","hasKeySignature","durationNumber","durationToFraction","durationToNumber","durationToTicks","ticks","getGlyphProps","durationCodes","glyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","UNISON","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","String","fromCharCode","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","num_beats","beat_value","stem","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","ledger_code_head","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","OutlineCode","ModifierPosition","GlyphCacheEntry","fontStack","point","loadMetrics","bbox","getOutlineBoundingBox","outline","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","precision","done","next","round","nextX","nextY","result","parts","MOVE","LINE","QUADRATIC","BEZIER","lookupGlyph","x_min","x_max","ha","cached_outline","renderGlyph","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","topGlyphs","botGlyphs","originShift","setOptions","reset","getCode","setPoint","setStave","stave","getXShift","setXShift","getYshift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","Map","entries","CURRENT_CACHE_KEY","entry","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","LEFT","right","RIGHT","text_line","spacingFromNextModifier","setWidth","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setXOffset","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","root_index","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","noteName","L","DEBUG","format","state","musicFont","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","additionalPadding","accList","prevNote","shiftL","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","sort","lineList","previousLine","accShift","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","applyAccidentals","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","render_options","font_scale","parenLeftPadding","parenRightPadding","cautionary","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","start","getModifierStartXY","accX","accY","Stem","UP","DOWN","WIDTH","HEIGHT","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","stemletYOffset","openGroup","pointerBBox","closeGroup","TextFormatter","textWidthCache","textHeightCache","getFontFamilies","registeredFonts","formatterInfo","create","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","bold","italic","perfectMatch","find","partialMatch","fontSizeInPt","getInfo","registerInfo","overwrite","serifs","monospaced","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","localHeightCache","updateCacheKey","BOLD","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getYForCharacterInPx","rv","yMin","yMax","y_min","y_max","getYForStringInPx","extent","curY","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","textFormatter","verticalSpaceNeeded","glyphWidth","horizontalJustification","stemDirection","hasStem","getStemDirection","lines","draw_stem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","top_text_line","BOTTOM","greatestString","curBottom","rightOverlap","right_shift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","text_width","text_height","getStemX","stem_ext","spacing","has_stem","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","fillText","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","easyScoreHook","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","endsWith","setBetweenLines","betweenLines","textLine","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemTipY","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","articLine","snappedLine","snapLineToStaff","setRawFont","drawDot","color","arc","closePath","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","plotMetrics","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xEnd","xFreedomRight","xWidth","yy","spaceDeviation","parseDuration","durationString","dots","parseNoteStruct","noteStruct","durationProps","customTypes","currentTicks","parsedNoteStruct","JSON","stringify","keyProps","noteType","duration_override","glyphProps","customGlyphs","playNote","annotation_spacing","glyph_font_scale","stroke_px","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getGlyph","getGlyphWidth","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","getMembers","getState","glyphPx","getNoteStartX","getPoint","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","StaveModifier","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","typeString","single","SINGLE","double","DOUBLE","end","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dot_x","dot_radius","dot_y","BarNote","barline","Bend","bends","last_width","stringPos","release","phrase","tap","line_width","line_style","bend_width","release_width","updateWidth","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","measureText","last_bend","last_bend_draw_width","last_drawn_width","ChordSymbol","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","getMetricForGlyph","glyphCode","engravingFontResolution","spacingBetweenBlocks","getWidthForGlyph","metric","getYShiftForGlyph","yOffset","getXShiftForGlyph","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","isSuperscript","symbolModifier","SUPERSCRIPT","isSubscript","SUBSCRIPT","minPadding","symbols","nonSuperWidth","symbol","fontAdj","glyphAdj","symbolWidth","lineSpaces","vAlign","j","symbolBlocks","sup","sub","superSubScale","adj","symbolType","GLYPH","superSubFontSize","TEXT","getYOffsetForText","over","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","getHorizontal","horizontal","vertical","useKerning","reportWidth","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","symbolBlock","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","stem_base","isSuper","isSub","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","getDots","buildAndAttach","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","radius","forceFlagRight","FretHandFinger","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","textHeight","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","finger","x_offset","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","NoteHead","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","breve_lines","drawSlashNoteHead","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","drawStem","stemOptions","shiftRestVertical","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","STEM_UP","STEM_DOWN","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","sortedKeyProps","minL","stemMax","stemMin","maxL","isrest","voice_shift","getVoiceShiftWidth","is_displaced","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","noteUHead","noteLHead","centerRest","ledgerLineStyle","use_default_head_x","_noteHeads","calculateKeyProps","auto_stem","autoStem","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","calcNoteDisplacements","step","noteProps","notehead","calculateOptimalStemDirection","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadParam","noteheadStyle","hasNoBeam","drawFlag","noteStemHeight","flagX","flagY","getStaveNoteScale","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","StaveTie","setNotes","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","first_x_px","first_y_px","last_y_px","top_cp_y","bottom_cp_y","center_x","getNotes","getTieStartX","getTieEndX","TabTie","createHammeron","createPulloff","VoiceMode","Voice","Mode","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","expTicksUsed","reCalculateExpTicksUsed","softmax","tickValue","v","exp","addTickable","addTickables","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","grace_notes","show_slur","slur","slur_y_shift","beams","Formatter","joinVoices","getMinTotalWidth","beamNotes","Beam","beam_width","partial_beam_length","graceNote","TieClass","NoteSubGroup","groups","group","TickContext","getNextContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","Ornament","ornament","ornamentRelease","ornamentAttack","reportedWidth","ornamentArticulation","ornamentNoteTransition","ornamentAlignWithNoteHead","ornamentMetrics","delayed","accidentalLowerPadding","accidentalUpperPadding","adjustForStemDirection","stemUpYOffset","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","Parenthesis","parentheses","x_widthL","x_widthR","parenthesis","isHTMLCanvas","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","sanitizeCanvasDims","limit","context2D","canvas","clearRect","cls","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","rect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","parent","pen","defaultFontAttributes","scaleX","scaleY","attributes","groupAttributes","applyAttributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","measureImpl","getBBox","Renderer","buildContext","elementId","backend","background","renderer","lastContext","getCanvasContext","Backends","CANVAS","getSVGContext","SVG","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","LineEndType","StringNumber","stringNumber","verticalPadding","stemPadding","leftPadding","rightPadding","shift_left","glyphLine","num_shiftR","num_width","string_number","stem_offset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","Stroke","strokes","strokeList","string","getPositions","strokeShift","all_voices","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","Vibrato","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","formatted","member","getLeftShift","Clef","types","tab","annotationSmufl","attachment","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","getEndClef","getClef","Repetition","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","StaveSection","section","drawRect","shift_x","setStaveSection","textY","headroom","StaveTempo","tempo","setTempo","bpm","noteTextFont","noteTextFormatter","stem_height","flagMetrics","TextNote","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","superscript","subscript","smooth","justification","struct","Justification","StaveText","setStaveText","setText","getBottomLineY","Volta","volta","top_y","vert_height","BEGIN_END","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","lineShift","topStartX","botStartX","start_x","topLine","bottomLine","TimeSignature","timeSpec","customPadding","validate_args","is_numeric","fontLineShift","setTimeSig","parseTimeSpec","numbers","test","assertIsValidTimeSig","makeTimeSignatureGlyph","setGlyph","getTimeSpec","getIsNumeric","setIsNumeric","isNumeric","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","Stave","defaultPadding","end_x","measure","endClef","vertical_bar_width","num_lines","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","number_t","setSection","staveSection","getLineForY","setBegBarType","setEndBarType","setClefLines","clefSpec","setClef","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","formatBegModifiers","staves","adjustCategoryStartX","minStartX","adjustX","allModifiers","bAdjust","maxX","drawBoldDoubleLine","topX","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","newType","content","SINGLE_RIGHT","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","SimpleFormat","paddingBetween","accumulator","plotDebugging","stavePadding","contextGaps","gaps","gap","totalCost","toFixed","total","FormatAndDraw","auto_beam","align_rests","applyAndGetBeams","formatToStave","FormatAndDrawTab","tabstave","tabnotes","autobeam","notevoice","tabvoice","AlignRestsToNotes","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","list","modifierContexts","lossHistory","alignRests","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","optionsParam","TupletLocation","Tuplet","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","tupletMetrics","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","resolveGlyphs","attach","detach","setBracketed","setRatioed","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","shiftY","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","getDefaultBeamGroups","time_sig","beatTotal","beatValue","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","memo","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","show_stemlets","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","slope","forcedPartialDirections","stem_weight","break_on_indices","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","min_flat_beam_offset","beamCount","breakSecondaryAt","indices","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","forcedBeamDirection","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","ClefNote","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","from","to","position_end","invert","cps","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","setId","commaSeparatedRegex","setClass","defaults","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","ignoreTicks","SCALE","slash","ret","staveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","KeySigNote","semibreve_rest","MultiMeasureRest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","get_semibreve_rest","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","PedalMarking","createSustain","createSostenuto","pedal","MIXED","setCustomText","createUnaCorda","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","RepeatNote","drawArrowHead","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","options_details","debugNoteMetricsYs","part","lastY","glyphPropsArr","positions","ghost","draw_dots","draw_stem_through_stave","setGhost","getStemY","stemDownLine","stemStartLine","flag_x","flag_y","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","getPartialStemLines","strings_used","stem_through","getUnusedStringGroups","drawPositions","tab_x","render_stem","TabStave","addTabGlyph","TextBracket","TextBracketPosition","Positions","PositionsString","stop","show_bracket","underline_superscript","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","TextDynamics","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","TimeSigNote","tsGlyph","VibratoBracket","bracket_data","stop_x","Factory","newFromElementId","renderQ","systems","initRenderer","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","FormatByTicksAndDraw","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","hairpin","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","TabSlide","SLIDE_UP","SLIDE_DOWN","createSlideUp","createSlideDown","first_fret","last_fret","slide_y","Tremolo","y_spacing_scale","extra_stroke_scale","y_spacing","Tuning","names","standard","dagdad","dropd","standardBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","Flow","BUILD","VERSION","DATE","setMusicFont","fontNames","fetchMusicFont","fontModuleOrPath","getMusicFont","BravuraFont","bracketTop","bracketBottom","barlineTick","breathMarkTick","gClef","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","timeSigPlus","timeSigPlusSmall","timeSigMinus","timeSigParensRight","timeSigParensRightSmall","timeSigParensLeft","timeSigParensLeftSmall","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXDoubleWhole","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleXDoubleWhole","noteheadCircleXWhole","noteheadCircleXHalf","noteheadCircleX","noteheadCircledDoubleWhole","noteheadCircledWhole","noteheadCircledHalf","noteheadCircledBlack","noteheadDoubleWholeSquare","noteheadSquareWhite","noteheadSquareBlack","noteheadTriangleDownDoubleWhole","noteheadTriangleDownWhole","noteheadTriangleDownHalf","noteheadTriangleDownBlack","noteheadTriangleUpDoubleWhole","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadSlashedDoubleWhole1","noteheadSlashedWhole1","noteheadSlashedHalf1","noteheadSlashedBlack1","noteheadSlashedDoubleWhole2","noteheadSlashedWhole2","noteheadSlashedHalf2","noteheadSlashedBlack2","noteheadDiamondDoubleWhole","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","noteheadParenthesis","noteheadParenthesisRight","noteheadParenthesisLeft","noteheadMoonBlack","noteheadTriangleLeftBlack","noteheadTriangleRightBlack","noteheadTriangleRoundDownBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBuyukMucennebSharp","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articStaccatissimoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","fermataVeryShortAbove","fermataVeryShortBelow","fermataShortAbove","fermataShortBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restWholeLegerLine","restHalf","restHalfLegerLine","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","arpeggiatoUp","arpeggiatoDown","repeat1Bar","repeat2Bars","repeat4Bars","repeatBarSlash","csymDiminished","csymHalfDiminished","csymAugmented","csymMajorSeventh","csymMinor","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","generatedOn","CommonMetrics","smufl","endPaddingMax","endPaddingMin","unalignedNotePadding","clef_default","shiftX","clef_small","default","gracenote","pedalMarking","digits","shiftLine","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","staveRepetition","symbolText","offsetX","offsetY","heightAdjustmentForFlag","staveTempo","clefNote_default","clefNote_small","stroke_straight","stroke_wiggly","CustomFont","vexAccidentalMicrotonal1","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","vexWiggleArpeggioUp","GonvilleSmuflFont","LelandFont","PetalumaFont","petalumaChordMetrics","PetalumaScriptFont","$","I","J","K","N","O","P","Q","U","V","Y","Z","_","l","RobotoSlabFont","SansFontBold","SansFont","Description","SerifFont","Vex","sortAndUnique","cmp","eq","newArr","last","contains","canvasSelector","benchmark","start_time","Date","getTime","stackTrace","chordMetrics","loadPetaluma","fontData","description","loadTextFonts"],"sourceRoot":""}