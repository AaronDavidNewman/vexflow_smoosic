{"version":3,"sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/./src/accidental.js","webpack://Vex/./src/annotation.js","webpack://Vex/./src/articulation.js","webpack://Vex/./src/barnote.js","webpack://Vex/./src/beam.js","webpack://Vex/./src/bend.js","webpack://Vex/./src/boundingbox.js","webpack://Vex/./src/boundingboxcomputation.js","webpack://Vex/./src/canvascontext.js","webpack://Vex/./src/chordsymbol.js","webpack://Vex/./src/clef.js","webpack://Vex/./src/clefnote.js","webpack://Vex/./src/crescendo.js","webpack://Vex/./src/curve.js","webpack://Vex/./src/dot.js","webpack://Vex/./src/easyscore.js","webpack://Vex/./src/element.js","webpack://Vex/./src/factory.js","webpack://Vex/./src/fonts/bravura_glyphs.js","webpack://Vex/./src/fonts/bravura_metrics.js","webpack://Vex/./src/fonts/custom_glyphs.js","webpack://Vex/./src/fonts/custom_metrics.js","webpack://Vex/./src/fonts/gonville_glyphs.js","webpack://Vex/./src/fonts/gonville_metrics.js","webpack://Vex/./src/fonts/petalumaScript_metrics.js","webpack://Vex/./src/fonts/petaluma_glyphs.js","webpack://Vex/./src/fonts/petaluma_metrics.js","webpack://Vex/./src/fonts/robotoSlab_metrics.js","webpack://Vex/./src/formatter.js","webpack://Vex/./src/fraction.js","webpack://Vex/./src/frethandfinger.js","webpack://Vex/./src/ghostnote.js","webpack://Vex/./src/glyph.js","webpack://Vex/./src/glyphnote.js","webpack://Vex/./src/gracenote.js","webpack://Vex/./src/gracenotegroup.js","webpack://Vex/./src/gracetabnote.js","webpack://Vex/./src/index.js","webpack://Vex/./src/jazztechnique.js","webpack://Vex/./src/keymanager.js","webpack://Vex/./src/keysignature.js","webpack://Vex/./src/keysignote.js","webpack://Vex/./src/modifier.js","webpack://Vex/./src/modifiercontext.js","webpack://Vex/./src/multimeasurerest.js","webpack://Vex/./src/music.js","webpack://Vex/./src/note.js","webpack://Vex/./src/notehead.js","webpack://Vex/./src/notesubgroup.js","webpack://Vex/./src/ornament.js","webpack://Vex/./src/parser.js","webpack://Vex/./src/pedalmarking.js","webpack://Vex/./src/raphaelcontext.js","webpack://Vex/./src/registry.js","webpack://Vex/./src/renderer.js","webpack://Vex/./src/repeatnote.js","webpack://Vex/./src/smufl.js","webpack://Vex/./src/stave.js","webpack://Vex/./src/stavebarline.js","webpack://Vex/./src/staveconnector.js","webpack://Vex/./src/stavehairpin.js","webpack://Vex/./src/staveline.js","webpack://Vex/./src/stavemodifier.js","webpack://Vex/./src/stavenote.js","webpack://Vex/./src/staverepetition.js","webpack://Vex/./src/stavesection.js","webpack://Vex/./src/stavetempo.js","webpack://Vex/./src/stavetext.js","webpack://Vex/./src/stavetie.js","webpack://Vex/./src/stavevolta.js","webpack://Vex/./src/stem.js","webpack://Vex/./src/stemmablenote.js","webpack://Vex/./src/stringnumber.js","webpack://Vex/./src/strokes.js","webpack://Vex/./src/svgcontext.js","webpack://Vex/./src/system.js","webpack://Vex/./src/tables.js","webpack://Vex/./src/tabnote.js","webpack://Vex/./src/tabslide.js","webpack://Vex/./src/tabstave.js","webpack://Vex/./src/tabtie.js","webpack://Vex/./src/textFont.js","webpack://Vex/./src/textbracket.js","webpack://Vex/./src/textdynamics.js","webpack://Vex/./src/textnote.js","webpack://Vex/./src/tickable.js","webpack://Vex/./src/tickcontext.js","webpack://Vex/./src/timesignature.js","webpack://Vex/./src/timesignote.js","webpack://Vex/./src/tremolo.js","webpack://Vex/./src/tuning.js","webpack://Vex/./src/tuplet.js","webpack://Vex/./src/vex.js","webpack://Vex/./src/vibrato.js","webpack://Vex/./src/vibratobracket.js","webpack://Vex/./src/voice.js"],"names":["L","args","Accidental","DEBUG","Vex","getGlyphWidth","glyph","getMetrics","width","accidentals","state","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","length","accList","prevNote","shiftL","i","acc","note","getNote","stave","getStave","props","getKeyProps","getIndex","n","keys","Math","max","getLeftDisplacedHeadPx","lineSpace","options","spacing_between_lines_px","y","getYForLine","line","accLine","round","push","shift","sort","a","b","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","type","getWidth","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","index","getGroupLines","indexes","map","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","lines","groupLength","endCase","groupMember","column","patternLength","collisionDetected","Flow","accidentalColumnsTable","columnWidths","columnXOffsets","forEach","totalShift","accCount","lineWidth","lastAccOnLine","xShift","setXShift","line1","line2","clearance","clearanceRequired","collision","abs","voices","keySignature","tickPositions","tickNoteMap","voice","tickPosition","Fraction","notes","getTickables","shouldIgnoreTicks","notesAtPosition","value","add","getTicks","music","Music","scaleMap","createScaleMap","tick","modifiedPitches","processNote","isRest","keyString","keyIndex","key","getNoteParts","split","accidentalString","accidental","pitch","root","sameAccidental","previouslyModified","indexOf","addAccidental","getModifiers","modifier","getCategory","getGraceNotes","setAttribute","position","Modifier","Position","LEFT","render_options","font_scale","stroke_px","parenLeftPadding","parenRightPadding","accidentalCodes","RERR","cautionary","parenLeft","parenRight","reset","fontScale","Glyph","code","setOriginX","CATEGORY","parenWidth","context","x_shift","y_shift","checkContext","start","getModifierStartXY","accX","x","accY","render","parenRightPaddingAdjustment","setRendered","Annotation","annotations","reportedWidths","annotation","getReportWidth","getPosition","ABOVE","setTextLine","top_text_line","text_line","reduce","right_shift","CENTER","RIGHT","CENTER_STEM","left","Justify","right","center","centerStem","TOP","BOTTOM","above","VerticalJustify","top","below","bottom","text","reportWidth","justification","vert_justification","font","family","size","weight","setWidth","textWidth","just","VerticalJustifyString","JustifyString","save","classString","Object","getAttribute","join","openGroup","setFont","text_width","measureText","text_height","getStemX","stem_ext","spacing","has_stem","hasStem","getStem","getExtents","getSpacingBetweenLines","getYForBottomText","TEXT_HEIGHT_OFFSET_HACK","stem_base","getStemDirection","baseY","topY","yt","getYForTopText","yb","min","getYs","extents","getStemExtents","fillText","closeGroup","restore","Articulation","BELOW","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","floor","snapLineToStaff","canSitBetweenLines","offsetDirection","snappedLine","canSnapToStaffSpace","onStaffLine","HALF_STAFF_SPACE","isStaveNote","noteCategory","getTopY","textLine","stemDirection","stemTipY","stemBaseY","Stem","UP","getBottomY","getInitialOffset","isOnStemTip","DOWN","articulations","isAbove","artic","isBelow","margin","getIncrement","articulation","height","filter","maxWidth","articWidth","builder","articNameToCode","staccato","tenuto","articString","trim","name","PositionString","getFactory","addModifier","articulationCodes","aboveCode","belowCode","between_lines","ctx","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","padding","musicFont","lookupMetric","getCode","setOrigin","INITIAL_OFFSET","noteLine","positions","str","distanceFromNote","articLine","BarNote","Barline","SINGLE","duration","metrics","widths","TYPE","DOUBLE","END","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","NONE","ignore_ticks","setType","typeString","setPreFormatted","getAbsoluteX","barline","setX","draw","Note","calculateStemDirection","lineSum","keyProps","keyProp","getStemSlope","firstNote","lastNote","firstStemTipY","firstStemX","lastStemTipY","lastStemX","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","Beam","time_sig","defaults","groups","undefined","beatTotal","parseInt","beatValue","tripleMeter","group","parse","stem_direction","generateBeams","config","tickGroups","multiply","RuntimeError","clone","RESOLUTION","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","getTotalTicks","vf_notes","memo","nextTickGroup","createGroups","nextGroup","unprocessedNote","ticksPerGroup","totalTicks","unbeamable","durationToNumber","tuplet","numerator","greaterThan","pop","equals","getBeamGroups","beamable","getIntrinsicTicks","durationToTicks","sanitizeGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","currentDirection","isUnbeamableDuration","shouldBreak","formatStems","findFirstNote","applyStemDirection","direction","setStemDirection","getTuplets","uniqueTuplets","beamedNoteGroups","allTuplets","beams","beam","show_stemlets","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","Tuplet","LOCATION_BOTTOM","LOCATION_TOP","setTupletLocation","bracketed","setBracketed","auto_stem","ticks","stem_weight","setBeam","postFormatted","beam_count","getBeamCount","break_on_indices","beam_width","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","partial_beam_length","min_flat_beam_offset","beamCounts","getGlyph","maxBeamCount","beamCount","indices","first_x_px","first_y_px","slope","initialSlope","increment","minCost","Number","MAX_VALUE","bestSlope","yShift","totalStemExtension","yShiftTemp","adjustedStemTipY","getSlopeY","diff","idealSlope","distanceFromIdeal","cost","total","extremeY","extremeBeamCount","currentExtreme","offset","beamWidth","extremeTest","newOffset","beamY","getBeamYToDraw","stemX","beamedStemTipY","preBeamExtension","getExtension","beamExtension","stem","setExtension","renderHeightAdjustment","WIDTH","totalBeamWidth","setVisibility","setStemlet","prev_tick","next_tick","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","lookupBeamDirection","tick_of_duration","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","stem_x","prev_note","next_note","beam_alone","end","beam_direction","includes","last_beam","setContext","valid_beam_durations","beamThickness","beamLines","getBeamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","beginPath","moveTo","lineTo","closePath","fill","calculateFlatSlope","calculateSlope","applyStemExtensions","postFormat","drawStems","applyStyle","drawBeamLines","restoreStyle","Element","Bend","bends","last_width","bend","release","phrase","line_width","line_style","bend_width","release_width","updateWidth","that","measure_text","total_width","additional_width","Max","draw_width","bend_height","annotation_y","renderBend","cp_x","cp_y","setLineWidth","setStrokeStyle","setFillStyle","quadraticCurveTo","stroke","renderRelease","renderArrowHead","dir","renderText","setRawFont","render_x","last_bend","last_drawn_width","BoundingBox","w","h","copy","boundingBox","new_x","new_y","new_w","new_h","rect","BoundingBoxComputation","x1","y1","x2","y2","NaN","addPoint","isNaN","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","f","t","pow","c","addX","addY","b2ac","t1","sqrt","t2","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","W","vexFlowCanvasContext","canvas","HEIGHT","clearRect","style","fillStyle","background_fillStyle","strokeStyle","shadowColor","blur","shadowBlur","cap_type","lineCap","dash","lineDash","scale","parseFloat","SanitizeCanvasDims","resize","fillRect","bezierCurveTo","radius","startAngle","endAngle","antiClockwise","arc","glow","ChordSymbol","glyphCode","chordSymbolMetrics","NOTEXTFORMAT","textMetricsForEngravingFont","glyphs","ix","resolution","metric","getMetricForCharacter","advanceWidth","getMetricForGlyph","engravingFontResolution","yOffset","leftSideBearing","instances","nonSuperWidth","instance","fontAdj","glyphAdj","lineSpaces","vAlign","symbolBlocks","symbol","sup","isSuperscript","sub","isSubscript","subAdj","superSubRatio","adj","symbolType","symbolTypes","GLYPH","getYShiftForGlyph","pointsToPixels","getXShiftForGlyph","getWidthForGlyph","TEXT","getYOffsetForText","over","spacingBetweenBlocks","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","verticalJustify","horizontalJustify","global","debug","val","noFormat","DEFAULT_FONT_STACK","PetalumaScriptMetrics","RobotoSlabMetrics","getResolution","superscriptOffset","subscriptOffset","kerningOffset","LINE","SUBSCRIPT","SUPERSCRIPT","chordSymbol","lowerKerningText","upperKerningText","horizontal","vertical","useKerning","fontFamily","symIx","barIx","findIndex","bar","xoff","yoff","accum","getKerningAdjustment","kernConst","prevSymbol","rv","preKernUpper","preKernLower","some","xx","symbolModifier","symbolModifiers","parameters","glyphArgs","glyphPoints","category","twidth","getWidthForCharacter","getSymbolBlock","addSymbolBlock","addText","addGlyph","verticalJustifyString","horizontalJustifyString","sp","curY","Clef","setPosition","StaveModifier","BEGIN","clef","types","point","attachment","x_max","numLines","getOptions","num_lines","shiftY","setPoint","setYShift","setStave","placeGlyphOnLine","renderToStave","ClefNote","clef_obj","getContext","abs_x","getYForGlyphs","Crescendo","renderHairpin","params","begin_x","end_x","half_height","reverse","note_struct","decrescendo","Merge","extend_left","extend_right","decresc","preFormatted","tick_context","getTickContext","next_context","TickContext","getNextContext","getX","Curve","NEAR_HEAD","NEAR_TOP","nearHead","nearTop","from","to","thickness","position_end","invert","cps","setNotes","first_x","first_y","last_x","last_y","cp_spacing","first_note","last_note","end_metric","getTieRightX","getTieStartX","getTieLeftX","getTieEndX","renderCurve","Dot","dots","dot_spacing","dot_list","max_shift_map","dot","getRightDisplacedHeadPx","note_id","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","dot_shiftY","forceFlagRight","PI","EasyScore","X","MakeException","Grammar","expect","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","run","commitPiece","COMMA","zeroOrMore","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","or","LPAREN","NOTES","RPAREN","addChord","matches","NOTE","oneOrMore","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","maybe","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","unquote","slice","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","token","Builder","factory","commitHooks","elements","rollingDuration","resetPiece","commitHook","piece","chord","accid","octave","addNote","autoStem","toLowerCase","StaveNote","STEM_UP","STEM_DOWN","accids","addDotToAll","fn","concat","setId","id","setClass","commaSeparatedRegex","className","addClass","setOptions","time","easyScoreHook","throwOnError","grammar","parser","Parser","addCommitHook","result","success","getElements","voiceOptions","Voice","addTickables","ID","attrs","newID","el","classes","rendered","fontStack","Registry","getDefaultRegistry","register","getStyle","setShadowColor","setShadowBlur","registry","onUpdate","oldValue","Factory","setDefaults","default_options","space","renderer","elementId","backend","Renderer","Backends","SVG","background","face","renderQ","systems","staves","initRenderer","buildContext","Stave","TabStave","noteStruct","GlyphNote","RepeatNote","ghostNote","GhostNote","textNoteStruct","textNote","TextNote","barNote","clefNote","timeSigNote","TimeSigNote","keySigNote","KeySigNote","cancelKey","alterKey","TabNote","GraceNote","GraceNoteGroup","slur","vJustify","hJustify","fontSize","fontWeight","setJustification","setVerticalJustification","setHorizontalJustification","TextDynamics","number","fingering","FretHandFinger","stringNumber","StringNumber","ModifierContext","multimeasurerest","MultiMeasureRest","number_of_measures","top_stave","bottom_stave","connector","StaveConnector","Formatter","secondaryBeamBreaks","breakSecondaryAt","curve","first_indices","last_indices","tie","StaveTie","setDirection","StaveLine","setText","harsh","vibratoBracket","VibratoBracket","stop","setLine","setHarsh","superscript","textBracket","TextBracket","system","System","pedal","PedalMarking","setStyle","StylesString","NoteSubGroup","textFont","TextFont","format","isRendered","BravuraFont","BravuraMetrics","smufl","small","smuflCode","treble","shiftX","bass","lineCount","pedalMarking","up","down","digits","shiftLine","tupletPoint","articStaccatissimoAbove","articStaccatissimoBelow","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","noteHead","noteheadTriangleUpHalf","offsetYBaseStemUp","offsetYBaseStemDown","noteheadTriangleUpBlack","noteheadTriangleUpWhole","noteheadXHalf","noteheadXBlack","noteheadXWhole","noteheadBlack","noteheadSquareWhite","coda","segno","flag","tabStem","staveTempo","gClef","fClef","ornament","ornamentTurn","ornamentTurnSlash","arrowheadBlackDown","straight","wiggly","arrowheadBlackUp","breathMarkTick","breathMarkComma","ornamentTrill","ornamentMordent","ornamentShortTrill","standard","restQuarterStemUp","restQuarterStemDown","custom","csymDiminished","csymHalfDiminished","csymAugmented","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","csymMinor","csymMajorSeventh","accidentalSharp","accidentalFlat","jazzOrnaments","brassScoop","xOffset","stemUpYOffset","reportedWidth","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","CustomFont","CustomMetrics","GonvilleFont","GonvilleMetrics","PetalumaFont","PetalumaMetrics","displaced","noteheadBlackStemUp","noteheadBlackStemDown","noteheadHalfStemUp","noteheadHalfStemDown","noteheadWholeStemUp","noteheadWholeStemDown","lookAhead","restLine","compare","nextRestLine","getLineForRest","bot","MidLine","createContexts","ContextType","addToContext","resolutionMultiplier","getMode","Mode","STRICT","isComplete","LCM","getResolutionMultiplier","tickToContextMap","tickList","contexts","voiceIndex","ticksUsed","tickable","integerTicks","newContext","tickID","array","list","SortAndUnique","paddingBetween","addToModifierContext","addTickable","preFormat","totalLeftPx","totalRightPx","formatter","xPos","stavePadding","contextGaps","color","gaps","gap","totalCost","toFixed","auto_beam","align_rests","TIME4_4","setMode","SOFT","applyAndGetBeams","joinVoices","formatToStave","getBoundingBox","tabstave","tabnotes","autobeam","opts","notevoice","tabvoice","alignAllNotes","alignTuplets","toUpperCase","setKeyLine","softmaxFactor","maxIterations","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","iterationsCompleted","lossHistory","AlignRestsToNotes","createTickContexts","contextList","contextMap","tContexts","getTicksUsed","justifyWidth","renderingContext","evaluate","firstContext","lastContext","calculateIdealDistances","adjustedJustifyWidth","getTickablesByVoice","backTickable","prevContext","backTick","backVoices","matchingVoices","v","maxTicks","maxNegativeShiftPx","Infinity","expectedDistance","thisTickable","insideLeftEdge","modLeftPx","leftDisplacedHeadPx","backMetrics","insideRightEdge","notePx","modRightPx","rightDisplacedHeadPx","getVoice","softmax","fromTickable","errorPx","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","negativeSpaceAccum","ideal","negativeShiftPx","getCenterAlignedTickables","center_x_shift","targetWidth","actualWidth","iterations","prevTick","prevMetrics","currMetrics","getFormatterMetrics","freedom","durationStats","updateStats","stats","mean","count","simplify","toString","formatterMetrics","leftNoteEdge","rightNote","rightMetrics","rightNoteEdge","used","totalDeviation","deviation","alpha","sum","arr","move","current","next","nextContext","postFormatContexts","createModifierContexts","setSoftmaxFactor","alignRests","getNoteEndX","getNoteStartX","GCD","arg0","LCMM","denominator","set","u","d","gcd","param1","param2","otherNumerator","otherDenominator","lcm","__compareA","__compareB","subtract","greaterThanEquals","__tmp","s","q","quotient","fraction","toSimplifiedString","nums","num_spacing","nums_list","shiftLeft","shiftRight","num","pos","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","num_shift","numWidth","finger","x_offset","y_offset","dot_x","dot_y","parameter","modifiers","drawWithStyle","StemmableNote","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","doOutline","defaultValue","getGlyphs","lookupGlyph","lookupFontMetric","x_min","ha","CACHE","o","cached_outline","x_pos","y_pos","loadMetrics","renderOutline","m","bind","l","bboxComp","addQuadraticCurve","z","noOp","getFontStack","originShift","bbox","getOutlineBoundingBox","getW","getH","getY","setOriginY","ignoreTicks","setGlyph","isCenterAligned","glyph_font_scale","DEFAULT_NOTATION_FONT_SCALE","SCALE","LEDGER_LINE_OFFSET","slash","buildNoteHeads","stem_extension_override","ret","staveNoteScale","getStaveNoteScale","note_heads","getKeys","lineDiff","step","noteProps","use_default_head_x","noteheadScale","notehead","NoteHead","note_type","noteType","custom_glyph_code","shift_right","stem_up_x_offset","stem_down_x_offset","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","getNoteHeadBounds","noteStemHeight","getHeight","y_top","y_bottom","defaultStemExtention","stem_down_extension","stem_up_extension","defaultOffsetY","STEM_HEIGHT","offsets","slashStemOffset","slashBeamOffset","protrusions","beam_slope","isBeamEndNote","beam_angle","atan","iPointOnBeam","dx","cos","dy","sin","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","gracenote_groups","group_spacing_stave","group_spacing_tab","group_list","gracenote_group","is_stavenote","group_shift","formatWidth","setSpacingFromNextModifier","grace_notes","show_slur","num_beats","beat_value","setStrict","slur_y_shift","getMinTotalWidth","alignSubNotesWithNote","graceNote","TieClass","TabTie","cp2","GraceTabNote","StaveTempo","Vibrato","KeySignature","TimeSignature","TabSlide","Tuning","KeyManager","StaveHairpin","Stroke","Ornament","Repetition","Tremolo","Volta","StaveText","Font","Fonts","DefaultFontStack","JazzTechnique","glyphMetrics","techniques","technique","rightPosition","leftPosition","SCOOP","DOIT","FALL_SHORT","LIFT","FALL_LONG","BEND","MUTE_CLOSED","MUTE_OPEN","FLIP","TURN","SMEAR","TypeToCode","jazzOrnamentCodes","find","zz","xAdjust","yAdjust","scaleAdjust","stroke_spacing","note_end","getLineNumber","staffPosition","setKey","keyParts","getKeyParts","is_supported_type","scaleTypes","getScaleTones","getNoteValue","scaleMapByValue","originalScaleMapByValue","noteLocation","root_indices","roots","rootName","noteName","getRelativeNoteName","parts","scaleNote","modparts","valueNote","originalValueNote","keySpec","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","nextAcc","accGlyphData","extraWidth","xPosition","glyphWidth","spec","formatted","cancel_accList","different_types","naturals","cancelled","customLines","firstAccidentalType","cancelAccList","convertToCancelAccList","convertToAlterAccList","endClef","convertAccLines","convertToGlyph","modifier_context","spacingFromNextModifier","subNotes","tickContext","subNoteXOffset","getSpacingFromNextModifier","subNote","subTickContext","setXOffset","PREFORMAT","POSTFORMAT","setModifierContext","semibrave_rest","get_semibrave_rest","glyph_code","fontLineShift","show_number","number_line","number_glyph_point","padding_left","padding_right","line_thickness","serif_thickness","use_symbols","symbol_spacing","semibrave_rest_glyph_scale","xs","sbl","serif","lineThicknessHalf","n4","n2","n1","semibrave_rest_width","yTop","yMiddle","yBottom","renderGlyph","begModifiers","drawSymbols","drawLine","timeSpec","timeSig","setTimeSig","bottomLine","NUM_TONES","interval","isValidNoteValue","noteString","regex","match","exec","noteValues","int_val","intervalString","intervals","noteValue","canonical_notes","intervalValue","isValidIntervalValue","diatonic_intervals","rootValue","multiplier","reverse_interval","relativeNoteName","tones","nextNote","getRelativeNoteValue","note1","note2","difference","keySigParts","scaleName","keySigString","major","dorian","mixolydian","minor","scales","root_index","yPos","xStart","xPre1","xAbs","xPost1","xPost2","xEnd","xFreedomRight","xWidth","getXShift","yy","drawDot","spaceDeviation","prefix","durationString","regexp","customTypes","durationProps","parseDuration","getGlyphProps","validTypes","k","currentTicks","initStruct","parseNoteStruct","JSON","stringify","duration_override","setDuration","setIntrinsicTicks","customGlyphs","playNote","modifierContext","ys","align_center","setCenterAlignment","annotation_spacing","setNote","setIndex","setYs","tc","mc","getCenterXShift","Tickable","drawSlashNoteHead","staveSpace","SLASH_NOTEHEAD_WIDTH","STEM_WIDTH","durationToFraction","breve_lines","head_options","code_head","custom_glyph","slashed","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getLine","setY","getYForNote","head_x","categorySuffix","ornaments","ornamentRelease","ornamentAttack","ornamentArticulation","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","ornamentCodes","adjustForStemDirection","ornamentAlignWithNoteHead","ornamentNoteTransition","stemDir","stemExtents","isPlacedOnNoteheadSide","lineSpacing","totalSpacing","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","flattenMatches","results","matchedString","errorPos","begin","returnPos","noSpace","RegExp","workingLine","incrementPos","rule","allMatches","oneMatch","localPos","gotOne","matchSuccess","matchFail","numMatches","more","expectOne","expectOneOrMore","rules","matchToken","expectZeroOrMore","r","drawPedalGlyph","glyph_data","GLYPHS","Styles","MIXED","setCustomText","BRACKET","bracket","mixed","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","depress","is_pedal_depressed","prev_x","prev_y","next_is_same","prev_is_same","drawBracketed","drawText","RaphaelContext","element","paper","Raphael","path","pen","font_family","font_size","font_weight","attributes","background_attributes","shadow_attributes","state_stack","transform","clear","setSize","viewBox","attr","normalizeAngle","angle","tmp","delta","arcHelper","largeArcFlag","sweepFlag","out","sa","num_paths","opacity","elem","strokeWidth","txt","bounds","getBBox","remove","setIndexValue","getElementById","INDEXES","updateIndex","onRegister","attrName","getElementsByAttribute","defaultRegistry","setBackgroundFillStyle","CANVAS","RAPHAEL","USE_CANVAS_PROXY","methodNames","methodName","prototype","fromX","fromY","toX","toY","dashPattern","atan2","idx","dashLength","nx","ny","VML","document","bolsterCanvasContext","SVGContext","devicePixelRatio","window","CODES","fontData","codePoints","Bravura","Gonville","Petaluma","Custom","start_x","measure","vertical_bar_width","glyph_spacing_px","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","resetLines","BARTYPE","addEndModifier","line_config","visible","bottom_text_position","begBarline","STAVE_LINE_THICKNESS","getNumLines","mod","getType","number_t","section","StaveSection","tempo","score_bottom","headroom","clefSpec","clefs","addClef","setClef","keySignatures","addKeySignature","setKeySignature","customPadding","timeSignatures","addTimeSignature","setTimeSignature","items","order","temp","endBarline","endModifiers","sortByCategory","barlines","keysignatures","timesignatures","splice","getPadding","paddingRight","paddingLeft","lastBarlineIdx","layoutMetrics","getLayoutMetrics","xMax","xMin","getModifierXShift","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","line_number","lines_configuration","single","repeatBegin","repeatEnd","repeatBoth","none","paddings","layoutMetricsMap","setPadding","setLayoutMetrics","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","getTopLineTopY","botY","getBottomLineBottomY","dot_radius","drawBoldDoubleLine","topX","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","thickLineOffset","SINGLE_RIGHT","SINGLE_LEFT","BRACE","THIN_DOUBLE","singleRight","singleLeft","brace","boldDoubleLeft","boldDoubleRight","thinDouble","texts","content","shift_x","shift_y","isRightSidedConnector","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","getBottomLineY","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","CRESC","DECRESC","hairpin","dis","staff_height","l_shift","r_shift","drawArrowHead","x0","y0","drawArrowLine","point1","point2","both_arrows","draw_start_arrow","draw_end_arrow","distance","ratio","arrowhead_length","end_y","start_y","line_angle","arrowhead_angle","angle1","angle2","top_x","top_y","bottom_x","bottom_y","line_dash","rounded_end","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","setLineDash","setLineCap","applyLineStyle","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","first_displaced","last_displaced","delta_x","center_x","vertical_position","applyFontStyle","customShift","getStemAdjustment","isInnerNoteIndex","shiftRestVertical","rest","isrest","maxLine","minLine","getKeyLine","centerRest","noteU","noteL","formatByY","notesList","minL","stemMax","getStemLength","stemMin","getStemMinumumLength","maxL","line_above","line_below","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","noteM","voiceXShift","stemDelta","setStemLength","restHeight","hasStave","topNote","bottomNote","topKeys","bottomKeys","HALF_NOTEHEAD_HEIGHT","topNoteBottomY","bottomNoteTopY","areNotesColliding","octave_shift","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","buildFlag","noteHeadStyles","head","calcNoteDisplacements","setStem","hide","MIDDLE_LINE","decider","keyProperties","minY","maxY","halfLineSpacing","frac","isTopNote","resultLine","thisLine","getCenterGlyphX","setYBounds","tieStartX","getRightShift","tieEndX","hasFlag","ledgerLineStyle","flagStyle","mContext","setDotShiftY","addDot","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","nonDisplacedX","displacedX","highestLine","lowestLine","highestDisplacedLine","lowestDisplacedLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","xBegin","getNoteHeadBeginX","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getLedgerLineStyle","noteheadStyle","shouldRenderFlag","flagX","flagY","pointerBBox","getFlagStyle","stemStruct","shouldRenderStem","setNoteHeadXBounds","isChord","drawLedgerLines","snClass","drawStem","drawNoteHeads","drawFlag","drawModifiers","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","symbol_type","drawCodaFixed","drawSymbolText","drawSignoFixed","draw_coda","text_x","symbol_x","bpm","stem_height","code_flag_upstem","Justification","cp1","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_ys","last_ys","last_x_px","last_y_px","top_cp_y","bottom_cp_y","renderTie","MID","BEGIN_END","volta","vert_height","x_begin","x_end","stem_extension","isStemlet","stemletHeight","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","ext","isStemUp","stemHeight","innerMostNoteheadY","outerMostNoteheadY","isVisible","stem_y","y_base_offset","stemletYOffset","stemExtensionOverride","flagCode","code_flag_downstem","getStemExtension","getBaseCustomNoteHeadGlyph","offsetYTopStemUp","offsetYTopStemDown","stem_struct","shift_left","num_shiftL","num_shiftR","x_widthL","x_widthR","num_width","string_number","dashed","leg","LineEndType","line_space","drawDashedLine","len","pattern","strokes","strokeList","string","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","all_voices","getModifierContext","Min","arrow","arrow_shift_x","arrow_y","text_y","Type","strokeLine","attrNamesToIgnoreMap","fontAttrNamesToIgnore","svgNS","svg","create","appendChild","parent","iePolyfill","svgElementType","createElementNS","cls","Prefix","navigator","ie","test","userAgent","bold","italic","replace","fontAttributes","fontArray","call","applyAttributes","visibleWidth","visibleHeight","setViewBox","yMin","viewBoxString","attrNamesToIgnore","nodeName","propertyName","setAttributeNS","lastChild","removeChild","rectangle","peth","textContent","ieMeasureTextFix","widthCorrection","box","spaceBetweenStaves","noJustification","debugFormatter","formatIterations","noPadding","details","spaceAbove","spaceBelow","debugNoteMetrics","allVoices","debugNoteMetricsYs","part","setNoteStartX","tune","lastY","plotDebugging","plotMetrics","DEFAULT_TABLATURE_FONT_SCALE","IsKerned","clefProperties","values","line_shift","pieces","note_values","base_index","int_value","extraProps","glyph_name","customNoteHeads","integerToNote","integer","table","tabToGlyph","fret","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","keySpecs","accidentalList","acc_list","unicode","String","fromCharCode","patterns","sanitizeDuration","alias","durationAliases","durations","duration_codes","glyphTypeProperties","customGlyphTypeProperties","common","stem_offset","tabnote_stem_up_extension","tabnote_stem_down_extension","getUnusedStringGroups","strings_used","stem_through","is_used","getPartialStemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","tab_struct","draw_stem","ghost","draw_dots","draw_stem_through_stave","getStemY","note_glyph_width","stemUpLine","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","tab_x","render_stem","drawPositions","drawStemThrough","SLIDE_UP","SLIDE_DOWN","first_fret","last_fret","slide_direction","slide_y","tab_options","fontName","fontRegistry","fd","overwrite","reg","exists","td","registryInstance","serifs","monospaced","maxSizeGlyph","description","getFontDataByName","registerFont","Positions","show_bracket","underline_superscript","main_width","main_height","super_y","superscript_width","super_height","line_y","text_struct","sequence","glyph_font_size","letter","letter_x","current_letter","subscript","struct","smooth","glyphPx","intrinsicTicks","tickMultiplier","tupletStack","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","tContext","currentTick","maxTickable","minTicks","minTickable","xBase","tickables","tickablesByVoice","lessThan","setTickContext","assertIsValidFraction","numbers","validate_args","topLine","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","topStartX","botStartX","parseTimeSpec","timeSignature","getTimeSig","isGraceNote","y_spacing","tuningString","setTuning","names","tuningValues","numStrings","noteToInteger","stringNum","fretNum","stringValue","getValueForString","getValueForFret","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","ratioed","location","resolveGlyphs","attach","setTuplet","resetTuplet","msg","console","warn","log","beats","setNotesOccupied","detach","numerator_glyphs","unshift","denom_glyphs","maxTupletCount","countTuplets","minTupletCount","tupletCount","nested_tuplet_y_offset","getNestedTupletCount","NESTING_OFFSET","getYPosition","addGlyphWidth","notation_center_x","notation_start_x","colon_x","colon_radius","block","Array","exception","message","data","Error","destination","source","property","RoundN","mid_line","cmp","eq","newArr","last","Contains","obj","getCanvasContext","canvas_sel","BM","start_time","Date","getTime","elapsed","StackTrace","err","stack","vibratos","vibrato","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vx","vy","renderVibrato","num_waves","bracket_data","stop_x","FULL","smallestTickCount","largestTickWidth","mode","voiceGroup","bb","mergeWith","g","strict","factor","exp","expTicksUsed","tickValue","reCalculateExpTicksUsed","setVoice","tickable_bb"],"mappings":"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","file":"vexflow-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n          // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n        // Otherwise, if the group contains fewer than seven members, use the layouts from\n        // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      const processNote = (note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n          // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    const reportedWidths = [];\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getReportWidth()) {\n        reportedWidths.push(width);\n      } else {\n        reportedWidths.push(0);\n      }\n\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n    width = reportedWidths.reduce((a, b) => a + b);\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.reportWidth = true;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n  setReportWidth(value) {\n    this.reportWidth = value;\n    return this;\n  }\n\n  getReportWidth() {\n    return this.reportWidth;\n  }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof (just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof (just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n      this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    this.context.openGroup(classString, this.getAttribute('id'));\n\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */ {\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.closeGroup();\n    this.context.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst isStaveNote = (note) => {\n  const noteCategory = note.getCategory();\n  return noteCategory === 'stavenotes' || noteCategory === 'gracenotes';\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (isStaveNote(note)) {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.reset();\n  }\n\n  reset() {\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) || this.articulation.code;\n    this.glyph = new Glyph(code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    const padding = this.musicFont.lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + (padding * offsetDirection);\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type = Barline.type.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nconst BEAM_LEFT = 'L';\nconst BEAM_RIGHT = 'R';\nconst BEAM_BOTH = 'B';\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups = [];\n    let currentGroup = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n            !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts = this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount = beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  getBeamYToDraw() {\n    const firstNote = this.notes[0];\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n    return beamY;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    const firstStemTipY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // return upper level beam direction.\n  lookupBeamDirection(duration, prev_tick, tick, next_tick) {\n    if (duration === '4') {\n      return BEAM_LEFT;\n    }\n\n    const lookup_duration =  `${Flow.durationToNumber(duration) / 2}`;\n    const prev_note_gets_beam = prev_tick < Flow.durationToTicks(lookup_duration);\n    const next_note_gets_beam = next_tick < Flow.durationToTicks(lookup_duration);\n    const note_gets_beam = tick < Flow.durationToTicks(lookup_duration);\n\n    if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_BOTH;\n    } else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n      return BEAM_LEFT;\n    } else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_RIGHT;\n    }\n\n    return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick);\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const tick_of_duration = Flow.durationToTicks(duration);\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n          this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const prev_note = this.notes[i - 1];\n      const next_note = this.notes[i + 1];\n      const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n      const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n      const beam_alone = prev_note && next_note &&\n      note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !next_note_gets_beam && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n\n          if (beam_alone) {\n            // previous and next beam exists and does not get a beam but current gets it.\n            const prev_tick = prev_note.getIntrinsicTicks();\n            const next_tick = next_note.getIntrinsicTicks();\n            const tick = note.getIntrinsicTicks();\n            const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick);\n\n            if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n              current_beam.end = current_beam.start - partial_beam_length;\n            } else {\n              current_beam.end = current_beam.start + partial_beam_length;\n            }\n          } else if (!next_note_gets_beam) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n    let beamY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems();\n    this.applyStyle();\n    this.drawBeamLines();\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n      this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n        x + width, height,\n        x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  noOp() {\n    // do nothing\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\nimport { Vex } from './vex';\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n  static get CANVAS_BROWSER_SIZE_LIMIT() {\n    return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size\n  }\n\n  static SanitizeCanvasDims(width, height) {\n    if (Math.max(width, height) > this.CANVAS_BROWSER_SIZE_LIMIT) {\n      Vex.W(\n        'Canvas dimensions exceed browser limit. Cropping to ' +\n        this.CANVAS_BROWSER_SIZE_LIMIT\n      );\n      if (width > this.CANVAS_BROWSER_SIZE_LIMIT) {\n        width = this.CANVAS_BROWSER_SIZE_LIMIT;\n        // note: Math.min return 0 for undefined, NaN for null. Would change inputs.\n      }\n      if (height > this.CANVAS_BROWSER_SIZE_LIMIT) {\n        height = this.CANVAS_BROWSER_SIZE_LIMIT;\n      }\n    }\n    return [width, height];\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    [width, height] = this.SanitizeCanvasDims(parseInt(width, 10), parseInt(height, 10));\n    return this.vexFlowCanvasContext.resize(width, height);\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements chord symbols as modifiers that can be attached to\n// notes.  Chord symbols can contain multiple 'blocks' which can contain\n// text or glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { PetalumaScriptMetrics } from './fonts/petalumaScript_metrics';\nimport { RobotoSlabMetrics } from './fonts/robotoSlab_metrics';\n\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\nfunction L(...args) { if (ChordSymbol.DEBUG) Vex.L('Vex.Flow.ChordSymbol', args); }\n\nexport class ChordSymbol extends Modifier {\n  static get CATEGORY() { return 'chordSymbol'; }\n\n  // Chord symbols can be positioned and justified relative to the note.\n  static get horizontalJustify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get horizontalJustifyString() {\n    return {\n      left: ChordSymbol.horizontalJustify.LEFT,\n      right: ChordSymbol.horizontalJustify.RIGHT,\n      center: ChordSymbol.horizontalJustify.CENTER,\n      centerStem: ChordSymbol.horizontalJustify.CENTER_STEM,\n    };\n  }\n\n\n  static get verticalJustify() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get superSubRatio() {\n    return ChordSymbol.chordSymbolMetrics.global.superSubRatio;\n  }\n\n  static get DEBUG() {\n    return ChordSymbol.debug;\n  }\n\n  // ### NOTEXTFORMAT\n  // used to globally turn off text formatting, if the built-in formatting does not\n  // work for your font..\n  static get NOTEXTFORMAT() {\n    return typeof(ChordSymbol.noFormat) === 'undefined' ? false : ChordSymbol.noFormat;\n  }\n\n  static set NOTEXTFORMAT(val) {\n    ChordSymbol.noFormat = val;\n  }\n\n  static set DEBUG(val) {\n    ChordSymbol.debug = val;\n  }\n\n  static get verticalJustifyString() {\n    return {\n      top: ChordSymbol.verticalJustify.TOP,\n      above: ChordSymbol.verticalJustify.TOP,\n      below: ChordSymbol.verticalJustify.BOTTOM,\n      bottom: ChordSymbol.verticalJustify.BOTTOM\n    };\n  }\n  static getMetricForGlyph(glyphCode) {\n    if (ChordSymbol.chordSymbolMetrics[glyphCode]) {\n      return ChordSymbol.chordSymbolMetrics[glyphCode];\n    }\n    return null;\n  }\n\n  static get textMetricsForEngravingFont() {\n    if (Vex.Flow.DEFAULT_FONT_STACK[0].name === 'Petaluma') {\n      return PetalumaScriptMetrics;\n    } else {\n      return RobotoSlabMetrics;\n    }\n  }\n\n  static getMetricForCharacter(c) {\n    if (ChordSymbol.NOTEXTFORMAT) {\n      return null;\n    }\n    if (ChordSymbol.textMetricsForEngravingFont.glyphs[c]) {\n      return ChordSymbol.textMetricsForEngravingFont.glyphs[c];\n    }\n    return null;\n  }\n\n  static getYOffsetForText(text) {\n    let acc = 0;\n    let ix = 0;\n    const resolution = ChordSymbol.textMetricsForEngravingFont.resolution;\n    for (ix = 0; ix < text.length; ++ix) {\n      const metric = ChordSymbol.getMetricForCharacter(text[ix]);\n\n      if (metric) {\n        acc = metric.y < acc ? metric.y : acc;\n      }\n    }\n\n    return ix > 0 ? -1 * (acc / resolution) : 0;\n  }\n\n  static get engravingFontResolution() {\n    return Vex.Flow.DEFAULT_FONT_STACK[0].getResolution();\n  }\n\n  static get spacingBetweenBlocks() {\n    return ChordSymbol.chordSymbolMetrics.global.spacing / ChordSymbol.engravingFontResolution;\n  }\n\n  static getWidthForCharacter(c) {\n    const resolution = ChordSymbol.textMetricsForEngravingFont.resolution;\n    const metric = ChordSymbol.getMetricForCharacter(c);\n    if (!metric) {\n      return 0.65;\n    }\n    return metric.advanceWidth / resolution;\n  }\n\n  static getWidthForGlyph(glyph) {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0.65;  // probably should do something here.\n    }\n    return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n  }\n\n  static getYShiftForGlyph(glyph) {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0;\n    }\n    return metric.yOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static getXShiftForGlyph(glyph) {\n    const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n    if (!metric) {\n      return 0;\n    }\n    return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n  }\n\n  static get superscriptOffset() {\n    return ChordSymbol.chordSymbolMetrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static get subscriptOffset() {\n    return ChordSymbol.chordSymbolMetrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  static get kerningOffset() {\n    return ChordSymbol.chordSymbolMetrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n  }\n\n  // Glyph data\n  static get glyphs() {\n    return {\n      'diminished': {\n        code: 'csymDiminished',\n      },\n      'dim': {\n        code: 'csymDiminished',\n      },\n      'halfDiminished': {\n        code: 'csymHalfDiminished',\n      },\n      '+': {\n        code: 'csymAugmented',\n      },\n      'augmented': {\n        code: 'csymAugmented',\n      },\n      'majorSeventh': {\n        code: 'csymMajorSeventh',\n      },\n      'minor': {\n        code: 'csymMinor',\n      },\n      '-': {\n        code: 'csymMinor',\n      },\n      '(': {\n        code: 'csymParensLeftTall',\n      },\n      'leftParen': {\n        code: 'csymParensLeftTall',\n      },\n      ')': {\n        code: 'csymParensRightTall',\n      },\n      'rightParen': {\n        code: 'csymParensRightTall',\n      },\n      'leftBracket': {\n        code: 'csymBracketLeftTall',\n      },\n      'rightBracket': {\n        code: 'csymBracketRightTall',\n      },\n      'leftParenTall': {\n        code: 'csymParensLeftVeryTall',\n      },\n      'rightParenTall': {\n        code: 'csymParensRightVeryTall',\n      },\n      '/': {\n        code: 'csymDiagonalArrangementSlash',\n      },\n      'over': {\n        code: 'csymDiagonalArrangementSlash',\n      },\n      '#': {\n        code: 'accidentalSharp',\n      },\n      'b': {\n        code: 'accidentalFlat',\n      }\n    };\n  }\n\n  static get symbolTypes() {\n    return {\n      GLYPH: 1,\n      TEXT: 2,\n      LINE: 3\n    };\n  }\n\n  static get symbolModifiers() {\n    return {\n      NONE: 1,\n      SUBSCRIPT: 2,\n      SUPERSCRIPT: 3\n    };\n  }\n\n  static get chordSymbolMetrics() {\n    return Vex.Flow.DEFAULT_FONT_STACK[0].metrics.glyphs.chordSymbol;\n  }\n\n  static get lowerKerningText() {\n    return Vex.Flow.DEFAULT_FONT_STACK[0].metrics.glyphs.chordSymbol.global.lowerKerningText;\n  }\n\n  static get upperKerningText() {\n    return Vex.Flow.DEFAULT_FONT_STACK[0].metrics.glyphs.chordSymbol.global.upperKerningText;\n  }\n\n  // ### format\n  // try to estimate the width of the whole chord symbol, based on the\n  // sum of the widths of the individual blocks.  Also estimate how many\n  // lines above/below the staff we need`\n  static format(instances, state) {\n    if (!instances || instances.length === 0) return false;\n\n    let width = 0;\n    let nonSuperWidth = 0;\n    const reportedWidths = [];\n\n    for (let i = 0; i < instances.length; ++i) {\n      const instance = instances[i];\n      const fontAdj = instance.font.size / 20;\n      const glyphAdj = fontAdj * 2;\n      let lineSpaces = 1;\n      let vAlign = false;\n\n      for (let j = 0; j < instance.symbolBlocks.length; ++j) {\n        const symbol = instance.symbolBlocks[j];\n        const sup = instance.isSuperscript(symbol);\n        const sub = instance.isSubscript(symbol);\n        const subAdj = (sup || sub) ? ChordSymbol.superSubRatio : 1;\n        const adj = symbol.symbolType === ChordSymbol.symbolTypes.GLYPH ? glyphAdj * subAdj : fontAdj * subAdj;\n\n        // If there are super/subscripts, they extend beyond the line so\n        // assume they take up 2 lines\n        if (sup || sub) {\n          lineSpaces = 2;\n        }\n\n        // If there is a symbol-specific offset, add it but consider font\n        // size since font and glyphs will be interspersed\n        if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH) {\n          symbol.yShift += ChordSymbol.getYShiftForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n          symbol.xShift += ChordSymbol.getXShiftForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n          symbol.glyph.scale = symbol.glyph.scale * adj;\n          symbol.width = ChordSymbol.getWidthForGlyph(symbol.glyph) * instance.pointsToPixels * subAdj;\n        } else if (symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n          symbol.width = symbol.width * instance.pointsToPixels * subAdj;\n          symbol.yShift += ChordSymbol.getYOffsetForText(symbol.text) * adj;\n        }\n\n        if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n          symbol.glyph.code === ChordSymbol.glyphs.over.code) {\n          lineSpaces = 2;\n        }\n        symbol.width += ChordSymbol.spacingBetweenBlocks * instance.pointsToPixels * subAdj;\n\n        // If a subscript immediately  follows a superscript block, try to\n        // overlay them.\n        if (sup && j > 0) {\n          const prev = instance.symbolBlocks[j - 1];\n          if (!instance.isSuperscript(prev)) {\n            nonSuperWidth = width;\n          }\n        }\n        if (sub && nonSuperWidth > 0) {\n          vAlign = true;\n          // slide the symbol over so it lines up with superscript\n          symbol.xShift = symbol.xShift + (nonSuperWidth - width);\n          width = nonSuperWidth;\n          nonSuperWidth = 0;\n          // If we have vertically lined up, turn kerning off.\n          instance.setEnableKerning(false);\n        }\n        if (!sup && !sub) {\n          nonSuperWidth = 0;\n        }\n        symbol.vAlign = vAlign;\n        width += symbol.width;\n      }\n\n      // make kerning adjustments after computing super/subscripts\n      instance.updateKerningAdjustments();\n      instance.updateOverBarAdjustments();\n\n      if (instance.getVertical() === ChordSymbol.verticalJustify.TOP) {\n        instance.setTextLine(state.top_text_line);\n        state.top_text_line += lineSpaces;\n      } else {\n        instance.setTextLine(state.text_line + 1);\n        state.text_line += lineSpaces + 1;\n      }\n      if (instance.getReportWidth()) {\n        reportedWidths.push(width);\n      } else {\n        reportedWidths.push(0);\n      }\n    }\n\n    width = reportedWidths.reduce((a, b) => a + b);\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // chordSymbol is a modifier that creates a chord symbol above/below a chord\n  // This is the modifier version, meaning it is attached to an existing note.\n  constructor() {\n    super();\n    this.setAttribute('type', 'ChordSymbol');\n    this.note = null;\n    this.index = null;\n    this.symbolBlocks = [];\n    this.horizontal = ChordSymbol.horizontalJustify.LEFT;\n    this.vertical = ChordSymbol.verticalJustify.TOP;\n    this.useKerning = true;\n    this.reportWidth = true;\n\n    let fontFamily = 'Arial';\n    if (this.musicFont.name === 'Petaluma') {\n      fontFamily = 'petalumaScript,Arial';\n    } else {\n      fontFamily = 'robotoSlab,Times';\n    }\n    this.font = {\n      family: fontFamily,\n      size: 12,\n      weight: '',\n    };\n  }\n\n  // ### pointsToPixels\n  // The font size is specified in points, convert to 'pixels' in the svg space\n  get pointsToPixels() {\n    return (this.font.size / 72) / (1 / 96);\n  }\n\n  get superscriptOffset() {\n    return ChordSymbol.superscriptOffset * this.pointsToPixels;\n  }\n\n  get subscriptOffset() {\n    return ChordSymbol.subscriptOffset * this.pointsToPixels;\n  }\n\n  setReportWidth(value) {\n    this.reportWidth = value;\n    return this;\n  }\n\n  getReportWidth() {\n    return this.reportWidth;\n  }\n\n  updateOverBarAdjustments() {\n    let symIx = 0;\n    const barIx = this.symbolBlocks.findIndex((symbol) =>\n      symbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n      symbol.glyph.code === 'csymDiagonalArrangementSlash');\n\n    if (barIx < 0) {\n      return;\n    }\n    const bar = this.symbolBlocks[barIx];\n    const xoff = bar.width / 4;\n    const yoff = 0.25 * this.pointsToPixels;\n    for (symIx === 0; symIx < barIx; ++symIx) {\n      const symbol = this.symbolBlocks[symIx];\n      symbol.xShift = symbol.xShift + xoff;\n      symbol.yShift = symbol.yShift - yoff;\n    }\n\n    for (symIx = barIx + 1; symIx < this.symbolBlocks.length; ++symIx) {\n      const symbol = this.symbolBlocks[symIx];\n      symbol.xShift = symbol.xShift - xoff;\n      symbol.yShift = symbol.yShift + yoff;\n    }\n  }\n\n  updateKerningAdjustments() {\n    let accum = 0;\n    for (let j = 0; j < this.symbolBlocks.length; ++j) {\n      const symbol = this.symbolBlocks[j];\n      accum += this.getKerningAdjustment(j);\n      symbol.xShift += accum;\n    }\n  }\n\n  // ### getKerningAdjustment\n  // Do some very basic kerning so that letter chords like 'A' don't have\n  // the extensions hanging off to the right.\n  getKerningAdjustment(j) {\n    if (!this.useKerning) {\n      return 0;\n    }\n    const symbol = this.symbolBlocks[j];\n    const kernConst = ChordSymbol.kerningOffset * this.pointsToPixels;\n    const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : null;\n    let rv = 0;\n\n\n    // Move things into the '/' over bar\n    if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n      symbol.glyph.code === ChordSymbol.glyphs.over.code) {\n      rv += symbol.glyph.metrics.x_shift;\n    }\n\n    if (prevSymbol !== null &&\n      prevSymbol.symbolType === ChordSymbol.symbolTypes.GLYPH &&\n      prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n      rv += prevSymbol.glyph.metrics.x_shift;\n    }\n\n    // For superscripts that follow a letter without much top part, move it to the\n    // left slightly\n    let preKernUpper = false;\n    let preKernLower = false;\n    if (prevSymbol != null && prevSymbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n      preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n      preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n    }\n\n    // TODO: adjustkern for  for font size.\n    // Where should this constant live?\n    if (preKernUpper && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUPERSCRIPT) {\n      rv += kernConst;\n    }\n\n    if (preKernLower && symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n      if (symbol.text[0] >= 'a' && symbol.text[0] <= 'z') {\n        rv += kernConst / 2;\n      }\n      if (ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1])) {\n        rv += kernConst / 2;\n      }\n    }\n    return rv;\n  }\n\n  // ### getSymbolBlock\n  // ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n  // Each block can have its own vertical orientation\n  getSymbolBlock(parameters) {\n    parameters = parameters == null ? {} : parameters;\n    const symbolType = (parameters.symbolType ? parameters.symbolType : ChordSymbol.symbolTypes.TEXT);\n    const text = parameters.text ? parameters.text : '';\n    const symbolModifier = parameters.symbolModifier ? parameters.symbolModifier : ChordSymbol.symbolModifiers.NONE;\n    const xShift = 0;\n    const yShift = 0;\n    const vAlign = 0;\n\n    const rv = {\n      text, symbolType, symbolModifier, xShift, yShift, vAlign\n    };\n\n    rv.width = 0;\n    // Note: all symbol widths are resolution and font-independent.  We convert to\n    // pixel values when we know what the font is.\n    if (symbolType === ChordSymbol.symbolTypes.GLYPH && typeof(parameters.glyph) === 'string') {\n      const glyphArgs = ChordSymbol.glyphs[parameters.glyph];\n      const glyphPoints = 20;\n      rv.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n      // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n      // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n      // rv.width = rv.glyph.getMetrics().width;\n      // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n    } else if (symbolType === ChordSymbol.symbolTypes.TEXT) {\n      let twidth = 0;\n      for (let i = 0; i < rv.text.length; ++i) {\n        twidth += ChordSymbol.getWidthForCharacter(rv.text[i]);\n      }\n      rv.width = twidth;\n    } else if (symbolType === ChordSymbol.symbolTypes.LINE) {\n      rv.width = parameters.width;\n    }\n\n    return rv;\n  }\n\n  // ### addSymbolBlock\n  // Add a symbol to this chord, could be text, glyph or line.\n  addSymbolBlock(parameters) {\n    this.symbolBlocks.push(this.getSymbolBlock(parameters));\n    return this;\n  }\n\n  // ### Convenience functions follow that let you create different types of\n  // chord symbol parts easily\n  // ### addText\n  // Add a text block\n  addText(text, parameters) {\n    parameters = parameters == null ? {} : parameters;\n    parameters.text = text;\n    parameters.symbolType = ChordSymbol.symbolTypes.TEXT;\n    return this.addSymbolBlock(parameters);\n  }\n\n  // ### addTextSuperscript\n  // add a text block with superscript modifier\n  addTextSuperscript(text) {\n    const symbolType = ChordSymbol.symbolTypes.TEXT;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUPERSCRIPT;\n    return this.addSymbolBlock({ text, symbolType, symbolModifier });\n  }\n\n  // ### addTextSubscript\n  // add a text block with subscript modifier\n  addTextSubscript(text) {\n    const symbolType = ChordSymbol.symbolTypes.TEXT;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUBSCRIPT;\n    return this.addSymbolBlock({ text, symbolType, symbolModifier });\n  }\n\n  // ### addGlyphSuperscript\n  // add a glyph block with superscript modifier\n  addGlyphSuperscript(glyph) {\n    const symbolType = ChordSymbol.symbolTypes.GLYPH;\n    const symbolModifier = ChordSymbol.symbolModifiers.SUPERSCRIPT;\n    return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n  }\n\n  addGlyph(glyph, parameters) {\n    parameters = parameters == null ? {} : parameters;\n    parameters.glyph = glyph;\n    parameters.symbolType = ChordSymbol.symbolTypes.GLYPH;\n    return this.addSymbolBlock(parameters);\n  }\n\n  // ### addGlyphOrText\n  // Add a glyph for each character in 'text'.  If the glyph is not\n  // available, use text from the font.  E.g.:\n  // `addGlyphOrText(\"(+5#11)\")`\n  // will use text for the '5' and '11', and glyphs for everything else.\n  addGlyphOrText(text, parameters) {\n    parameters = parameters == null ? {} : parameters;\n    let str = '';\n    for (let i = 0; i < text.length; ++i) {\n      if (ChordSymbol.glyphs[text[i]]) {\n        if (str.length > 0) {\n          this.addText(str, parameters);\n          str = '';\n        }\n        this.addGlyph(text[i], parameters);\n      } else {\n        str += text[i];\n      }\n    }\n    if (str.length > 0) {\n      this.addText(str, parameters);\n    }\n    return this;\n  }\n\n  // ### Add a line of the given width, used as a continuation of the previous\n  // symbol in analysis, or lyrics, etc.\n  addLine(width, parameters) {\n    parameters = parameters == null ? {} : parameters;\n    parameters.symbolType = ChordSymbol.symbolTypes.LINE;\n    parameters.width = width;\n    return this.addSymbolBlock(parameters);\n  }\n\n  getCategory() { return ChordSymbol.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  setFontSize(size) {\n    this.font.size = size;\n    return this;\n  }\n\n  setEnableKerning(val) {\n    this.useKerning = val;\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `ChordSymbol.vertical`.\n  setVertical(just) {\n    this.vertical = typeof (just) === 'string'\n      ? ChordSymbol.verticalJustifyString[just]\n      : just;\n    return this;\n  }\n  getVertical() {\n    return this.vertical;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `ChordSymbol.Justify`.\n  setHorizontal(just) {\n    this.horizontal = typeof (just) === 'string'\n      ? ChordSymbol.horizontalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  getWidth() {\n    let rv = 0;\n    this.symbolBlocks.forEach((symbol) => {\n      rv += symbol.vAlign ? 0 : symbol.width;\n    });\n    return rv;\n  }\n\n  isSuperscript(symbol) {\n    return symbol.symbolModifier !== null && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUPERSCRIPT;\n  }\n\n  isSubscript(symbol) {\n    return symbol.symbolModifier !== null && symbol.symbolModifier === ChordSymbol.symbolModifiers.SUBSCRIPT;\n  }\n\n  // Render text and glyphs above/below the note\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    this.context.openGroup(classString, this.getAttribute('id'));\n\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n      this.index);\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n\n    let y;\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vertical === ChordSymbol.verticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else  { // (this.vertical === ChordSymbol.verticalJustify.TOP)\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    }\n\n    let x = start.x;\n    if (this.horizontal === ChordSymbol.horizontalJustify.LEFT) {\n      x = start.x;\n    } else if (this.horizontal === ChordSymbol.horizontalJustify.RIGHT) {\n      x = start.x + this.getWidth();\n    } else if (this.horizontal === ChordSymbol.horizontalJustify.CENTER) {\n      x = start.x - this.getWidth() / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() -  this.getWidth() / 2;\n    }\n    L('Rendering ChordSymbol: ', this.text, x, y);\n\n    this.symbolBlocks.forEach((symbol) => {\n      const sp = this.isSuperscript(symbol);\n      const sub = this.isSubscript(symbol);\n      let curY = y;\n      L('shift was ', symbol.xShift, symbol.yShift);\n      L('curY pre sub ', curY);\n      if (sp) {\n        curY += this.superscriptOffset;\n      }\n      if (sub) {\n        curY += this.subscriptOffset;\n      }\n      L('curY sup/sub ', curY);\n\n      if (symbol.symbolType === ChordSymbol.symbolTypes.TEXT) {\n        if (sp || sub) {\n          this.context.save();\n          this.context.setFont(this.font.family, this.font.size * ChordSymbol.superSubRatio, this.font.weight);\n        }\n        // We estimate the text width, fill it in with the empirical value so the\n        // formatting is even.\n        /* const textDim = this.context.measureText(symbol.text);\n        symbol.width = textDim.width; */\n        L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n\n        this.context.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n        if (sp || sub) {\n          this.context.restore();\n        }\n      } else if (symbol.symbolType === ChordSymbol.symbolTypes.GLYPH) {\n        curY += symbol.yShift;\n        L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n        symbol.glyph.render(this.context, x + symbol.xShift, curY);\n      } else if (symbol.symbolType === ChordSymbol.symbolTypes.LINE) {\n        L('Rendering Line : ', symbol.width, x, curY);\n        this.context.beginPath();\n        this.context.setLineWidth(1); // ?\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + symbol.width, curY);\n        this.context.stroke();\n      }\n\n      x += symbol.width;\n      if (symbol.vAlign) {\n        x += symbol.xShift;\n      }\n    });\n    this.context.closeGroup();\n    this.context.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'gClef',\n        line: 3,\n      },\n      'bass': {\n        code: 'fClef',\n        line: 1,\n      },\n      'alto': {\n        code: 'cClef',\n        line: 2,\n      },\n      'tenor': {\n        code: 'cClef',\n        line: 1,\n      },\n      'percussion': {\n        code: 'restMaxima',\n        line: 2,\n      },\n      'soprano': {\n        code: 'cClef',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'cClef',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'cClef',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'fClef',\n        line: 2,\n      },\n      'subbass': {\n        code: 'fClef',\n        line: 0,\n      },\n      'french': {\n        code: 'gClef',\n        line: 4,\n      },\n      'tab': {\n        code: '6stringTabClef',\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.musicFont.lookupMetric(`clef.${this.size}.width`));\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = this.musicFont.lookupMetric(`clef.${this.size}.point`, 0);\n    this.glyph = new Glyph(this.clef.code, this.clef.point, {\n      category: `clef.${this.clef.code}.${this.size}`\n    });\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const code = this.musicFont.lookupMetric(`clef.annotations.${annotation}.smuflCode`);\n      const point = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.point`);\n      const line = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.line`);\n      const x_shift = this.musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.shiftX`);\n\n      this.annotation = { code, point, line, x_shift };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n    if (this.type !== 'tab') return this;\n\n    const numLines = this.stave.getOptions().num_lines;\n    const point = this.musicFont.lookupMetric(`clef.lineCount.${numLines}.point`);\n    const shiftY = this.musicFont.lookupMetric(`clef.lineCount.${numLines}.shiftY`);\n    this.glyph.setPoint(point);\n    this.glyph.setYShift(shiftY);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\n\nexport class Dot extends Modifier {\n  static get CATEGORY() { return 'dots'; }\n\n  // Arrange dots inside a ModifierContext.\n  static format(dots, state) {\n    const right_shift = state.right_shift;\n    const dot_spacing = 1;\n\n    if (!dots || dots.length === 0) return false;\n\n    const dot_list = [];\n    const max_shift_map = {};\n    for (let i = 0; i < dots.length; ++i) {\n      const dot = dots[i];\n      const note = dot.getNote();\n\n      let props;\n      let shift;\n\n      // Only StaveNote has .getKeyProps()\n      if (typeof note.getKeyProps === 'function') {\n        props = note.getKeyProps()[dot.getIndex()];\n        shift = note.getRightDisplacedHeadPx();\n      } else { // Else it's a TabNote\n        props = { line: 0.5 }; // Shim key props for dot placement\n        shift = 0;\n      }\n\n      const note_id = note.getAttribute('id');\n      dot_list.push({ line: props.line, note, note_id, dot });\n      max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n    }\n\n    // Sort dots by line number.\n    dot_list.sort((a, b) => b.line - a.line);\n\n    let dot_shift = right_shift;\n    let x_width = 0;\n    let last_line = null;\n    let last_note = null;\n    let prev_dotted_space = null;\n    let half_shiftY = 0;\n\n    for (let i = 0; i < dot_list.length; ++i) {\n      const { dot, note, note_id, line } = dot_list[i];\n\n      // Reset the position of the dot every line.\n      if (line !== last_line || note !== last_note) {\n        dot_shift = max_shift_map[note_id];\n      }\n\n      if (!note.isRest() && line !== last_line) {\n        if (Math.abs(line % 1) === 0.5) {\n          // note is on a space, so no dot shift\n          half_shiftY = 0;\n        } else {\n          // note is on a line, so shift dot to space above the line\n          half_shiftY = 0.5;\n          if (last_note != null &&\n              !last_note.isRest() && last_line - line === 0.5) {\n            // previous note on a space, so shift dot to space below the line\n            half_shiftY = -0.5;\n          } else if (line + half_shiftY === prev_dotted_space) {\n            // previous space is dotted, so shift dot to space below the line\n            half_shiftY = -0.5;\n          }\n        }\n      }\n\n      // convert half_shiftY to a multiplier for dots.draw()\n      if (note.isRest()) {\n        dot.dot_shiftY += -half_shiftY;\n      } else {\n        dot.dot_shiftY = -half_shiftY;\n      }\n      prev_dotted_space = line + half_shiftY;\n\n      dot.setXShift(dot_shift);\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\n      last_line = line;\n      last_note = note;\n    }\n\n    // Update state.\n    state.right_shift += x_width;\n    return true;\n  }\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.setAttribute('type', 'Dot');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.RIGHT;\n\n    this.radius = 2;\n    this.setWidth(5);\n    this.dot_shiftY = 0;\n  }\n\n  getCategory() { return Dot.CATEGORY; }\n\n  setNote(note) {\n    this.note = note;\n\n    if (this.note.getCategory() === 'gracenotes') {\n      this.radius *= 0.50;\n      this.setWidth(3);\n    }\n  }\n\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.note || this.index === null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\n    }\n\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index,\n      { forceFlagRight: true });\n\n    // Set the starting y coordinate to the base of the stem for TabNotes\n    if (this.note.getCategory() === 'tabnotes') {\n      start.y = this.note.getStemExtents().baseY;\n    }\n\n    const x = (start.x + this.x_shift) + this.width - this.radius;\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\n    const ctx = this.context;\n\n    ctx.beginPath();\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n    ctx.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\n/* eslint max-classes-per-file: \"off\" */\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL() {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY() { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL() { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL() { return { token: \"['][^']*[']\" }; }\n  NOTENAME() { return { token: '[a-gA-G]' }; }\n  OCTAVE() { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }; }\n  DURATIONS() { return { token: '[0-9whq]+' }; }\n  TYPES() { return { token: '[rRsSxX]' }; }\n  LPAREN() { return { token: '[(]' }; }\n  RPAREN() { return { token: '[)]' }; }\n  COMMA() { return { token: '[,]' }; }\n  DOT() { return { token: '[.]' }; }\n  SLASH() { return { token: '[/]' }; }\n  MAYBESLASH() { return { token: '[/]?' }; }\n  EQUALS() { return { token: '[=]' }; }\n  LBRACKET() { return { token: '\\\\[' }; }\n  RBRACKET() { return { token: '\\\\]' }; }\n  EOL() { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof (notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = { ...this.options, ...this.piece.options };\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = {\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false, ...options\n    };\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = { clef: this.defaults.clef, stem: this.defaults.stem, ...options };\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = { time: this.defaults.time, ...voiceOptions };\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\nimport { Flow } from './tables';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n    this.fontStack = Flow.DEFAULT_FONT_STACK;\n    this.musicFont = Flow.DEFAULT_FONT_STACK[0];\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // set music font\n  setFontStack(fontStack) {\n    this.fontStack = fontStack;\n    this.musicFont = fontStack[0];\n    return this;\n  }\n  getFontStack() {\n    return this.fontStack;\n  }\n\n  // set the draw style of a stemmable note:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  restoreStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n    context.restore();\n    return this;\n  }\n\n  // draw with style of an element.\n  drawWithStyle() {\n    this.checkContext();\n    this.applyStyle();\n    this.draw();\n    this.restoreStyle();\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { ChordSymbol } from './chordsymbol';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { GlyphNote } from './glyphnote';\nimport { RepeatNote } from './repeatnote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { KeySigNote } from './keysignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\nimport { TextFont } from './textFont';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GlyphNote(glyph, noteStruct, options) {\n    const note = new GlyphNote(glyph, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  RepeatNote(type, noteStruct, options) {\n    const note = new RepeatNote(type, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params) {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  ChordSymbol(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const chordSymbol = new ChordSymbol(params.text);\n    chordSymbol.setHorizontalJustification(params.hJustify);\n    chordSymbol.setVerticalJustification(params.vJustify);\n    chordSymbol.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    chordSymbol.setContext(this.context);\n    return chordSymbol;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params) {\n    const multimeasurerest = new MultiMeasureRest(params.number_of_measures, params);\n    multimeasurerest.setContext(this.context);\n    this.renderQ.push(multimeasurerest);\n    return multimeasurerest;\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time, params.options);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  TextFont(params = {}) {\n    params.factory = this;\n    const textFont = new TextFont(params);\n    return textFont;\n  }\n\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n","export const BravuraFont = {\n  \"glyphs\": {\n    \"bracketTop\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": 0,\n      \"y_max\": 295,\n      \"ha\": 295,\n      \"o\": \"m 0 168 l 0 0 l 180 0 b 674 390 410 43 616 150 b 675 405 675 396 675 400 b 664 425 675 416 671 422 b 628 405 651 425 635 415 b 157 179 613 389 432 199 l 12 179 b 0 168 3 179 0 177 z\"\n    },\n    \"bracketBottom\": {\n      \"x_min\": 0,\n      \"x_max\": 469,\n      \"y_min\": -295,\n      \"y_max\": 0,\n      \"ha\": 295,\n      \"o\": \"m 0 0 l 0 -168 b 12 -179 0 -177 3 -179 l 157 -179 b 628 -405 432 -199 613 -389 b 664 -425 635 -415 651 -425 b 675 -405 671 -422 675 -416 b 674 -390 675 -400 675 -396 b 180 0 616 -150 410 -43 z\"\n    },\n    \"barlineTick\": {\n      \"x_min\": 0,\n      \"x_max\": 36,\n      \"y_min\": 868,\n      \"y_max\": 1120,\n      \"ha\": 252,\n      \"o\": \"m 52 1250 l 52 1613 l 0 1613 l 0 1250 z\"\n    },\n    \"breathMarkTick\": {\n      \"x_min\": 0,\n      \"x_max\": 500,\n      \"y_min\": 0,\n      \"y_max\": 502,\n      \"ha\": 502,\n      \"o\": \"m 0 374 b 9 334 0 367 0 343 b 179 19 40 312 164 121 b 192 0 179 3 186 0 b 210 19 197 0 207 6 b 698 701 245 197 507 658 b 720 714 714 704 720 711 b 698 723 720 720 711 723 b 197 186 455 714 210 202 b 186 176 194 179 189 176 b 176 186 179 176 176 186 b 9 367 143 266 27 359 b 0 374 6 372 3 374 z\"\n    },\n    \"segno\": {\n      \"x_min\": 4,\n      \"x_max\": 550,\n      \"y_min\": -27,\n      \"y_max\": 759,\n      \"ha\": 786,\n      \"o\": \"m 29 687 b 295 449 75 582 284 454 b 304 438 301 446 304 444 b 295 415 304 432 301 425 b 78 22 285 395 78 22 b 73 3 75 16 73 9 b 114 -39 73 -20 91 -39 b 150 -17 128 -39 143 -30 b 377 395 150 -17 373 386 b 395 402 377 393 389 402 b 704 176 416 397 704 312 b 624 75 704 120 670 82 b 613 73 621 75 616 73 b 562 138 586 73 562 94 l 562 154 b 485 249 562 209 526 249 b 468 246 480 249 474 248 b 366 153 415 233 366 210 b 540 -12 366 65 455 -12 b 600 -1 559 -12 579 -9 b 792 251 716 37 792 131 b 789 292 792 264 791 278 b 523 588 768 451 540 579 b 498 611 505 598 498 603 b 501 619 498 613 500 616 b 732 1032 508 631 732 1032 b 737 1053 736 1040 737 1045 b 697 1093 737 1076 719 1093 b 661 1073 683 1093 668 1086 b 423 647 661 1073 432 660 b 410 635 419 639 416 635 b 396 639 406 635 402 636 b 128 792 383 644 166 727 b 108 868 120 808 108 838 b 186 958 108 907 125 948 l 194 958 b 217 939 203 958 213 955 l 220 929 b 325 805 230 890 252 805 b 425 901 384 805 425 840 b 413 969 425 923 420 946 b 220 1060 390 1035 294 1060 b 6 793 120 1060 6 936 b 29 687 6 759 13 723 z m 680 589 b 762 671 726 589 762 626 b 680 753 762 717 726 753 b 598 671 635 753 598 717 b 680 589 598 626 635 589 z m 120 298 b 202 380 166 298 202 334 b 120 462 202 425 166 462 b 37 380 75 462 37 425 b 120 298 37 334 75 298 z\"\n    },\n    \"coda\": {\n      \"x_min\": -4,\n      \"x_max\": 955,\n      \"y_min\": -158,\n      \"y_max\": 898,\n      \"ha\": 1056,\n      \"o\": \"m -6 541 b 20 507 -6 523 0 507 l 210 507 b 660 0 226 238 426 19 l 660 -202 b 694 -228 660 -222 675 -228 b 729 -202 713 -228 729 -222 l 729 0 b 1178 507 962 19 1164 238 l 1349 507 b 1375 541 1369 507 1375 523 b 1349 576 1375 560 1369 576 l 1178 576 b 729 1083 1164 847 962 1064 l 729 1269 b 694 1293 729 1287 713 1293 b 660 1269 675 1293 660 1287 l 660 1083 b 210 576 426 1064 226 848 l 20 576 b -6 541 0 576 -6 560 z m 940 576 l 729 576 l 729 1002 b 940 576 930 985 940 809 z m 729 507 l 940 507 b 729 69 936 287 909 91 z m 455 576 b 660 1002 455 809 455 985 l 660 576 z m 660 507 l 660 69 b 455 507 474 91 456 285 z\"\n    },\n    \"gClef\": {\n      \"x_min\": 0,\n      \"x_max\": 671,\n      \"y_min\": -658,\n      \"y_max\": 1098,\n      \"ha\": 1756,\n      \"o\": \"m 524 -363 b 624 -354 557 -363 595 -360 b 645 -367 639 -351 642 -350 b 684 -657 662 -464 684 -589 b 455 -896 684 -870 540 -896 b 340 -854 377 -896 340 -873 b 386 -829 340 -844 353 -840 b 482 -694 431 -816 482 -778 b 344 -547 482 -615 432 -547 b 190 -713 248 -547 190 -624 b 464 -948 190 -806 246 -948 b 747 -660 560 -948 747 -904 b 706 -351 747 -577 721 -441 b 724 -327 703 -334 704 -336 b 966 16 870 -269 966 -147 b 619 363 966 200 831 363 b 577 389 582 363 582 363 l 541 598 b 550 625 539 615 541 616 b 824 1174 706 770 824 953 b 730 1509 824 1299 789 1423 b 655 1581 708 1541 671 1581 b 562 1512 635 1581 590 1544 b 420 1064 455 1394 420 1214 b 441 828 420 981 431 887 b 428 793 444 811 445 808 b 0 125 220 622 0 416 b 524 -363 0 -125 171 -363 z m 115 29 b 249 363 115 114 130 228 b 469 567 336 459 402 513 b 490 562 484 579 487 577 l 520 377 b 498 343 524 350 524 351 b 289 63 372 300 289 186 b 455 -192 289 -66 357 -158 b 494 -200 467 -196 484 -200 b 511 -184 505 -200 511 -193 b 490 -166 511 -174 500 -170 b 386 -12 429 -140 386 -78 b 530 157 386 71 442 132 b 559 145 553 163 556 161 l 631 -284 b 611 -304 634 -300 632 -300 b 530 -311 588 -308 559 -311 b 115 29 278 -311 115 -171 z m 677 1358 b 763 1240 724 1358 763 1319 b 513 851 763 1080 626 950 b 494 863 503 842 497 844 b 485 995 488 900 485 949 b 677 1358 485 1220 589 1358 z m 635 168 b 848 -66 752 158 848 60 b 713 -271 848 -157 793 -230 b 690 -262 696 -279 693 -279 l 619 148 b 635 168 616 166 618 170 z\"\n    },\n    \"cClef\": {\n      \"x_min\": 0,\n      \"x_max\": 699,\n      \"y_min\": -506,\n      \"y_max\": 506,\n      \"ha\": 1012,\n      \"o\": \"m 269 -694 b 300 -724 269 -714 279 -724 l 301 -724 b 331 -694 321 -724 331 -714 l 331 -63 b 344 -55 331 -52 338 -53 b 472 -265 382 -65 442 -102 b 500 -301 477 -288 485 -301 b 530 -262 516 -301 523 -287 b 684 -128 549 -199 582 -128 b 804 -409 778 -128 804 -220 b 651 -683 804 -598 770 -683 b 528 -644 631 -683 528 -674 b 567 -622 528 -636 552 -628 b 625 -528 596 -612 625 -583 b 527 -429 625 -465 583 -429 b 416 -547 465 -429 416 -471 b 667 -729 416 -638 495 -729 b 1007 -413 903 -729 1007 -563 b 706 -76 1007 -215 897 -76 b 618 -89 664 -76 636 -84 b 576 -88 603 -94 589 -96 b 524 0 556 -75 524 -29 b 576 88 524 29 556 75 b 618 89 589 96 603 94 b 706 76 636 84 664 76 b 1007 413 897 76 1007 215 b 667 729 1007 563 903 729 b 416 547 495 729 416 638 b 527 429 416 471 465 429 b 625 528 583 429 625 465 b 567 622 625 583 596 612 b 528 644 552 628 528 636 b 651 683 528 674 631 683 b 804 409 770 683 804 598 b 684 128 804 220 778 128 b 530 262 582 128 549 199 b 500 301 523 287 516 301 b 472 265 485 301 477 288 b 344 55 442 102 382 65 b 331 63 338 53 331 52 l 331 694 b 301 724 331 714 321 724 l 300 724 b 269 694 279 724 269 714 z m 30 -724 l 154 -724 b 184 -694 174 -724 184 -714 l 184 694 b 154 724 184 714 174 724 l 30 724 b 0 694 10 724 0 714 l 0 -694 b 30 -724 0 -714 10 -724 z\"\n    },\n    \"fClef\": {\n      \"x_min\": -5,\n      \"x_max\": 684,\n      \"y_min\": -635,\n      \"y_max\": 262,\n      \"ha\": 897,\n      \"o\": \"m 12 -914 b 36 -907 19 -914 27 -912 b 765 -40 390 -734 765 -478 b 363 377 765 210 612 377 b 0 56 112 377 0 194 b 177 -158 0 -59 60 -158 b 330 -6 268 -158 330 -95 b 192 144 330 86 262 144 b 120 134 153 144 138 134 b 96 160 101 134 96 145 b 330 323 96 217 183 323 b 549 -53 482 323 549 173 b 14 -871 549 -455 350 -680 b -7 -897 1 -878 -7 -886 b 12 -914 -7 -906 -1 -914 z m 906 101 b 985 180 950 101 985 135 b 906 259 985 225 950 259 b 827 180 861 259 827 225 b 906 101 827 135 861 101 z m 907 -258 b 985 -180 952 -258 985 -225 b 907 -102 985 -135 952 -102 b 829 -180 863 -102 829 -135 b 907 -258 829 -225 863 -258 z\"\n    },\n    \"unpitchedPercussionClef1\": {\n      \"x_min\": 0,\n      \"x_max\": 382,\n      \"y_min\": -250,\n      \"y_max\": 250,\n      \"ha\": 500,\n      \"o\": \"m 320 338 l 320 -338 b 340 -360 320 -350 328 -360 l 530 -360 b 550 -338 541 -360 550 -350 l 550 338 b 530 360 550 350 541 360 l 340 360 b 320 338 328 360 320 350 z m 20 -360 l 210 -360 b 230 -338 222 -360 230 -350 l 230 338 b 210 360 230 350 222 360 l 20 360 b 0 338 9 360 0 350 l 0 -338 b 20 -360 0 -350 9 -360 z\"\n    },\n    \"6stringTabClef\": {\n      \"x_min\": -3,\n      \"x_max\": 408,\n      \"y_min\": -748,\n      \"y_max\": 764,\n      \"ha\": 1512,\n      \"o\": \"m 39 -399 l 39 -1077 l 344 -1077 b 544 -883 467 -1077 544 -995 b 420 -719 544 -802 507 -752 b 514 -572 482 -690 514 -639 b 314 -399 514 -472 442 -399 z m 88 -328 l 160 -125 l 420 -125 l 491 -328 l 588 -328 l 350 348 l 238 348 l -4 -328 z m 26 1100 l 26 1024 l 249 1024 l 249 422 l 336 422 l 336 1024 l 557 1024 l 557 1100 z m 125 -768 l 337 -768 b 458 -884 418 -768 458 -818 b 337 -1001 458 -949 418 -1001 l 125 -1001 z m 292 -475 b 428 -583 389 -475 428 -514 b 292 -691 428 -652 389 -691 l 125 -691 l 125 -475 z m 292 256 l 397 -52 l 181 -52 z\"\n    },\n    \"timeSig0\": {\n      \"x_min\": 20,\n      \"x_max\": 450,\n      \"y_min\": -250,\n      \"y_max\": 251,\n      \"ha\": 501,\n      \"o\": \"m 338 -360 b 648 0 510 -360 648 -199 b 338 361 648 200 510 361 b 29 0 167 361 29 200 b 338 -360 29 -199 167 -360 z m 230 10 b 338 317 230 180 278 317 b 446 10 397 317 446 180 b 338 -295 446 -158 397 -295 b 230 10 278 -295 230 -158 z\"\n    },\n    \"timeSig1\": {\n      \"x_min\": 20,\n      \"x_max\": 314,\n      \"y_min\": -250,\n      \"y_max\": 251,\n      \"ha\": 501,\n      \"o\": \"m 29 0 b 45 -20 29 -7 33 -16 b 58 -23 50 -22 56 -23 b 78 -10 72 -23 78 -10 b 156 117 78 -10 140 89 b 170 131 161 127 167 131 b 179 111 176 131 179 120 l 179 -261 b 115 -315 179 -294 145 -315 b 91 -337 105 -315 91 -320 b 122 -360 91 -353 104 -360 l 429 -360 b 452 -337 452 -360 452 -337 b 431 -315 452 -337 452 -315 b 384 -265 410 -315 384 -289 l 384 328 b 356 361 384 351 376 360 b 281 356 336 361 300 356 b 206 360 253 356 228 357 b 199 361 203 360 200 361 b 173 334 184 361 179 347 l 35 19 b 29 0 35 19 29 10 z\"\n    },\n    \"timeSig2\": {\n      \"x_min\": 20,\n      \"x_max\": 426,\n      \"y_min\": -257,\n      \"y_max\": 254,\n      \"ha\": 511,\n      \"o\": \"m 29 170 b 42 108 29 150 33 130 b 160 29 63 63 108 29 b 261 156 248 29 261 120 b 161 275 261 242 161 246 b 275 330 164 295 190 330 b 405 192 403 330 405 233 b 193 -102 405 60 297 -39 b 33 -314 114 -153 58 -223 b 69 -370 33 -336 40 -370 b 203 -282 101 -370 118 -282 b 410 -360 261 -282 282 -360 b 606 -131 472 -360 583 -354 b 589 -111 606 -114 599 -111 b 570 -125 577 -111 573 -117 b 569 -130 570 -127 569 -128 b 513 -192 554 -164 543 -192 b 488 -187 505 -192 498 -190 b 445 -171 469 -180 459 -179 b 289 -137 416 -160 348 -137 b 236 -145 271 -137 252 -140 b 422 -42 268 -94 390 -50 b 613 147 523 -14 613 27 b 330 366 613 300 464 366 b 69 275 229 366 140 357 b 29 170 45 245 29 209 z\"\n    },\n    \"timeSig3\": {\n      \"x_min\": 20,\n      \"x_max\": 401,\n      \"y_min\": -251,\n      \"y_max\": 249,\n      \"ha\": 500,\n      \"o\": \"m 29 -203 b 275 -361 32 -315 134 -359 l 288 -361 b 577 -161 431 -361 577 -288 l 577 -151 b 537 -50 575 -109 564 -82 b 503 -20 528 -39 517 -29 l 472 -3 l 425 10 b 410 17 418 12 413 12 b 409 24 409 20 409 22 b 415 37 409 30 410 36 b 459 50 431 42 446 43 b 547 181 517 78 547 115 b 307 357 547 314 367 353 b 285 359 300 357 292 359 b 37 200 161 359 37 276 b 154 84 37 153 65 89 l 161 84 b 256 177 225 84 256 130 l 256 189 b 209 248 252 242 216 245 b 180 268 202 251 180 248 l 180 274 b 240 310 183 298 228 310 b 374 199 363 310 374 233 l 374 189 b 199 36 374 82 289 40 b 164 12 184 35 164 27 b 200 -6 164 -6 189 -6 b 379 -137 366 -6 379 -118 b 269 -307 379 -289 301 -307 b 256 -305 264 -307 258 -305 b 216 -282 245 -304 217 -304 l 216 -275 b 249 -180 216 -243 248 -222 b 145 -76 249 -120 207 -76 b 130 -78 140 -76 135 -76 b 60 -115 105 -82 78 -96 b 29 -203 36 -137 29 -171 z\"\n    },\n    \"timeSig4\": {\n      \"x_min\": 20,\n      \"x_max\": 450,\n      \"y_min\": -250,\n      \"y_max\": 251,\n      \"ha\": 501,\n      \"o\": \"m 58 -161 l 325 -161 l 325 -252 b 268 -302 325 -291 294 -302 b 235 -330 245 -302 235 -315 b 262 -360 235 -344 240 -360 l 569 -360 b 598 -330 583 -360 598 -350 b 566 -301 598 -310 580 -301 b 521 -246 552 -301 521 -292 l 521 -161 l 626 -161 b 648 -134 641 -161 648 -151 b 626 -107 648 -117 642 -107 l 521 -107 l 521 202 b 504 226 521 213 520 226 b 475 213 491 226 484 223 l 338 48 b 325 14 333 40 325 32 l 325 -107 l 131 -107 b 481 334 246 -9 477 318 b 482 341 481 337 482 338 b 461 361 482 353 472 361 b 363 359 448 361 389 359 b 261 361 337 359 272 361 b 228 334 248 361 228 357 b 43 -105 228 156 86 -45 l 35 -117 b 33 -121 35 -118 33 -120 b 29 -137 30 -127 29 -132 b 58 -161 29 -151 40 -161 z\"\n    },\n    \"timeSig5\": {\n      \"x_min\": 20,\n      \"x_max\": 383,\n      \"y_min\": -251,\n      \"y_max\": 246,\n      \"ha\": 497,\n      \"o\": \"m 29 -183 b 284 -361 29 -302 107 -361 b 552 -125 456 -361 552 -255 b 314 112 552 6 445 112 b 122 71 230 112 168 98 b 115 69 120 69 117 69 b 109 79 109 69 109 75 l 109 85 b 117 179 109 85 115 166 b 138 197 118 190 125 197 l 144 197 b 285 184 158 194 226 184 b 492 323 485 184 492 300 b 472 353 492 341 488 353 b 295 340 454 353 341 340 b 101 354 249 340 125 351 b 66 330 75 354 68 341 l 50 10 l 50 7 b 79 -14 50 -12 65 -14 b 111 14 94 -14 95 -1 b 209 62 125 29 160 62 b 357 -125 258 62 357 35 b 235 -304 357 -284 272 -304 b 202 -300 223 -304 212 -304 b 184 -279 194 -295 186 -289 b 202 -259 184 -269 194 -264 b 256 -163 235 -239 256 -203 b 144 -50 256 -99 206 -50 b 30 -157 66 -50 35 -107 b 29 -183 29 -166 29 -174 z\"\n    },\n    \"timeSig6\": {\n      \"x_min\": 20,\n      \"x_max\": 414,\n      \"y_min\": -249,\n      \"y_max\": 251,\n      \"ha\": 500,\n      \"o\": \"m 29 4 l 29 -1 b 73 -200 30 -68 42 -143 b 324 -359 132 -307 203 -359 b 513 -307 389 -359 461 -348 b 596 -137 563 -266 596 -202 b 379 72 596 -24 490 72 b 248 22 333 72 285 55 b 239 19 245 19 242 19 b 226 53 230 19 226 30 b 346 327 230 320 315 327 b 393 305 374 327 393 320 b 357 251 393 285 366 268 b 347 209 350 238 347 223 b 369 150 347 187 354 166 b 439 120 379 131 420 120 b 554 229 500 120 554 167 b 553 245 554 235 554 239 b 348 361 539 337 426 361 b 85 209 239 360 137 307 b 29 4 53 148 29 72 z m 320 3 b 405 -158 366 3 405 -69 b 320 -320 405 -248 366 -320 b 236 -158 274 -320 236 -248 b 320 3 236 -69 274 3 z\"\n    },\n    \"timeSig7\": {\n      \"x_min\": 20,\n      \"x_max\": 421,\n      \"y_min\": -250,\n      \"y_max\": 249,\n      \"ha\": 499,\n      \"o\": \"m 29 71 b 45 48 29 71 30 48 b 66 76 56 48 60 60 b 164 196 81 112 99 196 b 374 88 222 196 291 88 b 446 118 415 88 435 109 b 459 124 451 121 456 124 b 469 111 465 124 468 120 b 272 -112 469 71 359 -10 b 173 -315 217 -176 173 -259 b 200 -360 173 -346 173 -360 b 294 -347 226 -360 258 -347 b 412 -360 330 -347 397 -360 b 435 -307 426 -360 435 -348 b 606 288 435 -66 606 140 l 606 294 b 582 351 606 333 606 351 b 552 336 580 351 557 346 b 485 236 541 318 521 236 b 262 359 449 236 382 359 b 137 307 179 359 157 325 b 98 281 117 288 108 282 b 60 315 86 281 68 301 b 43 325 58 321 50 325 b 29 308 36 325 29 321 z\"\n    },\n    \"timeSig8\": {\n      \"x_min\": 20,\n      \"x_max\": 416,\n      \"y_min\": -259,\n      \"y_max\": 259,\n      \"ha\": 518,\n      \"o\": \"m 29 -190 b 301 -373 29 -315 158 -373 b 599 -117 445 -373 599 -311 b 481 52 599 -30 549 17 b 567 204 533 85 567 132 b 317 373 567 351 356 373 b 36 176 150 373 36 297 b 161 -16 36 76 92 23 b 29 -190 86 -52 29 -99 z m 111 -183 b 225 -48 111 -125 161 -72 b 436 -219 330 -94 436 -124 b 295 -325 436 -276 392 -325 b 111 -183 199 -325 111 -276 z m 314 331 b 482 207 360 331 482 308 b 406 85 482 150 454 112 b 168 240 291 125 168 150 b 314 331 168 301 251 331 z\"\n    },\n    \"timeSig9\": {\n      \"x_min\": 20,\n      \"x_max\": 414,\n      \"y_min\": -249,\n      \"y_max\": 251,\n      \"ha\": 500,\n      \"o\": \"m 246 -69 b 377 -19 292 -69 340 -52 b 386 -16 380 -16 383 -16 b 399 -50 395 -16 399 -27 b 279 -324 395 -317 310 -324 b 232 -302 251 -324 232 -317 b 268 -248 232 -282 259 -265 b 278 -206 275 -235 278 -220 b 256 -147 278 -184 271 -163 b 186 -117 246 -128 204 -117 b 71 -226 125 -117 71 -164 b 72 -242 71 -232 71 -236 b 276 -359 86 -334 199 -359 b 540 -206 386 -357 488 -304 b 596 -1 572 -145 596 -69 l 596 4 b 552 203 595 71 583 145 b 301 361 492 310 422 361 b 112 310 236 361 164 351 b 29 140 62 269 29 204 b 246 -69 29 27 135 -69 z m 220 161 b 305 323 220 251 259 323 b 389 161 351 323 389 251 b 305 0 389 72 351 0 b 220 161 259 0 220 72 z\"\n    },\n    \"timeSigCommon\": {\n      \"x_min\": 5,\n      \"x_max\": 424,\n      \"y_min\": -249,\n      \"y_max\": 251,\n      \"ha\": 500,\n      \"o\": \"m 101 -262 b 321 -359 156 -328 235 -359 b 611 -88 573 -359 611 -130 b 589 -56 611 -56 595 -56 b 567 -82 577 -56 567 -58 b 363 -311 567 -268 409 -311 b 184 40 246 -311 184 -197 b 372 327 184 278 294 327 b 477 278 446 327 477 292 b 451 246 477 265 472 246 b 360 140 393 246 360 184 b 471 32 360 58 431 32 b 580 156 471 32 580 36 b 336 361 580 344 363 361 b 7 -14 131 361 7 180 b 101 -262 7 -108 42 -190 z\"\n    },\n    \"timeSigCutCommon\": {\n      \"x_min\": 0,\n      \"x_max\": 418,\n      \"y_min\": -359,\n      \"y_max\": 361,\n      \"ha\": 720,\n      \"o\": \"m 225 -346 b 252 -382 235 -350 252 -369 l 252 -492 b 276 -517 252 -505 265 -517 b 302 -492 292 -517 302 -505 l 302 -379 b 318 -359 302 -370 308 -363 b 602 -85 563 -354 602 -130 b 579 -58 600 -58 586 -58 l 573 -58 b 559 -82 567 -58 559 -60 b 354 -310 559 -266 400 -310 b 317 -305 340 -310 328 -308 b 302 -284 311 -304 302 -295 l 302 287 b 338 323 302 297 328 321 b 363 324 347 324 356 324 b 468 275 436 324 468 289 b 442 243 468 264 464 243 b 351 137 384 243 351 181 b 462 30 351 56 422 30 b 572 154 462 30 572 35 b 318 357 572 295 441 357 b 302 390 310 359 302 383 l 302 495 b 276 520 302 507 292 520 b 252 495 265 520 252 507 l 252 369 b 235 346 252 359 238 346 l 196 331 b 0 -14 66 275 0 122 b 225 -346 0 -150 86 -310 z m 232 259 b 236 262 233 262 235 262 b 252 239 243 262 252 251 l 252 -235 b 243 -252 252 -248 248 -252 b 236 -248 240 -252 238 -251 b 177 37 197 -193 177 -96 b 232 259 177 147 200 215 z\"\n    },\n    \"noteheadDoubleWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 599,\n      \"y_min\": -155,\n      \"y_max\": 155,\n      \"ha\": 310,\n      \"o\": \"m 423 -180 b 733 1 657 -180 733 -98 l 733 -213 b 747 -223 733 -219 740 -223 l 766 -223 b 780 -213 773 -223 780 -219 l 780 212 b 766 223 780 217 773 223 l 747 223 b 733 212 740 223 733 217 l 733 1 b 438 180 733 104 572 180 b 130 1 248 180 130 101 b 423 -180 130 -92 210 -180 z m 284 58 b 400 147 284 131 333 147 b 577 -45 498 147 577 42 b 469 -145 577 -115 533 -145 b 331 -71 409 -145 369 -112 b 284 58 305 -37 284 12 z m 815 -213 b 829 -223 815 -219 824 -223 l 848 -223 b 863 -213 857 -223 863 -219 l 863 212 b 848 223 863 217 857 223 l 829 223 b 815 212 824 223 815 217 z m 82 212 l 82 -213 b 96 -223 82 -219 88 -223 l 114 -223 b 128 -213 121 -223 128 -219 l 128 212 b 114 223 128 217 121 223 l 96 223 b 82 212 88 223 82 217 z m 13 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 l 13 223 b 0 212 4 223 0 217 l 0 -213 b 13 -223 0 -219 4 -223 z\"\n    },\n    \"noteheadWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 422,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 3 b 297 -180 0 -94 82 -180 b 608 3 533 -180 608 -98 b 311 180 608 105 445 180 b 0 3 120 180 0 101 z m 156 56 b 160 91 156 68 157 79 b 274 148 176 141 229 148 b 452 -45 373 148 452 42 b 386 -141 452 -89 433 -130 b 341 -147 372 -145 356 -147 b 206 -72 289 -147 236 -112 b 156 56 177 -39 156 10 z\"\n    },\n    \"noteheadHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 295,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 140 -180 b 425 60 377 -180 425 13 b 282 180 425 134 366 180 b 0 -60 68 180 0 14 b 140 -180 0 -137 60 -180 z m 42 -63 b 318 121 42 7 251 121 b 372 91 346 121 361 108 b 380 63 376 82 380 73 b 108 -125 380 1 177 -125 b 50 -92 78 -125 60 -109 b 42 -63 46 -84 42 -73 z\"\n    },\n    \"noteheadBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 295,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 -60 b 140 -180 0 -135 62 -180 b 425 60 268 -180 425 -62 b 285 180 425 134 367 180 b 0 -60 127 180 0 63 z\"\n    },\n    \"noteheadXWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 377,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 148 b 12 124 0 140 4 131 l 132 0 l 12 -124 b 1 -148 4 -131 1 -140 b 32 -180 1 -164 14 -180 l 158 -180 b 179 -171 166 -180 173 -177 l 272 -95 l 364 -171 b 384 -180 370 -177 377 -180 l 511 -180 b 543 -148 528 -180 543 -164 b 531 -124 543 -140 539 -131 l 412 0 l 531 124 b 541 148 539 131 541 140 b 513 180 541 164 528 180 l 384 180 b 364 171 377 180 370 177 l 272 94 l 179 171 b 158 180 173 177 166 180 l 30 180 b 0 148 16 180 0 164 z m 245 0 l 88 141 l 157 141 l 272 45 l 386 141 l 456 141 l 300 0 l 456 -141 l 386 -141 l 272 -45 l 157 -141 l 88 -141 z\"\n    },\n    \"noteheadXHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 334,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 32 -180 l 184 -180 b 209 -170 193 -180 203 -177 l 271 -99 l 363 -171 b 384 -180 370 -176 377 -180 l 445 -180 b 478 -147 461 -180 478 -163 b 465 -125 478 -138 474 -131 l 341 -22 l 474 127 b 481 148 480 131 481 138 b 448 180 481 166 468 180 l 295 180 b 271 170 287 180 278 177 l 209 98 l 115 171 b 95 180 109 177 104 180 l 36 180 b 4 148 19 180 4 164 b 14 124 4 140 7 132 l 140 22 l 7 -127 b 0 -148 3 -131 0 -138 b 32 -180 0 -166 14 -180 z m 95 148 l 233 33 l 334 148 l 410 148 l 274 -6 l 445 -148 l 384 -148 l 248 -35 l 147 -148 l 71 -148 l 206 4 l 36 148 z\"\n    },\n    \"noteheadXBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 290,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 -158 b 19 -180 0 -170 7 -180 b 29 -176 23 -180 26 -179 l 207 -24 l 389 -176 b 399 -180 392 -179 396 -180 b 418 -160 410 -180 418 -168 b 410 -143 418 -153 415 -147 l 239 0 l 410 144 b 418 160 415 147 418 154 b 399 180 418 171 408 180 b 389 177 396 180 392 179 l 207 26 l 29 177 b 17 180 26 179 22 180 b 0 161 7 180 0 170 b 7 144 0 156 3 148 l 179 0 l 7 -143 b 0 -158 1 -147 0 -153 z\"\n    },\n    \"noteheadCircleX\": {\n      \"x_min\": 0,\n      \"x_max\": 249,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 0 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 99 278 180 b 0 0 81 180 0 99 z m 69 84 l 151 1 l 68 -84 b 40 0 49 -60 40 -30 b 69 84 40 32 50 60 z m 180 -27 l 262 -111 b 179 -138 239 -128 210 -138 b 95 -111 148 -138 120 -128 z m 209 1 l 291 84 b 317 0 307 60 317 30 b 292 -82 317 -30 308 -59 z m 179 138 b 261 112 210 138 238 128 l 180 30 l 98 112 b 179 138 121 128 148 138 z\"\n    },\n    \"noteheadTriangleUpWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 319,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 0 -166 b 14 -180 0 -173 6 -180 l 445 -180 b 459 -166 454 -180 459 -173 b 458 -158 459 -163 458 -160 l 239 173 b 228 180 238 177 233 180 b 216 173 225 180 219 177 l 1 -158 b 0 -166 1 -160 0 -163 z m 145 -96 b 228 108 145 -17 197 56 b 310 -98 259 55 310 -17 b 288 -137 310 -111 301 -137 l 170 -137 b 145 -96 157 -137 145 -109 z\"\n    },\n    \"noteheadTriangleUpHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 285,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 14 -180 l 396 -180 b 410 -166 406 -180 410 -173 b 409 -158 410 -163 410 -161 l 228 173 b 215 180 226 174 220 180 b 202 173 210 180 204 177 l 3 -157 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 7 -180 z m 115 -138 l 232 76 l 297 -37 l 246 -138 z\"\n    },\n    \"noteheadTriangleUpBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 293,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 422 -180 l 207 180 l 0 -180 z\"\n    },\n    \"noteheadDiamondWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 270,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 4 7 l 258 -179 b 264 -180 261 -179 262 -180 b 272 -176 268 -180 271 -179 l 386 -23 b 389 -16 387 -20 389 -19 b 383 -7 389 -13 386 -9 l 130 179 b 122 180 128 180 125 180 b 115 177 120 180 117 180 l 3 23 b 0 17 1 20 0 19 b 4 7 0 16 3 10 z m 109 111 b 112 112 109 112 111 112 b 118 111 115 112 117 111 l 320 -37 b 324 -46 323 -39 324 -42 b 275 -111 278 -111 276 -111 b 268 -108 272 -111 271 -109 l 66 40 b 62 48 65 42 62 45 z\"\n    },\n    \"noteheadDiamondHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 251,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 4 -7 l 174 -177 b 180 -180 176 -180 179 -180 b 189 -177 183 -180 186 -180 l 359 -7 b 361 0 360 -6 361 -3 b 359 7 361 3 360 4 l 189 177 b 180 180 186 179 183 180 b 174 177 179 180 176 179 l 4 7 b 0 0 1 4 0 3 b 4 -7 0 -3 1 -6 z m 215 73 b 266 26 238 73 266 50 b 138 -71 266 -12 176 -71 b 96 -50 121 -71 108 -63 b 88 -24 89 -43 88 -32 b 215 73 88 13 177 73 z\"\n    },\n    \"noteheadDiamondBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 4 -7 l 173 -177 b 180 -180 176 -180 177 -180 b 187 -177 181 -180 184 -180 l 357 -6 b 360 1 359 -4 360 -1 b 357 9 360 4 359 7 l 189 177 b 180 180 187 179 184 180 b 171 177 177 180 173 179 l 3 9 b 0 1 0 6 0 4 b 4 -7 0 -1 1 -4 z\"\n    },\n    \"noteheadSquareWhite\": {\n      \"x_min\": 0,\n      \"x_max\": 313,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 451 -180 l 451 180 l 0 180 l 0 -180 z m 40 -138 l 40 140 l 410 140 l 410 -138 z\"\n    },\n    \"noteheadSquareBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 313,\n      \"y_min\": -125,\n      \"y_max\": 125,\n      \"ha\": 250,\n      \"o\": \"m 451 -180 l 451 180 l 0 180 l 0 -180 z\"\n    },\n    \"augmentationDot\": {\n      \"x_min\": 0,\n      \"x_max\": 100,\n      \"y_min\": -50,\n      \"y_max\": 50,\n      \"ha\": 100,\n      \"o\": \"m 72 -72 b 144 0 112 -72 144 -40 b 72 72 144 40 112 72 b 0 0 32 72 0 40 b 72 -72 0 -40 32 -72 z\"\n    },\n    \"tremolo1\": {\n      \"x_min\": -150,\n      \"x_max\": 150,\n      \"y_min\": -93,\n      \"y_max\": 94,\n      \"ha\": 187,\n      \"o\": \"m 216 -45 l 216 135 l -216 46 l -216 -134 z\"\n    },\n    \"flag8thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 264,\n      \"y_min\": -810.1921176545984,\n      \"y_max\": 9,\n      \"ha\": 819.1921176545984,\n      \"o\": \"m 284 -688 b 318 -904 305 -737 318 -819 b 284 -1102 318 -969 308 -1037 b 279 -1123 281 -1110 279 -1117 b 302 -1165 279 -1146 294 -1159 b 343 -1138 311 -1171 336 -1162 b 380 -888 343 -1138 380 -1001 b 215 -395 380 -708 305 -539 b 58 -19 141 -281 81 -157 b 14 13 53 4 42 13 b 0 -9 6 13 0 9 l 0 -353 b 284 -688 95 -370 232 -566 z\"\n    },\n    \"flag8thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 306,\n      \"y_min\": -14,\n      \"y_max\": 808,\n      \"ha\": 822,\n      \"o\": \"m 16 -20 b 58 12 43 -20 55 -12 b 262 387 82 148 189 274 b 441 881 353 530 441 701 b 400 1142 441 994 412 1096 b 377 1164 396 1158 387 1164 b 346 1094 356 1164 331 1136 b 376 897 366 1034 376 962 b 318 642 376 812 340 691 b 0 340 265 521 193 405 l 0 1 b 16 -20 0 -16 7 -20 z\"\n    },\n    \"flag16thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 279,\n      \"y_min\": -813,\n      \"y_max\": 2,\n      \"ha\": 815,\n      \"o\": \"m 7 -570 b 298 -778 96 -573 199 -576 b 344 -992 331 -847 344 -917 b 333 -1120 344 -1034 340 -1077 b 331 -1133 331 -1126 331 -1129 b 363 -1171 331 -1152 343 -1171 b 392 -1146 373 -1171 383 -1165 b 402 -988 397 -1139 402 -1057 l 402 -956 b 360 -783 402 -896 386 -837 b 359 -770 360 -779 359 -776 b 360 -760 359 -768 359 -765 b 396 -577 364 -752 396 -665 b 392 -526 396 -559 395 -543 b 236 -275 377 -428 340 -387 b 53 -16 158 -192 78 -168 b 24 3 50 0 33 3 b 0 1 16 3 0 1 l 0 -570 z m 78 -312 l 89 -312 b 302 -464 177 -312 255 -393 b 341 -592 328 -501 341 -546 b 340 -621 341 -602 341 -611 b 330 -658 337 -632 337 -647 b 311 -667 328 -662 318 -667 b 301 -661 307 -667 304 -665 b 223 -562 278 -625 253 -596 b 59 -331 156 -484 89 -449 b 58 -327 58 -330 58 -328 b 78 -312 58 -321 66 -312 z\"\n    },\n    \"flag16thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 290.8951581511223,\n      \"y_min\": -9,\n      \"y_max\": 812.0064,\n      \"ha\": 821.0064,\n      \"o\": \"m 0 -12 b 24 -13 0 -12 16 -13 b 53 6 33 -13 50 -10 b 406 516 88 228 372 289 b 410 567 409 531 410 549 b 374 750 410 655 379 742 b 373 760 373 753 373 756 b 374 773 373 766 374 769 b 405 1138 426 881 428 1022 b 370 1169 397 1171 387 1169 b 346 1132 353 1168 341 1156 b 312 768 367 1011 367 880 b 7 559 213 566 96 562 l 0 559 z m 58 317 b 59 321 58 318 58 320 b 238 552 89 439 170 472 b 315 651 268 585 292 613 b 325 657 318 655 321 657 b 344 647 333 657 343 652 b 354 611 351 636 351 622 b 356 582 356 600 356 590 b 317 454 356 534 343 491 b 89 302 269 383 177 302 l 78 302 b 58 317 66 302 58 310 z\"\n    },\n    \"flag32ndUp\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": -812,\n      \"y_max\": 149,\n      \"ha\": 961,\n      \"o\": \"m 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 366 -289 369 -315 369 -302 b 220 -58 350 -202 317 -163 b 46 187 148 20 71 43 b 17 215 45 200 26 215 b 0 197 9 215 0 197 l 0 -609 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 55 -386 b 73 -367 55 -384 65 -369 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 z\"\n    },\n    \"flag32ndDown\": {\n      \"x_min\": 0,\n      \"x_max\": 273,\n      \"y_min\": -172,\n      \"y_max\": 812,\n      \"ha\": 984,\n      \"o\": \"m 17 -248 b 48 -219 27 -248 46 -232 b 229 36 72 -69 154 -46 b 380 278 330 145 364 186 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 351 793 356 785 351 789 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 l 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -229 b 17 -248 0 -229 9 -248 z m 56 76 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z\"\n    },\n    \"flag64thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": -812,\n      \"y_max\": 347,\n      \"ha\": 1159,\n      \"o\": \"m 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 220 228 350 84 317 122 b 46 472 148 305 71 328 b 17 500 45 485 26 500 b 0 482 9 500 0 482 z m 56 193 b 300 24 138 193 220 157 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 58 187 148 20 82 43 b 56 193 58 189 58 192 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 55 -386 b 73 -367 55 -384 65 -369 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 z\"\n    },\n    \"flag64thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 273,\n      \"y_min\": -376,\n      \"y_max\": 812,\n      \"ha\": 1188,\n      \"o\": \"m 17 -541 b 48 -513 27 -541 46 -526 b 229 -258 72 -363 154 -340 b 380 -16 330 -148 364 -108 b 384 27 383 -1 384 13 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 351 793 356 785 351 789 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 l 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -523 b 17 -541 0 -523 9 -541 z m 56 76 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 z m 229 36 b 311 128 264 73 289 102 l 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 z m 217 609 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 b 217 609 86 501 153 533 z\"\n    },\n    \"flag128thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": -812,\n      \"y_max\": 533,\n      \"ha\": 1345,\n      \"o\": \"m 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 341 75 360 26 353 50 b 369 222 354 111 369 167 b 366 264 369 236 369 251 b 220 495 350 351 317 390 b 46 740 148 573 71 596 b 17 768 45 753 26 768 b 0 750 9 768 0 750 l 0 -609 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 56 187 148 20 81 43 b 55 193 56 189 56 192 b 300 24 137 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 55 -386 b 73 -367 55 -384 65 -369 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 z m 300 292 b 321 223 315 264 321 242 b 317 193 321 212 318 203 b 301 135 314 180 308 158 b 220 228 281 161 255 190 b 55 461 151 304 79 327 b 300 292 134 461 220 426 z\"\n    },\n    \"flag128thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 273,\n      \"y_min\": -580,\n      \"y_max\": 812,\n      \"ha\": 1392,\n      \"o\": \"m 17 -835 b 48 -806 27 -835 46 -819 b 229 -552 72 -657 154 -634 b 380 -310 330 -442 364 -402 b 384 -266 383 -295 384 -281 b 351 -105 384 -206 366 -143 b 384 27 372 -66 384 -16 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 351 793 356 785 351 789 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 l 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -816 b 17 -835 0 -816 9 -835 z m 229 331 b 310 423 264 369 289 397 b 330 350 318 396 325 366 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 z m 56 -516 b 229 -258 75 -380 145 -348 b 311 -166 264 -220 289 -192 l 330 -238 b 334 -268 331 -248 334 -256 b 311 -340 334 -287 328 -310 b 56 -516 229 -478 137 -516 z m 56 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 l 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 z m 217 609 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 b 217 609 86 501 153 533 z\"\n    },\n    \"accidentalFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 226,\n      \"y_min\": -175,\n      \"y_max\": 439,\n      \"ha\": 614,\n      \"o\": \"m 17 -245 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 82 -225 117 -186 b 325 82 281 -72 325 16 b 196 220 325 164 262 216 b 117 196 171 220 137 209 b 85 176 108 189 92 176 b 78 177 82 176 81 176 b 62 202 68 181 62 192 b 72 608 63 233 72 579 b 45 632 72 624 59 632 b 0 592 24 632 1 618 b 17 -245 0 592 6 -230 z m 66 73 b 167 144 76 102 134 144 b 226 60 209 144 226 96 b 98 -134 226 -17 160 -95 b 84 -138 92 -137 88 -138 b 68 -117 71 -138 68 -124 b 63 27 68 -117 63 -30 b 66 73 63 50 65 68 z\"\n    },\n    \"accidentalNatural\": {\n      \"x_min\": 0,\n      \"x_max\": 168,\n      \"y_min\": -335,\n      \"y_max\": 341,\n      \"ha\": 676,\n      \"o\": \"m 0 -268 b 12 -281 0 -276 4 -281 b 22 -278 13 -281 20 -279 b 164 -235 42 -269 122 -235 b 189 -251 179 -235 189 -239 l 189 -465 b 206 -482 189 -475 196 -482 l 225 -482 b 242 -465 233 -482 242 -475 l 242 258 b 230 269 242 265 236 269 b 225 268 229 269 226 269 l 203 261 b 197 259 200 261 199 259 b 68 226 197 259 105 226 b 53 233 59 226 53 228 l 53 474 b 36 491 53 484 45 491 l 17 491 b 0 474 7 491 0 484 z m 176 114 b 189 107 184 114 189 112 l 189 -42 b 71 -101 189 -68 107 -101 b 53 -92 60 -101 53 -98 l 53 56 b 176 114 53 76 141 114 z\"\n    },\n    \"accidentalSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 249,\n      \"y_min\": -348,\n      \"y_max\": 350,\n      \"ha\": 698,\n      \"o\": \"m 12 37 b 49 53 17 37 45 50 b 53 55 50 53 52 55 b 72 29 63 55 72 40 l 72 -114 b 56 -147 72 -130 65 -143 b 17 -163 48 -150 17 -163 b 0 -186 7 -166 0 -177 l 0 -288 b 12 -301 0 -297 4 -301 b 17 -300 13 -301 16 -300 b 50 -287 17 -300 37 -291 b 55 -285 52 -285 53 -285 b 72 -308 65 -285 72 -301 l 72 -485 b 91 -501 72 -494 81 -501 b 115 -485 105 -501 115 -494 l 115 -285 b 130 -253 115 -266 122 -256 l 217 -217 b 223 -216 219 -217 222 -216 b 242 -242 235 -216 242 -233 l 242 -422 b 261 -438 242 -431 251 -438 b 285 -422 276 -438 285 -431 l 285 -217 b 301 -184 285 -206 291 -189 b 341 -168 311 -180 341 -168 b 359 -144 351 -164 359 -153 l 359 -42 b 348 -30 359 -35 354 -30 b 341 -32 346 -30 344 -30 l 304 -46 b 285 -20 295 -46 285 -37 l 285 114 b 304 156 285 124 292 151 l 341 170 b 359 194 351 174 359 186 l 359 297 b 348 308 359 304 354 308 b 341 307 346 308 344 308 b 305 294 341 307 312 295 b 285 312 295 294 285 301 l 285 488 b 265 504 285 497 276 504 b 242 488 251 504 242 497 l 242 301 b 223 259 240 287 236 268 b 132 223 206 249 157 229 b 115 252 120 223 115 240 l 115 425 b 95 441 115 433 105 441 b 72 425 81 441 72 433 l 72 230 b 55 192 72 210 63 196 b 17 176 46 187 17 176 b 0 153 7 173 0 161 l 0 50 b 12 37 0 42 4 37 z m 111 -43 b 115 63 111 1 112 52 b 220 118 118 88 184 118 b 242 109 230 118 239 115 b 248 27 245 102 248 66 b 242 -65 248 -12 245 -52 b 132 -122 233 -94 166 -122 b 115 -115 124 -122 117 -120 b 111 -43 112 -109 111 -78 z\"\n    },\n    \"accidentalDoubleSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 247,\n      \"y_min\": -125,\n      \"y_max\": 127,\n      \"ha\": 252,\n      \"o\": \"m 0 -111 b 7 -166 0 -137 3 -163 b 65 -180 17 -174 40 -180 b 118 -166 86 -180 109 -176 b 130 -111 127 -158 130 -134 b 132 -105 130 -109 131 -107 b 177 -45 141 -85 158 -45 b 226 -111 196 -45 220 -91 b 233 -166 226 -137 228 -161 b 291 -180 243 -174 266 -180 b 356 -114 346 -180 356 -166 b 346 -56 356 -89 351 -63 b 288 -46 338 -49 312 -46 l 274 -46 b 206 1 258 -37 206 -9 b 274 50 206 22 253 43 b 291 49 279 50 285 49 b 346 63 314 49 336 55 b 356 115 353 71 356 92 b 292 183 356 174 351 183 b 233 173 266 183 240 180 b 226 117 228 168 226 143 b 179 49 219 101 196 49 b 130 117 158 49 135 96 b 118 173 130 141 125 167 b 66 183 112 180 89 183 b 7 173 42 183 16 180 b 0 120 3 170 0 145 b 7 63 0 94 3 68 b 68 49 17 55 43 49 b 82 50 73 49 78 50 b 150 3 98 42 150 13 b 84 -46 150 -16 104 -39 l 69 -46 b 7 -56 43 -46 16 -49 b 0 -111 3 -60 0 -85 z\"\n    },\n    \"accidentalDoubleFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 411,\n      \"y_min\": -175,\n      \"y_max\": 437,\n      \"ha\": 612,\n      \"o\": \"m 17 -245 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 84 -226 120 -186 b 274 -50 206 -124 246 -85 b 284 -245 276 -158 279 -240 b 295 -252 288 -251 292 -252 b 304 -249 300 -252 304 -249 b 416 -163 348 -226 383 -186 b 592 82 546 -72 592 16 b 461 217 592 163 528 216 l 452 217 b 384 194 426 217 408 207 b 350 176 374 189 363 176 b 343 177 347 176 344 176 b 328 202 333 180 328 190 b 337 606 328 232 337 579 b 310 629 337 622 324 629 b 265 592 291 629 268 616 b 269 194 265 592 266 395 b 196 217 248 209 223 217 l 187 217 b 120 194 160 217 143 207 b 85 176 108 189 98 176 b 78 177 82 176 81 176 b 62 202 68 180 62 190 b 72 606 62 232 72 579 b 45 629 72 622 59 629 b 0 592 24 629 1 616 b 17 -245 0 592 7 -232 z m 66 72 b 168 144 75 101 134 144 b 226 59 212 144 226 95 b 96 -134 226 -22 161 -94 b 84 -138 92 -137 86 -138 b 68 -115 72 -138 68 -124 b 63 26 68 -115 63 -30 b 66 72 63 49 65 66 z m 328 39 b 330 72 328 55 328 68 b 433 144 338 101 399 144 b 468 130 448 144 459 140 b 490 59 481 112 490 88 b 361 -134 490 -22 426 -94 b 348 -138 356 -137 351 -138 b 333 -115 337 -138 333 -124 b 328 39 333 -115 328 -16 z\"\n    },\n    \"accidentalParensLeft\": {\n      \"x_min\": 0,\n      \"x_max\": 141,\n      \"y_min\": -248,\n      \"y_max\": 247,\n      \"ha\": 495,\n      \"o\": \"m 199 -357 b 203 -354 200 -357 203 -356 l 203 -333 b 200 -327 203 -330 202 -328 b 86 0 118 -253 86 -160 b 200 324 86 158 120 251 b 203 331 202 325 203 327 l 203 351 b 202 356 203 354 203 356 b 0 0 60 281 0 140 b 199 -357 0 -144 60 -269 z\"\n    },\n    \"accidentalParensRight\": {\n      \"x_min\": 0,\n      \"x_max\": 141,\n      \"y_min\": -248,\n      \"y_max\": 247,\n      \"ha\": 495,\n      \"o\": \"m 0 331 b 3 324 0 327 1 325 b 117 0 84 251 117 158 b 3 -327 117 -160 85 -253 b 0 -333 1 -328 0 -330 l 0 -354 b 4 -357 0 -356 3 -357 b 203 0 143 -269 203 -144 b 1 356 203 140 143 281 b 0 351 0 356 0 354 z\"\n    },\n    \"accidentalQuarterToneFlatStein\": {\n      \"x_min\": 1,\n      \"x_max\": 227,\n      \"y_min\": -175,\n      \"y_max\": 439,\n      \"ha\": 614,\n      \"o\": \"m 174 -161 b 288 -249 210 -186 245 -225 b 297 -252 288 -249 292 -252 b 310 -245 301 -252 305 -251 b 327 592 321 -230 327 592 b 282 632 325 618 302 632 b 255 608 268 632 255 624 b 265 202 255 579 264 233 b 249 177 265 192 259 181 b 242 176 246 176 245 176 b 210 196 235 176 219 189 b 131 220 190 209 156 220 b 1 85 65 216 1 164 b 174 -161 1 16 46 -72 z m 101 60 b 160 144 101 96 118 144 b 261 73 193 144 251 102 b 264 27 262 68 264 50 b 259 -117 264 -30 259 -117 b 243 -138 259 -124 256 -138 b 229 -134 239 -138 235 -137 b 101 60 167 -95 101 -17 z\"\n    },\n    \"accidentalThreeQuarterTonesFlatZimmermann\": {\n      \"x_min\": 1,\n      \"x_max\": 466,\n      \"y_min\": -175,\n      \"y_max\": 439,\n      \"ha\": 614,\n      \"o\": \"m 363 -245 b 376 -252 367 -251 372 -252 b 384 -249 380 -252 384 -249 b 497 -161 428 -226 464 -186 b 671 84 625 -72 671 16 b 541 220 671 164 606 217 b 513 217 531 220 523 219 b 464 196 495 212 480 206 b 431 176 452 189 442 176 b 423 177 428 176 426 176 b 408 202 413 180 408 190 l 419 608 b 392 632 419 625 406 632 b 346 592 372 632 347 618 b 363 -245 346 592 351 -230 z m 177 -163 b 289 -249 210 -186 245 -226 b 297 -252 289 -249 292 -252 b 310 -245 300 -252 305 -251 b 328 592 321 -230 328 592 b 282 631 327 618 302 631 b 255 608 268 631 255 624 l 266 202 b 251 177 266 190 261 180 b 243 176 248 176 246 176 b 210 196 232 176 222 189 b 166 216 196 204 180 210 b 161 217 164 216 163 217 b 132 220 151 219 143 220 b 1 84 65 217 1 163 b 177 -163 1 16 48 -72 z m 102 60 b 124 128 102 88 111 112 b 161 144 134 138 147 144 b 199 134 173 144 184 141 b 262 72 219 122 256 92 b 265 26 264 66 265 49 b 261 -115 265 -30 261 -115 b 245 -138 261 -124 258 -138 b 230 -134 240 -138 236 -137 b 102 60 166 -92 102 -20 z m 409 26 b 412 72 409 49 410 66 b 514 144 420 102 480 144 b 570 60 557 144 570 96 b 442 -134 570 -23 508 -91 b 429 -138 436 -137 433 -138 b 413 -115 418 -138 413 -124 b 409 26 413 -115 409 -30 z\"\n    },\n    \"accidentalQuarterToneSharpStein\": {\n      \"x_min\": 0,\n      \"x_max\": 179,\n      \"y_min\": -353,\n      \"y_max\": 307,\n      \"ha\": 660,\n      \"o\": \"m 12 -315 b 85 -285 17 -315 76 -289 b 105 -312 92 -282 105 -301 l 105 -492 b 125 -508 105 -501 114 -508 b 150 -484 147 -508 150 -498 l 150 -285 b 151 -274 150 -281 150 -278 b 164 -253 153 -265 158 -256 b 240 -225 176 -251 240 -225 b 258 -202 249 -222 258 -210 l 258 -99 b 246 -86 258 -91 253 -86 b 240 -88 245 -86 242 -88 l 240 -86 b 168 -115 240 -86 174 -114 b 148 -91 158 -115 148 -107 l 148 43 b 167 85 148 55 156 81 b 240 114 180 91 240 114 b 258 138 249 118 258 128 l 258 240 b 246 252 258 248 252 252 b 240 251 245 252 242 252 b 168 225 240 251 171 225 b 150 253 156 225 150 240 l 150 426 b 130 442 150 435 141 442 b 105 418 108 442 105 429 l 105 230 b 91 193 105 219 101 202 b 17 161 65 183 42 171 b 0 138 9 158 0 147 l 0 36 b 12 23 0 27 4 23 b 17 24 13 23 16 24 b 85 53 17 24 73 49 b 89 55 86 53 88 55 b 107 30 98 55 107 42 l 107 -114 b 92 -145 107 -130 101 -143 l 17 -177 b 0 -200 9 -180 0 -192 l 0 -302 b 12 -315 0 -311 4 -315 z\"\n    },\n    \"accidentalThreeQuarterTonesSharpStein\": {\n      \"x_min\": 3,\n      \"x_max\": 317,\n      \"y_min\": -347,\n      \"y_max\": 369,\n      \"ha\": 716,\n      \"o\": \"m 14 -301 b 53 -287 16 -301 40 -291 b 62 -285 56 -285 59 -285 b 72 -298 69 -285 72 -289 l 72 -477 b 95 -500 72 -495 76 -500 b 118 -477 114 -500 118 -495 l 118 -278 b 127 -259 118 -269 121 -261 l 196 -232 b 207 -243 204 -232 207 -235 l 207 -432 b 230 -455 207 -452 212 -455 b 253 -432 249 -455 253 -451 l 253 -228 b 268 -204 253 -216 259 -207 l 320 -186 b 328 -183 323 -184 325 -183 b 337 -194 334 -183 337 -187 l 337 -387 b 360 -410 337 -408 341 -410 b 383 -387 379 -410 383 -406 l 383 -174 b 395 -157 383 -166 390 -158 l 445 -138 b 456 -127 452 -135 456 -132 l 456 -14 b 448 -3 456 -10 454 -3 b 399 -22 445 -3 408 -17 b 383 -6 387 -22 383 -22 l 383 163 b 392 181 383 173 384 179 b 445 202 397 183 445 202 b 456 213 452 203 456 207 l 456 324 b 448 336 456 330 454 336 b 393 317 445 336 400 320 b 389 315 392 315 390 315 b 383 325 386 315 383 318 l 383 508 b 360 531 383 528 379 531 b 337 508 341 531 337 527 l 337 318 b 325 291 337 300 334 294 b 268 268 320 288 287 276 b 253 281 256 268 253 274 l 253 464 b 230 487 253 484 249 487 b 207 464 212 487 207 482 l 207 264 b 194 240 207 253 204 245 l 132 217 b 128 216 131 217 130 216 b 118 229 122 216 118 220 l 118 420 b 95 444 118 439 114 444 b 72 420 76 444 72 439 l 72 212 b 60 190 72 197 68 193 l 16 173 b 4 161 9 170 4 167 l 4 50 b 13 39 4 45 9 39 b 58 55 16 39 46 49 b 63 56 60 56 62 56 b 72 42 71 56 72 50 l 72 -125 b 58 -150 72 -137 65 -147 l 16 -166 b 4 -177 9 -168 4 -171 l 4 -289 b 14 -301 4 -295 9 -301 z m 114 -48 b 118 78 114 6 115 68 b 200 114 122 91 180 114 b 207 111 204 114 206 112 b 212 22 210 107 212 66 b 207 -94 212 -29 210 -85 b 127 -130 203 -108 148 -130 b 118 -127 122 -130 120 -128 b 114 -48 114 -121 114 -86 z m 253 19 b 258 130 253 69 255 122 b 333 163 264 141 315 163 b 337 161 334 163 337 161 b 341 78 340 157 341 120 b 337 -45 341 24 340 -37 b 266 -78 333 -56 287 -78 b 258 -75 262 -78 259 -76 b 253 19 255 -71 253 -27 z\"\n    },\n    \"accidentalBuyukMucennebFlat\": {\n      \"x_min\": 1,\n      \"x_max\": 287,\n      \"y_min\": -174,\n      \"y_max\": 438,\n      \"ha\": 612,\n      \"o\": \"m 1 480 l 1 406 b 12 395 1 400 4 395 b 79 419 14 395 76 418 b 89 412 86 419 89 415 b 91 376 89 399 89 386 b 82 359 91 364 89 361 b 16 331 76 356 16 331 b 1 321 6 331 1 328 l 1 248 b 13 236 1 242 4 236 b 79 262 16 236 71 258 b 92 251 89 262 92 256 b 107 -242 95 23 101 -236 b 120 -251 111 -249 115 -251 b 128 -248 124 -251 128 -248 b 240 -160 171 -225 207 -184 b 413 84 367 -71 413 16 b 284 220 413 166 350 216 b 207 196 259 220 229 209 b 171 176 196 190 184 176 b 167 177 170 176 168 177 b 151 203 157 181 151 192 b 153 269 151 210 151 236 b 163 292 153 275 153 289 b 366 367 173 297 366 367 b 379 383 374 370 379 376 l 379 452 b 370 464 379 458 377 464 b 164 389 366 464 170 392 b 156 396 163 389 156 393 b 157 436 157 409 157 428 b 167 452 157 445 161 449 b 366 526 173 455 366 526 b 379 540 374 528 379 534 l 379 611 b 370 622 379 616 377 622 b 170 550 366 622 174 552 b 160 557 163 550 160 554 b 161 608 160 585 161 602 b 134 631 161 624 148 631 b 89 590 114 631 91 616 l 89 528 b 81 517 89 526 88 518 b 16 491 76 514 16 491 b 1 480 6 490 1 485 z m 154 73 b 219 135 160 92 197 124 b 255 144 232 141 243 144 b 292 130 269 144 282 140 b 314 62 305 114 314 91 b 186 -132 314 -17 251 -94 b 173 -137 180 -135 176 -137 b 157 -114 161 -137 157 -122 b 153 35 157 -114 153 -22 b 154 73 153 53 153 68 z\"\n    },\n    \"accidentalBakiyeFlat\": {\n      \"x_min\": -1,\n      \"x_max\": 286,\n      \"y_min\": -175,\n      \"y_max\": 439,\n      \"ha\": 614,\n      \"o\": \"m -1 248 b 9 236 -1 242 1 236 b 81 264 12 236 78 261 b 89 258 86 264 89 261 b 104 -245 92 30 96 -236 b 115 -252 108 -251 112 -252 b 124 -249 120 -252 124 -249 b 239 -161 167 -226 203 -186 b 412 84 367 -72 412 17 b 282 220 412 166 348 216 b 255 216 274 220 264 219 b 203 196 238 212 222 206 b 171 177 193 189 177 177 b 163 179 168 177 166 177 b 147 202 153 181 147 192 b 150 276 147 210 150 268 b 158 291 150 287 154 289 b 363 370 163 292 363 370 b 377 384 373 373 377 379 l 377 454 b 369 467 377 458 376 467 b 363 465 367 467 364 467 b 161 390 363 465 167 393 b 153 399 154 390 153 395 b 157 608 154 494 157 593 b 130 632 157 624 144 632 b 86 592 111 632 88 618 b 88 377 86 592 86 501 b 76 356 88 373 88 360 l 12 331 b -1 320 3 330 -1 327 z m 148 27 b 151 73 148 50 150 68 b 255 144 161 105 219 144 b 312 62 298 144 312 99 b 181 -134 312 -19 249 -96 b 167 -138 176 -137 171 -138 b 153 -117 156 -138 153 -125 b 148 27 153 -117 148 -30 z\"\n    },\n    \"accidentalKomaSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 229,\n      \"y_min\": -337,\n      \"y_max\": 322,\n      \"ha\": 659,\n      \"o\": \"m 10 39 b 17 40 13 39 14 39 l 128 81 b 138 52 138 81 138 63 l 138 -91 b 124 -124 138 -107 132 -120 b 17 -167 115 -127 17 -167 b 0 -192 7 -171 0 -181 l 0 -294 b 10 -305 0 -301 4 -305 b 17 -304 13 -305 14 -305 b 127 -261 17 -304 117 -264 b 138 -276 138 -261 138 -262 l 138 -469 b 157 -485 138 -478 147 -485 b 181 -462 179 -485 181 -475 l 181 -262 b 183 -252 181 -258 181 -255 b 197 -232 186 -243 190 -235 b 312 -187 207 -228 312 -187 b 330 -163 323 -183 330 -173 l 330 -60 b 320 -49 330 -53 327 -49 b 312 -50 318 -49 315 -49 l 200 -94 b 193 -95 197 -95 194 -95 b 181 -68 183 -95 181 -85 l 181 66 b 200 108 181 92 189 104 l 312 151 b 330 176 323 156 330 166 l 330 278 b 320 289 330 285 327 289 b 312 288 318 289 315 289 b 200 246 312 288 203 248 b 181 275 187 246 181 264 l 181 448 b 163 464 181 456 173 464 b 138 441 140 464 138 452 l 138 253 b 122 215 137 240 132 225 b 17 177 92 203 45 177 b 0 153 7 173 0 163 l 0 50 b 10 39 0 43 4 39 z\"\n    },\n    \"accidentalKucukMucennebSharp\": {\n      \"x_min\": -1,\n      \"x_max\": 339,\n      \"y_min\": -338,\n      \"y_max\": 321,\n      \"ha\": 659,\n      \"o\": \"m -1 -45 l -1 -138 b 12 -154 -1 -145 3 -154 l 215 -79 b 220 -84 219 -79 220 -81 l 220 -105 b 210 -122 220 -115 219 -120 b 99 -168 202 -127 99 -168 b 82 -193 89 -173 82 -183 l 82 -295 b 92 -307 82 -302 86 -307 b 99 -305 95 -307 96 -307 b 209 -262 99 -305 199 -265 b 220 -278 220 -262 220 -264 l 220 -471 b 239 -487 220 -480 229 -487 b 264 -464 261 -487 264 -477 l 264 -264 b 265 -253 264 -259 264 -256 b 279 -233 268 -245 272 -236 b 395 -189 289 -229 395 -189 b 412 -164 405 -184 412 -174 l 412 -62 b 402 -50 412 -55 409 -50 b 395 -52 400 -50 397 -50 l 278 -96 b 264 -86 268 -96 264 -94 l 264 -68 b 269 -59 264 -62 265 -60 b 471 17 274 -58 471 17 b 488 36 484 22 488 27 l 488 127 b 477 144 488 134 487 144 b 471 141 475 144 472 141 l 471 143 b 274 68 471 143 282 71 b 268 66 272 68 269 66 b 264 71 264 66 264 69 l 264 92 b 271 102 264 98 265 99 l 395 150 b 412 174 405 154 412 164 l 412 276 b 402 288 412 284 409 288 b 395 287 400 288 397 288 b 282 245 395 287 285 246 b 264 274 269 245 264 262 l 264 446 b 245 462 264 455 255 462 b 220 439 222 462 220 451 l 220 252 b 204 213 219 239 215 223 b 99 176 174 202 127 176 b 82 151 89 171 82 161 l 82 49 b 92 37 82 42 86 37 b 99 39 95 37 96 37 l 210 79 b 216 81 212 81 215 81 b 220 78 219 81 220 79 l 220 56 b 216 46 220 52 220 48 b 16 -29 210 45 16 -29 b -1 -45 4 -32 -1 -36 z\"\n    },\n    \"accidentalKoron\": {\n      \"x_min\": 0,\n      \"x_max\": 300,\n      \"y_min\": -472,\n      \"y_max\": 157,\n      \"ha\": 629,\n      \"o\": \"m 0 -672 b 7 -680 0 -677 3 -680 l 45 -680 b 52 -672 49 -680 52 -677 l 52 -193 l 415 -22 b 432 -4 418 -20 432 -13 b 415 10 432 1 418 9 l 4 226 b 0 223 1 226 0 225 z m 327 -7 l 52 -137 l 52 144 z\"\n    },\n    \"accidentalSori\": {\n      \"x_min\": 0,\n      \"x_max\": 421,\n      \"y_min\": -318,\n      \"y_max\": 328,\n      \"ha\": 646,\n      \"o\": \"m 0 265 l 0 223 b 3 213 0 216 0 215 l 131 160 l 131 -150 l 3 -203 b 0 -212 0 -204 0 -206 l 0 -255 b 3 -259 0 -258 1 -259 l 131 -204 l 131 -451 b 138 -458 131 -455 134 -458 l 176 -458 b 183 -451 180 -458 183 -455 l 183 -183 l 330 -120 l 330 -410 b 337 -418 330 -415 333 -418 l 374 -418 b 382 -410 379 -418 382 -415 l 382 -98 l 589 -9 b 606 10 592 -9 606 0 b 589 23 606 16 592 22 l 382 109 l 382 465 b 374 472 382 469 379 472 l 337 472 b 330 465 333 472 330 469 l 330 132 l 183 194 l 183 425 b 176 432 183 429 180 432 l 138 432 b 131 425 134 432 131 429 l 131 216 l 3 269 b 0 265 0 269 0 266 z m 183 138 l 330 76 l 330 -66 l 183 -128 z m 501 6 l 382 -45 l 382 55 z\"\n    },\n    \"articAccentAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 339,\n      \"y_min\": 1,\n      \"y_max\": 245,\n      \"ha\": 244,\n      \"o\": \"m 0 318 b 20 298 0 311 4 304 b 346 187 20 298 331 193 b 356 177 353 186 356 181 b 344 167 356 173 353 170 b 20 58 328 163 20 58 b 0 36 4 50 0 43 b 3 23 0 32 1 27 b 23 1 7 13 13 1 b 29 3 24 1 27 1 l 469 151 b 488 177 488 156 488 166 b 469 203 488 189 488 197 l 37 350 b 24 353 32 351 26 353 b 3 333 12 353 7 344 b 0 318 1 327 0 323 z\"\n    },\n    \"articAccentBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 339,\n      \"y_min\": -244,\n      \"y_max\": 0,\n      \"ha\": 244,\n      \"o\": \"m 0 -35 b 20 -55 0 -42 4 -49 b 346 -166 20 -55 331 -160 b 356 -176 353 -167 356 -171 b 344 -186 356 -180 353 -183 b 20 -295 328 -190 20 -295 b 0 -317 4 -302 0 -310 b 3 -330 0 -321 1 -325 b 23 -351 7 -340 13 -351 b 29 -350 24 -351 27 -351 l 469 -202 b 488 -176 488 -197 488 -187 b 469 -150 488 -164 488 -156 l 37 -3 b 24 0 32 -1 26 0 b 3 -20 12 0 7 -9 b 0 -35 1 -26 0 -30 z\"\n    },\n    \"articTenutoAbove\": {\n      \"x_min\": -1,\n      \"x_max\": 338,\n      \"y_min\": 0,\n      \"y_max\": 48,\n      \"ha\": 48,\n      \"o\": \"m 33 0 l 452 0 b 487 35 485 0 487 16 b 452 69 487 53 487 69 l 33 69 b -1 35 -1 69 -1 53 b 33 0 -1 16 -1 0 z\"\n    },\n    \"articTenutoBelow\": {\n      \"x_min\": -1,\n      \"x_max\": 338,\n      \"y_min\": -48,\n      \"y_max\": 0,\n      \"ha\": 48,\n      \"o\": \"m 33 -69 l 452 -69 b 487 -35 485 -69 487 -53 b 452 0 487 -16 487 0 l 33 0 b -1 -35 -1 0 -1 -16 b 33 -69 -1 -53 -1 -69 z\"\n    },\n    \"articStaccatoAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 84,\n      \"y_min\": 0,\n      \"y_max\": 84,\n      \"ha\": 84,\n      \"o\": \"m 60 0 b 121 60 94 0 121 27 b 60 121 121 94 94 121 b 0 60 27 121 0 94 b 60 0 0 27 27 0 z\"\n    },\n    \"articStaccatoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 84,\n      \"y_min\": -84,\n      \"y_max\": 0,\n      \"ha\": 84,\n      \"o\": \"m 60 -121 b 121 -60 94 -121 121 -94 b 60 0 121 -27 94 0 b 0 -60 27 0 0 -27 b 60 -121 0 -94 27 -121 z\"\n    },\n    \"articStaccatissimoAbove\": {\n      \"x_min\": 1,\n      \"x_max\": 100,\n      \"y_min\": -2,\n      \"y_max\": 293,\n      \"ha\": 295,\n      \"o\": \"m 1 390 b 72 -3 1 369 39 -3 b 144 389 108 -3 144 356 b 72 422 144 410 111 422 b 1 390 35 422 3 409 z\"\n    },\n    \"articStaccatissimoBelow\": {\n      \"x_min\": 1,\n      \"x_max\": 100,\n      \"y_min\": -295,\n      \"y_max\": 0,\n      \"ha\": 295,\n      \"o\": \"m 1 -393 b 72 -425 3 -412 35 -425 b 144 -392 111 -425 144 -413 b 72 0 144 -359 108 0 b 1 -393 39 0 1 -372 z\"\n    },\n    \"articMarcatoAbove\": {\n      \"x_min\": -1,\n      \"x_max\": 235,\n      \"y_min\": -1,\n      \"y_max\": 253,\n      \"ha\": 254,\n      \"o\": \"m -1 16 b 9 0 -1 9 1 1 b 16 -1 10 -1 14 -1 b 32 9 22 -1 29 1 b 112 186 32 9 109 180 b 118 190 114 189 115 190 b 127 186 121 190 124 189 b 209 9 128 180 209 9 b 225 0 213 3 219 0 l 323 0 b 338 16 333 1 338 7 b 337 23 338 19 338 22 l 181 356 b 167 364 177 361 173 364 b 153 356 157 364 153 356 l 0 23 b -1 16 -1 20 -1 19 z\"\n    },\n    \"articMarcatoBelow\": {\n      \"x_min\": -1,\n      \"x_max\": 235,\n      \"y_min\": -254,\n      \"y_max\": 0,\n      \"ha\": 254,\n      \"o\": \"m -1 -17 b 0 -24 -1 -20 -1 -23 l 156 -357 b 170 -366 160 -363 164 -366 b 184 -357 180 -366 184 -357 l 337 -24 b 338 -17 338 -22 338 -20 b 328 -1 338 -10 336 -3 b 321 0 327 0 323 0 b 305 -10 315 0 308 -3 b 225 -187 305 -10 228 -181 b 219 -192 223 -190 222 -192 b 210 -187 216 -192 213 -190 b 128 -10 209 -181 128 -10 b 112 -1 124 -4 118 -1 l 14 -1 b -1 -17 4 -3 -1 -9 z\"\n    },\n    \"fermataAbove\": {\n      \"x_min\": 3,\n      \"x_max\": 605,\n      \"y_min\": -3,\n      \"y_max\": 329,\n      \"ha\": 332,\n      \"o\": \"m 4 14 b 23 -4 4 0 12 -4 b 52 26 36 -4 43 6 b 56 39 53 27 55 33 b 435 318 73 98 138 318 b 818 36 742 318 804 91 b 821 26 819 32 819 27 b 851 -4 831 6 837 -4 b 871 16 864 -4 871 1 b 870 30 871 20 871 24 b 438 474 780 471 480 474 b 6 30 392 474 94 471 b 4 14 4 24 4 19 z m 359 75 b 436 -4 359 32 395 -4 b 516 75 480 -4 516 32 b 436 153 516 117 480 153 b 359 75 395 153 359 117 z\"\n    },\n    \"fermataBelow\": {\n      \"x_min\": 3,\n      \"x_max\": 605,\n      \"y_min\": -332,\n      \"y_max\": 0,\n      \"ha\": 332,\n      \"o\": \"m 6 -35 b 438 -478 94 -475 392 -478 b 870 -35 480 -478 780 -475 b 871 -20 871 -29 871 -24 b 851 0 871 -6 864 0 b 821 -30 837 0 831 -10 b 818 -40 819 -32 819 -36 b 435 -323 804 -95 742 -323 b 56 -43 138 -323 73 -102 b 52 -30 55 -37 53 -32 b 23 0 43 -10 36 0 b 4 -19 12 0 4 -4 b 6 -35 4 -23 4 -29 z m 436 -157 b 516 -79 480 -157 516 -121 b 436 0 516 -36 480 0 b 359 -79 395 0 359 -36 b 436 -157 359 -121 395 -157 z\"\n    },\n    \"breathMarkComma\": {\n      \"x_min\": 1,\n      \"x_max\": 152,\n      \"y_min\": 2,\n      \"y_max\": 251,\n      \"ha\": 249,\n      \"o\": \"m 1 271 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 19 32 29 26 26 b 27 14 26 17 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 b 1 271 42 361 1 321 z\"\n    },\n    \"breathMarkUpbow\": {\n      \"x_min\": 1,\n      \"x_max\": 249,\n      \"y_min\": 1,\n      \"y_max\": 495,\n      \"ha\": 494,\n      \"o\": \"m 1 690 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 z\"\n    },\n    \"caesura\": {\n      \"x_min\": 0,\n      \"x_max\": 384,\n      \"y_min\": -1,\n      \"y_max\": 532,\n      \"ha\": 533,\n      \"o\": \"m 258 1 b 271 -1 262 -1 266 -1 b 308 26 287 -1 302 9 l 552 713 b 553 726 553 717 553 721 b 513 766 553 747 534 766 b 475 739 495 766 481 756 l 232 52 b 230 39 230 48 230 43 b 258 1 230 23 240 7 z m 27 1 b 40 -1 32 -1 36 -1 b 78 26 58 -1 72 9 l 321 713 b 323 726 323 717 323 721 b 282 766 323 747 304 766 b 245 739 265 766 251 756 l 3 52 b 0 37 1 48 0 42 b 27 1 0 22 10 7 z\"\n    },\n    \"caesuraCurved\": {\n      \"x_min\": 0,\n      \"x_max\": 373,\n      \"y_min\": 0,\n      \"y_max\": 530,\n      \"ha\": 530,\n      \"o\": \"m 0 29 b 29 0 0 14 12 0 b 53 16 39 0 48 6 l 82 69 b 314 716 187 264 314 498 b 268 763 314 742 295 763 b 222 719 245 763 223 744 b 29 98 209 507 117 295 l 3 39 b 0 29 1 36 0 33 z m 223 27 b 252 0 223 13 233 0 b 276 16 262 0 272 6 b 537 716 386 230 537 478 b 491 763 537 742 518 763 b 445 719 468 763 446 744 b 252 98 432 507 340 295 l 226 39 b 223 27 225 35 223 32 z\"\n    },\n    \"restMaxima\": {\n      \"x_min\": 0,\n      \"x_max\": 381,\n      \"y_min\": -249,\n      \"y_max\": 250,\n      \"ha\": 499,\n      \"o\": \"m 369 331 l 369 -330 b 392 -359 369 -354 379 -359 l 524 -359 b 549 -330 539 -359 549 -354 l 549 331 b 524 360 549 356 539 360 l 392 360 b 369 331 379 360 369 356 z m 23 -359 l 156 -359 b 180 -330 170 -359 180 -354 l 180 331 b 156 360 180 356 170 360 l 23 360 b 0 331 10 360 0 356 l 0 -330 b 23 -359 0 -354 10 -359 z\"\n    },\n    \"restDoubleWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 125,\n      \"y_min\": 0,\n      \"y_max\": 250,\n      \"ha\": 250,\n      \"o\": \"m 23 0 l 156 0 b 180 22 170 0 180 10 l 180 338 b 156 360 180 350 170 360 l 23 360 b 0 338 10 360 0 350 l 0 22 b 23 0 0 10 10 0 z\"\n    },\n    \"restWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 282,\n      \"y_min\": -135,\n      \"y_max\": 9,\n      \"ha\": 144,\n      \"o\": \"m 37 -194 l 369 -194 b 406 -157 389 -194 406 -177 l 406 -24 b 369 13 406 -3 389 13 l 37 13 b 0 -24 16 13 0 -3 l 0 -157 b 37 -194 0 -177 16 -194 z\"\n    },\n    \"restHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 282,\n      \"y_min\": -2,\n      \"y_max\": 142,\n      \"ha\": 144,\n      \"o\": \"m 37 -3 l 369 -3 b 406 35 389 -3 406 14 l 406 167 b 369 204 406 189 389 204 l 37 204 b 0 167 16 204 0 189 l 0 35 b 37 -3 0 14 16 -3 z\"\n    },\n    \"restQuarter\": {\n      \"x_min\": 1,\n      \"x_max\": 270,\n      \"y_min\": -375,\n      \"y_max\": 373,\n      \"ha\": 748,\n      \"o\": \"m 168 -527 b 206 -540 180 -536 194 -540 b 228 -531 216 -540 226 -537 b 230 -521 229 -527 230 -524 b 207 -487 230 -508 219 -497 b 170 -435 189 -487 173 -448 b 164 -397 166 -423 164 -410 b 255 -292 164 -338 194 -292 b 367 -317 297 -292 344 -308 b 372 -318 369 -317 370 -318 b 382 -320 376 -320 379 -320 b 389 -314 386 -320 389 -318 b 336 -232 389 -297 351 -249 b 236 -32 281 -166 236 -112 b 238 -13 236 -26 238 -19 b 333 199 243 71 295 140 b 338 220 337 206 338 213 b 333 248 338 235 333 248 b 95 526 333 248 120 501 b 69 537 88 533 78 537 b 40 507 55 537 40 527 b 46 484 40 500 42 492 b 134 291 52 468 134 395 b 48 108 134 238 112 176 b 27 66 33 94 27 78 b 42 32 27 46 42 32 l 112 -55 b 174 -141 135 -84 156 -111 b 183 -161 177 -147 183 -158 b 181 -167 183 -163 183 -166 b 166 -174 179 -173 173 -174 b 143 -170 160 -174 148 -171 b 120 -166 135 -170 127 -166 b 1 -304 58 -166 1 -228 b 168 -527 1 -376 63 -446 z\"\n    },\n    \"rest8th\": {\n      \"x_min\": 0,\n      \"x_max\": 247,\n      \"y_min\": -251,\n      \"y_max\": 174,\n      \"ha\": 425,\n      \"o\": \"m 39 81 b 117 56 62 65 89 56 b 173 66 137 56 157 60 b 225 88 193 72 206 78 b 232 89 228 89 230 89 b 239 76 238 89 239 84 b 238 60 239 72 239 66 b 104 -343 233 39 130 -248 b 145 -361 104 -360 137 -361 b 196 -347 161 -361 181 -359 b 341 161 200 -344 341 161 b 356 217 347 187 354 210 b 338 240 356 232 341 239 b 323 235 336 240 331 240 b 193 140 312 226 240 140 l 193 154 b 96 251 193 207 150 251 b 0 154 43 251 0 207 b 39 81 0 124 17 98 z\"\n    },\n    \"rest16th\": {\n      \"x_min\": 0,\n      \"x_max\": 320,\n      \"y_min\": -500,\n      \"y_max\": 179,\n      \"ha\": 679,\n      \"o\": \"m 115 -301 b 223 -271 153 -301 190 -288 b 229 -278 226 -271 229 -274 b 228 -282 229 -279 228 -281 l 91 -690 b 89 -694 91 -691 89 -693 b 134 -720 89 -706 102 -720 b 189 -687 176 -720 183 -703 l 356 -138 b 420 81 393 -16 420 81 b 459 226 420 81 456 207 b 461 232 459 229 461 230 b 446 248 461 240 449 246 b 431 242 439 248 435 245 b 300 145 420 233 348 147 l 300 160 b 202 258 300 215 256 258 b 104 160 148 258 104 215 b 219 62 104 101 164 62 b 331 94 258 62 298 75 b 341 96 336 95 338 96 b 348 86 346 96 348 94 b 265 -173 348 63 275 -151 b 194 -217 253 -200 215 -217 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 151 -105 b 0 -203 43 -105 0 -148 b 115 -301 0 -262 60 -301 z\"\n    },\n    \"rest32nd\": {\n      \"x_min\": 0,\n      \"x_max\": 363,\n      \"y_min\": -500,\n      \"y_max\": 426,\n      \"ha\": 926,\n      \"o\": \"m 0 -203 b 115 -301 0 -262 60 -301 b 228 -269 154 -301 194 -288 b 232 -268 229 -268 230 -268 b 240 -276 236 -268 240 -272 b 138 -688 240 -282 141 -678 b 137 -697 137 -691 137 -694 b 176 -720 137 -708 145 -720 b 232 -690 222 -720 226 -706 b 484 436 236 -672 484 436 b 521 582 484 436 518 564 b 523 588 521 585 523 586 b 508 603 523 600 511 603 b 492 598 501 603 497 600 b 361 503 482 590 410 503 l 361 516 b 264 613 361 570 318 613 b 166 516 210 613 166 570 b 206 444 166 487 183 461 b 246 423 217 433 232 428 b 284 418 258 420 269 418 b 393 449 321 418 360 432 b 399 451 395 451 397 451 b 415 428 409 451 415 436 b 413 422 415 426 413 423 l 357 192 b 279 140 350 168 302 140 b 281 153 281 144 281 148 b 183 251 281 207 236 251 b 85 153 128 251 85 207 b 125 81 85 124 102 98 b 164 60 137 71 150 65 b 203 55 176 58 189 55 b 311 86 240 55 278 69 b 315 88 312 88 314 88 b 325 69 323 88 325 76 l 268 -167 b 194 -217 261 -197 216 -216 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 153 -105 b 0 -203 45 -105 0 -148 z\"\n    },\n    \"rest64th\": {\n      \"x_min\": 0,\n      \"x_max\": 423,\n      \"y_min\": -753,\n      \"y_max\": 430,\n      \"ha\": 1183,\n      \"o\": \"m 0 -554 b 40 -626 0 -583 17 -609 b 118 -652 60 -644 92 -652 b 210 -629 145 -652 186 -642 b 216 -628 213 -628 215 -628 b 228 -644 223 -628 228 -635 b 226 -652 228 -647 226 -649 l 122 -1054 b 121 -1064 121 -1058 121 -1061 b 167 -1084 121 -1077 134 -1084 b 215 -1060 202 -1084 209 -1076 b 402 -278 217 -1047 229 -1021 b 436 -135 403 -278 431 -161 l 570 441 b 609 588 570 441 605 569 b 596 609 609 603 602 608 b 580 603 589 609 585 606 b 448 507 569 595 497 507 b 449 521 449 511 449 516 b 351 619 449 575 405 619 b 253 521 297 619 253 575 b 372 422 253 461 317 422 b 481 454 410 422 446 438 b 491 456 484 455 488 456 b 504 441 498 456 504 451 b 501 426 504 436 503 432 b 445 202 500 422 451 217 b 359 144 435 174 383 144 l 359 158 b 261 256 359 212 315 256 b 163 158 207 256 163 212 b 243 65 163 112 202 78 b 279 60 255 62 266 60 b 397 91 320 60 360 73 b 403 92 400 92 402 92 b 412 79 409 92 412 86 b 410 72 412 76 412 75 b 351 -161 408 59 356 -150 b 281 -212 340 -199 301 -212 l 281 -197 b 183 -99 281 -144 238 -99 b 85 -197 130 -99 85 -144 b 125 -271 85 -228 102 -253 b 166 -291 138 -279 151 -287 b 204 -297 177 -294 192 -297 b 262 -287 225 -297 245 -292 b 305 -265 282 -279 287 -274 b 310 -264 307 -264 308 -264 b 318 -284 317 -264 318 -275 b 317 -295 318 -288 317 -294 b 259 -524 315 -302 265 -508 b 194 -567 251 -554 213 -567 b 196 -554 196 -563 196 -559 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 z\"\n    },\n    \"rest128th\": {\n      \"x_min\": 0,\n      \"x_max\": 485,\n      \"y_min\": -750,\n      \"y_max\": 689,\n      \"ha\": 1439,\n      \"o\": \"m 118 -652 b 176 -642 138 -652 160 -648 b 180 -641 177 -642 179 -641 b 228 -621 197 -635 210 -629 b 232 -619 229 -621 230 -619 b 239 -626 236 -619 239 -622 b 238 -632 239 -628 239 -631 b 131 -1057 235 -642 134 -1050 b 173 -1080 131 -1071 140 -1080 b 230 -1057 219 -1080 225 -1074 l 658 815 b 697 960 658 815 694 942 b 698 966 697 963 698 965 b 684 982 698 975 687 981 b 668 976 677 982 672 979 b 537 880 658 969 586 881 l 537 894 b 439 992 537 949 494 992 b 341 894 386 992 341 949 b 382 822 341 865 359 840 b 459 796 402 805 433 796 b 517 806 480 796 501 801 b 521 808 518 806 520 808 b 569 828 539 814 552 819 b 580 831 572 829 577 831 b 598 812 589 831 598 825 b 596 801 598 809 598 805 b 540 575 590 773 546 595 b 448 510 534 553 475 510 l 448 524 b 350 622 448 577 405 622 b 252 524 297 622 252 577 b 292 451 252 494 269 468 b 369 426 318 433 337 426 b 429 435 389 426 412 429 b 494 464 449 442 475 455 b 498 465 495 465 497 465 b 505 446 504 465 505 456 b 503 426 505 439 504 432 l 446 202 b 366 144 439 173 389 144 l 366 158 b 268 256 366 212 323 256 b 170 158 215 256 170 212 b 289 59 170 98 235 59 b 347 69 310 59 330 63 b 397 91 367 76 379 82 b 406 94 400 92 403 94 b 415 79 412 94 415 88 b 412 63 415 75 413 69 b 357 -157 408 42 364 -134 b 281 -212 346 -196 302 -212 b 282 -197 281 -207 282 -203 b 184 -99 282 -144 238 -99 b 86 -197 130 -99 86 -144 b 204 -297 86 -258 150 -297 b 262 -287 225 -297 245 -292 b 312 -265 282 -279 294 -274 b 318 -264 314 -264 317 -264 b 327 -275 324 -264 327 -269 b 266 -517 324 -287 278 -490 b 200 -569 248 -566 220 -567 l 196 -554 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 118 -652 0 -615 63 -652 z\"\n    },\n    \"dynamicPiano\": {\n      \"x_min\": -89,\n      \"x_max\": 366,\n      \"y_min\": -142,\n      \"y_max\": 274,\n      \"ha\": 416,\n      \"o\": \"m -128 -187 b -111 -204 -128 -199 -122 -204 l 167 -204 b 186 -186 180 -204 186 -199 b 168 -168 186 -174 180 -168 l 111 -168 b 98 -164 102 -168 98 -168 b 101 -154 98 -163 99 -158 l 166 7 b 179 24 168 14 171 24 b 213 -1 186 24 190 10 b 276 -14 233 -12 252 -14 b 527 266 415 -14 527 130 b 395 395 527 350 475 395 b 292 357 350 395 318 380 b 262 328 272 340 268 328 b 246 363 255 328 259 338 b 177 393 236 380 215 393 b 1 251 92 393 46 333 b -9 223 -6 238 -9 230 b 7 207 -9 213 -1 207 b 30 229 17 207 23 216 b 127 338 72 301 101 338 b 143 321 138 338 143 331 b 134 285 143 310 138 295 l -43 -154 b -65 -168 -48 -166 -50 -168 l -109 -168 b -128 -187 -122 -168 -128 -174 z m 207 81 b 235 180 207 111 219 140 l 264 251 b 356 341 284 300 321 341 b 389 288 380 341 389 320 b 243 35 389 217 312 35 b 207 81 219 35 207 50 z\"\n    },\n    \"dynamicMezzo\": {\n      \"x_min\": -20,\n      \"x_max\": 446,\n      \"y_min\": -10,\n      \"y_max\": 274,\n      \"ha\": 284,\n      \"o\": \"m -29 223 b -13 207 -29 213 -22 207 b 9 226 -3 207 1 215 b 107 338 52 300 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 287 323 225 292 255 323 b 308 302 304 323 308 314 b 294 249 308 285 302 269 b 203 24 294 248 292 248 b 199 9 200 17 199 13 b 215 0 199 3 203 0 l 285 0 b 308 17 298 0 302 3 l 402 251 b 481 323 419 292 449 323 b 503 302 498 323 503 314 b 413 43 503 252 413 104 b 478 -14 413 6 436 -14 b 629 102 533 -14 583 26 b 642 132 638 117 642 125 b 629 145 642 141 636 145 b 608 127 619 145 615 138 b 534 49 580 84 553 49 b 523 62 526 49 523 53 b 606 317 523 112 606 238 b 528 395 606 353 588 395 b 431 350 487 395 454 374 b 409 330 416 336 415 330 b 397 360 402 330 406 341 b 334 395 389 379 370 395 b 236 350 292 395 259 374 b 215 330 222 336 220 330 b 203 360 207 330 212 340 b 147 393 194 379 174 393 b -19 251 71 393 26 331 b -29 223 -26 238 -29 230 z\"\n    },\n    \"dynamicForte\": {\n      \"x_min\": -141,\n      \"x_max\": 364,\n      \"y_min\": -152,\n      \"y_max\": 444,\n      \"ha\": 596,\n      \"o\": \"m -203 -122 b -95 -219 -203 -186 -156 -219 b 161 17 14 -219 82 -145 b 269 315 203 105 235 194 b 289 336 269 323 284 336 l 383 336 b 406 359 399 336 406 343 b 384 380 406 373 399 380 l 298 380 b 284 387 288 380 284 380 b 287 405 284 392 285 396 b 419 606 315 530 347 606 b 442 595 431 606 442 603 b 419 580 442 586 435 588 b 389 526 400 572 389 552 b 454 465 389 485 418 465 b 524 543 491 465 524 490 b 400 639 524 596 491 639 b 135 402 261 639 183 540 b 107 380 128 380 127 380 l 23 380 b 0 357 7 380 0 373 b 22 336 0 343 7 336 l 105 336 b 117 330 114 336 117 336 b 114 315 117 327 115 323 l 23 0 b -101 -187 -17 -141 -43 -187 b -127 -174 -120 -187 -127 -181 b -92 -156 -127 -163 -114 -170 b -63 -102 -75 -144 -63 -125 b -128 -43 -63 -65 -89 -43 b -203 -122 -171 -43 -203 -78 z\"\n    },\n    \"dynamicRinforzando\": {\n      \"x_min\": -20,\n      \"x_max\": 277,\n      \"y_min\": 0,\n      \"y_max\": 274,\n      \"ha\": 274,\n      \"o\": \"m -13 207 b 9 226 -3 207 3 215 b 107 338 52 301 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 304 351 226 298 272 351 b 318 343 312 351 318 348 b 287 285 318 330 287 325 b 338 239 287 256 308 239 b 399 318 373 239 399 268 b 324 395 399 360 377 395 b 235 350 287 395 256 374 b 215 330 222 336 220 330 b 203 360 207 330 213 337 b 145 393 194 379 174 393 b -19 251 75 393 27 337 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 z\"\n    },\n    \"dynamicSforzando\": {\n      \"x_min\": 0,\n      \"x_max\": 229,\n      \"y_min\": -10,\n      \"y_max\": 273,\n      \"ha\": 283,\n      \"o\": \"m 125 -14 b 291 120 219 -14 291 36 b 220 232 291 160 276 190 b 151 314 168 271 151 287 b 213 361 151 337 168 361 b 258 346 238 361 258 356 b 240 333 258 340 251 340 b 226 298 232 325 226 314 b 276 252 226 269 248 252 b 330 307 311 252 330 279 b 212 393 330 360 285 393 b 68 274 127 393 68 350 b 145 161 68 223 95 196 b 200 85 187 132 200 114 b 127 20 200 53 173 20 b 66 42 91 20 66 32 b 91 56 66 49 75 46 b 111 98 104 65 111 79 b 59 145 111 127 86 145 b 0 78 24 145 0 117 b 125 -14 0 30 49 -14 z\"\n    },\n    \"dynamicZ\": {\n      \"x_min\": -30,\n      \"x_max\": 244,\n      \"y_min\": -10,\n      \"y_max\": 268,\n      \"ha\": 278,\n      \"o\": \"m -24 -1 b 4 16 -12 -1 -3 10 b 39 30 16 24 27 30 b 179 -14 79 30 108 -14 b 297 102 259 -14 297 43 b 245 166 297 147 271 166 b 197 115 219 166 197 145 b 236 72 197 88 216 72 b 259 79 251 72 255 79 b 264 75 262 79 264 78 b 258 60 264 72 261 66 b 229 45 252 50 242 45 b 117 95 186 45 173 95 b 85 86 98 95 89 86 b 102 111 85 86 95 104 l 333 338 b 351 370 344 350 351 359 b 333 386 351 380 343 386 b 298 377 321 386 314 382 b 239 370 282 373 259 370 b 94 383 153 370 111 383 b 68 364 79 383 72 377 l 33 264 b 29 242 30 255 29 248 b 45 228 29 232 36 228 b 66 249 55 228 60 236 l 81 279 b 96 297 85 288 88 297 b 168 292 102 297 127 292 b 223 302 194 292 215 302 b 196 269 229 302 197 271 l -26 45 b -43 16 -37 33 -43 27 b -24 -1 -43 6 -36 -1 z\"\n    },\n    \"ornamentTrill\": {\n      \"x_min\": 0,\n      \"x_max\": 521,\n      \"y_min\": -10,\n      \"y_max\": 390,\n      \"ha\": 400,\n      \"o\": \"m 95 210 b 140 213 112 210 131 213 b 144 209 143 213 144 212 b 140 194 144 206 143 202 l 124 156 b 96 58 108 117 96 88 b 179 -14 96 17 124 -14 b 325 153 253 -14 325 46 b 307 251 325 187 320 219 b 302 265 304 258 302 261 b 334 294 302 274 311 281 l 343 298 b 455 348 393 328 428 348 b 474 327 468 348 474 344 b 465 285 474 312 469 295 l 360 24 b 356 9 357 17 356 13 b 372 0 356 3 360 0 l 442 0 b 465 17 455 0 459 3 l 559 251 b 655 351 577 298 624 351 b 670 343 664 351 670 348 b 638 285 670 330 638 325 b 690 239 638 256 660 239 b 750 318 724 239 750 268 b 675 395 750 360 729 395 b 586 350 638 395 608 374 b 566 330 573 336 572 330 b 553 361 559 330 564 340 b 490 393 543 380 521 393 b 347 348 432 393 377 364 b 312 333 328 338 320 333 b 308 337 310 333 308 334 b 315 359 308 343 312 351 l 387 537 b 392 553 390 544 392 549 b 383 562 392 559 389 562 b 364 557 377 562 369 559 l 294 534 b 269 511 281 530 275 526 l 217 384 b 206 367 212 370 210 367 b 179 380 200 367 192 374 b 118 393 158 389 140 393 b 0 292 50 393 0 353 b 95 210 0 248 30 210 z m 118 360 b 192 325 134 360 192 347 b 186 307 192 321 189 314 l 180 292 b 148 265 173 274 167 269 b 98 258 130 261 112 258 b 39 301 50 258 39 281 b 118 360 39 327 60 360 z m 196 48 b 207 92 196 59 202 78 b 264 230 207 94 209 94 b 272 240 266 238 268 240 b 279 229 276 240 276 236 b 292 151 279 204 292 177 b 212 30 292 88 253 30 b 196 48 200 30 196 37 z\"\n    },\n    \"ornamentTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 460,\n      \"y_min\": 0,\n      \"y_max\": 218,\n      \"ha\": 218,\n      \"o\": \"m 0 148 b 128 0 0 45 66 0 b 209 63 173 0 209 20 b 157 115 209 95 187 115 b 84 82 115 115 114 82 b 36 150 59 82 36 112 b 130 242 36 212 79 242 b 285 134 176 242 223 203 b 513 1 356 56 419 1 b 662 166 608 1 662 73 b 534 314 662 269 596 314 b 454 251 490 314 454 294 b 505 199 454 219 475 199 b 579 232 547 199 549 232 b 626 164 603 232 626 202 b 533 72 626 102 583 72 b 377 180 487 72 439 111 b 150 312 307 258 243 312 b 0 148 55 312 0 240 z\"\n    },\n    \"ornamentTurnSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 460,\n      \"y_min\": -90,\n      \"y_max\": 306,\n      \"ha\": 396,\n      \"o\": \"m 0 147 b 128 -1 0 43 66 -1 b 209 62 173 -1 209 19 b 157 114 209 94 187 114 b 84 81 115 114 114 81 b 36 148 59 81 36 111 b 130 240 36 210 79 240 b 285 128 176 240 222 197 b 307 79 304 108 307 105 l 307 -107 b 330 -130 307 -122 312 -130 b 353 -107 347 -130 353 -122 l 353 37 b 360 59 353 53 353 59 b 402 33 369 59 376 49 b 513 0 435 13 471 0 b 662 164 608 0 662 72 b 534 312 662 268 596 312 b 454 249 490 312 454 292 b 505 197 454 217 475 197 b 579 230 547 197 549 230 b 626 163 603 230 626 200 b 533 71 626 101 583 71 b 377 183 487 71 441 114 b 356 232 359 203 356 206 l 356 418 b 333 441 356 433 350 441 b 310 418 315 441 310 433 l 310 274 b 302 252 310 258 308 252 b 261 278 294 252 287 262 b 150 311 228 298 192 311 b 0 147 55 311 0 239 z\"\n    },\n    \"ornamentMordent\": {\n      \"x_min\": 1,\n      \"x_max\": 729,\n      \"y_min\": -73,\n      \"y_max\": 319,\n      \"ha\": 392,\n      \"o\": \"m 30 59 b 88 94 53 59 73 79 b 144 143 107 109 124 127 b 176 161 158 154 168 161 b 197 144 183 161 189 156 l 323 10 b 351 0 328 3 340 0 b 377 9 361 0 372 3 b 498 114 392 17 475 94 l 498 -105 l 544 -105 l 544 153 b 562 160 550 157 556 160 b 585 144 569 160 576 156 b 710 10 590 135 697 24 b 737 0 716 3 727 0 b 765 9 749 0 759 3 b 1030 295 776 17 1011 274 l 1032 300 b 1050 328 1041 308 1050 318 b 1012 353 1050 343 1024 353 b 986 343 1002 353 994 348 b 854 190 971 330 871 206 b 828 176 842 180 835 176 b 802 190 818 176 809 183 b 681 333 791 202 696 320 b 645 353 668 344 657 353 b 613 340 634 353 626 350 b 580 304 600 330 590 315 l 546 265 l 546 459 l 501 459 l 501 216 l 459 167 b 449 156 455 164 452 160 b 302 327 397 216 310 317 b 258 353 291 338 282 351 b 226 340 245 353 238 348 b 193 304 213 330 203 317 l 187 298 b 72 167 148 255 109 212 l 20 107 b 1 73 12 98 1 84 b 30 59 1 65 9 59 z\"\n    },\n    \"ornamentShortTrill\": {\n      \"x_min\": 0,\n      \"x_max\": 725,\n      \"y_min\": 0,\n      \"y_max\": 245,\n      \"ha\": 245,\n      \"o\": \"m 0 72 b 29 58 0 63 7 58 b 88 92 50 58 72 78 b 143 141 105 109 124 125 b 147 144 144 143 145 144 b 174 160 158 153 168 160 b 197 143 181 160 187 154 b 321 10 203 135 310 24 b 350 0 327 3 338 0 b 377 7 361 0 372 3 l 436 65 b 469 92 449 72 459 84 b 524 141 487 109 505 125 l 528 145 b 533 148 531 147 531 148 b 554 160 541 154 550 160 b 577 143 562 160 569 154 b 703 10 585 135 691 24 b 732 0 708 3 720 0 b 759 7 743 0 753 3 b 1024 294 769 16 1005 272 b 1044 327 1032 305 1044 321 b 1005 353 1044 341 1018 353 b 979 343 996 353 988 348 b 848 189 963 330 864 204 b 821 174 837 179 828 174 b 796 189 811 174 804 181 b 674 331 783 202 688 318 b 641 351 662 343 651 351 b 606 340 628 351 619 350 b 573 304 593 328 583 315 b 452 167 533 258 491 213 l 445 158 l 301 325 b 256 353 291 338 282 350 b 225 340 246 353 238 350 b 192 304 212 328 203 315 l 17 107 b 0 72 12 96 0 76 z\"\n    },\n    \"ornamentTremblement\": {\n      \"x_min\": 1,\n      \"x_max\": 985,\n      \"y_min\": 0,\n      \"y_max\": 244,\n      \"ha\": 244,\n      \"o\": \"m 1 72 b 30 58 1 63 9 58 b 89 92 52 58 73 78 l 144 141 b 148 144 147 143 147 144 b 176 160 160 153 170 160 b 199 143 183 160 189 154 b 324 10 204 134 311 23 b 351 0 330 3 340 0 b 379 7 363 0 373 3 b 488 111 386 13 446 72 b 520 141 498 122 508 132 b 524 144 521 143 523 144 b 552 160 536 153 546 160 b 575 143 559 160 564 154 b 698 10 580 134 687 23 b 727 0 704 3 716 0 b 755 7 739 0 749 3 l 899 141 b 930 160 913 153 923 160 b 952 143 937 160 943 154 l 1077 10 b 1107 0 1084 3 1096 0 b 1133 7 1117 0 1128 3 b 1398 294 1143 16 1380 272 b 1418 327 1407 305 1418 321 b 1381 351 1418 343 1394 351 b 1354 341 1371 351 1362 348 b 1223 189 1338 328 1238 204 b 1195 174 1211 179 1202 174 b 1171 189 1185 174 1178 181 b 1048 331 1158 200 1063 318 b 1012 351 1035 343 1024 351 b 981 338 1002 351 994 350 b 948 304 968 328 958 315 b 827 166 907 258 865 212 b 821 160 825 164 822 163 l 678 325 b 634 351 667 338 657 350 b 602 338 621 351 613 348 b 569 304 590 328 580 315 l 444 161 b 302 325 392 222 311 317 b 258 351 291 338 281 350 b 228 338 245 351 238 348 b 193 304 215 328 204 315 l 19 107 b 1 72 13 96 1 76 z\"\n    },\n    \"ornamentPrecompAppoggTrill\": {\n      \"x_min\": 0,\n      \"x_max\": 1119,\n      \"y_min\": 0,\n      \"y_max\": 481,\n      \"ha\": 481,\n      \"o\": \"m 121 0 b 249 68 168 0 232 53 b 279 94 262 75 271 86 b 336 144 298 111 315 128 b 367 163 350 156 360 163 b 389 145 374 163 380 157 b 514 12 395 137 501 26 b 543 1 520 4 531 1 b 569 9 553 1 563 4 b 636 73 576 14 605 43 l 658 94 b 714 144 677 111 694 128 b 746 163 729 156 739 163 b 768 145 753 163 759 157 b 893 12 773 137 880 26 b 922 1 899 4 910 1 b 948 9 932 1 942 4 l 1012 71 b 1037 94 1022 78 1030 86 b 1092 144 1054 111 1073 128 b 1123 161 1106 156 1115 161 b 1146 145 1130 161 1136 157 b 1270 12 1152 137 1259 26 b 1299 1 1276 4 1287 1 b 1326 9 1310 1 1320 4 b 1591 297 1336 19 1572 275 b 1611 328 1600 307 1611 320 b 1574 354 1611 343 1585 354 b 1548 344 1565 354 1555 350 b 1416 192 1532 331 1431 206 b 1388 177 1404 181 1395 177 b 1365 190 1380 177 1371 184 b 1243 333 1352 203 1256 321 b 1205 354 1228 346 1217 354 b 1174 341 1195 354 1187 351 b 1140 305 1161 330 1152 317 l 1015 163 b 873 328 963 223 880 318 b 828 354 860 344 847 353 b 796 341 816 354 809 351 b 763 305 783 331 773 317 b 642 168 721 261 681 215 b 636 163 641 167 639 164 b 494 328 585 223 501 318 b 449 354 481 344 468 353 b 418 341 438 354 431 351 b 384 305 405 331 395 317 b 264 168 343 261 302 215 l 242 144 b 144 88 232 124 171 88 b 79 197 81 88 79 189 l 79 648 b 60 693 79 683 71 693 b 52 691 58 693 55 693 b 0 616 3 672 0 625 l 0 207 b 121 0 0 40 68 0 z\"\n    },\n    \"ornamentPrecompSlideTrillDAnglebert\": {\n      \"x_min\": 2,\n      \"x_max\": 1150,\n      \"y_min\": -367,\n      \"y_max\": 245,\n      \"ha\": 612,\n      \"o\": \"m 3 -144 b 4 -168 3 -153 3 -160 b 246 -482 24 -315 99 -422 b 458 -528 340 -521 410 -528 b 514 -526 485 -528 504 -526 b 552 -508 531 -526 552 -517 b 514 -497 552 -503 541 -498 l 503 -497 b 194 -390 432 -494 298 -488 b 69 -151 194 -390 69 -279 b 184 96 69 -60 128 27 b 328 183 202 118 258 183 b 477 96 413 183 454 118 b 559 10 510 62 552 19 b 588 0 566 3 576 0 b 613 7 598 0 609 3 b 723 112 622 14 681 73 b 789 161 733 122 776 161 b 811 144 796 161 802 156 b 936 10 816 135 923 24 b 965 0 942 3 953 0 b 991 7 975 0 985 3 b 1051 66 996 12 1022 37 b 1081 92 1063 73 1073 84 b 1136 143 1099 109 1117 127 b 1168 160 1151 154 1159 160 b 1191 144 1175 160 1181 156 b 1315 10 1197 135 1303 24 b 1344 0 1320 3 1332 0 b 1371 7 1355 0 1365 3 b 1636 295 1381 17 1617 274 b 1656 327 1644 305 1656 318 b 1619 353 1656 341 1630 353 b 1593 343 1610 353 1600 348 b 1460 190 1577 330 1476 204 b 1433 176 1449 180 1440 176 b 1410 189 1424 176 1416 183 b 1287 331 1397 202 1300 320 b 1250 353 1273 344 1261 353 b 1218 340 1240 353 1231 350 b 1185 304 1205 328 1197 315 l 1058 160 b 916 327 1007 220 923 317 b 871 353 903 343 890 351 b 840 340 860 353 852 350 b 806 304 827 330 816 315 b 685 167 765 259 724 213 l 680 160 l 615 235 b 419 344 582 275 523 344 b 3 -144 258 344 3 26 z\"\n    },\n    \"ornamentPrecompSlideTrillBach\": {\n      \"x_min\": 0,\n      \"x_max\": 1048,\n      \"y_min\": -367,\n      \"y_max\": 331,\n      \"ha\": 698,\n      \"o\": \"m 0 -144 b 1 -168 0 -153 0 -160 b 243 -482 22 -315 96 -422 b 455 -528 337 -521 408 -528 b 511 -526 482 -528 501 -526 b 549 -508 528 -526 549 -517 b 511 -497 549 -503 539 -498 l 500 -497 b 192 -390 429 -494 295 -488 b 66 -151 127 -336 66 -238 b 189 105 66 -58 127 35 b 232 143 203 118 216 131 b 264 161 246 154 256 161 b 285 144 271 161 276 156 b 410 10 291 135 397 24 b 439 0 416 3 428 0 b 465 7 449 0 459 3 l 531 72 b 554 92 540 78 547 86 b 611 143 573 109 590 127 b 642 161 625 154 635 161 b 664 144 649 161 655 156 b 789 10 670 135 776 24 b 818 0 795 3 806 0 b 844 7 828 0 838 3 b 904 66 850 12 876 37 b 935 92 916 73 924 84 b 979 134 949 107 963 121 l 979 -88 l 1037 -88 l 1037 151 l 1044 144 b 1168 10 1050 135 1156 24 b 1197 0 1174 3 1185 0 b 1224 7 1208 0 1218 3 b 1489 295 1234 17 1470 274 b 1509 327 1498 305 1509 318 b 1472 353 1509 341 1483 353 b 1446 343 1463 353 1453 348 b 1313 190 1430 330 1329 204 b 1286 176 1302 180 1293 176 b 1263 189 1277 176 1269 183 b 1140 331 1250 202 1153 320 b 1103 353 1126 344 1115 353 b 1071 340 1093 353 1084 350 b 1038 304 1058 328 1050 315 l 1038 477 l 979 477 l 979 238 l 912 160 b 769 327 858 220 775 317 b 724 353 756 343 743 351 b 693 340 713 353 706 350 b 660 304 680 330 670 315 b 539 167 618 259 577 213 b 533 161 536 166 534 163 b 390 327 480 220 396 317 b 346 353 377 343 364 351 l 340 353 b 308 340 330 353 321 350 b 275 304 295 330 285 315 b 117 122 220 243 168 186 b 0 -144 68 62 0 -48 z\"\n    },\n    \"ornamentPrecompTrillSuffixDandrieu\": {\n      \"x_min\": 0,\n      \"x_max\": 949,\n      \"y_min\": 0,\n      \"y_max\": 381,\n      \"ha\": 381,\n      \"o\": \"m 0 73 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 174 161 157 154 167 161 b 196 144 181 161 187 156 b 321 10 202 135 308 24 b 350 0 327 3 338 0 b 376 7 360 0 370 3 b 485 112 384 14 444 73 b 552 161 495 122 539 161 b 573 144 559 161 564 156 b 698 10 579 135 685 24 b 727 0 704 3 716 0 b 753 7 737 0 747 3 b 863 112 762 14 821 73 b 929 161 873 122 916 161 b 950 144 936 161 942 156 b 1076 10 956 135 1063 24 b 1104 0 1081 3 1093 0 b 1130 7 1115 0 1125 3 b 1236 108 1139 14 1195 69 b 1367 314 1297 160 1367 233 b 1250 521 1367 419 1318 482 b 1107 549 1211 537 1145 549 b 1083 546 1096 549 1087 549 b 1066 528 1071 540 1066 534 b 1079 520 1066 524 1070 520 b 1323 351 1187 517 1323 487 b 1201 171 1323 269 1260 219 b 1194 166 1201 171 1198 168 b 1056 327 1142 226 1063 317 b 1011 353 1043 343 1030 351 b 979 340 999 353 992 350 b 946 304 966 330 956 315 b 825 167 904 259 864 213 l 821 161 b 678 327 768 222 685 317 b 634 353 665 343 652 351 b 602 340 622 353 615 350 b 569 304 589 330 579 315 b 448 167 527 259 487 213 l 444 161 b 301 327 390 222 308 317 b 256 353 288 343 275 351 b 225 340 245 353 238 350 b 192 304 212 330 202 315 b 71 167 150 259 109 213 b 17 105 52 147 36 127 b 0 73 10 98 0 84 z\"\n    },\n    \"ornamentPrecompDoubleCadenceUpperPrefix\": {\n      \"x_min\": 0,\n      \"x_max\": 1278,\n      \"y_min\": 0,\n      \"y_max\": 247,\n      \"ha\": 247,\n      \"o\": \"m 1 285 b 308 0 42 190 157 0 b 530 120 415 1 482 63 b 559 144 539 128 549 137 b 590 163 573 156 583 163 b 612 145 598 163 603 157 b 739 10 618 137 724 24 b 768 0 744 3 756 0 b 793 7 778 0 788 3 b 903 114 802 14 861 75 l 939 144 b 971 163 953 156 963 163 b 992 145 978 163 984 157 b 1119 10 998 137 1106 24 b 1148 0 1125 3 1136 0 b 1174 7 1158 0 1168 3 b 1284 114 1182 14 1241 75 b 1316 144 1282 115 1312 141 b 1348 161 1331 156 1339 161 b 1371 145 1355 161 1361 157 b 1496 10 1377 137 1485 24 b 1525 0 1502 3 1513 0 b 1552 7 1536 0 1547 3 b 1819 298 1562 17 1800 276 b 1840 330 1829 308 1840 320 b 1832 344 1840 334 1837 340 b 1801 356 1820 351 1810 356 b 1776 346 1793 356 1783 351 b 1642 192 1760 333 1659 206 b 1614 177 1630 181 1621 177 b 1591 190 1606 177 1597 184 b 1469 334 1578 203 1482 323 b 1430 356 1453 347 1441 356 b 1398 343 1420 356 1411 353 b 1365 307 1385 331 1377 318 l 1240 164 b 1097 330 1187 226 1104 320 b 1053 356 1084 346 1071 354 b 1021 343 1041 356 1034 353 b 988 307 1008 333 998 318 b 865 168 946 262 904 216 l 861 163 b 717 330 808 223 724 320 b 672 356 704 346 691 354 b 641 343 661 356 654 353 b 608 307 628 333 618 318 b 485 168 566 262 524 216 l 455 134 b 284 46 409 88 351 46 b 16 285 148 46 32 265 b 3 295 9 292 4 295 b 0 291 1 295 0 292 b 1 285 0 288 1 285 z\"\n    },\n    \"ornamentPrecompDoubleCadenceUpperPrefixTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 1277,\n      \"y_min\": -62,\n      \"y_max\": 333,\n      \"ha\": 395,\n      \"o\": \"m 0 289 b 1 284 0 287 1 284 b 308 -1 42 189 157 -1 b 530 118 415 0 481 62 b 557 143 539 127 547 135 b 590 161 572 154 582 161 b 612 144 598 161 603 156 b 737 9 618 135 724 24 b 768 -1 743 1 755 -1 b 793 6 778 -1 788 1 b 903 112 802 13 861 73 l 937 143 b 971 161 953 154 963 161 b 992 144 978 161 984 156 b 1117 9 998 135 1104 24 b 1148 -1 1123 1 1136 -1 b 1174 6 1158 -1 1168 1 l 1230 60 l 1230 -89 l 1273 -89 l 1273 102 l 1283 112 b 1348 160 1295 125 1332 160 b 1371 144 1355 160 1361 156 b 1496 9 1377 135 1483 24 b 1525 -1 1502 1 1513 -1 b 1552 6 1536 -1 1547 1 b 1819 297 1562 16 1800 275 b 1839 328 1827 307 1839 320 b 1801 354 1839 343 1813 354 b 1776 344 1793 354 1783 350 b 1642 190 1760 331 1657 206 b 1614 176 1630 180 1621 176 b 1591 189 1606 176 1597 183 b 1467 333 1578 203 1480 321 b 1430 354 1453 346 1441 354 b 1398 341 1420 354 1411 351 b 1365 305 1385 330 1377 317 l 1273 202 l 1273 480 l 1230 480 l 1230 174 l 1097 328 b 1053 354 1084 344 1071 353 b 1021 341 1041 354 1034 351 b 988 305 1008 331 998 317 b 865 167 945 261 904 215 l 861 161 b 717 328 808 222 724 318 b 672 354 704 344 691 353 b 641 341 661 354 654 351 b 608 305 628 331 618 317 b 485 167 564 261 524 215 b 455 132 474 156 465 144 b 284 45 410 88 350 45 b 14 284 148 45 30 264 b 3 294 9 291 4 294 b 0 289 1 294 0 291 z\"\n    },\n    \"ornamentPrecompTrillLowerSuffix\": {\n      \"x_min\": 0,\n      \"x_max\": 859,\n      \"y_min\": -222,\n      \"y_max\": 246,\n      \"ha\": 468,\n      \"o\": \"m 0 73 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 176 161 157 154 168 161 b 197 144 183 161 189 156 b 323 9 203 135 310 23 b 353 -1 328 1 340 -1 b 379 6 363 -1 373 1 b 488 112 387 13 446 73 l 523 143 b 556 161 539 154 549 161 b 577 144 563 161 569 156 b 703 9 583 135 690 23 b 733 -1 708 1 721 -1 b 759 6 743 -1 753 1 b 868 112 768 13 827 73 b 955 183 878 122 943 183 b 1081 107 965 183 1031 153 b 1156 -89 1128 63 1156 6 l 1156 -102 b 948 -297 1156 -204 1048 -297 b 806 -271 904 -297 850 -282 l 792 -266 b 801 -288 792 -268 795 -282 b 948 -320 809 -297 880 -320 b 1237 -50 1092 -320 1237 -199 b 1164 217 1237 75 1218 122 b 1031 351 1138 259 1063 351 b 1011 337 1020 351 1024 347 b 828 167 952 291 886 217 l 824 164 b 683 328 772 225 690 318 b 638 354 670 344 657 353 b 606 341 626 354 619 351 b 573 305 593 331 583 317 b 451 167 530 261 490 215 l 446 161 b 302 328 393 222 310 318 b 258 354 289 344 276 353 b 226 341 246 354 239 351 b 193 305 213 331 203 317 b 71 167 150 261 109 215 b 17 105 52 147 36 127 b 0 73 10 98 0 84 z\"\n    },\n    \"stringsDownBow\": {\n      \"x_min\": 0,\n      \"x_max\": 312,\n      \"y_min\": 0,\n      \"y_max\": 318,\n      \"ha\": 318,\n      \"o\": \"m 17 0 l 37 0 b 55 17 46 0 55 7 l 55 253 b 225 278 55 269 140 278 b 395 253 310 278 395 269 l 395 17 b 413 0 395 7 403 0 l 432 0 b 449 17 441 0 449 7 l 449 420 b 412 458 449 441 432 458 l 37 458 b 0 420 17 458 0 441 l 0 17 b 17 0 0 7 9 0 z\"\n    },\n    \"stringsUpBow\": {\n      \"x_min\": 1,\n      \"x_max\": 249,\n      \"y_min\": 1,\n      \"y_max\": 495,\n      \"ha\": 494,\n      \"o\": \"m 1 690 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 z\"\n    },\n    \"stringsHarmonic\": {\n      \"x_min\": 0,\n      \"x_max\": 200,\n      \"y_min\": 0,\n      \"y_max\": 200,\n      \"ha\": 200,\n      \"o\": \"m 144 0 b 288 144 223 0 288 65 b 144 288 288 225 223 288 b 0 144 65 288 0 225 b 144 0 0 65 65 0 z m 39 144 b 144 249 39 203 86 249 b 249 144 203 249 249 203 b 144 39 249 86 203 39 b 39 144 86 39 39 86 z\"\n    },\n    \"pluckedSnapPizzicatoAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 200,\n      \"y_min\": 0,\n      \"y_max\": 300,\n      \"ha\": 300,\n      \"o\": \"m 144 0 b 288 144 223 0 288 63 b 167 285 288 215 235 275 l 167 432 l 121 432 l 121 285 b 0 144 52 275 0 215 b 144 0 0 63 65 0 z m 39 144 b 121 246 39 193 73 236 l 121 144 l 167 144 l 167 246 b 249 144 213 236 249 193 b 144 39 249 85 202 39 b 39 144 85 39 39 85 z\"\n    },\n    \"pluckedSnapPizzicatoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 200,\n      \"y_min\": 0,\n      \"y_max\": 300,\n      \"ha\": 300,\n      \"o\": \"m 121 145 l 121 0 l 167 0 l 167 145 b 288 288 235 157 288 216 b 144 432 288 369 223 432 b 0 288 65 432 0 369 b 121 145 0 216 52 157 z m 39 288 b 144 393 39 347 86 393 b 249 288 203 393 249 347 b 167 186 249 238 215 196 l 167 288 l 121 288 l 121 186 b 39 288 75 196 39 238 z\"\n    },\n    \"pluckedLeftHandPizzicato\": {\n      \"x_min\": 0,\n      \"x_max\": 272,\n      \"y_min\": 0,\n      \"y_max\": 272,\n      \"ha\": 272,\n      \"o\": \"m 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 l 392 219 l 219 219 l 219 392 l 173 392 l 173 219 z\"\n    },\n    \"keyboardPedalPed\": {\n      \"x_min\": 0,\n      \"x_max\": 1019,\n      \"y_min\": -8,\n      \"y_max\": 555,\n      \"ha\": 563,\n      \"o\": \"m 122 376 b 240 540 189 376 240 452 b 225 586 240 579 233 586 b 204 549 213 586 212 573 b 138 480 199 527 181 480 b 85 549 96 480 85 517 l 85 554 b 353 762 89 690 230 762 b 373 752 364 762 373 760 b 351 708 373 740 360 723 b 274 546 330 675 274 585 b 353 416 274 508 333 444 b 412 304 372 390 412 351 b 382 228 412 275 403 256 b 334 190 363 202 361 200 b 147 29 271 167 147 88 b 196 -12 147 4 171 -12 b 343 108 239 -12 279 33 l 363 132 b 387 150 370 141 376 150 b 543 -4 445 150 467 -4 b 631 42 567 -4 586 0 l 668 78 b 685 89 674 84 680 89 b 696 75 688 89 690 86 b 809 -9 717 29 753 -9 b 946 66 854 -9 894 13 b 988 107 971 92 981 107 b 1002 89 994 107 996 99 b 1152 -4 1030 36 1077 -4 b 1329 248 1238 -4 1329 82 b 792 717 1329 556 1047 665 b 766 720 785 719 775 720 b 747 703 752 720 747 711 b 780 680 747 693 756 685 b 1223 222 1028 621 1223 504 b 1152 39 1223 122 1205 39 b 1073 229 1104 39 1073 132 b 1132 423 1073 314 1086 377 b 1142 442 1140 432 1142 436 b 1126 458 1142 451 1136 458 b 1093 446 1119 458 1109 455 b 975 216 1022 408 975 337 l 975 190 b 943 121 975 160 972 150 b 852 69 899 76 877 69 b 776 148 816 69 786 117 b 773 163 775 154 773 158 b 786 177 773 167 776 170 l 801 187 b 937 366 867 235 937 284 b 844 454 937 422 900 454 b 665 217 711 454 665 331 b 671 153 665 197 667 176 l 671 147 b 662 134 671 143 670 140 b 605 111 639 118 625 111 b 521 160 572 111 546 135 b 451 203 497 184 474 197 b 426 212 435 207 426 206 b 436 230 426 216 429 220 b 510 389 464 269 510 340 b 429 521 510 435 480 462 b 369 629 387 570 369 599 b 402 720 369 648 384 691 b 462 763 425 759 446 763 b 611 624 540 763 611 704 b 564 575 611 592 590 575 b 501 602 540 575 520 582 b 474 622 492 611 487 622 b 459 603 465 622 459 615 b 603 471 459 570 510 471 b 711 588 670 471 711 524 b 422 799 711 742 554 799 l 413 799 b 179 749 327 798 261 789 b 0 517 107 713 0 632 b 122 376 0 454 37 376 z m 1405 0 b 1467 62 1441 0 1467 26 b 1405 124 1467 98 1441 124 b 1344 62 1369 124 1344 98 b 1405 0 1344 26 1369 0 z m 756 282 b 815 403 756 346 772 403 b 848 343 838 403 848 383 b 780 226 848 295 824 261 b 765 217 773 220 768 217 b 759 228 762 217 759 220 b 756 282 757 245 756 262 z\"\n    },\n    \"keyboardPedalUp\": {\n      \"x_min\": 0,\n      \"x_max\": 450,\n      \"y_min\": 0,\n      \"y_max\": 450,\n      \"ha\": 450,\n      \"o\": \"m 66 252 b 132 281 94 252 115 264 b 183 308 153 301 161 308 l 190 308 b 236 271 216 308 236 300 b 216 239 236 261 229 252 l 210 233 b 158 219 197 220 184 219 b 73 147 114 219 73 196 b 147 73 73 107 107 73 b 219 158 196 73 219 114 b 233 210 219 184 220 197 l 239 216 b 271 236 252 229 261 236 b 308 190 300 236 308 216 l 308 183 b 281 132 308 161 301 153 b 252 66 264 115 252 94 b 324 0 252 23 285 0 b 396 66 363 0 396 23 b 367 132 396 94 384 115 b 340 183 347 153 340 161 l 340 190 b 377 236 340 216 348 236 b 409 216 387 236 396 229 l 415 210 b 429 158 428 197 429 184 b 501 73 429 114 452 73 b 575 147 541 73 575 107 b 490 219 575 196 534 219 b 438 233 464 219 451 220 l 432 239 b 412 271 419 252 412 261 b 458 308 412 300 432 308 l 465 308 b 516 281 487 308 495 301 b 582 252 533 264 554 252 b 648 324 625 252 648 285 b 582 396 648 363 625 396 b 516 367 554 396 533 384 b 465 340 495 347 487 340 l 458 340 b 412 377 432 340 412 348 b 432 409 412 387 419 396 l 438 415 b 490 429 451 428 464 429 b 575 501 534 429 575 452 b 501 575 575 541 541 575 b 429 490 452 575 429 534 b 415 438 429 464 428 451 l 409 432 b 377 412 396 419 387 412 b 340 458 348 412 340 432 l 340 465 b 367 516 340 487 347 495 b 396 582 384 533 396 554 b 324 648 396 625 363 648 b 252 582 285 648 252 625 b 281 516 252 554 264 533 b 308 465 301 495 308 487 l 308 458 b 271 412 308 432 300 412 b 239 432 261 412 252 419 l 233 438 b 219 490 220 451 219 464 b 147 575 219 534 196 575 b 73 501 107 575 73 541 b 158 429 73 452 114 429 b 210 415 184 429 197 428 l 216 409 b 236 377 229 396 236 387 b 190 340 236 348 216 340 l 183 340 b 132 367 161 340 153 347 b 66 396 115 384 94 396 b 0 324 23 396 0 363 b 66 252 0 285 23 252 z m 271 324 b 324 377 271 357 291 377 b 377 324 357 377 377 357 b 324 271 377 291 357 271 b 271 324 291 271 271 291 z\"\n    },\n    \"pictChokeCymbal\": {\n      \"x_min\": 1,\n      \"x_max\": 152,\n      \"y_min\": 2,\n      \"y_max\": 251,\n      \"ha\": 249,\n      \"o\": \"m 1 271 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 19 32 29 26 26 b 27 14 26 17 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 b 1 271 42 361 1 321 z\"\n    },\n    \"wiggleArpeggiatoUp\": {\n      \"x_min\": -33,\n      \"x_max\": 292,\n      \"y_min\": 0,\n      \"y_max\": 119,\n      \"ha\": 119,\n      \"o\": \"m -29 42 b -10 46 -23 42 -16 43 b 56 63 12 56 29 63 b 248 0 121 63 135 0 b 419 127 361 0 410 104 b 420 132 420 130 420 131 b 412 140 420 137 416 140 b 386 130 403 140 392 134 b 334 107 367 117 353 107 b 318 108 330 107 324 107 b 240 138 289 112 265 128 b 130 171 209 153 168 171 b -39 68 16 171 -14 91 b -48 53 -45 62 -48 58 b -29 42 -48 46 -39 42 z\"\n    },\n    \"arrowheadBlackUp\": {\n      \"x_min\": 0,\n      \"x_max\": 228,\n      \"y_min\": 0,\n      \"y_max\": 299,\n      \"ha\": 299,\n      \"o\": \"m 0 20 b 19 1 0 4 7 1 b 166 50 43 16 160 50 b 308 1 171 50 289 13 b 312 0 310 1 311 0 b 328 20 321 0 328 12 b 166 431 328 30 220 274 b 0 20 111 274 0 30 z\"\n    },\n    \"arrowheadBlackDown\": {\n      \"x_min\": 0,\n      \"x_max\": 228,\n      \"y_min\": 0,\n      \"y_max\": 299,\n      \"ha\": 299,\n      \"o\": \"m 166 0 b 328 410 220 157 328 400 b 312 431 328 419 321 431 b 308 429 311 431 310 429 b 166 380 289 418 171 380 b 19 429 160 380 43 415 b 0 410 7 429 0 426 b 166 0 0 400 111 157 z\"\n    },\n    \"arpeggiatoUp\": {\n      \"x_min\": 1,\n      \"x_max\": 229,\n      \"y_min\": 7,\n      \"y_max\": 1511,\n      \"ha\": 1504,\n      \"o\": \"m 121 1848 b 92 1778 115 1822 101 1800 l 89 1773 b 59 1668 75 1741 59 1702 b 96 1555 59 1614 76 1580 b 99 1551 98 1554 99 1551 l 102 1547 b 124 1496 115 1531 124 1515 b 122 1482 124 1492 124 1488 b 92 1404 118 1453 102 1428 b 59 1293 78 1372 59 1332 b 105 1172 59 1234 81 1198 b 124 1123 115 1158 124 1145 b 122 1110 124 1119 122 1115 b 92 1032 118 1081 102 1057 b 59 922 78 1001 59 960 b 115 792 59 855 86 816 b 124 760 121 782 124 773 b 122 744 124 756 124 750 b 92 667 118 716 102 693 b 59 556 78 635 59 595 b 108 433 59 495 82 458 b 124 389 117 420 124 408 b 122 374 124 384 124 379 b 92 298 118 346 102 323 l 89 292 b 59 186 75 261 59 222 b 163 19 59 73 140 42 b 177 10 168 13 173 10 b 189 29 184 10 189 19 b 184 48 189 35 187 42 b 167 114 174 69 167 85 b 230 305 167 179 229 193 b 181 423 230 357 209 396 b 167 484 173 442 167 458 b 230 675 167 547 229 563 b 179 796 230 729 206 769 b 167 850 171 812 167 827 b 230 1040 167 913 229 929 b 183 1158 230 1092 209 1130 b 167 1220 173 1178 167 1194 b 230 1411 167 1284 229 1300 b 186 1526 230 1462 210 1499 b 167 1594 176 1529 167 1584 b 230 1786 167 1659 229 1673 b 219 1848 230 1809 226 1829 l 330 1848 l 164 2176 l 1 1848 z\"\n    },\n    \"arpeggiatoDown\": {\n      \"x_min\": 1,\n      \"x_max\": 229,\n      \"y_min\": -4,\n      \"y_max\": 1500,\n      \"ha\": 1504,\n      \"o\": \"m 1 323 l 164 -6 l 330 323 l 219 323 b 230 384 226 341 230 361 b 167 576 229 497 167 511 b 186 644 167 586 176 641 b 230 759 210 671 230 708 b 167 950 229 870 167 886 b 183 1012 167 976 173 992 b 230 1130 209 1040 230 1079 b 167 1320 229 1241 167 1257 b 179 1374 167 1344 171 1358 b 230 1495 206 1401 230 1441 b 167 1686 229 1607 167 1623 b 181 1747 167 1712 173 1728 b 230 1865 209 1774 230 1813 b 167 2056 229 1977 167 1992 b 184 2123 167 2085 174 2101 b 189 2141 187 2128 189 2136 b 177 2160 189 2151 184 2160 b 163 2151 173 2160 168 2157 b 59 1984 140 2128 59 2097 b 89 1878 59 1948 75 1909 l 92 1872 b 122 1796 102 1848 118 1824 b 124 1781 124 1791 124 1786 b 108 1737 124 1763 117 1750 b 59 1614 82 1712 59 1675 b 92 1503 59 1575 78 1535 b 122 1426 102 1477 118 1454 b 124 1410 124 1420 124 1414 b 115 1378 124 1397 121 1388 b 59 1248 86 1354 59 1315 b 92 1138 59 1210 78 1169 b 122 1060 102 1113 118 1089 b 124 1047 122 1056 124 1051 b 105 998 124 1025 115 1012 b 59 877 81 972 59 936 b 92 766 59 838 78 798 b 122 688 102 742 118 717 b 124 674 124 683 124 678 b 102 624 124 655 115 639 l 99 619 b 96 615 99 619 98 616 b 59 503 76 590 59 556 b 89 397 59 468 75 429 l 92 392 b 121 323 101 370 115 348 z\"\n    },\n    \"repeat1Bar\": {\n      \"x_min\": 0,\n      \"x_max\": 532,\n      \"y_min\": -250,\n      \"y_max\": 279,\n      \"ha\": 529,\n      \"o\": \"m 0 -350 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 l 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 z m 586 -161 b 675 -251 586 -210 626 -251 b 766 -161 726 -251 766 -210 b 675 -71 766 -111 726 -71 b 586 -161 626 -71 586 -111 z m 0 197 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 b 0 197 40 288 0 248 z\"\n    },\n    \"repeat2Bars\": {\n      \"x_min\": 0,\n      \"x_max\": 762,\n      \"y_min\": -250,\n      \"y_max\": 279,\n      \"ha\": 529,\n      \"o\": \"m 0 -350 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 l 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 z m 343 -360 l 485 -360 b 516 -340 498 -360 508 -348 l 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 z m 917 -161 b 1007 -251 917 -210 958 -251 b 1097 -161 1057 -251 1097 -210 b 1007 -71 1097 -111 1057 -71 b 917 -161 958 -71 917 -111 z m 89 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 z\"\n    },\n    \"repeat4Bars\": {\n      \"x_min\": 0,\n      \"x_max\": 1232,\n      \"y_min\": -250,\n      \"y_max\": 279,\n      \"ha\": 529,\n      \"o\": \"m 331 -350 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 l 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 z m 1008 -350 b 1020 -360 1008 -356 1012 -360 l 1162 -360 b 1192 -340 1175 -360 1185 -348 l 1767 380 b 1774 395 1771 386 1774 390 b 1765 402 1774 399 1771 402 l 1613 402 b 1587 380 1604 402 1597 393 l 1012 -340 b 1008 -350 1009 -343 1008 -347 z m 688 -360 l 831 -360 b 861 -340 844 -360 854 -348 l 1436 380 b 1443 395 1440 386 1443 390 b 1434 402 1443 399 1440 402 l 1282 402 b 1256 380 1273 402 1266 393 l 681 -340 b 677 -350 678 -343 677 -347 b 688 -360 677 -356 681 -360 z m 0 -350 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 l 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 z m 1683 -251 b 1774 -161 1734 -251 1774 -210 b 1683 -71 1774 -111 1734 -71 b 1594 -161 1634 -71 1594 -111 b 1683 -251 1594 -210 1634 -251 z m 0 197 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 b 0 197 40 288 0 248 z\"\n    },\n    \"repeatBarSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 532,\n      \"y_min\": -250,\n      \"y_max\": 279,\n      \"ha\": 529,\n      \"o\": \"m 12 -360 l 154 -360 b 184 -340 167 -360 177 -348 l 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 z\"\n    },\n    \"csymDiminished\": {\n      \"x_min\": 0,\n      \"x_max\": 473,\n      \"y_min\": 0,\n      \"y_max\": 473,\n      \"ha\": 473,\n      \"o\": \"m 0 341 b 341 0 0 153 153 0 b 681 341 530 0 681 153 b 341 681 681 530 530 681 b 0 341 153 681 0 530 z m 63 341 b 341 618 63 494 189 618 b 618 341 495 618 618 495 b 341 63 618 189 494 63 b 63 341 187 63 63 187 z\"\n    },\n    \"csymHalfDiminished\": {\n      \"x_min\": -16,\n      \"x_max\": 488,\n      \"y_min\": -15,\n      \"y_max\": 489,\n      \"ha\": 504,\n      \"o\": \"m 22 -22 l 122 79 b 340 0 181 30 258 0 b 680 341 528 0 680 153 b 602 559 680 423 651 500 l 703 660 l 658 704 l 557 603 b 340 681 498 652 422 681 b -1 341 151 681 -1 530 b 78 124 -1 259 29 183 l -23 23 z m 557 514 b 616 341 596 465 616 405 b 340 63 616 189 492 63 b 167 124 276 63 216 85 z m 340 618 b 513 559 403 618 464 598 l 122 168 b 62 341 84 217 62 278 b 340 618 62 494 187 618 z\"\n    },\n    \"csymAugmented\": {\n      \"x_min\": 0,\n      \"x_max\": 395,\n      \"y_min\": 1,\n      \"y_max\": 396,\n      \"ha\": 395,\n      \"o\": \"m 0 318 l 0 255 l 253 255 l 253 1 l 317 1 l 317 255 l 569 255 l 569 318 l 317 318 l 317 570 l 253 570 l 253 318 z\"\n    },\n    \"csymMajorSeventh\": {\n      \"x_min\": 0,\n      \"x_max\": 558,\n      \"y_min\": 1,\n      \"y_max\": 477,\n      \"ha\": 476,\n      \"o\": \"m 402 562 l 693 65 l 111 65 z m 402 687 l 0 1 l 804 1 z\"\n    },\n    \"csymMinor\": {\n      \"x_min\": 0,\n      \"x_max\": 325,\n      \"y_min\": 216,\n      \"y_max\": 260,\n      \"ha\": 44,\n      \"o\": \"m 468 374 l 0 374 l 0 311 l 468 311 z\"\n    },\n    \"csymParensLeftTall\": {\n      \"x_min\": 1,\n      \"x_max\": 185,\n      \"y_min\": 0,\n      \"y_max\": 997,\n      \"ha\": 997,\n      \"o\": \"m 259 1 b 264 0 261 0 262 0 b 266 9 265 0 266 6 l 266 48 b 261 65 266 55 264 62 b 92 719 157 212 92 400 b 262 1371 92 1037 154 1228 b 266 1394 266 1378 266 1394 l 266 1424 b 264 1436 266 1431 266 1436 b 259 1434 262 1436 259 1434 b 1 719 84 1261 1 1011 b 259 1 1 429 79 177 z\"\n    },\n    \"csymParensRightTall\": {\n      \"x_min\": -20,\n      \"x_max\": 164,\n      \"y_min\": 0,\n      \"y_max\": 997,\n      \"ha\": 997,\n      \"o\": \"m -29 1424 l -29 1394 b -24 1371 -29 1394 -29 1378 b 145 719 84 1228 145 1037 b -23 65 145 400 81 212 b -29 48 -26 62 -29 55 l -29 9 b -26 0 -29 6 -27 0 b -22 1 -24 0 -23 0 b 236 719 158 177 236 429 b -22 1434 236 1011 154 1261 b -26 1436 -22 1434 -24 1436 b -29 1424 -29 1436 -29 1431 z\"\n    },\n    \"csymBracketLeftTall\": {\n      \"x_min\": 0,\n      \"x_max\": 155,\n      \"y_min\": 0,\n      \"y_max\": 1000,\n      \"ha\": 1000,\n      \"o\": \"m 0 1436 l 0 4 b 6 0 0 1 3 0 l 217 0 b 223 9 220 0 223 4 l 223 37 b 217 46 223 42 220 46 l 92 46 l 92 1394 l 217 1394 b 223 1403 220 1394 223 1398 l 223 1431 b 217 1440 223 1436 220 1440 l 6 1440 b 0 1436 3 1440 0 1439 z\"\n    },\n    \"csymBracketRightTall\": {\n      \"x_min\": 1,\n      \"x_max\": 156,\n      \"y_min\": 0,\n      \"y_max\": 1000,\n      \"ha\": 1000,\n      \"o\": \"m 1 9 b 7 0 1 4 4 0 l 219 0 b 225 4 222 0 225 1 l 225 1436 b 219 1440 225 1439 222 1440 l 7 1440 b 1 1431 4 1440 1 1436 l 1 1403 b 7 1394 1 1398 4 1394 l 132 1394 l 132 46 l 7 46 b 1 37 4 46 1 42 z\"\n    },\n    \"csymParensLeftVeryTall\": {\n      \"x_min\": 0,\n      \"x_max\": 122,\n      \"y_min\": 0,\n      \"y_max\": 993,\n      \"ha\": 993,\n      \"o\": \"m 170 3 b 171 0 170 1 170 0 b 176 6 173 0 176 4 l 176 32 b 171 49 176 39 174 46 b 60 716 104 194 60 399 b 173 1382 60 1032 101 1241 b 176 1405 176 1390 176 1405 l 176 1427 b 173 1430 176 1428 174 1430 b 0 716 40 1297 0 978 b 170 3 0 428 50 179 z\"\n    },\n    \"csymParensRightVeryTall\": {\n      \"x_min\": -15,\n      \"x_max\": 107,\n      \"y_min\": 0,\n      \"y_max\": 993,\n      \"ha\": 993,\n      \"o\": \"m -22 1427 l -22 1405 b -19 1382 -22 1405 -22 1390 b 94 716 53 1241 94 1032 b -17 49 94 399 50 194 b -22 32 -20 46 -22 39 l -22 6 b -17 0 -22 4 -19 0 b -16 3 -16 0 -16 1 b 154 716 104 179 154 428 b -19 1430 154 978 114 1297 b -22 1427 -20 1430 -22 1428 z\"\n    },\n    \"csymDiagonalArrangementSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 999,\n      \"y_min\": 0,\n      \"y_max\": 1000,\n      \"ha\": 1000,\n      \"o\": \"m 1439 1380 l 1377 1440 l 0 60 l 62 0 z\"\n    },\n    \"brassScoop\": {\n      \"x_min\": 1,\n      \"x_max\": 320,\n      \"y_min\": -373,\n      \"y_max\": 13,\n      \"ha\": 386,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 318,\n      \"o\": \"m 1 -482 l 1 -505 b 26 -537 1 -526 3 -537 l 35 -537 b 461 -12 194 -518 461 -289 b 438 19 461 13 451 19 b 410 -9 425 19 413 9 b 35 -425 357 -366 92 -403 b 1 -482 13 -433 1 -438 z\"\n    },\n    \"brassDoitMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 489,\n      \"y_min\": -40,\n      \"y_max\": 346,\n      \"ha\": 386,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 490,\n      \"o\": \"m 0 -3 l 0 -26 b 24 -58 0 -46 1 -58 l 33 -58 b 704 468 255 -58 683 186 b 681 498 704 494 693 498 b 654 471 668 498 658 488 b 33 55 550 118 91 76 b 0 -3 12 46 0 42 z\"\n    },\n    \"brassFallLipShort\": {\n      \"x_min\": 1,\n      \"x_max\": 293,\n      \"y_min\": -345,\n      \"y_max\": 42,\n      \"ha\": 387,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 293,\n      \"o\": \"m 1 35 l 1 6 b 26 -50 3 -40 10 -43 b 32 -52 27 -50 30 -50 b 376 -469 85 -73 327 -111 b 400 -497 379 -487 387 -497 b 422 -467 412 -497 422 -491 b 32 60 422 -187 177 40 l 22 60 b 1 35 4 60 1 52 z\"\n    },\n    \"brassLiftMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 811,\n      \"y_min\": 0,\n      \"y_max\": 852,\n      \"ha\": 852,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 812,\n      \"o\": \"m 33 0 b 49 17 40 0 49 10 b 71 63 52 35 56 49 b 212 115 102 95 154 59 b 239 186 230 134 239 160 b 236 210 239 194 238 202 b 256 249 239 225 243 236 b 397 301 288 281 340 245 b 425 372 416 320 425 346 b 422 396 425 380 423 387 b 442 435 425 410 429 422 b 583 487 474 467 526 431 b 611 557 602 505 611 531 b 608 582 611 566 609 573 b 628 621 611 596 615 608 b 769 672 660 652 711 618 b 796 743 788 691 796 717 b 793 768 796 752 795 759 b 814 806 796 782 801 793 b 955 858 845 838 897 804 b 982 929 973 877 982 903 b 979 953 982 937 981 945 b 999 992 982 968 986 979 b 1140 1045 1031 1024 1083 989 b 1168 1116 1161 1066 1168 1090 b 1138 1220 1168 1162 1145 1207 b 1135 1225 1135 1223 1135 1224 b 1129 1227 1133 1227 1130 1227 b 1117 1207 1122 1227 1117 1212 l 1117 1201 b 1109 1164 1117 1187 1117 1172 b 1100 1156 1107 1161 1104 1158 b 959 1104 1058 1128 995 1140 b 929 1032 936 1081 929 1056 b 932 1007 929 1024 930 1015 b 923 976 932 995 930 985 l 914 971 b 773 919 873 942 809 955 b 743 847 750 896 743 870 b 746 821 743 838 744 829 b 737 791 746 809 744 799 l 729 783 b 588 733 687 756 624 769 b 557 661 564 710 557 684 b 560 635 557 652 559 644 b 552 605 560 624 559 612 l 543 598 b 402 547 501 570 438 583 b 372 475 379 524 372 498 b 374 449 372 467 373 458 b 366 419 374 438 373 426 l 357 412 b 216 361 315 384 252 397 b 186 289 193 338 186 312 b 189 264 186 281 187 272 b 180 233 189 252 187 240 b 171 226 177 232 174 229 b 30 176 130 199 66 212 b 0 104 7 153 0 128 b 33 0 0 88 14 0 z\"\n    },\n    \"brassFallRoughMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 811,\n      \"y_min\": 0,\n      \"y_max\": 852,\n      \"ha\": 852,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 812,\n      \"o\": \"m 0 1116 b 27 1045 0 1090 7 1066 b 168 992 85 989 137 1024 b 189 953 181 979 186 968 b 186 929 187 945 186 937 b 213 858 186 903 194 877 b 354 806 271 804 323 838 b 374 768 367 793 372 782 b 372 743 373 759 372 752 b 399 672 372 717 380 691 b 540 621 456 618 508 652 b 560 582 553 608 557 596 b 557 557 559 573 557 566 b 585 487 557 531 566 505 b 726 435 642 431 694 467 b 746 396 739 422 743 410 b 743 372 744 387 743 380 b 770 301 743 346 752 320 b 912 249 828 245 880 281 b 932 210 924 236 929 225 b 929 186 930 202 929 194 b 956 115 929 160 937 134 b 1097 63 1014 59 1066 95 b 1119 17 1112 49 1116 35 b 1135 0 1119 10 1128 0 b 1168 104 1153 0 1168 91 b 1138 176 1168 128 1161 153 b 996 226 1102 212 1038 199 b 988 233 994 229 991 232 b 979 264 981 240 979 252 b 982 289 981 272 982 281 b 952 361 982 312 975 338 b 811 412 916 397 852 384 l 802 419 b 793 449 795 426 793 438 b 796 475 795 458 796 467 b 766 547 796 498 789 524 b 625 598 730 583 667 570 l 616 605 b 608 635 609 612 608 624 b 611 661 609 644 611 652 b 580 733 611 684 603 710 b 439 783 544 769 481 756 l 431 791 b 422 821 423 799 422 809 b 425 847 423 829 425 838 b 395 919 425 870 418 896 b 253 971 359 955 295 942 l 245 976 b 236 1007 238 985 236 995 b 239 1032 238 1015 239 1024 b 209 1104 239 1056 232 1081 b 68 1156 173 1140 109 1128 b 59 1164 63 1158 60 1161 b 50 1201 50 1172 50 1187 l 50 1207 b 39 1227 50 1212 46 1227 b 33 1225 37 1227 35 1227 b 30 1220 33 1224 33 1223 b 0 1116 23 1207 0 1162 z\"\n    },\n    \"brassBend\": {\n      \"x_min\": 0,\n      \"x_max\": 392,\n      \"y_min\": 0,\n      \"y_max\": 282,\n      \"ha\": 282,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 393,\n      \"o\": \"m 13 72 b 282 0 108 23 196 0 b 552 72 369 0 456 23 b 564 92 560 75 564 84 l 564 383 b 541 406 564 395 554 406 b 518 383 528 406 518 395 l 518 107 b 282 46 435 65 357 46 b 46 107 207 46 130 65 l 46 383 b 23 406 46 395 36 406 b 0 383 10 406 0 395 l 0 92 b 13 72 0 84 4 75 z\"\n    },\n    \"brassMuteClosed\": {\n      \"x_min\": 0,\n      \"x_max\": 272,\n      \"y_min\": 0,\n      \"y_max\": 272,\n      \"ha\": 272,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 272,\n      \"o\": \"m 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 l 392 219 l 219 219 l 219 392 l 173 392 l 173 219 z\"\n    },\n    \"brassMuteOpen\": {\n      \"x_min\": 0,\n      \"x_max\": 304,\n      \"y_min\": 0,\n      \"y_max\": 304,\n      \"ha\": 304,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 305,\n      \"o\": \"m 0 219 b 219 0 0 98 98 0 b 438 219 340 0 438 98 b 219 438 438 340 340 438 b 0 219 98 438 0 340 z m 219 392 b 392 219 314 392 392 314 b 219 46 392 124 314 46 b 46 219 124 46 46 124 b 219 392 46 314 124 392 z\"\n    },\n    \"brassFlip\": {\n      \"x_min\": 0,\n      \"x_max\": 379,\n      \"y_min\": 0,\n      \"y_max\": 282,\n      \"ha\": 282,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 379,\n      \"o\": \"m 23 0 b 46 23 36 0 46 10 l 46 337 l 508 4 b 523 0 513 1 517 0 b 541 9 530 0 536 3 b 546 22 544 13 546 17 b 536 42 546 29 541 36 l 36 402 b 23 406 33 405 27 406 b 0 383 12 406 0 395 l 0 23 b 23 0 0 10 10 0 z\"\n    },\n    \"brassJazzTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 620,\n      \"y_min\": 0,\n      \"y_max\": 245,\n      \"ha\": 245,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 620,\n      \"o\": \"m 0 121 b 16 107 0 114 4 108 b 84 143 26 107 76 137 b 118 160 92 150 108 160 b 141 143 125 160 131 154 b 265 10 147 135 253 24 b 294 0 271 3 282 0 b 321 7 305 0 315 3 b 498 160 321 7 478 158 b 521 143 505 160 513 154 b 647 10 528 135 635 24 b 675 0 652 3 664 0 b 703 7 687 0 697 3 b 874 186 713 16 855 164 b 893 220 881 196 893 212 b 873 245 890 235 883 243 b 796 194 847 245 815 213 l 792 190 b 765 176 780 179 772 176 b 740 190 755 176 747 183 b 629 325 727 202 644 312 b 593 347 616 338 605 347 b 562 334 583 346 575 344 b 528 298 549 323 539 310 l 406 176 b 389 168 406 176 399 168 b 374 176 384 168 379 170 b 245 325 360 192 245 325 b 200 353 232 343 219 351 b 168 340 190 353 181 350 l 17 156 b 0 121 10 147 0 132 z\"\n    },\n    \"brassSmear\": {\n      \"x_min\": 1,\n      \"x_max\": 306,\n      \"y_min\": 0,\n      \"y_max\": 170,\n      \"ha\": 170,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 307,\n      \"o\": \"m 7 107 b 36 122 13 107 22 112 b 92 151 55 137 65 151 b 183 89 125 151 161 112 b 189 84 184 88 187 86 l 193 79 b 308 0 219 50 264 0 b 439 117 396 0 438 102 b 441 128 439 121 441 124 b 433 141 441 135 439 141 b 416 130 429 141 423 137 b 343 94 390 107 370 94 b 269 153 315 94 294 121 l 265 158 b 144 245 239 190 180 245 b 6 134 62 245 10 143 b 1 114 3 125 1 118 b 7 107 1 108 4 107 z\"\n    }\n  },\n  \"fontFamily\": \"Bravura\",\n  \"resolution\": 1000,\n  \"generatedOn\": \"2020-07-12T14:43:48.605Z\"\n};\n","export const BravuraMetrics = {\n  name: 'Bravura',\n  smufl: true,\n\n  stave: {\n    padding: 12,\n  },\n\n  clef: {\n    default: {\n      point: 32,\n      width: 26,\n    },\n    small: {\n      point: 26,\n      width: 20,\n    },\n\n    annotations: {\n      '8va': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 18,\n          treble: {\n            line: -1.4,\n            shiftX: 12,\n          },\n        },\n        small: {\n          point: 16,\n          treble: {\n            line: -0.2,\n            shiftX: 8,\n          },\n        }\n      },\n      '8vb': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 18,\n          treble: {\n            line: 6,\n            shiftX: 10,\n          },\n          bass: {\n            line: 3.5,\n            shiftX: 1,\n          }\n        },\n        small: {\n          point: 16,\n          treble: {\n            line: 5.3,\n            shiftX: 6,\n          },\n          bass: {\n            line: 3.1,\n            shiftX: 0.5,\n          }\n        }\n      }\n    },\n    // These may no longer be necessary\n    lineCount: {\n      '8': { point: 55, shiftY: 14 },\n      '7': { point: 47, shiftY: 8 },\n      '6': { point: 32, shiftY: 1 },\n      '5': { point: 30, shiftY: -6 },\n      '4': { point: 23, shiftY: -12 },\n    }\n  },\n  pedalMarking: {\n    up: {\n      point: 40\n    },\n    down: {\n      point: 34\n    }\n  },\n\n  // These are for numeric digits, such as in time signatures\n  digits: {\n    // used by timesig\n    shiftLine: -1,\n    point: 34,\n\n    // used by tuplets\n    tupletPoint: 22,\n    shiftY: -6,\n  },\n\n  articulation: {\n    articStaccatissimoAbove: {\n      padding: 2,\n    },\n    articStaccatissimoBelow: {\n      padding: 2,\n    }\n  },\n\n  tremolo: {\n    default: {\n      point: 25,\n      spacing: 5,\n      offsetYStemUp: -5,\n      offsetYStemDown: 5,\n      offsetXStemUp: 11,\n      offsetXStemDown: 1,\n    },\n    grace: {\n      point: 18,\n      spacing: 4,\n      offsetYStemUp: -5,\n      offsetYStemDown: 5,\n      offsetXStemUp: 7,\n      offsetXStemDown: 1,\n    }\n  },\n\n  stem: {\n    // These are stem (Y) offsets to the note heads. To shift the\n    // noteheads (x-position) themselves, see glyphs.notehead.custom.\n    noteHead: {\n      noteheadTriangleUpHalf: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpBlack: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpWhole: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXHalf: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXBlack: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXWhole: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadBlack: {\n        offsetYBaseStemDown: 2,\n      },\n      noteheadSquareWhite: {\n        offsetYBaseStemDown: -5,\n        offsetYBaseStemUp: 5,\n      }\n    }\n  },\n\n  // Values under here are used by the Glyph class to reposition and rescale\n  // glyphs based on their category. This should be the first stop for\n  // custom font glyph repositioning.\n  //\n  // The glyph loader first looks up a specific set of settings based on the\n  // glyph code, and if not found, uses the defaults from the category. See\n  // glyphs.textNote for an example of this.\n  //\n  // Details in Glyph.lookupFontMetrics.\n  glyphs: {\n    coda: {\n      point: 20,\n      shiftX: -7,\n      shiftY: 8,\n    },\n    segno: {\n      shiftX: -7,\n    },\n    flag: {\n      shiftX: -0.75,\n      tabStem: {\n        shiftX: -1.75,\n      },\n      staveTempo: {\n        shiftX: -1,\n      }\n    },\n    clef: {\n      gClef: {\n        default: { scale: 1.1, shiftY: 1 },\n        small: { shiftY: 1.5 }\n      },\n      fClef: {\n        default: { shiftY: -0.5 }\n      }\n    },\n    ornament: {\n      ornamentTurn: {\n        scale: 1.2,\n      },\n      ornamentTurnSlash: {\n        scale: 1.2,\n      },\n    },\n    stroke: {\n      arrowheadBlackDown: {\n        straight: {\n          shiftX: -4.5,\n        },\n        wiggly: {\n          shiftX: -1,\n          shiftY: 1,\n        }\n      },\n      arrowheadBlackUp: {\n        straight: {\n          shiftX: -0.85,\n        },\n        wiggly: {\n          shiftX: -1,\n          shiftY: 1,\n        }\n      }\n    },\n    textNote: {\n      point: 34,\n      breathMarkTick: {\n        point: 36,\n        shiftY: 9,\n      },\n      breathMarkComma: {\n        point: 36,\n      },\n      segno: {\n        point: 30,\n        shiftX: -7,\n        shiftY: 8,\n      },\n      coda: {\n        point: 20,\n        shiftX: -7,\n        shiftY: 8,\n      },\n      ornamentTrill: {\n        shiftX: -8,\n        shiftY: 8,\n      },\n      ornamentTurn: {\n        point: 42,\n      },\n      ornamentTurnSlash: {\n        point: 42,\n      },\n      ornamentMordent: {\n        shiftX: -8,\n      },\n      ornamentShortTrill: {\n        shiftX: -8,\n      }\n    },\n    noteHead: {\n      standard: {\n        restQuarterStemUp: {\n          point: 35,\n        },\n        restQuarterStemDown: {\n          point: 35,\n        },\n      },\n      custom: {\n        'noteheadCircleXStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadCircleXStemDown': {\n          shiftX: 0.25,\n        },\n        'noteheadDiamondHalfStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadDiamondBlackStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadDiamondWholeStemUp': {\n          shiftX: 1,\n        },\n        'noteheadXHalfStemUp': {\n          shiftX: -2,\n        },\n        'noteheadXHalfStemDown': {\n          shiftX: 1,\n        },\n        'noteheadXWholeStemUp': {\n          shiftX: -4,\n        },\n        'noteheadXWholeStemDown': {\n          shiftX: 1,\n        },\n        'noteheadSquareWhiteStemDown': {\n          shiftX: 0.25,\n        },\n        'noteheadSquareWhiteStemUp': {\n          shiftX: -0.75,\n        },\n        'noteheadSquareBlackStemUp': {\n          shiftX: -0.75,\n        },\n        'noteheadTriangleUpWholeStemUp': {\n          shiftX: -0.75,\n        }\n      },\n    },\n    chordSymbol: {\n      global: {\n        superscriptOffset: -400,\n        subscriptOffset: 300,\n        kerningOffset: -250,\n        lowerKerningText:  ['D', 'F', 'P', 'T', 'V', 'Y'],\n        upperKerningText:  ['A', 'L'],\n        spacing: 100,\n        superSubRatio: 0.66\n      },\n      csymDiminished: {\n        scale: 1,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymHalfDiminished: {\n        scale: 1,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymAugmented: {\n        scale: 1,\n        leftSideBearing: 0,\n        advanceWidth: 530,\n        yOffset: 0\n      },\n      csymParensLeftTall: {\n        scale: 0.8,\n        leftSideBearing: -20,\n        advanceWidth: 184,\n        yOffset: 250\n      },\n      csymParensRightTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 189,\n        yOffset: 250\n      },\n      csymBracketLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 328,\n        yOffset: 0\n      },\n      csymBracketRightTall: {\n        scale: 0.8,\n        leftSideBearing: 1,\n        advanceWidth: 600,\n        yOffset: 0\n      },\n      csymParensLeftVeryTall: {\n        scale: 0.9,\n        leftSideBearing: 0,\n        advanceWidth: 101,\n        yOffset: 350\n      },\n      csymParensRightVeryTall: {\n        scale: 0.9,\n        leftSideBearing: 50,\n        advanceWidth: 111,\n        yOffset: 350\n      },\n      csymDiagonalArrangementSlash: {\n        scale: 0.6,\n        leftSideBearing: -1,\n        advanceWidth: 990,\n        yOffset: 0\n      },\n      csymMinor: {\n        scale: 1,\n        leftSideBearing: 0,\n        advanceWidth: 482,\n        yOffset: 0\n      },\n      csymMajorSeventh: {\n        scale: 1,\n        leftSideBearing: 0,\n        yOffset: 0,\n        advanceWidth: 600\n      },\n      accidentalSharp: {\n        scale: 0.75,\n        leftSideBearing: 20,\n        advanceWidth: 250,\n        yOffset: -302\n      },\n      accidentalFlat: {\n        scale: 0.9,\n        leftSideBearing: -20,\n        advanceWidth: 226,\n        yOffset: -184\n      }\n    },\n    jazzOrnaments: {\n      brassScoop: {\n        scale: 1.0,\n        xOffset: -12,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 10\n      },\n      brassDoitMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth:15\n      },\n      brassFallLipShort: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassLiftMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 5,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallRoughMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 28,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassBend: {\n        scale: 1.0,\n        xOffset: 2,\n        yOffset: -8,\n        stemUpYOffset: 25,\n        reportedWidth: 5\n      },\n      brassMuteClosed: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -8,\n        stemUpYOffset: 25,\n        reportedWidth: 5\n      },\n      brassMuteOpen: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -7,\n        stemUpYOffset: 25,\n        reportedWidth: 5\n      },\n      brassFlip: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassJazzTurn: {\n        scale: 1.0,\n        xOffset: 6,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassSmear: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n    }\n  }\n};\n","export const CustomFont = {\n  'resolution': 1000,\n  'familyName': 'VexflowCustom',\n  'glyphs': {\n    'noteheadSquareWhite': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 386,\n      'o': 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 '\n    },\n    'noteheadSquareBlack': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 386,\n      'o': 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 '\n    },\n    'accidentalBuyukMucennebFlat': {\n      'x_min': -171.5,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalBakiyeFlat': {\n      'x_min': -176.9375,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalKucukMucennebSharp': {\n      'x_min': -1.359375,\n      'x_max': 255.890625,\n      'ha': 261,\n      'o': 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 '\n    },\n    'accidentalKoron': {\n      'x_min': -20,\n      'x_max': 320,\n      'ha': 257,\n      'o': 'm -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 '\n    },\n    'accidentalSori': {\n      'x_min': -10.890625,\n      'x_max': 299.4375,\n      'ha': 294,\n      'o': 'm 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 '\n    },\n    'vexAccidentalMicrotonal2': {\n      'x_min': -1.359375,\n      'x_max': 386.5625,\n      'ha': 394,\n      'o': 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 '\n    },\n    'vexAccidentalMicrotonal3': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 360,\n      'o': 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z '\n    },\n    'vexAccidentalMicrotonal4': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 360,\n      'o': 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z '\n    },\n    'vexNoteHeadRectBlack': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 360,\n      'o': 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 '\n    },\n    'vexNoteHeadRectWhite': {\n      'x_min': 0,\n      'x_max': 430.75,\n      'ha': 360,\n      'o': 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100'\n    }\n  }\n};\n","export const CustomMetrics = {\n  name: 'Vexflow-Custom',\n  smufl: false,\n  glyphs: {}\n};\n","export const GonvilleFont = {\n  'glyphs': {\n    'bracketTop': {\n      'x_min': 0,\n      'x_max': 559.421875,\n      'ha': 571,\n      'o': 'm 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 '\n    },\n    'bracketBottom': {\n      'x_min': 0,\n      'x_max': 559.421875,\n      'ha': 571,\n      'o': 'm 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 '\n    },\n    'barlineTick': {\n      'x_min': -80.3125,\n      'x_max': 78.9375,\n      'ha': 81,\n      'o': 'm 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 '\n    },\n    'breathMarkTick': {\n      'x_min': -80.3125,\n      'x_max': 78.9375,\n      'ha': 81,\n      'o': 'm 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 '\n    },\n    'segno': {\n      'x_min': -330.75,\n      'x_max': 329.390625,\n      'ha': 336,\n      'o': 'm -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 '\n    },\n    'coda': {\n      'x_min': -311.6875,\n      'x_max': 310.328125,\n      'ha': 317,\n      'o': 'm -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 '\n    },\n    'gClef': {\n      'x_min': -1.359375,\n      'x_max': 847.96875,\n      'ha': 865,\n      'o': 'm 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 '\n    },\n    'cClef': {\n      'x_min': 0,\n      'x_max': 873.828125,\n      'ha': 892,\n      'o': 'm 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 '\n    },\n    'fClef': {\n      'x_min': -1.359375,\n      'x_max': 899.703125,\n      'ha': 918,\n      'o': 'm 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 '\n    },\n    'unpitchedPercussionClef1': {\n      'x_min': 0,\n      'x_max': 464.140625,\n      'ha': 474,\n      'o': 'm 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 '\n    },\n    '6stringTabClef': {\n      'x_min': -1.359375,\n      'x_max': 680.5625,\n      'ha': 694,\n      'o': 'm 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 '\n    },\n    'timeSig0': {\n      'x_min': 0,\n      'x_max': 514.5,\n      'ha': 525,\n      'o': 'm 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 '\n    },\n    'timeSig1': {\n      'x_min': -1.359375,\n      'x_max': 344.359375,\n      'ha': 351,\n      'o': 'm 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 '\n    },\n    'timeSig2': {\n      'x_min': -1.359375,\n      'x_max': 458.6875,\n      'ha': 468,\n      'o': 'm 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 '\n    },\n    'timeSig3': {\n      'x_min': -1.359375,\n      'x_max': 409.6875,\n      'ha': 418,\n      'o': 'm 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 '\n    },\n    'timeSig4': {\n      'x_min': 0,\n      'x_max': 468.21875,\n      'ha': 478,\n      'o': 'm 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 '\n    },\n    'timeSig5': {\n      'x_min': 0,\n      'x_max': 409.6875,\n      'ha': 418,\n      'o': 'm 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 '\n    },\n    'timeSig6': {\n      'x_min': 0,\n      'x_max': 475.03125,\n      'ha': 485,\n      'o': 'm 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 '\n    },\n    'timeSig7': {\n      'x_min': 0,\n      'x_max': 442.359375,\n      'ha': 451,\n      'o': 'm 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 '\n    },\n    'timeSig8': {\n      'x_min': 0,\n      'x_max': 488.640625,\n      'ha': 499,\n      'o': 'm 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 '\n    },\n    'timeSig9': {\n      'x_min': 0,\n      'x_max': 475.03125,\n      'ha': 485,\n      'o': 'm 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 '\n    },\n    'timeSigCommon': {\n      'x_min': -1.359375,\n      'x_max': 556.6875,\n      'ha': 568,\n      'o': 'm 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 '\n    },\n    'timeSigCutCommon': {\n      'x_min': 0,\n      'x_max': 556.6875,\n      'ha': 568,\n      'o': 'm 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 '\n    },\n    'noteheadDoubleWhole': {\n      'x_min': 0,\n      'x_max': 902.421875,\n      'ha': 921,\n      'o': 'm 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 '\n    },\n    'noteheadWhole': {\n      'x_min': 0,\n      'x_max': 619.3125,\n      'ha': 632,\n      'o': 'm 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 '\n    },\n    'noteheadHalf': {\n      'x_min': 0,\n      'x_max': 428.75,\n      'ha': 438,\n      'o': 'm 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 '\n    },\n    'noteheadBlack': {\n      'x_min': 0,\n      'x_max': 428.75,\n      'ha': 438,\n      'o': 'm 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 '\n    },\n    'noteheadXWhole': {\n      'x_min': 0,\n      'x_max': 598.890625,\n      'ha': 611,\n      'o': 'm 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 '\n    },\n    'noteheadXHalf': {\n      'x_min': 0,\n      'x_max': 406.96875,\n      'ha': 415,\n      'o': 'm 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 '\n    },\n    'noteheadXBlack': {\n      'x_min': 0,\n      'x_max': 406.96875,\n      'ha': 415,\n      'o': 'm 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 '\n    },\n    'noteheadCircleX': {\n      'x_min': 0,\n      'x_max': 484.5625,\n      'ha': 494,\n      'o': 'm 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 '\n    },\n    'noteheadTriangleUpWhole': {\n      'x_min': 0,\n      'x_max': 630.203125,\n      'ha': 643,\n      'o': 'm 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 '\n    },\n    'noteheadTriangleUpHalf': {\n      'x_min': 0,\n      'x_max': 438.28125,\n      'ha': 447,\n      'o': 'm 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 '\n    },\n    'noteheadTriangleUpBlack': {\n      'x_min': -1.359375,\n      'x_max': 436.921875,\n      'ha': 446,\n      'o': 'm 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 '\n    },\n    'noteheadDiamondWhole': {\n      'x_min': 0,\n      'x_max': 627.46875,\n      'ha': 640,\n      'o': 'm 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 '\n    },\n    'noteheadDiamondHalf': {\n      'x_min': 0,\n      'x_max': 438.28125,\n      'ha': 447,\n      'o': 'm 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 '\n    },\n    'noteheadDiamondBlack': {\n      'x_min': 0,\n      'x_max': 432.828125,\n      'ha': 442,\n      'o': 'm 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 '\n    },\n    'augmentationDot': {\n      'x_min': 0,\n      'x_max': 133.390625,\n      'ha': 136,\n      'o': 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 '\n    },\n    'tremolo1': {\n      'x_min': -206.890625,\n      'x_max': 428.75,\n      'ha': 438,\n      'o': 'm 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 '\n    },\n    'flag8thUp': {\n      'x_min': -24.5,\n      'x_max': 317.140625,\n      'ha': 324,\n      'o': 'm -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 '\n    },\n    'flag8thDown': {\n      'x_min': -21.78125,\n      'x_max': 367.5,\n      'ha': 375,\n      'o': 'm 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 '\n    },\n    'flag16thUp': {\n      'x_min': -24.5,\n      'x_max': 317.140625,\n      'ha': 324,\n      'o': 'm -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 '\n    },\n    'flag16thDown': {\n      'x_min': -21.78125,\n      'x_max': 362.0625,\n      'ha': 369,\n      'o': 'm 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 '\n    },\n    'flag32ndUp': {\n      'x_min': -24.5,\n      'x_max': 315.78125,\n      'ha': 322,\n      'o': 'm -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 '\n    },\n    'flag32ndDown': {\n      'x_min': -21.78125,\n      'x_max': 366.140625,\n      'ha': 374,\n      'o': 'm 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 '\n    },\n    'flag64thUp': {\n      'x_min': -24.5,\n      'x_max': 314.421875,\n      'ha': 321,\n      'o': 'm -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 '\n    },\n    'flag64thDown': {\n      'x_min': -21.78125,\n      'x_max': 367.5,\n      'ha': 375,\n      'o': 'm 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 '\n    },\n    'flag128thUp': {\n      'x_min': -24.5,\n      'x_max': 313.0625,\n      'ha': 319,\n      'o': 'm -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 '\n    },\n    'flag128thDown': {\n      'x_min': -21.78125,\n      'x_max': 367.5,\n      'ha': 375,\n      'o': 'm 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 '\n    },\n    'accidentalFlat': {\n      'x_min': -21.78125,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalNatural': {\n      'x_min': 0,\n      'x_max': 239.5625,\n      'ha': 244,\n      'o': 'm 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 '\n    },\n    'accidentalSharp': {\n      'x_min': 0,\n      'x_max': 323.9375,\n      'ha': 331,\n      'o': 'm 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 '\n    },\n    'accidentalDoubleSharp': {\n      'x_min': 0,\n      'x_max': 367.5,\n      'ha': 375,\n      'o': 'm 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 '\n    },\n    'accidentalDoubleFlat': {\n      'x_min': -21.78125,\n      'x_max': 483.1875,\n      'ha': 493,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 '\n    },\n    'accidentalParensLeft': {\n      'x_min': -166.0625,\n      'x_max': -25.859375,\n      'ha': 0,\n      'o': 'm -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 '\n    },\n    'accidentalParensRight': {\n      'x_min': 25.859375,\n      'x_max': 164.6875,\n      'ha': 168,\n      'o': 'm 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 '\n    },\n    'accidentalQuarterToneFlatStein': {\n      'x_min': 0,\n      'x_max': 272.21875,\n      'ha': 278,\n      'o': 'm 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 '\n    },\n    'accidentalThreeQuarterTonesFlatZimmermann': {\n      'x_min': 0,\n      'x_max': 607.0625,\n      'ha': 619,\n      'o': 'm 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 '\n    },\n    'accidentalQuarterToneSharpStein': {\n      'x_min': 0,\n      'x_max': 193.28125,\n      'ha': 197,\n      'o': 'm 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 '\n    },\n    'accidentalThreeQuarterTonesSharpStein': {\n      'x_min': -1.359375,\n      'x_max': 455.96875,\n      'ha': 465,\n      'o': 'm 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 '\n    },\n    'accidentalBuyukMucennebFlat': {\n      'x_min': -171.5,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalBakiyeFlat': {\n      'x_min': -176.9375,\n      'x_max': 251.8125,\n      'ha': 257,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 '\n    },\n    'accidentalKomaSharp': {\n      'x_min': -1.359375,\n      'x_max': 455.96875,\n      'ha': 465,\n      'o': 'm 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 '\n    },\n    'accidentalKucukMucennebSharp': {\n      'x_min': -1.359375,\n      'x_max': 255.890625,\n      'ha': 261,\n      'o': 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 '\n    },\n    'articAccentAbove': {\n      'x_min': -348.4375,\n      'x_max': 24.5,\n      'ha': 25,\n      'o': 'm -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 '\n    },\n    'articAccentBelow': {\n      'x_min': -348.4375,\n      'x_max': 24.5,\n      'ha': 25,\n      'o': 'm -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 '\n    },\n    'articTenutoAbove': {\n      'x_min': 0,\n      'x_max': 318.5,\n      'ha': 325,\n      'o': 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 '\n    },\n    'articTenutoBelow': {\n      'x_min': 0,\n      'x_max': 318.5,\n      'ha': 325,\n      'o': 'm 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 '\n    },\n    'articStaccatoAbove': {\n      'x_min': 0,\n      'x_max': 133.390625,\n      'ha': 136,\n      'o': 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 '\n    },\n    'articStaccatoBelow': {\n      'x_min': 0,\n      'x_max': 133.390625,\n      'ha': 136,\n      'o': 'm 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 '\n    },\n    'articStaccatissimoAbove': {\n      'x_min': -73.5,\n      'x_max': 72.140625,\n      'ha': 74,\n      'o': 'm -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 '\n    },\n    'articStaccatissimoBelow': {\n      'x_min': -73.5,\n      'x_max': 72.140625,\n      'ha': 74,\n      'o': 'm -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 '\n    },\n    'articMarcatoAbove': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 '\n    },\n    'articMarcatoBelow': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 '\n    },\n    'fermataAbove': {\n      'x_min': -442.359375,\n      'x_max': 441,\n      'ha': 450,\n      'o': 'm -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 '\n    },\n    'fermataBelow': {\n      'x_min': -441,\n      'x_max': 439.640625,\n      'ha': 449,\n      'o': 'm -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 '\n    },\n    'breathMarkComma': {\n      'x_min': -1.359375,\n      'x_max': 193.28125,\n      'ha': 197,\n      'o': 'm 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 '\n    },\n    'breathMarkUpbow': {\n      'x_min': -170.140625,\n      'x_max': 168.78125,\n      'ha': 172,\n      'o': 'm -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 '\n    },\n    'caesura': {\n      'x_min': 0,\n      'x_max': 622.03125,\n      'ha': 635,\n      'o': 'm 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 '\n    },\n    'caesuraCurved': {\n      'x_min': 0,\n      'x_max': 503.609375,\n      'ha': 514,\n      'o': 'm 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 '\n    },\n    'restMaxima': {\n      'x_min': 0,\n      'x_max': 464.140625,\n      'ha': 474,\n      'o': 'm 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 '\n    },\n    'restDoubleWhole': {\n      'x_min': 0,\n      'x_max': 386.5625,\n      'ha': 394,\n      'o': 'm 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 '\n    },\n    'restWhole': {\n      'x_min': 0,\n      'x_max': 447.8125,\n      'ha': 457,\n      'o': 'm 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 '\n    },\n    'restHalf': {\n      'x_min': 0,\n      'x_max': 447.8125,\n      'ha': 457,\n      'o': 'm 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 '\n    },\n    'restQuarter': {\n      'x_min': 0,\n      'x_max': 300.8125,\n      'ha': 307,\n      'o': 'm 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 '\n    },\n    'rest8th': {\n      'x_min': 0,\n      'x_max': 349.8125,\n      'ha': 357,\n      'o': 'm 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 '\n    },\n    'rest16th': {\n      'x_min': 0,\n      'x_max': 450.53125,\n      'ha': 460,\n      'o': 'm 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 '\n    },\n    'rest32nd': {\n      'x_min': 0,\n      'x_max': 551.25,\n      'ha': 563,\n      'o': 'm 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 '\n    },\n    'rest64th': {\n      'x_min': -1.359375,\n      'x_max': 651.96875,\n      'ha': 665,\n      'o': 'm 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 '\n    },\n    'rest128th': {\n      'x_min': -1.359375,\n      'x_max': 752.703125,\n      'ha': 768,\n      'o': 'm 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 '\n    },\n    'dynamicPiano': {\n      'x_min': -53.078125,\n      'x_max': 513.140625,\n      'ha': 485,\n      'o': 'm 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 '\n    },\n    'dynamicMezzo': {\n      'x_min': 46.28125,\n      'x_max': 669.671875,\n      'ha': 563,\n      'o': 'm 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 '\n    },\n    'dynamicForte': {\n      'x_min': -118.421875,\n      'x_max': 597.53125,\n      'ha': 381,\n      'o': 'm 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 '\n    },\n    'dynamicRinforzando': {\n      'x_min': 78.9375,\n      'x_max': 485.921875,\n      'ha': 417,\n      'o': 'm 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 '\n    },\n    'dynamicSforzando': {\n      'x_min': 70.78125,\n      'x_max': 378.390625,\n      'ha': 315,\n      'o': 'm 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 '\n    },\n    'dynamicZ': {\n      'x_min': 29.9375,\n      'x_max': 420.578125,\n      'ha': 371,\n      'o': 'm 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 '\n    },\n    'ornamentTrill': {\n      'x_min': -340.28125,\n      'x_max': 338.921875,\n      'ha': 346,\n      'o': 'm -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 '\n    },\n    'ornamentTurn': {\n      'x_min': -423.3125,\n      'x_max': 421.9375,\n      'ha': 431,\n      'o': 'm -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 '\n    },\n    'ornamentTurnSlash': {\n      'x_min': -423.3125,\n      'x_max': 421.9375,\n      'ha': 431,\n      'o': 'm -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 '\n    },\n    'ornamentMordent': {\n      'x_min': -402.890625,\n      'x_max': 401.53125,\n      'ha': 410,\n      'o': 'm -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 '\n    },\n    'ornamentShortTrill': {\n      'x_min': -402.890625,\n      'x_max': 401.53125,\n      'ha': 410,\n      'o': 'm -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 '\n    },\n    'ornamentTremblement': {\n      'x_min': -571.671875,\n      'x_max': 570.3125,\n      'ha': 582,\n      'o': 'm -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 '\n    },\n    'ornamentPrecompAppoggTrill': {\n      'x_min': -571.671875,\n      'x_max': 570.3125,\n      'ha': 582,\n      'o': 'm -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 '\n    },\n    'ornamentPrecompSlideTrillDAnglebert': {\n      'x_min': -590.71875,\n      'x_max': 589.359375,\n      'ha': 601,\n      'o': 'm -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 '\n    },\n    'ornamentPrecompSlideTrillBach': {\n      'x_min': -590.71875,\n      'x_max': 589.359375,\n      'ha': 601,\n      'o': 'm 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 '\n    },\n    'ornamentPrecompTrillSuffixDandrieu': {\n      'x_min': -590.71875,\n      'x_max': 589.359375,\n      'ha': 601,\n      'o': 'm 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 '\n    },\n    'ornamentPrecompDoubleCadenceUpperPrefix': {\n      'x_min': -597.53125,\n      'x_max': 596.171875,\n      'ha': 608,\n      'o': 'm -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 '\n    },\n    'ornamentPrecompDoubleCadenceUpperPrefixTurn': {\n      'x_min': -597.53125,\n      'x_max': 596.171875,\n      'ha': 608,\n      'o': 'm -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 '\n    },\n    'ornamentPrecompTrillLowerSuffix': {\n      'x_min': -597.53125,\n      'x_max': 596.171875,\n      'ha': 608,\n      'o': 'm -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 '\n    },\n    'stringsDownBow': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 '\n    },\n    'stringsUpBow': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 '\n    },\n    'stringsHarmonic': {\n      'x_min': -122.5,\n      'x_max': 121.140625,\n      'ha': 124,\n      'o': 'm -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 '\n    },\n    'pluckedSnapPizzicatoAbove': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 '\n    },\n    'pluckedSnapPizzicatoBelow': {\n      'x_min': -149.71875,\n      'x_max': 148.359375,\n      'ha': 151,\n      'o': 'm -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 '\n    },\n    'pluckedLeftHandPizzicato': {\n      'x_min': 0,\n      'x_max': 319.859375,\n      'ha': 326,\n      'o': 'm 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 '\n    },\n    'keyboardPedalPed': {\n      'x_min': -1.359375,\n      'x_max': 1064.390625,\n      'ha': 1086,\n      'o': 'm 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 '\n    },\n    'keyboardPedalUp': {\n      'x_min': -1.359375,\n      'x_max': 592.078125,\n      'ha': 604,\n      'o': 'm 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 '\n    },\n    'pictChokeCymbal': {\n      'x_min': 0,\n      'x_max': 227.3125,\n      'ha': 232,\n      'o': 'm 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 '\n    },\n    'wiggleArpeggiatoUp': {\n      'x_min': 58.53125,\n      'x_max': 228.671875,\n      'ha': 294,\n      'o': 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 '\n    },\n    'arrowheadBlackUp': {\n      'x_min': -10.890625,\n      'x_max': 299.4375,\n      'ha': 294,\n      'o': 'm 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 '\n    },\n    'arrowheadBlackDown': {\n      'x_min': -10.890625,\n      'x_max': 298.078125,\n      'ha': 294,\n      'o': 'm 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 '\n    },\n    'vexAccidentalMicrotonal1': {\n      'x_min': -171.5,\n      'x_max': 483.1875,\n      'ha': 493,\n      'o': 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 '\n    },\n    'vexAccidentalMicrotonal2': {\n      'x_min': -1.359375,\n      'x_max': 386.5625,\n      'ha': 394,\n      'o': 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 '\n    },\n    'vexWiggleArpeggioUp': {\n      'x_min': 58.53125,\n      'x_max': 228.671875,\n      'ha': 294,\n      'o': 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 '\n    },\n    'vexNoteHeadMutedBreve': {\n      'x_min': 0,\n      'x_max': 370.21875,\n      'ha': 378,\n      'o': 'm 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 '\n    },\n    \"brassScoop\": {\n      \"x_min\": 1,\n      \"x_max\": 320,\n      \"y_min\": -373,\n      \"y_max\": 13,\n      \"ha\": 386,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 318,\n      \"o\": \"m 1 -482 l 1 -505 b 26 -537 1 -526 3 -537 l 35 -537 b 461 -12 194 -518 461 -289 b 438 19 461 13 451 19 b 410 -9 425 19 413 9 b 35 -425 357 -366 92 -403 b 1 -482 13 -433 1 -438 z\"\n    },\n    \"brassDoitMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 489,\n      \"y_min\": -40,\n      \"y_max\": 346,\n      \"ha\": 386,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 490,\n      \"o\": \"m 0 -3 l 0 -26 b 24 -58 0 -46 1 -58 l 33 -58 b 704 468 255 -58 683 186 b 681 498 704 494 693 498 b 654 471 668 498 658 488 b 33 55 550 118 91 76 b 0 -3 12 46 0 42 z\"\n    },\n    \"brassFallLipShort\": {\n      \"x_min\": 1,\n      \"x_max\": 293,\n      \"y_min\": -345,\n      \"y_max\": 42,\n      \"ha\": 387,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 293,\n      \"o\": \"m 1 35 l 1 6 b 26 -50 3 -40 10 -43 b 32 -52 27 -50 30 -50 b 376 -469 85 -73 327 -111 b 400 -497 379 -487 387 -497 b 422 -467 412 -497 422 -491 b 32 60 422 -187 177 40 l 22 60 b 1 35 4 60 1 52 z\"\n    },\n    \"brassLiftMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 811,\n      \"y_min\": 0,\n      \"y_max\": 852,\n      \"ha\": 852,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 812,\n      \"o\": \"m 33 0 b 49 17 40 0 49 10 b 71 63 52 35 56 49 b 212 115 102 95 154 59 b 239 186 230 134 239 160 b 236 210 239 194 238 202 b 256 249 239 225 243 236 b 397 301 288 281 340 245 b 425 372 416 320 425 346 b 422 396 425 380 423 387 b 442 435 425 410 429 422 b 583 487 474 467 526 431 b 611 557 602 505 611 531 b 608 582 611 566 609 573 b 628 621 611 596 615 608 b 769 672 660 652 711 618 b 796 743 788 691 796 717 b 793 768 796 752 795 759 b 814 806 796 782 801 793 b 955 858 845 838 897 804 b 982 929 973 877 982 903 b 979 953 982 937 981 945 b 999 992 982 968 986 979 b 1140 1045 1031 1024 1083 989 b 1168 1116 1161 1066 1168 1090 b 1138 1220 1168 1162 1145 1207 b 1135 1225 1135 1223 1135 1224 b 1129 1227 1133 1227 1130 1227 b 1117 1207 1122 1227 1117 1212 l 1117 1201 b 1109 1164 1117 1187 1117 1172 b 1100 1156 1107 1161 1104 1158 b 959 1104 1058 1128 995 1140 b 929 1032 936 1081 929 1056 b 932 1007 929 1024 930 1015 b 923 976 932 995 930 985 l 914 971 b 773 919 873 942 809 955 b 743 847 750 896 743 870 b 746 821 743 838 744 829 b 737 791 746 809 744 799 l 729 783 b 588 733 687 756 624 769 b 557 661 564 710 557 684 b 560 635 557 652 559 644 b 552 605 560 624 559 612 l 543 598 b 402 547 501 570 438 583 b 372 475 379 524 372 498 b 374 449 372 467 373 458 b 366 419 374 438 373 426 l 357 412 b 216 361 315 384 252 397 b 186 289 193 338 186 312 b 189 264 186 281 187 272 b 180 233 189 252 187 240 b 171 226 177 232 174 229 b 30 176 130 199 66 212 b 0 104 7 153 0 128 b 33 0 0 88 14 0 z\"\n    },\n    \"brassFallRoughMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 811,\n      \"y_min\": 0,\n      \"y_max\": 852,\n      \"ha\": 852,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 812,\n      \"o\": \"m 0 1116 b 27 1045 0 1090 7 1066 b 168 992 85 989 137 1024 b 189 953 181 979 186 968 b 186 929 187 945 186 937 b 213 858 186 903 194 877 b 354 806 271 804 323 838 b 374 768 367 793 372 782 b 372 743 373 759 372 752 b 399 672 372 717 380 691 b 540 621 456 618 508 652 b 560 582 553 608 557 596 b 557 557 559 573 557 566 b 585 487 557 531 566 505 b 726 435 642 431 694 467 b 746 396 739 422 743 410 b 743 372 744 387 743 380 b 770 301 743 346 752 320 b 912 249 828 245 880 281 b 932 210 924 236 929 225 b 929 186 930 202 929 194 b 956 115 929 160 937 134 b 1097 63 1014 59 1066 95 b 1119 17 1112 49 1116 35 b 1135 0 1119 10 1128 0 b 1168 104 1153 0 1168 91 b 1138 176 1168 128 1161 153 b 996 226 1102 212 1038 199 b 988 233 994 229 991 232 b 979 264 981 240 979 252 b 982 289 981 272 982 281 b 952 361 982 312 975 338 b 811 412 916 397 852 384 l 802 419 b 793 449 795 426 793 438 b 796 475 795 458 796 467 b 766 547 796 498 789 524 b 625 598 730 583 667 570 l 616 605 b 608 635 609 612 608 624 b 611 661 609 644 611 652 b 580 733 611 684 603 710 b 439 783 544 769 481 756 l 431 791 b 422 821 423 799 422 809 b 425 847 423 829 425 838 b 395 919 425 870 418 896 b 253 971 359 955 295 942 l 245 976 b 236 1007 238 985 236 995 b 239 1032 238 1015 239 1024 b 209 1104 239 1056 232 1081 b 68 1156 173 1140 109 1128 b 59 1164 63 1158 60 1161 b 50 1201 50 1172 50 1187 l 50 1207 b 39 1227 50 1212 46 1227 b 33 1225 37 1227 35 1227 b 30 1220 33 1224 33 1223 b 0 1116 23 1207 0 1162 z\"\n    },\n    \"brassBend\": {\n      \"x_min\": 0,\n      \"x_max\": 392,\n      \"y_min\": 0,\n      \"y_max\": 282,\n      \"ha\": 282,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 393,\n      \"o\": \"m 13 72 b 282 0 108 23 196 0 b 552 72 369 0 456 23 b 564 92 560 75 564 84 l 564 383 b 541 406 564 395 554 406 b 518 383 528 406 518 395 l 518 107 b 282 46 435 65 357 46 b 46 107 207 46 130 65 l 46 383 b 23 406 46 395 36 406 b 0 383 10 406 0 395 l 0 92 b 13 72 0 84 4 75 z\"\n    },\n    \"brassMuteClosed\": {\n      \"x_min\": 0,\n      \"x_max\": 272,\n      \"y_min\": 0,\n      \"y_max\": 272,\n      \"ha\": 272,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 272,\n      \"o\": \"m 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 l 392 219 l 219 219 l 219 392 l 173 392 l 173 219 z\"\n    },\n    \"brassMuteOpen\": {\n      \"x_min\": 0,\n      \"x_max\": 304,\n      \"y_min\": 0,\n      \"y_max\": 304,\n      \"ha\": 304,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 305,\n      \"o\": \"m 0 219 b 219 0 0 98 98 0 b 438 219 340 0 438 98 b 219 438 438 340 340 438 b 0 219 98 438 0 340 z m 219 392 b 392 219 314 392 392 314 b 219 46 392 124 314 46 b 46 219 124 46 46 124 b 219 392 46 314 124 392 z\"\n    },\n    \"brassFlip\": {\n      \"x_min\": 0,\n      \"x_max\": 379,\n      \"y_min\": 0,\n      \"y_max\": 282,\n      \"ha\": 282,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 379,\n      \"o\": \"m 23 0 b 46 23 36 0 46 10 l 46 337 l 508 4 b 523 0 513 1 517 0 b 541 9 530 0 536 3 b 546 22 544 13 546 17 b 536 42 546 29 541 36 l 36 402 b 23 406 33 405 27 406 b 0 383 12 406 0 395 l 0 23 b 23 0 0 10 10 0 z\"\n    },\n    \"brassJazzTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 620,\n      \"y_min\": 0,\n      \"y_max\": 245,\n      \"ha\": 245,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 620,\n      \"o\": \"m 0 121 b 16 107 0 114 4 108 b 84 143 26 107 76 137 b 118 160 92 150 108 160 b 141 143 125 160 131 154 b 265 10 147 135 253 24 b 294 0 271 3 282 0 b 321 7 305 0 315 3 b 498 160 321 7 478 158 b 521 143 505 160 513 154 b 647 10 528 135 635 24 b 675 0 652 3 664 0 b 703 7 687 0 697 3 b 874 186 713 16 855 164 b 893 220 881 196 893 212 b 873 245 890 235 883 243 b 796 194 847 245 815 213 l 792 190 b 765 176 780 179 772 176 b 740 190 755 176 747 183 b 629 325 727 202 644 312 b 593 347 616 338 605 347 b 562 334 583 346 575 344 b 528 298 549 323 539 310 l 406 176 b 389 168 406 176 399 168 b 374 176 384 168 379 170 b 245 325 360 192 245 325 b 200 353 232 343 219 351 b 168 340 190 353 181 350 l 17 156 b 0 121 10 147 0 132 z\"\n    },\n    \"brassSmear\": {\n      \"x_min\": 1,\n      \"x_max\": 306,\n      \"y_min\": 0,\n      \"y_max\": 170,\n      \"ha\": 170,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 307,\n      \"o\": \"m 7 107 b 36 122 13 107 22 112 b 92 151 55 137 65 151 b 183 89 125 151 161 112 b 189 84 184 88 187 86 l 193 79 b 308 0 219 50 264 0 b 439 117 396 0 438 102 b 441 128 439 121 441 124 b 433 141 441 135 439 141 b 416 130 429 141 423 137 b 343 94 390 107 370 94 b 269 153 315 94 294 121 l 265 158 b 144 245 239 190 180 245 b 6 134 62 245 10 143 b 1 114 3 125 1 118 b 7 107 1 108 4 107 z\"\n    }\n  },\n  'cssFontWeight': 'normal',\n  'ascender': 1903,\n  'underlinePosition': -125,\n  'cssFontStyle': 'normal',\n  'boundingBox': {\n    'yMin': -2065.375,\n    'xMin': -695.53125,\n    'yMax': 1901.578125,\n    'xMax': 1159.671875\n  },\n  'resolution': 1000,\n  'original_font_information': {\n    'postscript_name': 'Gonville-18',\n    'version_string': 'Version 0.1.8904 ',\n    'vendor_url': '',\n    'full_font_name': 'Gonville-18',\n    'font_family_name': 'Gonville-18',\n    'copyright': 'No copyright is claimed on this font file.',\n    'description': '',\n    'trademark': '',\n    'designer': '',\n    'designer_url': '',\n    'unique_font_identifier': 'FontForge 2.0 : Gonville-18 : 17-3-2010',\n    'license_url': '',\n    'license_description': '',\n    'manufacturer_name': '',\n    'font_sub_family_name': '18'\n  },\n  'descender': -2066,\n  'familyName': 'Gonville-18',\n  'lineHeight': 4093,\n  'underlineThickness': 50\n};\n","export const GonvilleMetrics = {\n  name: 'Gonville',\n  smufl: false,\n  stave: {\n    padding: 12,\n  },\n\n  clef: {\n    'default': {\n      point: 40,\n      width: 26\n    },\n    'small': {\n      point: 32,\n      width: 20,\n    },\n\n    annotations: {\n      '8va': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 20,\n          treble: {\n            line: -1.2,\n            shiftX: 11,\n          },\n        },\n        small: {\n          point: 18,\n          treble: {\n            line: -0.4,\n            shiftX: 8,\n          },\n        }\n      },\n      '8vb': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 20,\n          treble: {\n            line: 6.3,\n            shiftX: 10,\n          },\n          bass: {\n            line: 4,\n            shiftX: 1,\n          }\n        },\n        small: {\n          point: 18,\n          treble: {\n            line: 5.8,\n            shiftX: 6,\n          },\n          bass: {\n            line: 3.5,\n            shiftX: 0.5,\n          }\n        }\n      }\n    },\n\n    // May not need these anymore\n    lineCount: {\n      '8': { point: 55, shiftY: 14 },\n      '7': { point: 47, shiftY: 8 },\n      '6': { point: 40, shiftY: 1 },\n      '5': { point: 30, shiftY: -6 },\n      '4': { point: 23, shiftY: -12 },\n    }\n  },\n\n  pedalMarking: {\n    up: {\n      point: 40\n    },\n    down: {\n      point: 40\n    }\n  },\n\n  tremolo: {\n    default: {\n      point: 40,\n      spacing: 4,\n      offsetYStemUp: -9,\n      offsetYStemDown: -21,\n      offsetXStemUp: 6,\n      offsetXStemDown: -2,\n    },\n    grace: {\n      point: 30,\n      spacing: 4,\n      offsetYStemUp: -9,\n      offsetYStemDown: -21,\n      offsetXStemUp: 6,\n      offsetXStemDown: -2,\n    }\n  },\n\n  // These are for numeric digits, such as in time signatures\n  digits: {\n    point: 40,\n    tupletPoint: 28,\n  },\n\n  stem: {\n    // These are stem (Y) offsets to the note heads. To shift the\n    // noteheads (x-position) themselves, see glyphs.notehead.custom.\n    noteHead: {\n      noteheadTriangleUpHalf: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpBlack: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpWhole: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXHalf: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXBlack: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXWhole: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadBlack: {\n        offsetYBaseStemDown: 2,\n      },\n      noteheadSquareWhite: {\n        offsetYBaseStemDown: -5,\n        offsetYBaseStemUp: 5,\n      }\n    }\n  },\n\n  glyphs: {\n    textNote: {\n      point: 40,\n      default: {\n      },\n      ornamentTrill: {\n        shiftX: -5,\n        shiftY: 4,\n      }\n    },\n    noteHead: {\n      custom: {\n        'noteheadDiamondWholeStemUp': {\n          shiftX: -6,\n        },\n        'noteheadCircleXStemUp': {\n          shiftX: -1.5,\n        },\n        'noteheadXWholeStemUp': {\n          shiftX: -5,\n        },\n        'noteheadTriangleUpWholeStemUp': {\n          shiftX: -6,\n        },\n      },\n    },\n    chordSymbol: {\n      global: {\n        superscriptOffset: -400,\n        subscriptOffset: 300,\n        kerningOffset: -250,\n        lowerKerningText:  ['D', 'F', 'P', 'T', 'V', 'Y'],\n        upperKerningText:  ['A', 'L'],\n        spacing: 100,\n        superSubRatio: 0.66\n      },\n      csymDiminished: {\n        scale: 1,\n        leftSideBearing: 0,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymHalfDiminished: {\n        scale: 1,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymAugmented: {\n        scale: 1,\n        leftSideBearing: 0,\n        advanceWidth: 530,\n        yOffset: 0\n      },\n      csymParensLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 155,\n        yOffset: 250\n      },\n      csymParensRightTall: {\n        scale: 0.8,\n        leftSideBearing: -40,\n        advanceWidth: 189,\n        yOffset: 250\n      },\n      csymBracketLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 328,\n        yOffset: 0\n      },\n      csymBracketRightTall: {\n        scale: 0.8,\n        leftSideBearing: 1,\n        advanceWidth: 600,\n        yOffset: 0\n      },\n      csymParensLeftVeryTall: {\n        scale: 0.9,\n        leftSideBearing: 0,\n        advanceWidth: 101,\n        yOffset: 350\n      },\n      csymParensRightVeryTall: {\n        scale: 0.9,\n        leftSideBearing: 50,\n        advanceWidth: 111,\n        yOffset: 350\n      },\n      csymDiagonalArrangementSlash: {\n        scale: 0.6,\n        leftSideBearing: -1,\n        advanceWidth: 990,\n        yOffset: 0\n      },\n      csymMinor: {\n        scale: 1,\n        leftSideBearing: 0,\n        advanceWidth: 482,\n        yOffset: 0\n      },\n      csymMajorSeventh: {\n        scale: 1,\n        leftSideBearing: 0,\n        yOffset: 0,\n        advanceWidth: 600\n      },\n      accidentalSharp: {\n        scale: 0.75,\n        leftSideBearing: 40,\n        advanceWidth: 250,\n        yOffset: -402\n      },\n      accidentalFlat: {\n        scale: 0.95,\n        leftSideBearing: -50,\n        advanceWidth: 208,\n        yOffset: -184\n      }\n    },\n    jazzOrnaments: {\n      brassScoop: {\n        scale: 1.0,\n        xOffset: -12,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 10\n      },\n      brassDoitMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallLipShort: {\n        scale: 1.0,\n        xOffset: 17,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassLiftMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 5,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallRoughMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 28,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassBend: {\n        scale: 1.0,\n        xOffset: 2,\n        yOffset: -8,\n        stemUpYOffset: 24,\n        reportedWidth: 5\n      },\n      brassMuteClosed: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -9,\n        stemUpYOffset: 24,\n        reportedWidth: 5\n      },\n      brassMuteOpen: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -7,\n        stemUpYOffset: 25,\n        reportedWidth: 5\n      },\n      brassFlip: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassJazzTurn: {\n        scale: 1.0,\n        xOffset: 6,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassSmear: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n    }\n  }\n};\n","export const PetalumaScriptMetrics = {\n  name: 'PetalumaScript',\n  smufl: false,\n  spacing:50,\n  \"glyphs\": {\n    \" \": {\n      \"x_min\": 0,\n      \"x_max\": 250,\n      \"y_min\": 0,\n      \"y_max\": 500,\n      \"ha\": 500,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 250\n    },\"0\": {\n      \"x_min\": 33,\n      \"x_max\": 534,\n      \"y_min\": -13,\n      \"y_max\": 751,\n      \"ha\": 764,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 570\n    },\n    \"1\": {\n      \"x_min\": 48,\n      \"x_max\": 235,\n      \"y_min\": -17,\n      \"y_max\": 734,\n      \"ha\": 751,\n      \"leftSideBearing\": 48,\n      \"advanceWidth\": 286\n    },\n    \"2\": {\n      \"x_min\": 56,\n      \"x_max\": 571,\n      \"y_min\": -19,\n      \"y_max\": 741,\n      \"ha\": 760,\n      \"leftSideBearing\": 56,\n      \"advanceWidth\": 626\n    },\n    \"3\": {\n      \"x_min\": 50,\n      \"x_max\": 528,\n      \"y_min\": -7,\n      \"y_max\": 731,\n      \"ha\": 738,\n      \"leftSideBearing\": 50,\n      \"advanceWidth\": 589\n    },\n    \"4\": {\n      \"x_min\": 38,\n      \"x_max\": 564,\n      \"y_min\": -13,\n      \"y_max\": 743,\n      \"ha\": 756,\n      \"leftSideBearing\": 38,\n      \"advanceWidth\": 614\n    },\n    \"5\": {\n      \"x_min\": 42,\n      \"x_max\": 601,\n      \"y_min\": -34,\n      \"y_max\": 743,\n      \"ha\": 777,\n      \"leftSideBearing\": 42,\n      \"advanceWidth\": 648\n    },\n    \"6\": {\n      \"x_min\": 47,\n      \"x_max\": 606,\n      \"y_min\": -16,\n      \"y_max\": 743,\n      \"ha\": 759,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 667\n    },\n    \"7\": {\n      \"x_min\": 47,\n      \"x_max\": 567,\n      \"y_min\": 5,\n      \"y_max\": 739,\n      \"ha\": 734,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 615\n    },\n    \"8\": {\n      \"x_min\": 40,\n      \"x_max\": 541,\n      \"y_min\": -15,\n      \"y_max\": 752,\n      \"ha\": 767,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 585\n    },\n    \"9\": {\n      \"x_min\": 40,\n      \"x_max\": 537,\n      \"y_min\": -52,\n      \"y_max\": 736,\n      \"ha\": 788,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 592\n    },\n    \"!\": {\n      \"x_min\": 49,\n      \"x_max\": 180,\n      \"y_min\": -7,\n      \"y_max\": 761,\n      \"ha\": 768,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 230\n    },\n    \"\\\"\": {\n      \"x_min\": 39,\n      \"x_max\": 304,\n      \"y_min\": 596,\n      \"y_max\": 804,\n      \"ha\": 208,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 353\n    },\n    \"#\": {\n      \"x_min\": 33,\n      \"x_max\": 599,\n      \"y_min\": -8,\n      \"y_max\": 765,\n      \"ha\": 773,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 648\n    },\n    \"$\": {\n      \"x_min\": 53,\n      \"x_max\": 495,\n      \"y_min\": -111,\n      \"y_max\": 823,\n      \"ha\": 934,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 560\n    },\n    \"%\": {\n      \"x_min\": 35,\n      \"x_max\": 656,\n      \"y_min\": -128,\n      \"y_max\": 808,\n      \"ha\": 936,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 711\n    },\n    \"&\": {\n      \"x_min\": 53,\n      \"x_max\": 441,\n      \"y_min\": -3,\n      \"y_max\": 753,\n      \"ha\": 756,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 500\n    },\n    \"'\": {\n      \"x_min\": 43,\n      \"x_max\": 161,\n      \"y_min\": 590,\n      \"y_max\": 811,\n      \"ha\": 221,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 217\n    },\n    \"(\": {\n      \"x_min\": 41,\n      \"x_max\": 311,\n      \"y_min\": -36,\n      \"y_max\": 845,\n      \"ha\": 881,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 308\n    },\n    \")\": {\n      \"x_min\": -8,\n      \"x_max\": 257,\n      \"y_min\": -21,\n      \"y_max\": 852,\n      \"ha\": 873,\n      \"leftSideBearing\": -8,\n      \"advanceWidth\": 280\n    },\n    \"*\": {\n      \"x_min\": 59,\n      \"x_max\": 539,\n      \"y_min\": 175,\n      \"y_max\": 589,\n      \"ha\": 414,\n      \"leftSideBearing\": 59,\n      \"advanceWidth\": 601\n    },\n    \"+\": {\n      \"x_min\": 33,\n      \"x_max\": 361,\n      \"y_min\": 180,\n      \"y_max\": 587,\n      \"ha\": 407,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 400\n    },\n    \",\": {\n      \"x_min\": 15,\n      \"x_max\": 176,\n      \"y_min\": -129,\n      \"y_max\": 92,\n      \"ha\": 221,\n      \"leftSideBearing\": 15,\n      \"advanceWidth\": 205\n    },\n    \"-\": {\n      \"x_min\": 40,\n      \"x_max\": 380,\n      \"y_min\": 317,\n      \"y_max\": 452,\n      \"ha\": 135,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 422\n    },\n    \".\": {\n      \"x_min\": 48,\n      \"x_max\": 185,\n      \"y_min\": -56,\n      \"y_max\": 84,\n      \"ha\": 140,\n      \"leftSideBearing\": 48,\n      \"advanceWidth\": 227\n    },\n    \"/\": {\n      \"x_min\": -58,\n      \"x_max\": 654,\n      \"y_min\": -122,\n      \"y_max\": 844,\n      \"ha\": 966,\n      \"leftSideBearing\": -58,\n      \"advanceWidth\": 626\n    },\n    \":\": {\n      \"x_min\": 65,\n      \"x_max\": 225,\n      \"y_min\": 97,\n      \"y_max\": 536,\n      \"ha\": 439,\n      \"leftSideBearing\": 65,\n      \"advanceWidth\": 302\n    },\n    \";\": {\n      \"x_min\": 13,\n      \"x_max\": 295,\n      \"y_min\": -139,\n      \"y_max\": 536,\n      \"ha\": 675,\n      \"leftSideBearing\": 13,\n      \"advanceWidth\": 334\n    },\n    \"<\": {\n      \"x_min\": 28,\n      \"x_max\": 438,\n      \"y_min\": -1,\n      \"y_max\": 607,\n      \"ha\": 608,\n      \"leftSideBearing\": 28,\n      \"advanceWidth\": 475\n    },\n    \"=\": {\n      \"x_min\": 40,\n      \"x_max\": 383,\n      \"y_min\": 199.9598640852289,\n      \"y_max\": 541,\n      \"ha\": 341.0401359147711,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 422\n    },\n    \">\": {\n      \"x_min\": 35,\n      \"x_max\": 421,\n      \"y_min\": 28,\n      \"y_max\": 632,\n      \"ha\": 604,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 466\n    },\n    \"?\": {\n      \"x_min\": 45,\n      \"x_max\": 548,\n      \"y_min\": -17,\n      \"y_max\": 767,\n      \"ha\": 784,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 592\n    },\n    \"@\": {\n      \"x_min\": 51,\n      \"x_max\": 730,\n      \"y_min\": -78,\n      \"y_max\": 753,\n      \"ha\": 831,\n      \"leftSideBearing\": 51,\n      \"advanceWidth\": 781\n    },\n    \"A\": {\n      \"x_min\": 37,\n      \"x_max\": 554,\n      \"y_min\": -4,\n      \"y_max\": 746,\n      \"ha\": 750,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 617\n    },\n    \"B\": {\n      \"x_min\": 37,\n      \"x_max\": 532,\n      \"y_min\": 3,\n      \"y_max\": 783,\n      \"ha\": 780,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 579\n    },\n    \"C\": {\n      \"x_min\": 37,\n      \"x_max\": 583,\n      \"y_min\": -3,\n      \"y_max\": 775,\n      \"ha\": 778,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 623\n    },\n    \"D\": {\n      \"x_min\": 50,\n      \"x_max\": 530,\n      \"y_min\": -15,\n      \"y_max\": 749,\n      \"ha\": 764,\n      \"leftSideBearing\": 50,\n      \"advanceWidth\": 579\n    },\n    \"E\": {\n      \"x_min\": 45,\n      \"x_max\": 531,\n      \"y_min\": -1,\n      \"y_max\": 743,\n      \"ha\": 744,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 585\n    },\n    \"F\": {\n      \"x_min\": 45,\n      \"x_max\": 459,\n      \"y_min\": 23,\n      \"y_max\": 727,\n      \"ha\": 704,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 510\n    },\n    \"G\": {\n      \"x_min\": 31,\n      \"x_max\": 577,\n      \"y_min\": -8,\n      \"y_max\": 733,\n      \"ha\": 741,\n      \"leftSideBearing\": 31,\n      \"advanceWidth\": 611\n    },\n    \"H\": {\n      \"x_min\": 37,\n      \"x_max\": 493,\n      \"y_min\": -22,\n      \"y_max\": 758,\n      \"ha\": 780,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 535\n    },\n    \"I\": {\n      \"x_min\": 47,\n      \"x_max\": 501,\n      \"y_min\": -3,\n      \"y_max\": 731,\n      \"ha\": 734,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 541\n    },\n    \"J\": {\n      \"x_min\": 33,\n      \"x_max\": 531,\n      \"y_min\": -23,\n      \"y_max\": 725,\n      \"ha\": 748,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 573\n    },\n    \"K\": {\n      \"x_min\": 43,\n      \"x_max\": 505,\n      \"y_min\": -10,\n      \"y_max\": 740,\n      \"ha\": 750,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 560\n    },\n    \"L\": {\n      \"x_min\": 49,\n      \"x_max\": 457,\n      \"y_min\": -2,\n      \"y_max\": 746,\n      \"ha\": 748,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 510\n    },\n    \"M\": {\n      \"x_min\": 35,\n      \"x_max\": 699,\n      \"y_min\": 1,\n      \"y_max\": 744,\n      \"ha\": 743,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 743\n    },\n    \"N\": {\n      \"x_min\": 34,\n      \"x_max\": 533,\n      \"y_min\": -17,\n      \"y_max\": 761,\n      \"ha\": 778,\n      \"leftSideBearing\": 34,\n      \"advanceWidth\": 579\n    },\n    \"O\": {\n      \"x_min\": 41,\n      \"x_max\": 608,\n      \"y_min\": -5,\n      \"y_max\": 735,\n      \"ha\": 740,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 667\n    },\n    \"P\": {\n      \"x_min\": 53,\n      \"x_max\": 451,\n      \"y_min\": -18,\n      \"y_max\": 735,\n      \"ha\": 753,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 497\n    },\n    \"Q\": {\n      \"x_min\": 40,\n      \"x_max\": 599,\n      \"y_min\": -67,\n      \"y_max\": 744,\n      \"ha\": 811,\n      \"leftSideBearing\": 40,\n      \"advanceWidth\": 648\n    },\n    \"R\": {\n      \"x_min\": 39,\n      \"x_max\": 487,\n      \"y_min\": 16,\n      \"y_max\": 735,\n      \"ha\": 719,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 535\n    },\n    \"S\": {\n      \"x_min\": 35,\n      \"x_max\": 552,\n      \"y_min\": -47,\n      \"y_max\": 708,\n      \"ha\": 755,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 604\n    },\n    \"T\": {\n      \"x_min\": 26,\n      \"x_max\": 656,\n      \"y_min\": -13,\n      \"y_max\": 718,\n      \"ha\": 731,\n      \"leftSideBearing\": 26,\n      \"advanceWidth\": 705\n    },\n    \"U\": {\n      \"x_min\": 41,\n      \"x_max\": 518,\n      \"y_min\": -20,\n      \"y_max\": 748,\n      \"ha\": 768,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 567\n    },\n    \"V\": {\n      \"x_min\": 47,\n      \"x_max\": 509,\n      \"y_min\": -26,\n      \"y_max\": 744,\n      \"ha\": 770,\n      \"leftSideBearing\": 47,\n      \"advanceWidth\": 567\n    },\n    \"W\": {\n      \"x_min\": 44,\n      \"x_max\": 789,\n      \"y_min\": -35,\n      \"y_max\": 720,\n      \"ha\": 755,\n      \"leftSideBearing\": 44,\n      \"advanceWidth\": 833\n    },\n    \"X\": {\n      \"x_min\": 63,\n      \"x_max\": 635,\n      \"y_min\": -10,\n      \"y_max\": 745,\n      \"ha\": 755,\n      \"leftSideBearing\": 63,\n      \"advanceWidth\": 680\n    },\n    \"Y\": {\n      \"x_min\": 43,\n      \"x_max\": 503,\n      \"y_min\": -21,\n      \"y_max\": 734,\n      \"ha\": 755,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 541\n    },\n    \"Z\": {\n      \"x_min\": 42,\n      \"x_max\": 584,\n      \"y_min\": -10,\n      \"y_max\": 739,\n      \"ha\": 749,\n      \"leftSideBearing\": 42,\n      \"advanceWidth\": 629\n    },\n    \"[\": {\n      \"x_min\": 46,\n      \"x_max\": 346,\n      \"y_min\": -150,\n      \"y_max\": 884,\n      \"ha\": 1034,\n      \"leftSideBearing\": 46,\n      \"advanceWidth\": 291\n    },\n    \"\\\\\": {\n      \"x_min\": 20,\n      \"x_max\": 616,\n      \"y_min\": -100,\n      \"y_max\": 797,\n      \"ha\": 897,\n      \"leftSideBearing\": 20,\n      \"advanceWidth\": 645\n    },\n    \"]\": {\n      \"x_min\": -76,\n      \"x_max\": 226,\n      \"y_min\": -150,\n      \"y_max\": 881,\n      \"ha\": 1031,\n      \"leftSideBearing\": -76,\n      \"advanceWidth\": 297\n    },\n    \"^\": {\n      \"x_min\": 43,\n      \"x_max\": 437,\n      \"y_min\": 517,\n      \"y_max\": 812,\n      \"ha\": 295,\n      \"leftSideBearing\": 43,\n      \"advanceWidth\": 478\n    },\n    \"_\": {\n      \"x_min\": 29,\n      \"x_max\": 563,\n      \"y_min\": -110,\n      \"y_max\": -1,\n      \"ha\": 109,\n      \"leftSideBearing\": 29,\n      \"advanceWidth\": 598\n    },\n    \"`\": {\n      \"x_min\": 54,\n      \"x_max\": 321,\n      \"y_min\": 540,\n      \"y_max\": 747,\n      \"ha\": 207,\n      \"leftSideBearing\": 54,\n      \"advanceWidth\": 368\n    },\n    \"a\": {\n      \"x_min\": 20,\n      \"x_max\": 447,\n      \"y_min\": -17,\n      \"y_max\": 495,\n      \"ha\": 512,\n      \"leftSideBearing\": 20,\n      \"advanceWidth\": 494\n    },\n    \"b\": {\n      \"x_min\": 37,\n      \"x_max\": 466,\n      \"y_min\": -27,\n      \"y_max\": 770,\n      \"ha\": 797,\n      \"leftSideBearing\": 37,\n      \"advanceWidth\": 510\n    },\n    \"c\": {\n      \"x_min\": 35,\n      \"x_max\": 456,\n      \"y_min\": -9,\n      \"y_max\": 507,\n      \"ha\": 516,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 460\n    },\n    \"d\": {\n      \"x_min\": 45,\n      \"x_max\": 520,\n      \"y_min\": -15,\n      \"y_max\": 764,\n      \"ha\": 779,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 560\n    },\n    \"e\": {\n      \"x_min\": 33,\n      \"x_max\": 370,\n      \"y_min\": -5,\n      \"y_max\": 501,\n      \"ha\": 506,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 397\n    },\n    \"f\": {\n      \"x_min\": 35,\n      \"x_max\": 411,\n      \"y_min\": -13,\n      \"y_max\": 695,\n      \"ha\": 708,\n      \"leftSideBearing\": 35,\n      \"advanceWidth\": 453\n    },\n    \"g\": {\n      \"x_min\": 33,\n      \"x_max\": 551,\n      \"y_min\": -257,\n      \"y_max\": 505,\n      \"ha\": 762,\n      \"leftSideBearing\": 33,\n      \"advanceWidth\": 611\n    },\n    \"h\": {\n      \"x_min\": 32,\n      \"x_max\": 458,\n      \"y_min\": -29,\n      \"y_max\": 743,\n      \"ha\": 772,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 491\n    },\n    \"i\": {\n      \"x_min\": 45,\n      \"x_max\": 167,\n      \"y_min\": -13,\n      \"y_max\": 631,\n      \"ha\": 644,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 220\n    },\n    \"j\": {\n      \"x_min\": -127,\n      \"x_max\": 261,\n      \"y_min\": -231,\n      \"y_max\": 601,\n      \"ha\": 832,\n      \"leftSideBearing\": -127,\n      \"advanceWidth\": 308\n    },\n    \"k\": {\n      \"x_min\": 39,\n      \"x_max\": 443,\n      \"y_min\": -3,\n      \"y_max\": 700,\n      \"ha\": 703,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 497\n    },\n    \"l\": {\n      \"x_min\": 58,\n      \"x_max\": 168,\n      \"y_min\": -8,\n      \"y_max\": 686,\n      \"ha\": 694,\n      \"leftSideBearing\": 58,\n      \"advanceWidth\": 227\n    },\n    \"m\": {\n      \"x_min\": 39,\n      \"x_max\": 688,\n      \"y_min\": -14,\n      \"y_max\": 501,\n      \"ha\": 515,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 718\n    },\n    \"n\": {\n      \"x_min\": 45,\n      \"x_max\": 491,\n      \"y_min\": -32,\n      \"y_max\": 512,\n      \"ha\": 544,\n      \"leftSideBearing\": 45,\n      \"advanceWidth\": 541\n    },\n    \"o\": {\n      \"x_min\": 41,\n      \"x_max\": 424,\n      \"y_min\": -12,\n      \"y_max\": 493,\n      \"ha\": 505,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 447\n    },\n    \"p\": {\n      \"x_min\": 25,\n      \"x_max\": 529,\n      \"y_min\": -260,\n      \"y_max\": 500,\n      \"ha\": 760,\n      \"leftSideBearing\": 25,\n      \"advanceWidth\": 573\n    },\n    \"q\": {\n      \"x_min\": 53,\n      \"x_max\": 603,\n      \"y_min\": -235,\n      \"y_max\": 514,\n      \"ha\": 749,\n      \"leftSideBearing\": 53,\n      \"advanceWidth\": 623\n    },\n    \"r\": {\n      \"x_min\": 32,\n      \"x_max\": 407,\n      \"y_min\": -7,\n      \"y_max\": 492,\n      \"ha\": 499,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 460\n    },\n    \"s\": {\n      \"x_min\": 49,\n      \"x_max\": 416,\n      \"y_min\": -12,\n      \"y_max\": 519,\n      \"ha\": 531,\n      \"leftSideBearing\": 49,\n      \"advanceWidth\": 460\n    },\n    \"t\": {\n      \"x_min\": 32,\n      \"x_max\": 442,\n      \"y_min\": -5,\n      \"y_max\": 684,\n      \"ha\": 689,\n      \"leftSideBearing\": 32,\n      \"advanceWidth\": 469\n    },\n    \"u\": {\n      \"x_min\": 41,\n      \"x_max\": 487,\n      \"y_min\": -5,\n      \"y_max\": 507,\n      \"ha\": 512,\n      \"leftSideBearing\": 41,\n      \"advanceWidth\": 510\n    },\n    \"v\": {\n      \"x_min\": 16,\n      \"x_max\": 441,\n      \"y_min\": -20,\n      \"y_max\": 542,\n      \"ha\": 562,\n      \"leftSideBearing\": 16,\n      \"advanceWidth\": 456\n    },\n    \"w\": {\n      \"x_min\": 39,\n      \"x_max\": 639,\n      \"y_min\": -22,\n      \"y_max\": 505,\n      \"ha\": 527,\n      \"leftSideBearing\": 39,\n      \"advanceWidth\": 661\n    },\n    \"x\": {\n      \"x_min\": 15,\n      \"x_max\": 505,\n      \"y_min\": -39,\n      \"y_max\": 539,\n      \"ha\": 578,\n      \"leftSideBearing\": 15,\n      \"advanceWidth\": 541\n    },\n    \"y\": {\n      \"x_min\": -98,\n      \"x_max\": 501,\n      \"y_min\": -242,\n      \"y_max\": 511,\n      \"ha\": 753,\n      \"leftSideBearing\": -98,\n      \"advanceWidth\": 548\n    },\n    \"z\": {\n      \"x_min\": 27,\n      \"x_max\": 479,\n      \"y_min\": -3,\n      \"y_max\": 494,\n      \"ha\": 497,\n      \"leftSideBearing\": 27,\n      \"advanceWidth\": 494\n    },\n    \"{\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"|\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"}\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    },\n    \"~\": {\n      \"x_min\": 0,\n      \"x_max\": 0,\n      \"y_min\": 0,\n      \"y_max\": 0,\n      \"ha\": 0,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 308\n    }\n\n  },\n  \"fontFamily\": \"Petaluma Script\",\n  \"resolution\": 1000,\n  \"generatedOn\": \"2020-06-14T18:33:25.407Z\"\n};\n","export const PetalumaFont = {\n  \"glyphs\": {\n    \"bracketTop\": {\n      \"x_min\": 0,\n      \"x_max\": 508,\n      \"y_min\": 0,\n      \"y_max\": 370,\n      \"ha\": 370,\n      \"o\": \"m 22 0 b 122 0 55 1 89 0 l 157 0 b 713 376 425 0 622 137 b 732 467 724 406 732 436 b 726 514 732 482 730 498 b 711 533 723 528 719 533 b 693 526 707 533 700 530 b 674 498 683 520 678 508 b 635 406 662 467 652 435 b 310 164 560 281 458 193 b 154 151 258 154 206 151 b 39 154 117 151 78 154 b 1 120 17 154 4 145 b 0 84 0 108 0 96 b 0 20 0 63 1 40 b 22 0 0 4 7 0 z\"\n    },\n    \"bracketBottom\": {\n      \"x_min\": 0,\n      \"x_max\": 496,\n      \"y_min\": -393,\n      \"y_max\": 0,\n      \"ha\": 393,\n      \"o\": \"m 696 -566 b 711 -539 713 -566 708 -549 b 714 -521 713 -533 714 -527 b 713 -508 714 -517 713 -513 b 661 -327 706 -445 688 -384 b 392 -42 603 -203 513 -109 b 206 0 331 -7 266 0 b 160 -1 190 0 174 -1 b 26 -1 107 -1 66 -3 b 0 -19 12 -1 0 -4 l 0 -23 b 3 -50 1 -32 3 -42 b 1 -86 3 -62 1 -73 b 4 -118 1 -96 1 -108 b 45 -151 10 -145 23 -154 b 180 -143 89 -144 135 -145 b 621 -419 392 -135 523 -236 b 662 -539 641 -456 655 -497 b 696 -566 667 -557 680 -566 z\"\n    },\n    \"barlineTick\": {\n      \"x_min\": 0,\n      \"x_max\": 56.036101509664164,\n      \"y_min\": 876.905249806889,\n      \"y_max\": 1121.5430338167064,\n      \"ha\": 244.63778400981744,\n      \"o\": \"m 42 1263 b 66 1287 62 1261 66 1272 b 81 1583 65 1387 72 1485 b 35 1614 82 1610 53 1610 b 14 1591 17 1619 16 1604 b 0 1408 7 1525 0 1459 l 0 1292 b 42 1263 1 1263 23 1266 z\"\n    },\n    \"breathMarkTick\": {\n      \"x_min\": 0,\n      \"x_max\": 568,\n      \"y_min\": 0,\n      \"y_max\": 621,\n      \"ha\": 621,\n      \"o\": \"m 258 0 b 278 39 276 0 274 24 b 279 56 279 45 279 50 l 279 73 b 278 117 279 88 278 102 b 281 148 278 127 279 138 b 536 600 312 330 387 487 b 744 719 600 651 670 690 b 815 779 775 730 808 740 b 818 824 818 793 818 808 b 815 868 818 838 818 852 b 796 894 814 881 808 894 b 779 888 791 894 786 893 b 719 864 760 878 739 871 b 372 602 580 806 459 724 b 229 252 298 498 251 383 b 220 268 225 262 222 264 b 209 302 217 279 213 291 b 75 527 181 387 143 467 b 16 563 58 543 39 573 b 0 539 3 557 0 549 b 12 492 0 524 9 507 b 56 400 19 459 22 425 b 163 269 104 367 138 323 b 238 36 197 194 216 115 b 258 0 242 22 243 0 z\"\n    },\n    \"segno\": {\n      \"x_min\": 0,\n      \"x_max\": 798,\n      \"y_min\": -65,\n      \"y_max\": 806,\n      \"ha\": 871,\n      \"o\": \"m 16 -94 b 66 -69 39 -92 53 -85 b 177 59 102 -26 138 17 b 543 456 298 192 420 324 b 726 300 615 420 680 373 b 753 217 744 271 753 243 b 655 112 753 170 719 131 b 599 104 636 107 618 104 b 461 173 544 104 495 128 b 432 190 454 183 444 190 b 409 179 425 190 418 187 b 359 118 390 160 373 141 b 341 72 347 101 341 86 b 373 24 341 56 351 40 b 409 6 384 17 396 10 b 550 -13 454 -12 501 -14 b 599 -6 566 -12 583 -10 b 864 213 720 27 806 104 b 886 300 878 242 886 271 b 857 395 886 331 877 363 b 799 467 840 420 821 445 b 648 572 755 513 704 546 b 1110 1083 802 743 955 914 b 1140 1129 1123 1097 1136 1110 b 1149 1148 1142 1135 1149 1142 b 1145 1153 1149 1149 1148 1152 b 1123 1161 1139 1158 1130 1161 b 1109 1156 1119 1161 1113 1159 b 1089 1138 1102 1151 1094 1145 b 946 988 1040 1089 989 1041 b 595 602 834 855 711 732 l 590 598 l 549 615 b 432 793 462 647 432 723 b 534 888 432 851 474 888 b 671 834 588 888 631 864 b 710 818 684 824 696 818 b 724 821 714 818 719 819 b 809 883 757 834 788 852 b 816 901 814 890 816 896 b 802 923 816 910 812 916 b 706 984 770 945 742 971 b 593 1011 668 998 631 1011 b 516 991 567 1011 541 1005 b 333 799 433 949 380 876 b 302 693 312 765 302 729 b 330 589 302 658 311 624 b 469 488 360 533 415 511 b 485 482 475 487 480 485 b 266 249 412 405 338 327 b 121 88 217 196 170 141 b 9 -65 78 40 37 -7 b 0 -85 4 -72 0 -79 b 16 -94 0 -91 4 -94 z m 251 350 b 363 436 285 348 353 403 b 354 456 366 448 360 452 b 271 518 327 477 298 497 b 243 528 261 526 252 528 b 210 513 232 528 222 523 b 157 454 190 494 176 472 b 141 428 147 444 141 436 b 158 406 141 420 147 413 b 216 361 180 393 197 376 b 245 350 225 356 235 350 b 251 350 246 350 249 350 z m 861 536 b 927 575 890 539 909 557 b 965 628 952 598 965 613 b 926 680 965 644 952 658 b 865 713 900 701 883 713 b 805 667 845 713 828 698 b 768 611 791 649 770 631 b 812 564 766 589 798 582 b 861 536 824 550 840 537 z\"\n    },\n    \"coda\": {\n      \"x_min\": 0,\n      \"x_max\": 1380,\n      \"y_min\": -196,\n      \"y_max\": 1037,\n      \"ha\": 1233,\n      \"o\": \"m 1028 -282 b 1057 -245 1045 -282 1053 -261 b 1060 -203 1060 -232 1060 -217 b 1063 9 1060 -132 1061 -62 b 1390 194 1192 22 1303 81 b 1531 543 1467 298 1512 415 b 1532 556 1531 547 1532 552 b 1904 559 1656 557 1780 559 b 1950 582 1920 559 1941 569 b 1987 674 1970 609 1987 638 b 1984 698 1987 681 1986 690 b 1950 700 1973 698 1961 700 l 1941 700 l 1545 696 b 1535 776 1545 723 1541 749 b 1103 1113 1477 996 1326 1107 b 1080 1115 1096 1115 1087 1115 b 1081 1322 1080 1184 1080 1253 b 1079 1467 1083 1371 1081 1418 b 1061 1493 1079 1476 1080 1493 l 1060 1493 b 1028 1467 1044 1490 1031 1485 b 1020 1403 1025 1446 1020 1424 b 1017 1110 1020 1305 1018 1208 l 962 1106 b 569 914 808 1087 671 1035 b 451 683 510 844 472 766 l 161 678 b 118 680 148 678 132 680 b 79 670 101 680 86 678 b 0 544 48 636 29 592 l 37 544 l 429 549 b 428 518 428 539 428 528 b 488 285 428 435 458 360 b 681 81 526 192 593 124 b 946 9 763 40 854 19 b 1008 6 966 7 988 6 b 1005 -137 1008 -42 1005 -89 b 1012 -243 1005 -173 1005 -209 b 1028 -282 1015 -258 1011 -282 z m 1008 180 b 660 264 886 181 770 212 b 524 471 570 305 524 374 b 528 524 524 488 526 505 l 533 549 b 792 552 619 550 706 550 b 1009 553 865 553 937 552 b 1008 180 1009 428 1008 288 z m 577 684 b 766 874 618 763 678 828 b 989 932 837 912 913 923 b 1015 933 998 932 1007 933 b 1014 822 1015 896 1014 860 b 1011 688 1012 791 1012 743 z m 1067 184 b 1071 553 1070 307 1068 429 b 1439 556 1194 553 1316 554 b 1437 554 1439 554 1437 554 b 1341 337 1413 478 1387 402 b 1119 192 1286 261 1211 212 b 1067 184 1102 189 1084 186 z m 1074 690 b 1079 935 1077 772 1077 852 b 1326 855 1166 932 1250 909 b 1446 694 1385 814 1426 759 b 1269 693 1387 694 1328 693 b 1074 690 1204 693 1139 691 z\"\n    },\n    \"gClef\": {\n      \"x_min\": 0,\n      \"x_max\": 664,\n      \"y_min\": -559,\n      \"y_max\": 1009,\n      \"ha\": 1568,\n      \"o\": \"m 343 -805 b 366 -801 350 -805 357 -804 b 409 -773 383 -795 397 -786 b 582 -328 528 -648 577 -497 b 583 -294 582 -315 583 -294 b 612 -279 583 -294 603 -282 b 747 -197 660 -256 706 -230 b 949 143 857 -109 920 10 b 956 206 955 164 956 186 b 791 384 956 297 906 363 b 704 393 762 390 733 393 b 498 336 632 393 563 374 b 481 325 490 331 481 325 l 444 465 b 442 485 442 472 442 485 b 609 880 442 485 589 746 b 619 996 616 919 619 958 b 613 1084 619 1027 618 1056 b 534 1387 599 1188 560 1286 b 482 1453 527 1417 517 1453 b 422 1407 456 1453 438 1428 b 305 1063 348 1305 312 1188 b 304 1002 304 1043 304 1022 b 338 654 304 886 323 769 b 343 629 338 645 341 636 b 144 356 278 537 206 451 b 23 144 101 288 53 220 b 0 20 7 107 0 63 b 82 -210 0 -69 30 -160 b 207 -288 112 -239 160 -271 b 410 -328 274 -312 340 -328 b 474 -324 431 -328 452 -327 l 491 -321 b 491 -341 491 -321 492 -334 b 402 -585 475 -428 454 -513 b 294 -668 374 -622 348 -664 b 271 -693 278 -670 271 -680 b 274 -708 271 -698 272 -703 b 302 -775 282 -730 292 -753 b 343 -805 311 -795 325 -805 z m 410 -160 b 311 -147 360 -160 311 -147 b 307 -98 311 -147 307 -127 b 314 -33 307 -79 308 -56 b 429 131 328 36 377 85 b 441 138 433 135 438 138 b 449 122 446 138 448 132 b 490 -131 462 37 484 -46 b 490 -153 491 -140 490 -153 b 410 -160 490 -153 452 -163 z m 252 -135 b 196 -121 232 -134 215 -127 b 117 -69 158 -108 127 -94 b 111 -32 112 -58 111 -45 b 117 19 111 -16 114 1 b 130 56 118 27 127 52 b 324 337 186 156 253 246 l 384 416 l 395 384 b 416 291 406 348 416 291 b 350 213 416 291 376 239 b 243 -42 278 143 243 55 b 251 -117 243 -66 246 -91 b 252 -135 252 -122 252 -127 z m 569 -131 l 563 -91 b 510 168 552 3 530 78 b 513 192 508 179 508 186 b 624 202 550 199 586 202 b 730 192 660 202 694 199 b 850 141 773 183 816 176 b 858 134 852 138 855 135 b 595 -121 801 19 716 -68 z m 400 717 b 382 922 389 786 382 854 b 481 1286 382 1047 408 1169 b 507 1125 498 1233 507 1179 b 500 1040 507 1097 504 1068 b 400 717 481 927 455 818 z\"\n    },\n    \"cClef\": {\n      \"x_min\": 0,\n      \"x_max\": 731,\n      \"y_min\": -543,\n      \"y_max\": 543,\n      \"ha\": 1086,\n      \"o\": \"m 615 -770 b 881 -684 710 -770 801 -739 b 1020 -395 986 -612 1020 -510 b 1017 -334 1020 -374 1018 -354 b 769 -62 1007 -209 896 -75 b 746 -60 762 -60 755 -60 b 639 -73 710 -60 675 -69 b 524 -109 598 -79 560 -92 b 528 -36 526 -85 528 -60 b 527 -4 528 -26 528 -14 b 528 39 527 10 528 24 b 526 99 528 59 527 79 b 592 94 549 95 570 94 b 648 99 611 94 629 95 b 912 157 744 94 844 117 b 1053 377 1009 215 1053 284 b 1050 425 1053 393 1053 409 b 914 665 1037 521 986 602 b 717 753 855 717 791 753 b 626 734 688 753 658 747 l 462 665 b 347 500 374 628 347 580 b 350 449 347 484 348 468 b 392 419 353 428 367 416 b 492 438 425 425 459 428 b 541 498 524 448 541 468 b 540 514 541 503 541 508 b 537 546 537 524 537 536 b 573 639 537 580 550 611 b 606 657 582 649 593 657 l 609 657 b 716 622 647 652 684 647 b 834 372 801 556 834 469 b 831 323 834 356 832 338 b 743 187 825 266 795 217 b 710 176 732 180 720 176 b 694 179 704 176 700 177 b 527 223 638 193 582 206 b 495 229 516 228 505 229 b 454 220 481 229 468 225 b 395 189 432 213 415 200 b 363 180 384 186 374 181 b 348 168 356 179 348 176 b 340 161 343 167 340 164 b 347 150 340 157 343 154 b 356 147 348 148 353 147 b 364 92 361 130 363 111 b 369 -37 367 49 369 6 b 363 -154 369 -76 367 -115 b 357 -236 360 -183 357 -210 b 376 -264 357 -253 361 -259 b 456 -289 402 -284 429 -289 b 521 -282 478 -289 500 -285 b 549 -255 537 -279 546 -271 b 598 -177 556 -225 577 -202 b 622 -164 605 -168 613 -164 b 636 -167 626 -164 631 -166 b 749 -225 678 -177 714 -199 b 848 -405 814 -276 848 -337 b 824 -507 848 -436 840 -471 b 657 -657 792 -582 730 -625 b 608 -668 638 -664 622 -668 b 534 -602 572 -668 547 -645 b 513 -575 530 -589 523 -575 b 507 -576 510 -575 508 -575 b 478 -582 497 -580 488 -582 b 405 -570 454 -582 428 -570 b 389 -572 399 -570 395 -570 l 363 -572 b 321 -575 348 -572 333 -569 l 321 631 b 323 662 323 641 323 652 b 315 716 323 681 321 698 b 304 736 314 723 317 736 l 302 736 b 281 716 294 734 285 729 b 275 665 276 700 275 683 l 275 382 b 276 99 275 288 275 193 b 279 -170 278 10 276 -81 b 284 -399 282 -246 284 -323 b 282 -629 284 -475 282 -553 b 289 -721 282 -660 289 -690 b 300 -736 289 -727 291 -736 b 312 -724 307 -736 310 -730 b 321 -667 323 -706 321 -687 l 321 -632 l 328 -644 l 340 -657 b 510 -757 386 -707 445 -740 b 615 -770 546 -766 580 -770 z m 131 -782 b 141 -755 138 -782 140 -773 b 147 -490 143 -667 145 -577 b 160 207 150 -258 153 -24 b 168 618 164 344 158 481 b 81 768 173 690 132 732 b 45 782 66 778 55 782 b 3 740 26 782 13 768 b 0 724 1 736 0 730 l 1 710 b 4 596 4 672 4 634 l 4 382 b 9 102 4 288 4 196 b 17 -301 13 -32 10 -166 l 17 -672 b 50 -736 17 -701 27 -720 b 109 -772 69 -749 91 -759 b 131 -782 120 -778 127 -782 z\"\n    },\n    \"fClef\": {\n      \"x_min\": 0,\n      \"x_max\": 776,\n      \"y_min\": -496,\n      \"y_max\": 216,\n      \"ha\": 712,\n      \"o\": \"m 402 -706 b 804 -405 592 -678 716 -566 b 876 -53 861 -298 874 -183 b 868 33 876 -32 873 1 b 560 311 845 217 723 311 b 524 310 549 311 536 311 b 131 134 373 297 239 242 b 17 -29 84 86 37 39 b 9 -89 12 -50 9 -71 b 112 -238 9 -154 43 -206 b 124 -243 117 -239 120 -242 b 186 -261 145 -255 166 -261 b 268 -228 215 -261 242 -249 b 351 -59 325 -181 351 -124 b 343 10 351 -36 348 -13 b 340 36 341 19 340 27 b 409 105 340 75 363 102 b 441 107 420 107 431 107 b 624 36 510 107 573 86 b 744 -200 688 -27 724 -109 b 747 -230 747 -210 747 -222 b 717 -323 747 -264 736 -292 b 608 -445 688 -370 654 -410 b 307 -541 518 -513 415 -541 b 213 -541 275 -541 245 -541 b 39 -521 154 -541 96 -539 b 0 -552 17 -514 0 -531 b 1 -564 0 -556 0 -560 b 17 -611 6 -580 10 -596 b 101 -694 35 -648 50 -684 b 288 -714 164 -707 225 -714 b 402 -706 325 -714 363 -711 z m 972 -281 b 1070 -148 1024 -279 1070 -210 b 1025 -105 1070 -105 1045 -112 b 989 -127 1004 -96 998 -114 b 949 -249 963 -164 963 -209 b 969 -281 943 -265 949 -281 b 972 -281 971 -281 971 -281 z m 1018 92 b 1080 118 1041 91 1068 96 b 1117 219 1099 150 1117 180 b 1113 252 1117 229 1116 240 b 1045 288 1102 297 1068 276 b 1017 262 1028 297 1024 274 b 984 124 989 220 996 170 b 1008 91 979 108 986 91 b 1018 92 1011 91 1015 92 z\"\n    },\n    \"unpitchedPercussionClef1\": {\n      \"x_min\": 0,\n      \"x_max\": 379.13761966945304,\n      \"y_min\": -250,\n      \"y_max\": 250,\n      \"ha\": 500,\n      \"o\": \"m 144 -341 b 207 -320 167 -341 189 -331 b 217 -301 215 -315 217 -308 b 210 -262 217 -289 210 -275 b 228 187 212 -112 209 37 b 228 287 228 220 229 253 b 174 353 228 336 222 343 b 120 359 157 357 138 359 b 48 357 96 359 72 356 b 17 323 29 357 19 344 b 7 120 16 255 9 187 b 6 -109 6 43 6 -33 l 6 -204 b 0 -251 6 -220 0 -235 b 3 -269 0 -256 0 -262 b 127 -340 24 -330 79 -328 b 144 -341 132 -341 138 -341 z m 481 -360 b 507 -357 491 -360 500 -360 b 546 -295 541 -346 547 -325 b 536 79 543 -170 540 -46 b 523 311 533 157 534 235 b 475 359 518 340 508 359 b 425 360 459 359 442 360 b 400 359 416 360 409 360 b 337 294 348 353 340 347 l 337 -73 b 336 -264 337 -137 337 -200 b 343 -294 336 -274 338 -284 b 481 -360 359 -330 431 -360 z\"\n    },\n    \"6stringTabClef\": {\n      \"x_min\": 0,\n      \"x_max\": 438,\n      \"y_min\": -768,\n      \"y_max\": 767,\n      \"ha\": 1535,\n      \"o\": \"m 114 -320 b 127 -304 120 -320 124 -315 b 171 -174 141 -261 158 -219 b 222 -135 179 -147 196 -137 b 426 -122 289 -131 359 -128 b 498 -164 462 -120 482 -127 b 628 -301 521 -226 575 -264 b 631 -288 631 -295 631 -291 b 628 -269 631 -281 629 -276 b 569 -134 616 -220 589 -179 b 408 225 514 -14 462 107 b 314 357 384 274 351 318 b 278 380 298 372 288 379 b 251 351 268 380 261 372 b 4 -209 156 171 75 -17 b 0 -228 1 -215 0 -222 b 19 -258 0 -240 7 -249 b 102 -314 45 -279 75 -294 b 114 -320 107 -318 111 -320 z m 154 -953 b 130 -933 135 -953 130 -948 l 130 -865 l 128 -865 b 135 -788 130 -838 124 -808 b 203 -769 145 -769 180 -776 b 259 -762 223 -765 242 -762 b 441 -852 330 -762 386 -805 b 449 -867 446 -858 449 -863 b 436 -884 449 -874 444 -878 b 318 -942 402 -914 363 -935 b 154 -953 264 -950 209 -953 z m 245 -1106 b 281 -1104 256 -1106 269 -1106 b 511 -888 400 -1094 511 -1035 b 454 -688 511 -814 504 -744 b 448 -678 449 -685 448 -681 b 454 -667 448 -675 449 -671 b 504 -497 503 -619 507 -559 b 324 -288 500 -383 436 -308 b 295 -287 314 -287 304 -287 b 282 -287 291 -287 287 -287 b 115 -330 223 -287 168 -307 b 94 -366 102 -336 94 -348 l 94 -370 b 96 -435 96 -392 96 -413 b 73 -858 89 -576 71 -717 b 78 -919 73 -878 78 -899 b 72 -950 78 -930 76 -940 b 63 -992 66 -965 63 -978 b 66 -1015 63 -999 65 -1008 b 173 -1104 84 -1106 84 -1106 b 245 -1106 197 -1104 220 -1104 z m 161 -622 b 147 -618 156 -622 151 -621 b 140 -600 141 -612 140 -606 b 144 -564 140 -589 144 -575 b 143 -554 144 -560 144 -557 l 143 -546 b 220 -451 144 -467 143 -465 b 278 -445 239 -446 259 -444 b 418 -497 328 -445 376 -461 b 429 -516 426 -504 429 -510 b 415 -533 429 -521 423 -527 b 219 -608 357 -579 287 -590 b 215 -609 217 -608 216 -609 b 161 -622 197 -609 177 -622 z m 425 6 b 360 20 403 17 382 20 b 274 14 331 20 302 14 l 246 14 l 340 206 b 425 6 369 137 395 75 z m 369 438 b 374 439 370 438 372 438 b 384 462 383 444 384 452 l 384 474 b 390 697 386 547 390 622 b 373 1002 390 799 390 901 l 533 1002 b 560 1001 541 1004 552 1001 b 573 1007 567 1001 572 1002 b 546 1050 579 1025 559 1038 b 536 1056 543 1053 539 1053 b 324 1104 472 1102 397 1104 b 72 1090 238 1104 154 1099 b 55 1093 66 1090 60 1092 b 37 1073 46 1093 37 1089 b 60 1045 37 1061 48 1051 b 203 1001 105 1022 151 1001 b 233 1004 213 1001 223 1002 b 246 1005 238 1004 243 1005 b 272 975 264 1005 272 996 b 272 965 272 972 272 969 b 258 596 264 842 265 719 b 315 474 253 540 272 504 l 343 455 b 369 438 351 448 357 438 z\"\n    },\n    \"timeSig0\": {\n      \"x_min\": 20,\n      \"x_max\": 513,\n      \"y_min\": -358.159536277652,\n      \"y_max\": 359,\n      \"ha\": 717.159536277652,\n      \"o\": \"m 341 -516 b 420 -510 367 -516 395 -514 b 675 -338 533 -494 622 -448 b 737 -92 716 -256 734 -171 b 739 -35 739 -73 739 -53 b 680 305 739 86 720 207 b 400 517 622 449 537 517 b 337 514 380 517 359 517 b 289 507 321 511 305 513 b 91 317 192 477 127 412 b 29 9 50 212 29 108 b 217 -458 29 -157 88 -312 b 341 -516 251 -494 291 -518 z m 412 -452 b 359 -425 393 -452 376 -444 b 187 14 242 -301 179 -158 b 268 334 193 127 212 235 b 387 448 295 383 330 428 b 406 452 395 451 400 452 b 428 444 413 452 420 449 b 517 324 471 413 497 372 b 586 -29 560 222 586 86 b 556 -271 586 -112 585 -193 b 468 -422 536 -327 508 -377 b 412 -452 449 -442 431 -452 z\"\n    },\n    \"timeSig1\": {\n      \"x_min\": 20,\n      \"x_max\": 283,\n      \"y_min\": -364,\n      \"y_max\": 366,\n      \"ha\": 730,\n      \"o\": \"m 264 -524 b 357 -510 297 -524 325 -516 b 374 -490 369 -508 374 -501 b 380 -438 376 -472 380 -455 l 406 246 b 408 301 408 265 408 282 b 400 445 408 348 405 396 b 288 527 395 491 338 527 b 253 520 276 527 264 526 b 240 508 249 517 245 513 b 49 409 192 445 127 413 b 29 396 33 408 29 403 b 32 380 29 392 30 386 b 59 363 36 366 49 364 b 164 348 95 356 130 348 b 222 357 183 348 203 351 b 238 361 228 360 233 360 b 252 334 248 361 252 353 b 243 59 252 242 249 150 b 219 -490 229 -124 233 -307 b 264 -524 217 -516 232 -524 z\"\n    },\n    \"timeSig2\": {\n      \"x_min\": 20,\n      \"x_max\": 660.4636303241031,\n      \"y_min\": -378.7201231608281,\n      \"y_max\": 382,\n      \"ha\": 760.720123160828,\n      \"o\": \"m 99 -543 b 130 -533 111 -550 121 -540 b 255 -448 168 -501 213 -475 b 338 -425 282 -431 310 -425 b 392 -431 356 -425 374 -426 b 485 -462 423 -438 454 -451 b 648 -497 540 -482 595 -497 b 834 -441 711 -497 773 -480 b 950 -242 906 -395 958 -334 b 942 -210 950 -230 950 -215 b 912 -220 932 -204 920 -213 b 861 -264 894 -235 877 -248 b 775 -317 835 -289 808 -305 b 675 -334 742 -328 708 -334 b 510 -295 619 -334 563 -318 b 372 -264 465 -278 420 -264 b 305 -272 350 -264 328 -266 b 331 -242 318 -256 324 -249 b 490 -73 386 -187 438 -131 b 675 340 595 43 664 180 b 677 369 677 350 677 360 b 556 536 677 461 638 508 b 468 550 526 546 497 550 b 297 508 409 550 353 533 b 111 354 220 475 168 412 b 29 197 65 308 29 261 b 32 164 29 187 29 176 b 29 140 33 157 29 147 b 43 125 29 132 32 125 b 73 147 55 125 65 138 b 86 163 79 153 82 158 b 238 320 134 219 183 272 b 425 389 292 367 360 389 b 575 341 480 389 531 373 b 606 298 590 330 606 317 b 600 278 606 292 603 285 b 501 107 576 217 544 158 b 304 -104 439 33 372 -35 b 111 -356 230 -180 167 -265 b 84 -446 92 -386 84 -415 b 86 -481 84 -458 85 -469 b 88 -514 88 -491 88 -503 b 99 -543 89 -526 91 -537 z\"\n    },\n    \"timeSig3\": {\n      \"x_min\": 19.824321427094187,\n      \"x_max\": 540,\n      \"y_min\": -392,\n      \"y_max\": 392,\n      \"ha\": 784,\n      \"o\": \"m 216 -540 b 354 -564 264 -556 310 -564 b 605 -465 445 -564 530 -530 b 729 -161 697 -383 729 -275 b 724 -82 729 -135 727 -108 b 589 95 716 -1 670 62 b 523 114 567 102 546 108 b 750 418 606 213 677 315 b 778 503 769 444 778 472 b 773 540 778 514 776 527 b 750 564 769 557 762 564 b 736 562 746 564 742 563 b 641 552 704 553 672 552 b 402 554 562 552 481 554 l 346 554 b 84 546 258 554 170 554 b 36 501 55 543 40 531 b 29 412 30 472 32 442 b 52 384 27 393 32 384 l 56 384 b 210 392 107 389 158 392 l 602 392 b 354 108 523 285 445 192 b 246 -65 300 58 246 12 b 252 -108 246 -78 248 -92 l 252 -111 b 264 -141 251 -122 251 -135 b 291 -132 274 -145 284 -140 b 425 -72 328 -95 377 -84 b 475 -65 442 -68 459 -65 b 592 -108 517 -65 557 -79 b 645 -179 615 -125 645 -147 b 642 -194 645 -184 644 -189 b 485 -376 616 -278 569 -344 b 361 -399 444 -392 402 -399 b 151 -340 289 -399 219 -376 b 88 -275 122 -323 98 -310 b 71 -249 86 -268 85 -249 b 63 -251 68 -249 66 -249 b 36 -288 48 -255 36 -266 b 55 -423 33 -336 45 -377 b 101 -482 60 -448 78 -468 b 216 -540 138 -504 174 -526 z\"\n    },\n    \"timeSig4\": {\n      \"x_min\": 20,\n      \"x_max\": 633.0785282750762,\n      \"y_min\": -489.5908855671687,\n      \"y_max\": 491.18559127100053,\n      \"ha\": 980.7764768381692,\n      \"o\": \"m 608 -704 b 641 -684 622 -708 634 -696 b 667 -602 660 -660 662 -631 b 685 -190 683 -465 680 -327 l 685 -176 b 831 -127 736 -166 783 -148 b 912 0 901 -94 913 -76 b 886 53 912 36 904 52 b 848 40 877 53 864 49 l 838 36 b 687 -13 789 14 739 -3 b 681 177 687 50 684 114 b 672 338 678 230 677 285 b 654 373 671 350 672 373 b 622 340 636 373 624 361 b 615 262 621 314 613 288 b 619 -22 616 167 619 72 b 569 -22 602 -23 585 -23 b 305 -3 481 -16 395 -1 b 210 -9 274 -3 242 -4 b 301 163 242 52 268 108 b 513 552 377 288 459 412 b 536 652 526 585 536 618 b 533 683 536 662 534 672 b 520 707 531 691 531 707 b 487 693 508 708 494 704 b 474 668 482 684 477 677 b 384 490 454 603 418 547 b 253 281 343 419 295 351 b 73 -13 194 181 145 78 b 29 -108 50 -42 29 -72 b 37 -147 29 -121 32 -134 b 50 -186 43 -160 50 -173 b 68 -216 52 -207 56 -215 b 92 -207 73 -216 82 -213 b 288 -166 156 -180 220 -166 b 556 -186 377 -166 467 -180 b 586 -189 566 -187 576 -187 b 616 -186 596 -189 606 -189 b 606 -432 613 -268 612 -350 b 596 -625 603 -495 596 -559 b 598 -670 596 -641 596 -655 b 608 -704 598 -683 596 -700 z\"\n    },\n    \"timeSig5\": {\n      \"x_min\": 19.6638710854033,\n      \"x_max\": 583,\n      \"y_min\": -389,\n      \"y_max\": 389,\n      \"ha\": 778,\n      \"o\": \"m 132 -536 b 249 -560 168 -553 209 -559 b 507 -462 351 -560 454 -514 b 677 -183 588 -384 642 -289 b 694 -85 688 -150 694 -117 b 540 138 694 12 642 94 b 422 173 501 154 462 167 b 400 187 408 174 400 177 b 405 202 400 190 402 196 b 428 284 416 228 426 255 b 469 312 431 307 442 312 b 757 372 569 312 662 343 b 840 490 821 392 840 432 b 812 560 840 540 834 560 b 763 546 801 560 785 556 b 757 543 762 546 759 544 b 465 484 665 505 570 484 b 396 484 452 484 425 487 b 353 454 377 482 366 474 b 281 300 323 405 304 351 b 245 164 262 255 245 212 b 246 144 245 158 246 151 b 233 63 249 115 243 89 b 225 35 228 50 225 40 b 264 14 225 22 236 19 b 445 -26 325 7 387 0 b 569 -151 501 -52 547 -89 b 575 -180 573 -161 575 -170 b 527 -275 575 -217 547 -245 b 347 -367 484 -334 419 -367 b 261 -351 318 -367 289 -363 b 95 -300 206 -333 154 -307 b 55 -321 73 -297 65 -302 b 29 -468 29 -367 40 -419 b 56 -505 26 -482 36 -500 b 132 -536 82 -514 108 -524 z\"\n    },\n    \"timeSig6\": {\n      \"x_min\": 20,\n      \"x_max\": 565,\n      \"y_min\": -363,\n      \"y_max\": 363,\n      \"ha\": 726,\n      \"o\": \"m 390 -518 b 621 -458 469 -507 549 -494 b 814 -134 753 -390 814 -281 b 652 59 814 -16 750 58 b 580 48 629 59 606 55 b 233 -334 392 -9 276 -138 b 115 -228 181 -314 143 -278 b 98 -160 104 -206 98 -183 b 107 -109 98 -144 101 -127 b 167 37 124 -59 145 -12 b 508 340 236 189 347 292 b 575 353 530 347 553 353 b 648 327 600 353 625 346 b 665 320 654 321 661 320 b 687 336 674 320 681 325 b 703 405 697 359 703 382 b 684 472 703 429 697 451 b 593 523 664 504 631 521 b 576 521 588 523 582 523 b 297 403 472 508 380 465 b 115 177 217 344 164 264 b 29 -121 60 82 29 -17 b 53 -278 29 -173 36 -225 b 226 -497 82 -374 131 -454 b 347 -523 265 -514 305 -523 b 390 -518 361 -523 376 -521 z m 351 -357 b 312 -351 337 -356 320 -363 b 325 -315 304 -340 320 -327 b 543 -120 373 -222 448 -158 b 622 -104 570 -108 596 -102 b 717 -132 655 -104 687 -112 b 740 -167 732 -143 740 -153 b 730 -196 740 -176 737 -184 b 563 -321 690 -258 634 -300 b 359 -357 497 -341 428 -354 z\"\n    },\n    \"timeSig7\": {\n      \"x_min\": 20.3617407597707,\n      \"x_max\": 592,\n      \"y_min\": -345,\n      \"y_max\": 345,\n      \"ha\": 690,\n      \"o\": \"m 253 -497 b 318 -485 276 -497 297 -487 b 366 -441 348 -482 360 -468 b 487 -104 390 -323 433 -210 b 835 403 580 82 701 246 b 852 436 847 416 852 428 b 815 467 852 451 840 461 b 762 474 798 471 779 474 b 674 445 732 474 701 465 b 603 410 652 431 628 420 b 383 360 533 379 459 360 b 200 435 315 360 249 382 b 88 494 168 469 131 485 b 66 497 81 495 73 497 b 33 484 52 497 39 492 b 50 436 22 469 39 451 b 295 310 114 360 199 324 b 406 301 331 304 369 301 b 593 324 468 301 530 308 b 585 307 589 314 588 310 b 265 -249 451 137 338 -46 b 207 -442 242 -312 223 -377 b 204 -462 206 -449 204 -456 b 253 -497 204 -487 220 -497 z\"\n    },\n    \"timeSig8\": {\n      \"x_min\": 20,\n      \"x_max\": 504.15101530718516,\n      \"y_min\": -428,\n      \"y_max\": 428,\n      \"ha\": 856,\n      \"o\": \"m 265 -616 b 289 -615 274 -616 281 -616 b 710 -271 492 -592 657 -485 b 726 -148 721 -229 727 -187 b 585 108 726 -48 687 42 b 572 127 576 114 573 120 b 576 144 572 132 575 138 b 598 301 590 196 598 249 b 586 413 598 338 593 376 b 356 616 559 531 467 616 b 233 582 317 616 275 606 b 29 233 101 505 29 384 b 104 9 29 153 46 72 b 189 -48 127 -16 160 -27 b 92 -158 141 -73 114 -114 b 37 -343 63 -217 50 -279 b 33 -390 35 -359 33 -374 b 265 -616 33 -524 148 -616 z m 328 -438 b 158 -276 233 -436 160 -359 b 166 -239 158 -264 161 -252 b 230 -157 176 -203 202 -179 b 367 -72 274 -125 320 -98 b 448 -49 396 -56 423 -49 b 562 -118 491 -49 528 -72 b 611 -251 590 -157 611 -199 b 569 -341 611 -288 595 -318 b 328 -438 500 -402 416 -432 z m 258 105 b 124 148 215 105 167 117 b 96 196 105 163 96 177 b 99 217 96 202 96 209 b 197 384 120 281 151 337 b 350 451 242 429 297 451 b 516 364 412 451 472 422 b 530 331 523 354 530 343 b 530 327 530 330 530 328 l 530 320 b 468 151 520 261 507 200 b 419 122 455 135 442 125 b 258 105 370 117 320 105 z\"\n    },\n    \"timeSig9\": {\n      \"x_min\": 20,\n      \"x_max\": 494,\n      \"y_min\": -421,\n      \"y_max\": 421,\n      \"ha\": 842,\n      \"o\": \"m 235 -606 b 361 -564 275 -606 318 -593 b 619 -229 487 -482 566 -366 b 706 127 664 -114 694 4 b 711 233 708 163 711 197 b 700 346 711 271 708 308 b 389 606 658 517 530 606 b 351 605 376 606 364 606 b 56 272 171 586 56 441 b 96 98 56 216 69 156 b 334 -53 144 -3 238 -53 b 544 36 408 -53 484 -24 b 652 176 586 78 622 124 b 631 71 645 141 639 105 b 467 -302 599 -63 562 -196 b 271 -442 412 -364 354 -422 b 225 -448 255 -446 239 -448 b 95 -305 148 -448 98 -395 b 89 -255 95 -288 94 -271 b 73 -233 86 -246 85 -233 b 52 -248 65 -233 56 -239 b 29 -317 42 -271 30 -291 b 49 -448 29 -361 40 -405 b 235 -606 69 -541 144 -606 z m 340 104 b 144 209 264 108 194 141 b 127 258 132 225 127 240 b 137 297 127 271 130 284 b 366 449 184 396 269 449 b 517 408 415 449 467 436 b 595 348 546 392 572 372 b 616 305 608 336 616 321 b 609 281 616 298 613 289 b 340 104 557 184 477 104 z\"\n    },\n    \"timeSigCommon\": {\n      \"x_min\": 20,\n      \"x_max\": 585,\n      \"y_min\": -298,\n      \"y_max\": 294.49658092772603,\n      \"ha\": 592.496580927726,\n      \"o\": \"m 444 -405 b 829 -45 626 -346 740 -207 b 842 26 842 -23 842 1 b 821 58 842 39 841 58 b 795 40 811 58 802 48 b 765 3 785 29 773 16 b 469 -223 690 -104 596 -183 b 354 -242 431 -235 392 -242 b 180 -177 292 -242 235 -223 b 135 -99 154 -157 140 -131 b 132 -59 134 -85 132 -72 b 141 7 132 -37 135 -16 b 449 274 189 160 297 243 b 477 278 459 276 468 276 b 546 203 517 278 539 253 b 517 157 550 177 533 166 b 485 143 507 153 497 143 l 482 143 b 467 148 478 143 472 144 b 374 183 438 170 406 181 b 264 118 333 183 292 161 b 238 48 246 92 238 69 b 261 -9 238 29 245 10 b 383 -73 287 -39 337 -73 b 412 -68 392 -73 402 -72 b 631 164 526 -27 586 59 b 649 252 644 193 649 222 b 636 328 649 278 645 304 b 504 423 615 400 579 429 b 242 318 408 415 317 387 b 29 -158 104 190 29 33 b 30 -176 29 -164 29 -170 b 115 -364 42 -246 52 -315 b 307 -429 177 -410 240 -429 b 444 -405 351 -429 397 -420 z\"\n    },\n    \"timeSigCutCommon\": {\n      \"x_min\": 20,\n      \"x_max\": 695,\n      \"y_min\": -687.0379164869065,\n      \"y_max\": 687,\n      \"ha\": 1374.0379164869064,\n      \"o\": \"m 564 -989 b 595 -945 585 -991 589 -963 l 599 -922 b 605 -628 600 -824 603 -726 l 609 -399 b 878 -251 706 -363 798 -320 b 996 -85 932 -204 976 -153 b 1001 -63 998 -78 1001 -71 b 989 -46 1001 -56 998 -49 b 978 -43 985 -45 982 -43 b 950 -59 968 -43 959 -49 b 733 -216 894 -132 815 -177 b 611 -259 694 -235 652 -249 b 616 -20 612 -179 615 -99 b 680 29 642 -7 665 9 b 698 43 685 36 690 40 b 870 251 792 82 840 160 b 877 294 874 265 877 279 b 818 410 877 338 855 382 b 683 458 779 442 730 448 b 625 468 664 462 644 465 l 625 514 b 638 958 626 662 636 811 b 626 989 638 979 635 989 b 603 981 621 989 613 986 b 422 840 534 945 481 888 b 412 805 412 832 413 818 b 426 713 410 773 420 743 b 445 678 429 690 435 678 b 474 691 452 678 461 683 b 563 755 503 710 530 732 b 564 724 564 740 564 733 b 559 469 563 639 560 554 b 462 454 526 469 494 464 b 112 143 302 399 199 281 b 33 -94 66 71 45 -10 b 29 -148 30 -112 29 -131 b 105 -351 29 -223 52 -291 b 359 -455 171 -426 258 -451 b 517 -431 409 -451 464 -446 b 539 -422 524 -428 531 -425 l 539 -477 b 533 -739 536 -563 539 -651 b 530 -824 531 -768 530 -795 b 546 -948 530 -865 533 -907 b 564 -989 552 -962 543 -989 z m 410 -288 b 193 -197 328 -288 253 -264 b 141 -60 160 -161 141 -108 b 157 6 141 -35 147 -12 b 259 158 189 58 217 112 b 438 291 311 215 364 266 b 528 305 468 301 498 305 b 554 304 537 305 546 304 b 553 212 554 274 554 242 b 426 115 498 199 446 164 b 416 68 419 99 416 84 b 425 12 416 49 420 30 b 474 -39 432 -17 448 -32 b 513 -43 487 -42 498 -43 b 547 -40 524 -43 536 -42 l 543 -272 b 461 -285 516 -278 488 -281 b 410 -288 444 -287 426 -288 z m 694 197 b 668 203 685 197 677 199 b 621 216 654 210 638 215 b 622 294 622 242 622 268 b 706 268 651 287 678 278 b 746 235 721 261 734 249 b 752 222 749 230 752 226 b 743 213 752 219 749 215 b 694 197 727 206 711 197 z\"\n    },\n    \"noteheadDoubleWhole\": {\n      \"x_min\": -0.4444444444444444,\n      \"x_max\": 614.1875,\n      \"y_min\": -223.03296670127517,\n      \"y_max\": 223,\n      \"ha\": 446.0329667012752,\n      \"o\": \"m 488 -242 b 693 -79 595 -249 685 -166 l 693 -55 b 690 0 693 -36 691 -17 b 540 187 684 84 621 164 b 449 200 508 196 480 200 b 210 104 363 200 282 163 b 186 56 196 92 186 76 b 207 -82 186 9 192 -37 b 300 -204 225 -132 248 -181 b 488 -242 356 -229 415 -240 z m 35 -321 b 62 -266 58 -318 58 -288 l 62 -194 b 63 50 62 -114 63 -32 b 60 189 63 96 63 143 b 43 300 59 226 60 265 b 29 321 40 308 39 321 l 26 321 b 0 292 13 318 0 310 b 0 248 0 278 -1 262 b 6 147 4 215 6 181 b 4 48 6 114 4 81 b 6 0 4 32 6 16 b 7 -36 7 -12 7 -24 l 7 -52 b 6 -156 7 -86 6 -121 b 19 -275 6 -196 9 -236 b 35 -321 23 -291 16 -323 z m 128 -261 b 144 -251 135 -264 141 -256 b 158 -203 156 -236 157 -220 b 161 -137 161 -181 161 -158 b 157 30 161 -81 157 -26 b 158 76 157 45 157 60 l 158 101 b 156 225 158 141 158 183 b 137 253 156 235 154 253 l 134 253 b 109 222 120 251 109 242 b 104 91 108 179 104 134 b 108 -58 104 42 109 -9 b 107 -105 108 -73 108 -89 b 105 -127 107 -112 107 -120 b 118 -245 105 -167 114 -204 b 128 -261 118 -252 121 -259 z m 490 -88 b 449 -86 477 -88 464 -88 b 287 -56 399 -85 341 -78 b 258 -33 275 -52 258 -48 b 282 -7 258 -20 272 -13 b 458 43 340 23 399 43 b 580 14 497 43 537 35 b 618 -20 606 1 619 -9 b 592 -58 618 -30 609 -42 b 490 -88 562 -82 528 -88 z m 757 -291 b 793 -171 796 -255 792 -212 b 795 -49 795 -131 795 -91 b 786 207 795 36 791 121 b 779 240 786 217 783 229 b 766 258 776 246 776 258 b 762 256 765 258 763 256 b 739 236 752 253 740 252 b 733 177 737 216 732 197 b 737 20 737 125 739 73 l 737 -107 b 740 -202 737 -138 739 -170 b 757 -291 740 -230 743 -261 z m 847 -314 b 871 -288 860 -315 867 -300 b 884 -187 881 -255 886 -222 b 876 115 878 -86 876 14 b 877 255 876 161 876 209 b 868 291 877 268 873 279 b 855 304 867 301 863 304 b 844 301 852 304 848 304 b 822 265 825 292 822 278 b 824 251 822 259 822 255 b 822 170 822 225 822 197 l 822 -20 b 835 -284 827 -86 825 -186 b 847 -314 837 -295 835 -311 z\"\n    },\n    \"noteheadWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 380.1664976250159,\n      \"y_min\": -186.17102907059297,\n      \"y_max\": 165,\n      \"ha\": 351.17102907059297,\n      \"o\": \"m 547 40 b 223 -268 543 -151 367 -259 b 102 -233 180 -271 143 -248 l 62 -216 b 0 -127 22 -197 0 -166 b 6 -91 0 -115 1 -104 b 122 141 33 -9 69 71 b 327 238 170 204 249 238 b 514 158 397 238 467 212 b 547 40 544 125 549 84 z m 248 -107 b 384 -63 295 -102 341 -88 b 426 -23 402 -53 415 -40 b 435 3 432 -14 435 -6 b 413 32 435 14 428 24 b 301 73 376 49 343 73 b 272 69 291 73 282 72 b 121 -35 207 53 157 20 b 111 -58 117 -42 111 -50 b 125 -75 111 -65 115 -71 b 248 -107 164 -89 202 -107 z\"\n    },\n    \"noteheadHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 334,\n      \"y_min\": -174,\n      \"y_max\": 175,\n      \"ha\": 349,\n      \"o\": \"m 480 56 b 167 -251 478 -115 331 -251 b 94 -242 143 -251 118 -248 b 9 -141 43 -229 20 -192 b 0 -68 3 -115 0 -91 b 284 249 0 95 127 200 b 304 252 289 251 297 252 b 481 78 374 252 481 170 b 480 56 481 71 481 63 z m 213 -102 b 399 6 274 -81 341 -48 b 402 17 400 7 402 13 b 399 27 402 22 400 26 b 311 94 373 53 353 88 b 292 95 305 95 300 95 b 130 27 230 95 181 55 b 69 -62 98 9 62 -29 b 161 -98 76 -98 128 -91 b 213 -102 174 -101 186 -101 z\"\n    },\n    \"noteheadBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 334.04644433966797,\n      \"y_min\": -164,\n      \"y_max\": 164,\n      \"ha\": 328,\n      \"o\": \"m 112 -233 b 141 -236 122 -235 131 -236 b 481 104 279 -236 485 -48 b 403 222 477 141 478 192 b 334 236 382 232 359 236 b 1 -59 180 236 13 59 b 0 -85 1 -68 0 -76 b 112 -233 0 -157 32 -215 z\"\n    },\n    \"noteheadXWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 506,\n      \"y_min\": -143.0823320899293,\n      \"y_max\": 144,\n      \"ha\": 287.0823320899293,\n      \"o\": \"m 53 -206 b 219 -163 117 -207 170 -196 b 314 -102 249 -141 282 -122 b 377 -63 334 -89 356 -76 b 514 -161 422 -96 468 -128 b 576 -196 534 -174 552 -196 b 589 -193 580 -196 585 -196 b 688 -174 625 -194 657 -181 b 711 -158 698 -171 711 -173 b 696 -143 711 -151 701 -147 b 503 -9 632 -98 567 -52 b 485 4 497 -4 491 0 b 704 145 559 49 634 95 b 729 164 711 150 729 151 l 729 168 b 696 196 726 183 710 193 b 621 207 671 202 645 207 b 528 177 589 207 557 200 b 373 76 480 140 426 108 b 246 164 330 104 287 132 b 122 206 207 193 167 203 b 66 192 102 207 72 207 b 99 147 58 173 85 158 b 274 14 157 102 215 58 b 16 -164 184 -42 96 -98 b 0 -179 12 -168 0 -170 b 1 -183 0 -180 0 -183 b 26 -204 6 -193 12 -204 b 53 -206 37 -206 49 -206 z m 611 -177 b 376 -9 530 -118 452 -63 b 164 -143 305 -53 235 -98 b 104 -164 147 -154 130 -164 b 82 -161 96 -164 89 -164 b 230 -65 137 -125 183 -95 l 347 12 b 327 26 341 16 334 22 b 196 121 284 58 239 89 b 163 147 184 128 173 137 b 140 173 154 154 140 163 b 143 180 140 176 141 177 b 179 166 154 194 167 174 b 372 27 243 120 307 73 l 566 153 b 613 171 580 161 596 170 b 635 160 624 171 635 174 b 621 147 635 153 626 150 l 429 24 b 400 6 419 19 409 13 b 569 -117 456 -35 513 -75 b 611 -177 588 -130 608 -143 z\"\n    },\n    \"noteheadXHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 421,\n      \"y_min\": -145.51844828189743,\n      \"y_max\": 151,\n      \"ha\": 296.51844828189746,\n      \"o\": \"m 490 -209 b 539 -207 505 -207 521 -207 b 606 -209 560 -207 583 -209 b 598 -196 602 -203 600 -199 b 406 -19 533 -135 469 -78 l 540 130 b 547 144 546 135 547 140 b 536 156 547 148 543 153 b 488 192 518 166 503 176 b 416 217 471 209 444 217 b 323 180 380 217 344 204 l 264 115 b 239 138 256 122 248 131 b 33 197 180 196 108 200 b 3 186 23 197 6 193 b 19 154 -1 174 10 163 b 171 12 69 107 120 59 b 19 -157 120 -45 69 -101 b 0 -177 14 -163 0 -166 b 1 -181 0 -179 0 -180 b 39 -203 9 -197 22 -203 l 186 -203 b 197 -202 190 -202 193 -200 b 213 -202 203 -202 207 -202 b 262 -180 228 -202 246 -199 b 314 -122 279 -161 297 -141 b 490 -209 363 -170 412 -216 z m 435 -148 b 291 -30 379 -112 337 -69 l 213 -118 b 190 -137 207 -125 202 -137 b 145 -111 173 -130 154 -127 b 160 -79 137 -98 151 -88 b 238 16 184 -48 212 -16 b 141 99 204 43 173 72 b 124 117 135 105 130 111 b 115 132 121 121 115 127 b 118 137 115 134 117 137 b 141 132 127 147 135 138 l 253 36 b 347 150 285 75 315 112 b 370 164 354 160 363 163 b 403 145 382 164 393 156 b 416 127 412 140 416 132 b 405 102 416 118 412 111 l 307 -10 b 413 -105 343 -42 379 -73 b 435 -148 425 -115 436 -125 z\"\n    },\n    \"noteheadXBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 289,\n      \"y_min\": -156,\n      \"y_max\": 157,\n      \"ha\": 313,\n      \"o\": \"m 23 -225 b 69 -204 40 -223 56 -219 b 137 -131 92 -180 115 -157 l 209 -50 b 377 -197 264 -101 321 -148 b 403 -210 384 -203 393 -210 b 408 -210 405 -210 406 -210 b 416 -192 416 -207 416 -199 b 416 -186 416 -190 416 -187 b 403 -148 416 -171 413 -158 b 344 -81 384 -125 367 -101 b 252 -1 312 -55 282 -29 b 377 157 297 49 340 101 b 402 202 387 170 402 187 b 395 217 402 207 400 213 b 376 226 389 223 382 226 b 334 192 360 226 346 204 b 206 42 289 143 248 94 b 96 161 167 81 131 120 b 60 193 86 174 76 189 b 33 206 52 196 42 206 b 22 199 29 206 26 204 b 10 173 14 190 10 181 b 22 147 10 166 14 157 b 148 7 62 98 104 52 b 164 -7 154 1 158 -3 b 10 -189 111 -66 55 -122 b 0 -212 6 -197 0 -203 b 1 -217 0 -213 0 -216 b 23 -225 4 -226 14 -222 z\"\n    },\n    \"noteheadCircleX\": {\n      \"x_min\": 0,\n      \"x_max\": 344,\n      \"y_min\": -179,\n      \"y_max\": 175.12551922594864,\n      \"ha\": 354.12551922594866,\n      \"o\": \"m 99 -210 b 236 -258 137 -242 186 -258 b 418 -183 305 -258 374 -230 b 495 33 475 -120 495 -48 b 494 66 495 45 494 55 b 302 252 487 183 405 256 b 181 243 262 249 222 248 b 46 171 128 236 79 219 b 0 19 14 127 0 73 b 99 -210 0 -68 35 -156 z m 89 -120 b 48 0 56 -82 48 -42 b 89 112 48 35 59 76 b 109 101 96 111 102 108 l 210 7 l 187 -17 b 89 -120 151 -53 125 -82 z m 176 -183 b 127 -163 158 -179 141 -171 l 252 -32 l 372 -144 b 233 -189 334 -173 285 -189 b 176 -183 215 -189 196 -187 z m 245 42 b 124 156 204 79 164 118 b 200 176 145 166 170 173 b 337 183 245 181 291 184 b 377 176 351 183 364 180 b 245 42 333 131 288 86 z m 405 -112 l 392 -99 l 285 3 l 400 121 b 418 154 409 131 418 140 b 465 50 448 130 465 94 b 405 -112 462 -17 439 -73 z\"\n    },\n    \"noteheadTriangleUpWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 366,\n      \"y_min\": -145,\n      \"y_max\": 138,\n      \"ha\": 283,\n      \"o\": \"m 55 -209 l 504 -209 b 527 -199 520 -209 527 -206 b 520 -180 527 -193 524 -187 b 459 -94 501 -151 480 -122 b 279 170 400 -6 341 82 b 242 199 266 190 253 199 b 206 167 230 199 219 189 b 10 -145 140 63 76 -42 b 0 -171 3 -156 0 -164 b 23 -200 0 -183 9 -192 b 55 -209 33 -206 45 -209 z m 202 -161 b 176 -137 183 -163 176 -156 b 187 -62 176 -111 179 -86 b 253 95 206 -10 228 42 b 337 -132 307 24 334 -49 b 311 -161 338 -153 334 -161 b 256 -160 294 -161 275 -160 b 202 -161 238 -160 220 -161 z\"\n    },\n    \"noteheadTriangleUpHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 341.0833130378007,\n      \"y_min\": -159,\n      \"y_max\": 159,\n      \"ha\": 318,\n      \"o\": \"m 458 -226 b 478 -229 462 -223 469 -229 b 490 -222 482 -229 487 -228 b 477 -184 495 -207 484 -196 b 281 176 410 -65 346 56 b 238 225 269 194 261 213 b 225 229 232 226 228 228 b 209 215 217 229 213 225 b 4 -153 141 92 73 -30 b 0 -170 1 -158 0 -164 b 12 -189 0 -177 4 -183 b 66 -215 27 -202 43 -213 b 458 -226 194 -217 323 -222 z m 278 -170 l 151 -167 b 298 75 204 -89 240 -1 b 301 82 300 76 301 79 b 357 -22 320 48 338 13 b 344 -43 353 -27 350 -37 b 285 -163 317 -79 312 -127 b 278 -170 282 -166 279 -167 z\"\n    },\n    \"noteheadTriangleUpBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 346,\n      \"y_min\": -149,\n      \"y_max\": 149,\n      \"ha\": 298,\n      \"o\": \"m 481 -215 b 498 -209 487 -215 492 -215 b 482 -173 498 -194 488 -184 l 284 173 b 259 202 278 184 269 194 b 229 215 248 210 238 215 b 196 189 216 215 206 206 l 13 -150 b 3 -168 9 -156 6 -163 b 0 -180 1 -173 0 -177 b 12 -197 0 -187 4 -193 b 63 -213 29 -206 45 -213 b 481 -215 203 -213 343 -215 z\"\n    },\n    \"noteheadDiamondWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 271,\n      \"y_min\": -132,\n      \"y_max\": 132,\n      \"ha\": 264,\n      \"o\": \"m 230 -177 b 256 -190 240 -186 249 -190 b 281 -173 265 -190 272 -184 b 382 -29 314 -124 347 -76 b 390 -10 387 -22 390 -14 b 376 12 390 -3 386 4 b 173 177 308 66 240 121 b 144 190 166 183 160 190 b 98 153 127 186 112 170 b 13 40 69 115 42 76 b 0 13 4 29 0 20 b 22 -19 0 3 7 -9 b 230 -177 92 -69 163 -122 z m 279 -128 b 261 -122 274 -134 266 -127 l 66 30 b 56 45 59 35 56 39 b 62 56 56 48 59 52 b 122 122 91 101 105 122 b 194 76 138 122 158 107 l 320 -26 b 336 -50 325 -32 336 -35 b 279 -128 318 -75 300 -102 z\"\n    },\n    \"noteheadDiamondHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 295,\n      \"y_min\": -148,\n      \"y_max\": 148,\n      \"ha\": 296,\n      \"o\": \"m 228 -207 b 245 -213 235 -210 240 -213 b 264 -203 252 -213 258 -210 b 415 -46 314 -150 364 -98 b 425 -27 420 -40 425 -35 b 416 -10 425 -22 422 -16 b 217 200 350 60 284 131 b 194 213 212 207 204 213 b 170 196 181 213 177 203 b 14 33 118 143 68 86 b 0 7 4 23 0 16 b 17 -20 0 -1 6 -10 b 118 -114 52 -50 82 -85 b 228 -207 156 -144 184 -184 z m 209 -157 b 134 -69 177 -138 141 -115 b 130 -26 131 -55 130 -40 b 215 148 130 42 160 99 b 225 156 217 151 220 156 b 230 153 226 156 228 156 b 323 -26 276 104 321 55 b 298 -75 324 -42 315 -59 b 265 -109 287 -86 276 -99 b 209 -157 245 -125 228 -167 z\"\n    },\n    \"noteheadDiamondBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 310,\n      \"y_min\": -146,\n      \"y_max\": 146,\n      \"ha\": 292,\n      \"o\": \"m 266 -210 b 289 -194 278 -209 284 -200 b 406 -76 330 -156 367 -115 b 446 -23 433 -49 446 -36 b 412 29 446 -10 435 3 b 405 36 409 30 408 33 b 252 196 354 89 304 143 b 225 210 243 204 235 210 b 204 202 219 210 212 209 b 10 24 141 141 75 82 b 0 9 4 19 0 14 b 9 -6 0 4 3 0 l 232 -192 b 266 -210 242 -200 256 -204 z\"\n    },\n    \"noteheadSquareWhite\": {\n      \"x_min\": 0,\n      \"x_max\": 350,\n      \"y_min\": -131,\n      \"y_max\": 131,\n      \"ha\": 262,\n      \"o\": \"m 468 -189 b 485 -187 474 -189 480 -189 b 500 -176 495 -187 500 -183 b 498 -168 500 -174 498 -171 b 497 -166 498 -167 497 -167 l 498 -164 b 504 -154 503 -163 504 -158 b 503 -138 504 -150 503 -144 b 503 -135 503 -137 503 -137 l 503 -94 b 492 66 500 -45 494 10 b 488 135 492 89 488 112 b 484 150 488 141 485 145 b 482 154 482 151 482 153 b 429 189 472 177 456 189 b 53 184 304 186 179 186 l 39 184 b 33 181 36 183 35 183 b 12 160 20 181 12 177 b 0 -109 9 71 4 -19 b 19 -137 0 -125 7 -134 b 23 -151 19 -141 20 -145 b 85 -187 37 -173 55 -187 b 468 -189 212 -187 340 -187 z m 246 -127 l 246 -125 l 63 -125 b 66 -111 65 -122 66 -117 b 73 72 69 -50 71 10 l 73 130 b 88 128 78 128 82 128 b 148 130 108 130 128 130 b 271 128 190 130 230 128 l 271 130 l 420 130 b 428 20 425 92 425 56 l 436 -127 z\"\n    },\n    \"noteheadSquareBlack\": {\n      \"x_min\": 0,\n      \"x_max\": 342,\n      \"y_min\": -129.98961937716263,\n      \"y_max\": 132.44444444444446,\n      \"ha\": 262.4340638216071,\n      \"o\": \"m 217 190 b 439 186 304 190 372 190 b 467 180 448 184 458 183 b 492 145 484 176 492 167 b 490 -124 490 56 490 -33 b 488 -141 490 -130 488 -135 b 456 -170 488 -163 478 -168 b 118 -183 344 -176 230 -181 b 29 -184 89 -183 60 -192 b 0 -148 4 -180 0 -168 b 1 29 1 -89 1 -30 b 1 156 1 71 1 114 b 36 190 3 187 4 190 b 217 190 102 192 168 190 z\"\n    },\n    \"augmentationDot\": {\n      \"x_min\": 0,\n      \"x_max\": 96,\n      \"y_min\": -57,\n      \"y_max\": 57,\n      \"ha\": 114,\n      \"o\": \"m 13 -82 b 16 -81 14 -82 14 -82 b 105 -73 46 -76 75 -76 b 131 -48 121 -72 131 -60 b 138 26 134 -24 138 0 b 137 48 138 33 138 40 b 108 82 134 71 125 82 b 95 81 104 82 99 82 b 33 71 75 78 53 75 b 4 46 20 68 6 62 b 0 -66 1 9 0 -29 b 13 -82 0 -73 1 -82 z\"\n    },\n    \"tremolo1\": {\n      \"x_min\": -158,\n      \"x_max\": 156.1938147957849,\n      \"y_min\": -88,\n      \"y_max\": 88,\n      \"ha\": 176,\n      \"o\": \"m -206 -127 b -194 -125 -203 -127 -199 -127 b 173 -36 -72 -94 50 -65 b 220 16 202 -29 215 -12 b 225 50 223 30 225 45 b 216 107 226 76 222 91 b 194 127 210 120 204 127 b 183 124 192 127 189 127 l -192 33 b -226 -9 -213 27 -222 14 b -228 -32 -226 -16 -228 -23 b -222 -108 -228 -58 -222 -82 b -206 -127 -222 -120 -217 -127 z\"\n    },\n    \"flag8thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": -819,\n      \"y_max\": 0,\n      \"ha\": 819,\n      \"o\": \"m 265 -1171 b 351 -1035 301 -1130 336 -1087 b 376 -867 369 -979 376 -923 b 367 -755 376 -829 373 -792 b 233 -422 350 -632 311 -520 b 131 -291 199 -379 166 -334 b 65 -125 91 -239 66 -192 b 62 -75 65 -112 62 -91 b 42 0 62 -49 52 -24 l 35 0 b 0 -63 6 -13 0 -36 l 0 -144 b 96 -445 0 -255 29 -356 b 177 -547 124 -478 150 -514 b 308 -831 246 -629 298 -721 b 317 -890 310 -851 317 -871 b 311 -919 317 -900 315 -910 b 256 -1005 297 -950 282 -984 b 228 -1068 233 -1024 228 -1045 b 230 -1106 228 -1080 229 -1093 b 240 -1162 232 -1125 239 -1143 b 251 -1179 242 -1174 246 -1179 b 265 -1171 255 -1179 259 -1176 z\"\n    },\n    \"flag8thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 261,\n      \"y_min\": 0,\n      \"y_max\": 819,\n      \"ha\": 819,\n      \"o\": \"m 265 1171 b 251 1179 259 1176 255 1179 b 240 1162 246 1179 242 1174 b 230 1106 239 1143 232 1125 b 228 1068 229 1093 228 1080 b 256 1005 228 1045 233 1024 b 311 919 282 984 297 950 b 317 890 315 910 317 900 b 308 831 317 871 310 851 b 177 547 298 721 246 629 b 96 445 150 514 124 478 b 0 144 29 356 0 255 l 0 63 b 35 0 0 36 6 13 l 42 0 b 62 75 52 24 62 49 b 59 117 62 91 59 104 b 131 291 60 183 91 239 b 233 422 166 334 199 379 b 367 755 311 520 350 632 b 376 867 373 792 376 829 b 351 1035 376 923 369 979 b 265 1171 336 1087 301 1130 z\"\n    },\n    \"flag16thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 327.1591498636094,\n      \"y_min\": -819.3972596310256,\n      \"y_max\": 0,\n      \"ha\": 819.3972596310256,\n      \"o\": \"m 415 -1179 b 435 -1168 423 -1182 429 -1174 b 451 -1138 442 -1159 446 -1149 b 465 -1020 464 -1102 467 -1064 b 461 -962 464 -1004 464 -984 b 471 -821 467 -916 472 -870 b 465 -721 472 -791 467 -756 b 415 -520 459 -651 441 -585 b 200 -245 370 -408 284 -327 b 96 -114 160 -206 118 -168 b 75 -24 84 -85 85 -53 b 59 0 72 -16 72 0 b 53 -1 58 0 56 -1 b 27 -32 40 -6 27 -10 b 29 -68 27 -43 29 -55 b 10 -79 20 -69 13 -72 b 1 -109 6 -89 1 -99 b 0 -170 0 -130 0 -148 b 35 -410 0 -252 12 -333 b 258 -793 76 -557 156 -681 b 409 -1158 350 -896 410 -1014 b 415 -1179 409 -1165 405 -1175 z m 413 -816 b 331 -681 392 -769 364 -723 b 145 -420 266 -596 189 -521 b 86 -281 125 -374 102 -330 b 156 -370 105 -312 128 -343 b 318 -539 210 -425 269 -478 b 413 -816 383 -621 420 -713 z\"\n    },\n    \"flag16thDown\": {\n      \"x_min\": 0,\n      \"x_max\": 327.1591498636094,\n      \"y_min\": 0,\n      \"y_max\": 819,\n      \"ha\": 819,\n      \"o\": \"m 59 0 b 75 24 72 0 72 16 b 96 114 85 53 84 85 b 200 245 118 168 160 206 b 415 520 284 327 370 408 b 465 721 441 585 459 651 b 471 821 467 756 472 791 b 461 962 472 870 467 916 b 465 1020 464 984 464 1004 b 451 1138 467 1064 464 1102 b 435 1168 446 1149 442 1159 b 418 1179 431 1172 425 1179 b 415 1179 418 1179 416 1179 b 408 1169 409 1176 408 1174 b 409 1158 408 1165 409 1161 b 258 793 410 1014 350 896 b 35 410 156 681 76 557 b 0 170 12 333 0 252 b 0 88 0 148 0 108 b 29 7 0 71 6 23 b 59 0 33 4 58 0 z m 86 281 b 145 420 102 330 125 374 b 331 681 189 521 266 596 b 413 816 364 723 392 769 b 415 791 413 808 415 799 b 318 539 415 698 377 613 b 156 370 269 478 210 425 b 86 281 128 343 105 312 z\"\n    },\n    \"flag32ndUp\": {\n      \"x_min\": -0.19862981551275186,\n      \"x_max\": 268.0942440943661,\n      \"y_min\": -849.4710740978672,\n      \"y_max\": 149.0769891455102,\n      \"ha\": 998.5480632433774,\n      \"o\": \"m 323 -1223 b 351 -1198 337 -1227 344 -1210 b 359 -1184 354 -1194 356 -1188 b 386 -999 377 -1122 387 -1060 b 341 -783 386 -927 372 -855 b 330 -736 334 -769 330 -753 b 333 -708 330 -727 330 -717 b 344 -621 340 -678 344 -649 b 341 -579 344 -608 343 -593 b 328 -500 338 -553 328 -526 b 331 -475 328 -491 328 -484 b 347 -370 343 -438 348 -402 b 151 27 348 -212 288 -56 b 53 176 98 59 50 102 b 45 197 53 183 48 192 b 33 215 40 203 40 216 l 30 215 b 6 194 22 212 9 209 b 0 120 3 170 -1 145 b 0 -43 4 65 0 13 b 0 -98 0 -60 1 -79 b 4 -276 0 -157 6 -216 b 7 -456 4 -337 7 -397 b 66 -638 7 -523 22 -585 b 158 -724 94 -671 127 -697 b 318 -1011 246 -801 295 -899 b 321 -1044 321 -1021 321 -1032 b 312 -1152 321 -1080 312 -1116 b 317 -1192 312 -1165 314 -1179 b 323 -1223 320 -1202 311 -1220 z m 275 -657 b 111 -492 226 -589 163 -547 b 65 -376 78 -456 66 -418 b 71 -323 65 -360 68 -341 b 275 -657 164 -418 265 -504 z m 285 -376 b 121 -180 249 -289 173 -245 b 91 -105 104 -158 92 -135 b 288 -354 181 -144 288 -269 b 285 -376 288 -363 287 -370 z\"\n    },\n    \"flag32ndDown\": {\n      \"x_min\": -2.800802874905624,\n      \"x_max\": 268.09424409436605,\n      \"y_min\": -169.07698914551014,\n      \"y_max\": 829.4710740978672,\n      \"ha\": 998.5480632433773,\n      \"o\": \"m 323 1194 b 317 1164 311 1191 320 1174 b 312 1123 314 1151 312 1136 b 321 1015 312 1087 321 1051 b 318 982 321 1004 321 992 b 158 696 295 870 246 772 b 66 609 127 668 94 642 b 7 428 22 556 7 494 b 4 248 7 369 4 308 b -1 78 6 187 -10 137 b 0 14 0 59 0 32 b 0 -148 0 -42 0 -94 b 6 -223 0 -174 3 -199 b 30 -243 9 -238 22 -240 l 33 -243 b 45 -226 40 -245 40 -232 b 53 -204 48 -220 53 -212 b 151 -56 50 -131 98 -88 b 347 341 288 27 348 183 b 331 446 348 373 343 409 b 328 471 328 455 328 462 b 341 550 328 497 338 524 b 344 592 343 564 344 579 b 333 680 344 621 340 649 b 330 707 330 688 330 698 b 341 755 330 724 334 740 b 386 971 372 827 386 899 b 359 1155 387 1031 377 1093 b 351 1169 356 1159 354 1165 b 323 1194 344 1181 337 1198 z m 275 628 b 71 294 265 475 164 389 b 65 347 68 312 65 331 b 111 464 66 389 78 428 b 275 628 163 518 226 560 z m 285 347 b 288 325 287 341 288 334 b 91 76 288 240 181 115 b 121 151 92 107 104 130 b 285 347 173 216 249 261 z\"\n    },\n    \"flag64thUp\": {\n      \"x_min\": -4,\n      \"x_max\": 282,\n      \"y_min\": -823.5430338167065,\n      \"y_max\": 347,\n      \"ha\": 1170.5430338167066,\n      \"o\": \"m 350 -1185 b 380 -1162 364 -1189 374 -1175 b 406 -1022 399 -1119 406 -1071 b 359 -798 406 -945 384 -871 b 348 -756 353 -785 348 -772 b 350 -744 348 -753 350 -749 b 363 -621 356 -704 363 -664 b 360 -580 363 -608 363 -593 b 359 -560 359 -573 359 -567 b 373 -490 359 -536 366 -513 b 393 -346 386 -444 393 -395 b 387 -269 393 -320 390 -294 b 348 -127 382 -219 348 -173 b 351 -104 348 -120 348 -111 b 353 -65 351 -91 353 -78 b 341 37 353 -26 348 6 b 226 215 323 108 278 164 b 86 336 181 258 127 288 b 62 395 72 353 62 370 b 42 481 62 423 55 454 b 27 500 37 488 36 500 b 24 498 26 500 26 500 b -1 480 14 497 1 492 b -6 444 -4 467 -6 455 l -6 435 b -1 341 -1 403 -1 372 l -1 266 b 6 156 -1 230 0 193 b 13 35 12 117 13 75 l 13 -35 b 14 -85 13 -52 14 -68 b 29 -276 19 -150 33 -213 b 20 -448 24 -334 20 -392 b 24 -534 20 -477 22 -505 b 114 -708 30 -605 59 -664 b 197 -780 143 -732 171 -755 b 344 -1153 301 -884 341 -1011 b 343 -1172 344 -1159 343 -1166 b 350 -1185 343 -1176 344 -1182 z m 300 -691 b 117 -508 243 -616 168 -575 b 82 -408 94 -480 82 -448 b 84 -379 82 -397 82 -387 b 259 -553 135 -451 206 -492 b 301 -667 287 -583 301 -619 b 300 -691 301 -674 301 -683 z m 298 -410 b 118 -235 238 -351 176 -295 b 76 -88 82 -197 78 -147 b 268 -252 137 -153 203 -202 b 330 -360 304 -279 330 -315 b 323 -402 330 -373 327 -387 b 311 -418 318 -413 315 -418 b 298 -410 307 -418 302 -415 z m 287 -88 b 62 193 186 -17 79 48 b 229 52 121 144 174 98 b 289 -33 256 29 274 -3 b 295 -56 294 -42 295 -49 b 287 -88 295 -66 292 -76 z\"\n    },\n    \"flag64thDown\": {\n      \"x_min\": -5,\n      \"x_max\": 281,\n      \"y_min\": -375,\n      \"y_max\": 795.5430338167065,\n      \"ha\": 1170.5430338167066,\n      \"o\": \"m 348 1145 b 341 1132 343 1142 341 1136 b 343 1113 341 1126 343 1119 b 196 740 340 971 300 844 b 112 668 170 714 141 691 b 23 494 58 624 29 564 b 19 408 20 465 19 436 b 27 236 19 351 23 294 b 13 45 32 173 17 109 b 12 -6 13 27 12 12 l 12 -75 b 4 -196 12 -115 10 -157 b -3 -307 -1 -233 -3 -271 l -3 -382 b -7 -475 -3 -412 -3 -444 l -7 -484 b -3 -520 -7 -495 -6 -507 b 23 -539 0 -533 13 -537 b 26 -540 24 -540 24 -540 b 40 -521 35 -540 36 -528 b 60 -435 53 -494 60 -464 b 85 -376 60 -410 71 -393 b 225 -255 125 -328 180 -298 b 340 -78 276 -204 321 -148 b 351 24 347 -46 351 -14 b 350 63 351 37 350 50 b 347 86 347 71 347 79 b 386 229 347 132 380 179 b 392 305 389 253 392 279 b 372 449 392 354 384 403 b 357 520 364 472 357 495 b 359 540 357 527 357 533 b 361 580 361 553 361 567 b 348 704 361 624 354 664 b 347 716 348 708 347 713 b 357 757 347 732 351 744 b 405 982 383 831 405 904 b 379 1122 405 1031 397 1079 b 348 1145 373 1135 363 1149 z m 298 651 b 300 626 300 642 300 634 b 258 513 300 579 285 543 b 82 338 204 452 134 410 b 81 367 81 347 81 357 b 115 468 81 408 92 439 b 298 651 167 534 242 576 z m 297 370 b 310 377 301 374 305 377 b 321 361 314 377 317 373 b 328 320 325 347 328 333 b 266 212 328 275 302 239 b 75 48 202 161 135 112 b 117 194 76 107 81 157 b 297 370 174 255 236 311 z m 285 48 b 294 16 291 36 294 26 b 288 -7 294 9 292 1 b 228 -92 272 -37 255 -69 b 60 -233 173 -138 120 -184 b 285 48 78 -88 184 -23 z\"\n    },\n    \"flag128thUp\": {\n      \"x_min\": 0,\n      \"x_max\": 252,\n      \"y_min\": -804,\n      \"y_max\": 530,\n      \"ha\": 1334,\n      \"o\": \"m 298 -1158 b 328 -1126 312 -1158 320 -1139 b 330 -1116 330 -1123 330 -1119 b 347 -996 343 -1076 347 -1037 b 328 -837 347 -943 338 -890 b 320 -778 324 -816 320 -798 b 330 -733 320 -763 323 -749 b 340 -665 338 -714 337 -688 b 341 -645 340 -660 341 -652 b 333 -534 341 -609 333 -572 b 343 -471 333 -513 334 -492 b 361 -366 356 -436 361 -402 b 331 -202 361 -311 348 -256 b 328 -187 330 -197 328 -193 b 331 -179 328 -184 328 -181 b 363 -55 353 -137 363 -96 b 337 79 363 -12 351 33 b 327 114 333 92 327 104 b 344 144 327 124 331 132 b 359 174 353 150 357 163 b 361 228 360 193 361 210 b 243 517 361 337 325 435 b 147 596 213 546 179 569 b 75 708 111 626 75 655 b 62 744 75 723 68 733 b 50 763 58 752 58 763 b 46 762 49 763 48 762 b 17 742 36 757 22 757 b 0 697 14 726 0 711 b 1 595 0 662 3 631 b 0 469 0 552 0 511 b 1 429 0 456 0 442 b 22 289 6 382 22 337 b 24 128 22 238 24 184 b 22 66 24 108 23 86 b 19 -19 20 37 19 10 b 20 -132 19 -56 20 -95 b 13 -276 20 -180 19 -229 b 9 -359 10 -304 9 -330 b 12 -487 9 -402 12 -445 b 56 -582 12 -526 29 -554 b 197 -742 107 -632 160 -681 b 288 -1100 265 -851 276 -976 b 288 -1122 288 -1107 287 -1115 b 287 -1145 289 -1129 287 -1138 b 298 -1158 287 -1153 288 -1158 z m 249 -609 b 69 -357 197 -520 88 -471 b 249 -609 131 -441 229 -498 z m 279 -396 b 132 -223 233 -330 180 -279 b 81 -112 104 -192 81 -156 b 82 -91 81 -105 81 -98 b 279 -396 167 -125 269 -281 z m 271 -73 b 127 72 233 -14 179 26 b 81 167 96 98 81 127 b 84 194 81 176 82 184 b 271 -73 148 102 242 39 z m 304 150 b 75 475 229 256 112 334 b 304 150 233 357 305 287 z\"\n    },\n    \"flag128thDown\": {\n      \"x_min\": -0.8888888888888888,\n      \"x_max\": 252,\n      \"y_min\": -580,\n      \"y_max\": 754,\n      \"ha\": 1334,\n      \"o\": \"m 298 1086 b 287 1073 288 1086 287 1081 b 288 1050 287 1066 289 1057 b 288 1028 287 1043 288 1035 b 197 670 276 904 265 779 b 56 510 160 609 107 560 b 12 415 29 482 12 454 b 9 287 12 373 9 330 b 13 204 9 258 10 232 b 20 60 19 157 20 108 b 19 -53 20 23 19 -16 b 22 -138 19 -82 20 -109 b 24 -200 23 -158 24 -180 b 22 -361 24 -256 22 -310 b 1 -501 22 -409 6 -454 b 0 -541 0 -514 0 -528 b 0 -667 0 -583 -3 -624 b 0 -809 0 -675 -3 -791 b 46 -834 4 -825 36 -829 b 50 -835 48 -834 49 -835 b 62 -816 58 -835 58 -824 b 75 -780 68 -805 75 -795 b 147 -668 75 -727 111 -698 b 243 -589 179 -641 213 -618 b 361 -300 325 -507 361 -409 b 359 -246 361 -282 360 -265 b 344 -216 357 -235 353 -222 b 327 -186 331 -204 327 -196 b 337 -151 327 -176 333 -164 b 363 -17 351 -105 363 -60 b 331 107 363 24 353 65 b 328 115 328 109 328 112 b 331 130 328 121 330 125 b 361 294 348 184 361 239 b 343 399 361 330 356 364 b 333 462 334 420 333 441 b 341 573 333 500 341 537 b 340 593 341 580 340 588 b 330 661 337 616 338 642 b 320 706 323 677 320 691 b 328 765 320 726 324 744 b 347 924 338 818 347 871 b 330 1044 347 965 343 1004 b 328 1054 330 1047 330 1051 b 298 1086 320 1067 312 1086 z m 249 537 b 69 285 229 426 131 369 b 249 537 88 399 197 448 z m 279 324 b 82 19 269 209 167 53 b 81 40 81 26 81 33 b 132 151 81 84 104 120 b 279 324 180 207 233 258 z m 271 1 b 84 -266 242 -111 148 -174 b 81 -239 82 -256 81 -248 b 127 -144 81 -199 96 -170 b 271 1 179 -98 233 -58 z m 304 -222 b 75 -547 305 -359 233 -429 b 304 -222 112 -406 229 -328 z\"\n    },\n    \"accidentalFlat\": {\n      \"x_min\": 1,\n      \"x_max\": 209,\n      \"y_min\": -208,\n      \"y_max\": 472,\n      \"ha\": 680,\n      \"o\": \"m 29 -300 b 46 -289 33 -300 39 -297 b 107 -243 65 -274 86 -258 b 301 127 233 -153 301 -30 b 298 186 301 147 301 166 b 190 297 291 256 251 297 b 147 289 177 297 163 294 b 86 265 127 284 107 274 l 85 264 l 85 301 b 91 465 85 356 88 410 b 94 559 91 497 94 527 b 84 651 94 589 91 621 b 66 680 81 661 81 680 l 65 680 b 37 645 49 678 37 665 b 33 523 36 605 32 563 l 33 478 b 26 223 33 393 29 308 b 1 -141 22 101 1 -19 b 17 -287 1 -189 4 -239 b 29 -300 20 -295 23 -300 z m 68 -105 b 76 12 71 -68 72 -29 b 81 107 79 43 81 75 l 86 109 b 171 135 114 121 141 135 b 204 128 181 135 193 132 b 238 92 228 120 239 108 b 230 63 238 84 236 75 b 68 -105 193 -10 132 -59 z\"\n    },\n    \"accidentalNatural\": {\n      \"x_min\": 0,\n      \"x_max\": 213.5,\n      \"y_min\": -456,\n      \"y_max\": 462,\n      \"ha\": 918,\n      \"o\": \"m 255 -657 b 281 -624 271 -657 275 -636 b 285 -599 282 -615 285 -608 b 292 -300 288 -500 289 -400 b 289 -161 292 -253 289 -207 b 300 128 292 -65 297 32 b 304 168 300 128 302 150 l 304 173 l 305 190 l 305 199 l 307 225 b 304 259 307 229 310 246 b 272 298 297 274 302 305 b 63 266 204 279 134 272 b 72 514 68 348 72 432 b 71 595 72 541 72 567 b 56 665 71 619 66 642 b 17 579 9 651 17 608 b 3 144 19 433 7 289 b 0 -7 1 94 0 43 b 3 -134 0 -50 1 -92 b 7 -219 3 -163 7 -192 b 35 -251 7 -243 17 -251 b 49 -249 39 -251 43 -251 l 223 -223 l 230 -222 l 230 -359 b 223 -516 230 -410 223 -464 b 236 -619 223 -550 226 -585 b 255 -657 240 -634 236 -657 z m 58 -81 l 58 -63 b 55 81 56 -14 53 33 l 56 99 b 85 99 65 99 75 98 b 232 108 134 104 183 107 l 240 109 l 236 66 b 232 -48 235 29 232 -10 b 58 -81 174 -63 115 -73 z\"\n    },\n    \"accidentalSharp\": {\n      \"x_min\": -22,\n      \"x_max\": 390,\n      \"y_min\": -384,\n      \"y_max\": 383,\n      \"ha\": 767,\n      \"o\": \"m 202 -553 b 219 -526 213 -552 216 -536 b 226 -471 225 -507 226 -488 b 225 -425 226 -455 225 -441 b 226 -392 225 -415 225 -402 b 233 -305 229 -363 232 -334 l 297 -292 b 331 -469 300 -353 311 -412 b 347 -485 333 -477 338 -485 b 363 -469 356 -487 359 -477 b 374 -418 373 -454 374 -435 b 376 -382 376 -405 376 -393 b 372 -276 376 -347 373 -311 l 455 -259 b 550 -156 534 -243 544 -232 b 550 -109 550 -137 552 -124 b 526 -78 549 -91 541 -78 b 523 -78 524 -78 524 -78 b 507 -79 517 -78 513 -78 b 403 -101 474 -88 438 -95 l 379 -105 b 382 -42 380 -85 380 -63 b 384 96 383 4 384 50 b 503 131 425 107 464 118 b 549 173 524 138 543 150 b 562 249 554 199 562 223 b 554 294 562 264 560 279 b 536 315 549 308 544 315 b 533 315 534 315 534 315 b 517 312 528 315 523 315 b 382 266 472 294 428 279 l 377 344 b 359 531 374 406 372 469 b 348 552 356 539 357 552 b 347 552 348 552 347 552 l 343 552 b 315 528 331 549 317 544 l 315 501 b 320 249 315 416 318 333 l 243 232 b 239 361 243 275 242 318 b 226 425 238 383 238 403 b 199 359 194 409 199 382 b 193 223 196 312 194 268 b 72 202 153 215 112 209 b 4 118 13 192 4 183 b 10 66 0 102 12 84 b 33 29 7 39 14 30 b 48 32 37 29 42 30 b 187 55 95 39 141 46 l 183 -75 b 176 -145 181 -99 179 -122 b 16 -179 122 -156 69 -166 b -32 -232 -14 -186 -32 -197 b -17 -331 -32 -266 -19 -298 b -1 -356 -17 -347 -13 -354 b 12 -353 1 -356 6 -354 b 167 -320 63 -341 115 -331 b 166 -377 166 -338 166 -357 b 189 -526 166 -428 171 -477 b 202 -553 192 -536 189 -553 z m 240 -132 b 243 -37 242 -101 242 -69 b 245 65 245 -3 245 30 b 315 79 269 69 292 73 b 301 -120 308 13 305 -53 z\"\n    },\n    \"accidentalDoubleSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 287,\n      \"y_min\": -159,\n      \"y_max\": 159,\n      \"ha\": 318,\n      \"o\": \"m 84 -229 b 107 -216 91 -229 98 -225 b 200 -125 138 -186 167 -154 b 232 -95 212 -115 222 -105 b 347 -189 271 -125 310 -157 b 370 -200 356 -196 363 -200 b 396 -179 380 -200 389 -192 b 412 -102 410 -154 406 -125 b 377 -27 410 -69 400 -46 l 325 14 b 402 91 350 42 374 68 b 413 127 410 96 413 107 b 382 200 409 148 397 176 b 350 229 370 220 360 229 b 314 210 340 229 328 223 b 274 174 300 199 285 187 b 212 104 252 151 232 128 b 92 187 173 132 132 161 b 78 193 86 192 82 193 b 68 190 75 193 72 193 b 48 179 62 186 53 187 b 40 137 43 168 40 154 b 81 16 40 92 56 32 b 107 -3 89 10 98 4 b 14 -94 76 -32 45 -62 b 0 -124 6 -102 0 -114 b 12 -154 0 -134 3 -144 b 62 -215 26 -176 48 -193 b 84 -229 69 -225 76 -229 z\"\n    },\n    \"accidentalDoubleFlat\": {\n      \"x_min\": 0,\n      \"x_max\": 359,\n      \"y_min\": -220,\n      \"y_max\": 446,\n      \"ha\": 666,\n      \"o\": \"m 43 -317 b 72 -301 55 -317 63 -310 b 160 -186 108 -268 134 -226 b 236 -60 186 -145 212 -102 b 233 -131 235 -85 233 -108 b 239 -220 233 -161 235 -190 b 259 -246 240 -233 239 -240 b 301 -228 284 -252 291 -238 b 465 -7 369 -163 416 -85 b 517 173 500 48 517 108 b 451 307 517 229 505 284 b 409 315 436 312 422 315 b 331 287 382 315 356 305 b 311 274 324 282 320 274 l 310 274 l 310 566 b 305 621 310 585 312 603 b 294 642 301 628 305 642 l 292 642 b 264 622 282 641 266 636 b 253 575 259 606 256 590 b 246 418 248 523 246 471 b 248 243 246 360 248 302 l 248 187 b 164 238 220 225 193 238 b 85 213 140 238 112 226 b 84 229 85 220 84 225 b 86 315 85 258 86 287 b 81 528 86 386 82 458 b 71 582 81 547 78 566 b 56 603 66 590 68 603 l 53 603 b 23 580 40 600 26 598 b 19 537 20 566 19 552 b 20 514 19 530 19 521 b 26 390 24 472 26 432 b 14 66 26 282 16 174 b 0 -168 13 -12 0 -91 b 12 -279 0 -206 3 -242 b 30 -314 16 -294 14 -308 b 43 -317 35 -317 39 -317 z m 75 -147 b 73 30 75 -86 75 -29 b 118 82 73 62 92 76 b 132 84 124 84 128 84 b 190 52 156 84 174 69 b 193 40 192 49 193 45 b 192 33 193 37 193 35 b 75 -147 157 -30 125 -95 z m 301 -72 b 302 7 302 -45 302 -19 l 302 86 b 351 158 304 121 321 145 b 383 166 361 163 373 166 b 435 143 402 166 419 157 b 445 127 441 138 445 132 b 441 114 445 122 444 118 b 301 -72 397 49 354 -14 z\"\n    },\n    \"accidentalParensLeft\": {\n      \"x_min\": 0,\n      \"x_max\": 130.18934911242604,\n      \"y_min\": -270,\n      \"y_max\": 267.6082500723851,\n      \"ha\": 537.6082500723851,\n      \"o\": \"m 107 -389 b 127 -374 114 -389 120 -384 b 141 -347 132 -367 137 -357 b 151 -294 148 -330 151 -311 b 122 -207 151 -265 141 -236 b 63 -65 94 -164 72 -117 b 59 -10 60 -46 59 -27 b 145 223 59 78 94 153 b 187 354 176 262 189 305 b 177 384 187 364 190 380 b 143 373 166 387 153 383 b 124 354 137 367 130 361 b 0 -35 33 240 0 108 l 0 -92 b 85 -372 4 -193 27 -287 b 107 -389 92 -383 99 -389 z\"\n    },\n    \"accidentalParensRight\": {\n      \"x_min\": -0.4444444444444445,\n      \"x_max\": 139,\n      \"y_min\": -275,\n      \"y_max\": 277,\n      \"ha\": 552,\n      \"o\": \"m 58 -396 b 96 -354 75 -396 85 -370 b 200 13 168 -238 200 -111 b 153 268 200 109 184 190 b 49 392 131 320 101 364 b 26 399 40 397 33 399 b 0 366 10 399 0 387 b 0 318 -1 350 0 334 l 0 291 b 27 238 -3 266 7 253 b 143 9 105 180 143 98 b 141 -20 143 -1 143 -10 b 63 -225 135 -92 108 -164 b 36 -307 45 -251 36 -278 b 40 -344 36 -320 37 -331 b 42 -356 42 -347 42 -351 b 58 -396 42 -374 37 -396 z\"\n    },\n    \"accidentalQuarterToneFlatStein\": {\n      \"x_min\": 0,\n      \"x_max\": 208,\n      \"y_min\": -240,\n      \"y_max\": 440,\n      \"ha\": 680,\n      \"o\": \"m 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z\"\n    },\n    \"accidentalThreeQuarterTonesFlatZimmermann\": {\n      \"x_min\": 0,\n      \"x_max\": 422,\n      \"y_min\": -240,\n      \"y_max\": 440,\n      \"ha\": 680,\n      \"o\": \"m 336 -346 b 353 -336 340 -346 346 -343 b 413 -289 372 -320 393 -304 b 608 81 540 -199 608 -76 b 605 140 608 101 608 120 b 497 251 598 210 557 251 b 454 243 484 251 469 248 b 393 219 433 238 413 228 l 392 217 l 392 255 b 397 419 392 310 395 364 b 400 513 397 451 400 481 b 390 605 400 543 397 575 b 373 634 387 615 387 634 l 372 634 b 344 599 356 632 344 619 b 340 477 343 559 338 517 l 340 432 b 333 177 340 347 336 262 b 308 -187 328 55 308 -65 b 324 -333 308 -235 311 -285 b 336 -346 327 -341 330 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z m 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 374 -151 b 383 -35 377 -114 379 -75 b 387 60 386 -3 387 29 l 393 63 b 478 89 420 75 448 89 b 511 82 488 89 500 86 b 544 46 534 73 546 62 b 537 17 544 37 543 29 b 374 -151 500 -56 439 -105 z\"\n    },\n    \"accidentalQuarterToneSharpStein\": {\n      \"x_min\": 0,\n      \"x_max\": 300,\n      \"y_min\": -338,\n      \"y_max\": 351,\n      \"ha\": 689,\n      \"o\": \"m 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 b 35 66 29 66 32 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z\"\n    },\n    \"accidentalThreeQuarterTonesSharpStein\": {\n      \"x_min\": -23,\n      \"x_max\": 388,\n      \"y_min\": -373,\n      \"y_max\": 445,\n      \"ha\": 818,\n      \"o\": \"m 114 -537 b 138 -475 137 -518 138 -495 b 147 -292 138 -413 144 -353 b 212 -278 168 -287 190 -282 b 243 -444 215 -333 225 -389 b 261 -467 248 -454 251 -465 b 281 -446 272 -469 276 -455 b 292 -347 292 -416 288 -384 b 288 -262 289 -320 288 -291 l 374 -245 b 376 -311 374 -266 374 -288 b 390 -456 379 -357 379 -405 b 416 -396 412 -436 415 -418 b 423 -287 420 -360 423 -323 b 422 -235 423 -269 423 -252 b 451 -229 432 -233 441 -232 b 547 -98 524 -215 547 -199 l 547 -89 b 521 -49 546 -59 540 -49 b 497 -52 516 -49 507 -49 b 418 -68 469 -56 444 -63 b 423 52 419 -29 422 12 b 426 140 425 81 425 109 b 495 160 449 145 472 153 b 552 219 526 170 546 189 b 559 279 557 240 553 262 b 530 341 559 324 552 341 b 490 331 520 341 507 338 b 432 311 471 324 452 318 b 449 552 436 392 442 471 b 452 588 451 563 452 575 b 446 622 452 599 451 611 b 436 641 444 629 448 641 b 418 628 428 641 420 636 b 409 602 413 621 410 611 b 386 297 396 501 390 399 b 297 274 356 288 327 281 b 291 403 295 317 294 360 b 274 550 288 452 284 501 b 259 569 271 564 265 569 b 240 559 253 569 248 563 b 230 537 232 554 230 546 l 230 488 b 233 369 230 448 232 409 b 236 261 236 333 238 297 b 156 245 210 255 183 251 b 154 396 154 295 154 346 b 150 416 154 403 153 410 b 140 438 145 423 150 438 l 138 438 b 118 413 128 436 118 428 b 112 354 118 393 114 374 b 109 238 109 315 109 276 b 49 226 89 233 69 230 b 3 163 16 222 3 202 b 7 91 3 138 9 114 b 29 62 7 69 13 62 b 39 63 32 62 35 63 b 104 73 60 66 82 71 b 101 -10 104 46 102 17 l 92 -132 l 10 -150 b -33 -204 -19 -157 -33 -170 b -19 -310 -32 -240 -19 -274 b -6 -324 -19 -321 -13 -324 b 6 -323 -1 -324 1 -324 b 82 -307 32 -317 58 -311 b 81 -376 82 -330 81 -353 b 114 -537 81 -431 94 -484 z m 154 -120 b 157 20 154 -73 156 -26 b 158 82 158 40 158 62 b 230 95 183 86 206 89 b 225 0 229 63 226 32 b 217 -107 223 -35 220 -71 z m 294 -92 b 297 -37 295 -73 295 -56 b 300 49 300 -9 300 20 b 300 108 300 69 300 88 b 379 127 325 114 353 120 b 374 -76 376 59 374 -9 b 294 -92 347 -82 320 -86 z\"\n    },\n    \"accidentalBuyukMucennebFlat\": {\n      \"x_min\": 1.8692317181955784,\n      \"x_max\": 287,\n      \"y_min\": -248,\n      \"y_max\": 432.4720949426819,\n      \"ha\": 680.4720949426819,\n      \"o\": \"m 410 128 b 302 239 403 199 363 239 b 259 232 289 239 275 236 b 199 207 239 226 219 216 l 197 206 l 197 243 b 197 251 197 246 197 248 b 347 317 248 272 298 295 b 376 347 360 324 372 334 b 389 435 387 376 393 405 b 348 454 384 462 377 465 b 202 387 300 432 251 409 b 203 408 203 395 203 402 b 203 431 203 416 203 423 b 347 490 252 451 300 469 b 376 517 360 495 372 505 b 389 599 387 546 393 572 b 348 616 384 625 377 628 b 203 556 300 596 251 576 b 196 593 202 569 199 582 b 179 622 193 603 193 622 l 177 622 b 150 588 161 621 150 608 b 147 533 150 570 148 552 b 29 488 108 517 69 503 b 3 455 12 482 3 472 b 12 353 1 422 9 389 b 145 408 56 372 101 389 b 145 363 145 392 145 377 b 29 315 107 347 68 331 b 3 281 12 310 3 298 b 12 170 1 245 9 209 b 141 226 55 189 98 207 b 138 166 140 206 138 186 b 114 -199 134 43 115 -76 b 130 -344 114 -246 117 -297 b 141 -357 132 -353 135 -357 b 158 -347 145 -357 151 -354 b 219 -301 177 -331 199 -315 b 413 69 346 -210 413 -88 b 410 128 413 89 413 108 z m 350 35 b 343 6 350 26 348 17 b 180 -163 308 -69 245 -117 b 189 -46 183 -125 184 -86 b 193 49 192 -14 193 17 l 199 52 b 284 78 226 63 253 78 b 317 71 294 78 305 75 b 350 35 340 62 351 50 z\"\n    },\n    \"accidentalBakiyeFlat\": {\n      \"x_min\": 1.8692317181955784,\n      \"x_max\": 287,\n      \"y_min\": -236,\n      \"y_max\": 444,\n      \"ha\": 680,\n      \"o\": \"m 141 -340 b 158 -330 145 -340 151 -337 b 219 -284 177 -314 199 -298 b 413 86 346 -193 413 -71 b 410 145 413 107 413 125 b 302 256 403 216 363 256 b 259 249 289 256 275 253 b 199 225 239 243 219 233 l 197 223 l 197 261 b 199 334 197 285 199 310 b 347 406 249 357 298 382 b 376 439 360 413 372 425 b 390 516 384 465 390 490 b 389 537 390 523 390 530 b 372 564 384 556 382 564 b 348 557 367 564 359 562 b 204 487 300 537 253 510 b 206 518 206 497 206 507 b 196 611 206 549 203 580 b 179 639 193 621 193 639 l 177 639 b 150 605 161 638 150 625 b 145 482 148 564 144 523 l 145 458 b 29 405 107 439 68 420 b 3 366 12 397 3 386 b 12 243 1 325 9 287 b 143 307 56 265 99 285 l 138 183 b 114 -181 134 60 114 -59 b 130 -327 114 -229 117 -279 b 141 -340 132 -336 135 -340 z m 180 -145 b 189 -29 183 -108 184 -69 b 193 66 192 3 193 35 l 199 69 b 284 95 226 81 253 95 b 317 88 294 95 305 92 b 350 52 340 79 351 68 b 343 23 350 43 348 35 b 180 -145 305 -50 245 -99 z\"\n    },\n    \"accidentalKomaSharp\": {\n      \"x_min\": 0,\n      \"x_max\": 300,\n      \"y_min\": -338,\n      \"y_max\": 351,\n      \"ha\": 689,\n      \"o\": \"m 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 b 35 66 29 66 32 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z\"\n    },\n    \"accidentalKucukMucennebSharp\": {\n      \"x_min\": -0.15206251809627475,\n      \"x_max\": 359,\n      \"y_min\": -420,\n      \"y_max\": 343,\n      \"ha\": 763,\n      \"o\": \"m 236 -605 b 262 -543 256 -583 261 -564 b 269 -423 268 -503 269 -464 b 266 -340 269 -396 268 -367 l 361 -318 b 405 -276 384 -312 399 -298 b 413 -189 412 -248 416 -219 b 395 -164 412 -171 409 -164 b 382 -166 392 -164 387 -164 b 264 -193 343 -176 304 -184 b 269 -102 265 -163 268 -132 b 454 -62 331 -89 392 -78 b 501 -23 477 -58 494 -45 b 517 62 511 6 517 33 b 487 112 517 95 513 112 b 471 111 482 112 477 112 b 274 66 406 95 340 81 b 276 138 275 91 276 114 b 350 154 301 144 325 148 b 402 203 377 160 396 176 b 412 284 408 230 412 258 b 392 311 412 302 406 311 b 372 308 386 311 379 310 b 287 291 343 301 314 297 l 295 405 b 298 441 297 416 298 428 b 292 475 298 452 297 464 b 282 494 289 482 294 494 b 264 481 274 494 266 490 b 255 455 259 474 256 464 b 239 282 248 397 243 340 b 148 268 209 278 179 274 b 62 164 62 252 62 253 l 62 132 b 79 108 60 117 65 108 l 86 108 l 230 130 b 229 92 230 118 229 105 b 228 56 228 79 228 68 b 66 20 173 43 120 32 b 0 -59 6 7 3 1 l 0 -138 b 14 -160 -1 -156 4 -160 b 27 -158 19 -160 23 -160 b 222 -112 92 -141 157 -127 b 220 -203 220 -143 220 -173 b 147 -217 196 -207 171 -213 b 89 -288 92 -228 89 -229 b 95 -347 85 -305 96 -325 b 112 -374 92 -366 98 -374 b 125 -373 117 -374 121 -374 l 220 -351 b 222 -458 220 -386 220 -422 b 236 -605 223 -504 225 -552 z\"\n    },\n    \"accidentalKoron\": {\n      \"x_min\": 0,\n      \"x_max\": 303,\n      \"y_min\": -462.4598053473055,\n      \"y_max\": 180,\n      \"ha\": 642.4598053473055,\n      \"o\": \"m 59 -665 b 72 -649 69 -662 72 -657 b 69 -626 72 -642 69 -634 b 69 -622 69 -625 69 -624 b 69 -600 69 -615 69 -608 b 55 -156 60 -456 68 -311 b 86 -170 66 -166 76 -170 b 112 -163 95 -170 104 -166 b 390 -35 204 -120 298 -78 b 436 -1 409 -27 436 -27 b 396 46 436 22 413 33 l 382 55 b 46 243 271 121 157 179 b 12 259 29 253 17 259 b 0 219 1 259 0 248 b 3 -372 0 22 3 -176 b 6 -616 3 -454 6 -536 b 59 -665 6 -638 40 -671 z m 55 -118 l 55 199 b 363 24 156 141 258 84 b 55 -118 259 -24 160 -69 z\"\n    },\n    \"accidentalSori\": {\n      \"x_min\": 0,\n      \"x_max\": 434,\n      \"y_min\": -295,\n      \"y_max\": 325,\n      \"ha\": 620,\n      \"o\": \"m 194 -425 b 196 -409 194 -418 196 -413 b 194 -194 196 -337 196 -266 b 364 -127 251 -171 308 -150 b 361 -321 363 -192 364 -256 b 410 -387 360 -357 373 -377 b 413 -373 412 -382 413 -377 b 418 -114 418 -287 418 -200 l 418 -105 b 595 -35 477 -82 536 -59 b 625 0 612 -27 625 -22 b 593 48 624 23 618 39 l 419 117 b 423 370 419 202 423 285 b 426 403 423 382 426 393 b 418 436 426 415 425 426 b 384 468 409 449 399 468 b 369 448 370 468 369 459 b 369 436 369 444 369 441 b 369 428 369 433 369 431 l 369 423 b 367 138 369 328 367 233 l 353 143 l 192 207 l 192 367 b 173 406 192 383 184 396 b 151 422 167 413 160 422 b 144 420 148 422 147 422 b 137 403 138 416 137 410 b 137 392 137 399 137 396 l 137 229 b 33 271 102 243 68 256 b 13 276 26 274 19 276 b 0 262 6 276 0 272 b 35 199 1 239 0 212 l 138 160 b 140 -148 138 58 138 -45 b 56 -181 111 -158 84 -170 b 24 -215 35 -189 24 -199 b 29 -235 24 -220 26 -228 b 49 -253 35 -249 42 -253 b 78 -240 59 -253 69 -243 b 140 -216 98 -233 120 -225 l 140 -356 b 194 -425 140 -406 141 -406 z m 194 -125 b 193 138 194 -37 193 50 b 315 89 233 122 275 107 b 366 71 333 84 350 76 b 364 -58 366 27 366 -16 b 194 -125 308 -81 251 -104 z m 419 -36 l 419 49 l 526 7 l 485 -10 z\"\n    },\n    \"articAccentAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 425,\n      \"y_min\": 0,\n      \"y_max\": 326,\n      \"ha\": 326,\n      \"o\": \"m 27 1 b 78 12 46 0 62 6 b 347 112 168 45 253 91 b 521 184 409 128 459 167 b 608 259 557 194 589 220 b 612 274 611 265 612 271 b 598 292 612 281 608 287 b 477 347 559 312 518 331 b 176 465 374 384 275 425 b 156 469 168 468 161 469 b 125 456 145 469 137 465 b 53 370 96 432 78 399 b 45 353 48 363 45 357 b 68 333 45 344 52 337 b 360 225 166 298 262 261 b 192 154 302 203 249 171 b 13 36 120 132 53 105 b 0 13 9 29 0 22 b 0 9 0 12 0 10 b 16 0 3 1 10 0 l 26 0 b 27 1 27 0 27 0 z\"\n    },\n    \"articAccentBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 425,\n      \"y_min\": -326,\n      \"y_max\": 0,\n      \"ha\": 326,\n      \"o\": \"m 16 -469 l 26 -469 b 27 -469 27 -469 27 -469 b 78 -458 46 -469 62 -464 b 347 -357 168 -426 253 -380 b 521 -285 409 -341 459 -302 b 608 -210 557 -276 589 -249 b 612 -196 611 -204 612 -200 b 598 -179 612 -189 608 -183 b 477 -122 559 -157 518 -138 b 176 -4 374 -85 275 -45 b 156 0 168 -1 161 0 b 125 -13 145 0 137 -4 b 53 -99 96 -37 78 -71 b 45 -117 48 -107 45 -112 b 68 -137 45 -125 52 -132 b 360 -245 166 -171 262 -209 b 192 -315 302 -266 249 -300 b 13 -433 120 -337 53 -366 b 0 -456 9 -442 0 -448 b 0 -461 0 -458 0 -459 b 16 -469 3 -468 10 -469 z\"\n    },\n    \"articTenutoAbove\": {\n      \"x_min\": 0.35192668236256364,\n      \"x_max\": 471.12386605641063,\n      \"y_min\": 0,\n      \"y_max\": 56,\n      \"ha\": 56,\n      \"o\": \"m 137 0 b 197 1 156 0 179 1 b 409 6 268 1 338 6 b 482 4 432 6 459 6 b 556 0 508 3 534 0 b 651 10 588 0 621 3 b 678 27 662 12 678 10 b 654 59 680 45 672 53 b 511 75 606 73 560 73 b 255 81 426 78 341 81 b 160 79 222 81 193 79 l 36 79 b 1 71 24 78 7 85 b 19 32 -3 56 9 43 b 45 16 26 24 36 20 b 137 0 76 3 108 0 z\"\n    },\n    \"articTenutoBelow\": {\n      \"x_min\": 0.35192668236256364,\n      \"x_max\": 471.12386605641063,\n      \"y_min\": -59,\n      \"y_max\": -3,\n      \"ha\": 56,\n      \"o\": \"m 137 -85 b 197 -84 156 -85 179 -84 b 409 -79 268 -84 338 -79 b 482 -81 432 -79 459 -79 b 556 -85 508 -82 534 -85 b 651 -75 588 -85 621 -82 b 678 -58 662 -73 678 -75 b 654 -26 680 -40 672 -32 b 511 -10 606 -12 560 -12 b 255 -4 426 -7 341 -4 b 160 -6 222 -4 193 -6 l 36 -6 b 1 -14 24 -7 7 0 b 19 -53 -3 -29 9 -42 b 45 -69 26 -60 36 -65 b 137 -85 76 -82 108 -85 z\"\n    },\n    \"articStaccatoAbove\": {\n      \"x_min\": 1.4151102965496913,\n      \"x_max\": 112,\n      \"y_min\": 0,\n      \"y_max\": 156,\n      \"ha\": 156,\n      \"o\": \"m 98 0 b 132 23 109 0 122 7 b 161 112 150 50 161 79 b 158 148 161 124 161 137 b 125 186 154 167 131 167 b 63 225 117 215 85 216 b 23 197 45 222 30 219 b 3 91 12 163 12 127 b 19 66 0 79 4 69 b 65 27 40 62 53 46 b 98 0 76 9 88 0 z\"\n    },\n    \"articStaccatoBelow\": {\n      \"x_min\": 1.4151102965496913,\n      \"x_max\": 112.08403222864916,\n      \"y_min\": -156,\n      \"y_max\": 0,\n      \"ha\": 156,\n      \"o\": \"m 132 -202 b 161 -112 151 -174 163 -145 b 158 -76 161 -101 161 -88 b 125 -39 153 -58 131 -58 b 63 0 115 -10 85 -9 b 23 -27 45 -3 30 -6 b 3 -134 12 -62 10 -98 b 19 -158 0 -145 4 -156 b 65 -197 40 -164 53 -179 b 98 -225 75 -216 88 -225 b 132 -202 109 -225 122 -217 z\"\n    },\n    \"articStaccatissimoAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 139,\n      \"y_min\": 0,\n      \"y_max\": 411,\n      \"ha\": 411,\n      \"o\": \"m 96 0 l 104 0 b 144 115 143 29 138 75 b 197 423 158 217 180 320 b 200 454 199 433 200 444 b 181 540 200 482 193 513 b 112 592 167 573 141 592 b 55 567 92 592 72 585 b 0 490 32 546 3 527 l 0 484 b 27 279 14 416 14 347 b 84 20 43 193 52 104 b 96 0 86 13 92 6 z\"\n    },\n    \"articStaccatissimoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 139,\n      \"y_min\": -411,\n      \"y_max\": 0,\n      \"ha\": 411,\n      \"o\": \"m 88 -592 b 145 -567 108 -592 128 -585 b 200 -490 168 -546 197 -527 l 200 -484 b 173 -279 186 -416 186 -347 b 117 -20 157 -193 148 -104 b 104 0 114 -13 108 -6 l 96 0 b 56 -115 58 -29 62 -75 b 3 -423 42 -217 20 -320 b 0 -454 1 -433 0 -444 b 19 -540 0 -482 7 -513 b 88 -592 33 -573 59 -592 z\"\n    },\n    \"articMarcatoAbove\": {\n      \"x_min\": 0.04121419527862119,\n      \"x_max\": 396,\n      \"y_min\": 0,\n      \"y_max\": 328.0000000000001,\n      \"ha\": 328.0000000000001,\n      \"o\": \"m 477 0 b 510 13 488 0 500 6 b 570 124 546 40 563 81 b 547 183 570 147 560 166 b 356 422 487 265 405 330 b 346 442 354 429 350 436 l 346 444 b 318 465 340 456 330 464 l 312 469 b 274 449 294 480 284 461 b 242 413 262 438 253 425 b 56 196 177 343 112 274 b 1 56 26 154 13 105 b 27 20 -4 35 9 20 b 42 23 32 20 37 20 b 84 53 59 29 72 39 b 255 269 141 125 193 200 b 275 229 262 255 266 242 b 448 14 324 151 390 86 b 477 0 456 4 467 0 z\"\n    },\n    \"articMarcatoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 395.9587858047214,\n      \"y_min\": -328.0000000000001,\n      \"y_max\": 0,\n      \"ha\": 328.0000000000001,\n      \"o\": \"m 258 -469 b 297 -449 276 -480 287 -461 b 328 -413 308 -438 317 -425 b 514 -196 393 -343 458 -274 b 569 -56 544 -154 557 -105 b 543 -20 575 -35 562 -20 b 528 -23 539 -20 533 -20 b 487 -53 511 -29 498 -39 b 315 -269 429 -125 377 -200 b 295 -229 308 -255 304 -242 b 122 -14 246 -151 180 -86 b 94 0 114 -4 104 0 b 60 -13 82 0 71 -6 b 0 -124 24 -40 7 -81 b 23 -183 0 -147 10 -166 b 215 -422 84 -265 166 -330 b 225 -442 216 -429 220 -436 l 225 -444 b 252 -465 230 -456 240 -464 z\"\n    },\n    \"fermataAbove\": {\n      \"x_min\": -0.04550444040404433,\n      \"x_max\": 472,\n      \"y_min\": 2.015071727506986,\n      \"y_max\": 454,\n      \"ha\": 451.984928272493,\n      \"o\": \"m 39 10 b 78 108 66 37 71 73 b 163 311 92 181 111 252 b 284 423 199 353 239 392 b 373 458 312 444 340 454 b 433 431 395 458 410 446 b 603 153 530 361 596 276 b 595 121 603 144 595 131 l 595 88 b 602 50 596 75 589 55 b 639 73 619 43 631 60 b 651 102 645 82 648 92 b 667 194 660 132 662 163 b 680 278 671 222 672 248 b 560 567 680 386 638 481 b 396 654 508 625 452 649 b 291 632 364 654 325 644 b 161 526 235 613 200 566 b 4 249 85 446 26 357 b 4 174 0 222 -3 196 b 10 19 4 124 4 69 b 29 4 12 6 16 0 b 39 10 35 4 33 4 z m 338 37 b 370 40 350 36 357 36 b 380 75 387 40 380 43 b 389 94 382 79 382 85 b 356 132 389 111 374 122 b 269 154 328 147 300 156 b 225 125 252 154 228 157 b 261 48 222 81 232 56 b 338 37 287 40 312 40 z\"\n    },\n    \"fermataBelow\": {\n      \"x_min\": -0.310835055998654,\n      \"x_max\": 518.570567335755,\n      \"y_min\": -430,\n      \"y_max\": -0.9161449836506543,\n      \"ha\": 429.08385501634933,\n      \"o\": \"m 344 -615 b 500 -543 402 -602 452 -576 b 713 -253 605 -471 661 -364 b 746 -98 737 -204 750 -153 b 727 -59 744 -82 744 -59 b 688 -88 711 -59 694 -68 b 678 -109 687 -96 683 -102 b 562 -314 648 -183 611 -252 b 387 -439 516 -373 458 -416 b 328 -449 367 -446 347 -449 b 180 -386 274 -449 225 -423 b 69 -179 111 -330 69 -262 b 75 -121 69 -160 71 -141 b 84 -58 78 -101 84 -79 b 82 -39 84 -52 84 -45 b 68 -1 79 -26 82 -4 b 26 -32 49 0 33 -12 b 20 -52 24 -39 22 -45 b 0 -223 9 -107 -3 -161 b 141 -553 1 -348 27 -468 b 304 -619 192 -590 243 -619 b 344 -615 317 -619 330 -618 z m 415 -190 b 435 -157 429 -192 435 -184 b 308 -27 435 -86 379 -27 b 271 -46 287 -27 272 -35 b 269 -69 269 -55 269 -62 b 364 -183 269 -128 302 -170 z\"\n    },\n    \"breathMarkComma\": {\n      \"x_min\": 0,\n      \"x_max\": 148,\n      \"y_min\": 0,\n      \"y_max\": 275,\n      \"ha\": 275,\n      \"o\": \"m 120 0 b 187 78 156 20 174 48 b 213 209 206 121 213 164 b 206 294 213 238 210 265 b 140 390 200 337 171 367 b 122 396 134 395 128 396 b 68 382 105 396 85 384 b 46 379 60 382 53 382 b 0 328 12 369 0 357 b 1 311 0 323 1 317 b 30 210 4 275 22 243 b 66 167 39 179 46 167 b 94 171 73 167 82 168 b 143 180 109 174 124 180 b 160 179 148 180 154 180 b 120 66 124 145 120 107 b 120 0 120 45 121 23 z\"\n    },\n    \"breathMarkUpbow\": {\n      \"x_min\": 0,\n      \"x_max\": 254,\n      \"y_min\": 0,\n      \"y_max\": 595,\n      \"ha\": 595,\n      \"o\": \"m 233 0 b 256 48 251 14 253 30 b 272 183 264 92 265 138 b 311 455 289 274 295 364 b 350 716 327 541 341 628 b 366 815 354 749 366 782 b 359 857 366 829 363 842 b 327 815 334 852 330 832 b 302 674 315 769 310 721 b 248 357 288 567 269 462 b 225 226 240 314 242 268 b 210 251 212 232 213 243 b 69 721 163 408 117 564 b 32 835 58 760 53 801 b 20 851 29 841 27 851 b 14 850 19 851 16 851 b 0 828 6 847 0 838 l 0 825 b 12 765 1 804 7 785 b 194 125 73 552 132 338 b 233 0 206 84 213 42 z\"\n    },\n    \"caesura\": {\n      \"x_min\": 0,\n      \"x_max\": 565.5831864753839,\n      \"y_min\": -0.09016994374947417,\n      \"y_max\": 562.4481112129314,\n      \"ha\": 562.5382811566809,\n      \"o\": \"m 226 1 b 248 13 238 -4 243 7 l 353 137 b 759 638 490 302 632 464 b 814 805 795 688 819 740 b 779 786 796 805 788 796 b 628 609 724 732 678 668 b 310 242 523 485 416 363 b 217 69 265 190 217 140 b 222 30 217 58 219 45 b 222 23 222 29 220 26 b 220 12 222 20 220 16 b 226 1 220 7 222 3 z m 0 76 b 49 122 24 92 37 107 b 444 613 180 287 305 455 b 528 770 484 660 518 708 b 531 792 530 778 531 785 b 524 808 531 799 530 805 b 490 792 513 815 498 802 b 390 683 456 756 420 721 b 48 262 275 543 164 400 b 0 76 0 207 7 145 z\"\n    },\n    \"caesuraCurved\": {\n      \"x_min\": 0,\n      \"x_max\": 386,\n      \"y_min\": -10,\n      \"y_max\": 584,\n      \"ha\": 594,\n      \"o\": \"m 180 -14 b 246 14 213 -13 230 0 b 347 144 288 52 315 99 b 526 471 420 246 488 350 b 556 671 546 537 556 603 b 543 798 556 713 553 756 b 504 837 537 822 521 828 b 490 841 500 840 494 841 b 472 832 482 841 477 838 b 406 678 436 785 406 737 b 410 638 406 665 408 652 b 425 511 419 595 425 553 b 315 186 425 395 387 287 b 180 -14 271 122 228 58 z m 14 24 b 49 39 29 24 40 32 b 120 114 76 60 99 85 b 216 276 156 166 184 223 b 317 626 281 384 317 501 b 315 664 317 639 317 651 b 301 773 314 701 311 737 b 262 808 295 795 278 808 b 245 799 256 808 249 805 b 170 641 209 750 170 706 b 171 621 170 634 170 628 b 177 511 176 585 177 549 b 114 229 177 415 160 320 b 0 26 79 161 42 95 b 14 24 6 24 10 24 z\"\n    },\n    \"restMaxima\": {\n      \"x_min\": 0,\n      \"x_max\": 366,\n      \"y_min\": -255,\n      \"y_max\": 255,\n      \"ha\": 510,\n      \"o\": \"m 397 -367 b 504 -343 436 -367 468 -347 b 518 -318 516 -341 518 -330 b 527 -30 518 -217 527 -117 b 526 33 527 -7 527 13 l 526 301 b 501 350 526 323 520 341 b 428 367 477 361 452 367 b 374 359 410 367 393 364 b 357 333 361 354 357 347 b 356 91 357 252 356 171 l 356 30 b 340 -307 357 -82 346 -194 b 397 -367 337 -354 350 -367 z m 46 -357 b 58 -356 49 -357 53 -357 b 154 -333 91 -351 121 -338 b 173 -305 168 -330 173 -320 l 173 302 b 132 356 173 330 157 348 b 68 364 112 363 89 364 b 3 304 19 363 1 348 l 3 4 l 0 4 b 1 -302 0 -98 0 -200 b 46 -357 1 -331 16 -357 z\"\n    },\n    \"restDoubleWhole\": {\n      \"x_min\": 0,\n      \"x_max\": 122,\n      \"y_min\": 0,\n      \"y_max\": 249,\n      \"ha\": 249,\n      \"o\": \"m 43 0 b 58 1 48 0 52 0 b 124 20 81 6 102 17 b 176 96 173 27 176 58 b 173 220 174 138 173 179 b 176 304 173 248 176 276 b 140 353 176 331 163 346 b 95 359 125 356 111 359 b 32 346 73 359 52 354 b 0 315 20 340 0 337 b 1 243 0 291 1 268 l 1 174 l 4 174 l 4 48 b 43 0 4 16 17 0 z\"\n    },\n    \"restWhole\": {\n      \"x_min\": 0.8908513171538642,\n      \"x_max\": 500,\n      \"y_min\": -120,\n      \"y_max\": 14,\n      \"ha\": 134,\n      \"o\": \"m 76 -173 l 356 -173 l 356 -171 l 642 -171 b 719 -115 680 -171 717 -145 b 720 -82 719 -104 720 -92 b 711 -20 720 -60 719 -40 b 672 17 704 0 694 10 b 649 20 664 20 657 20 b 605 17 634 20 621 17 b 92 19 433 17 262 17 b 29 7 69 20 49 12 b 9 -17 12 4 9 -6 b 10 -43 9 -26 10 -35 b 1 -84 10 -58 3 -72 b 76 -173 0 -147 7 -173 z\"\n    },\n    \"restHalf\": {\n      \"x_min\": 0,\n      \"x_max\": 518.3998530468286,\n      \"y_min\": 0,\n      \"y_max\": 162,\n      \"ha\": 162,\n      \"o\": \"m 98 0 l 446 0 l 556 0 b 665 1 592 0 629 0 b 746 82 720 3 743 29 b 736 174 749 114 740 144 b 670 232 729 215 708 232 b 570 229 636 232 603 229 b 356 233 498 229 426 233 l 73 233 b 0 179 19 233 0 220 b 1 154 0 171 0 164 b 6 95 4 135 6 115 b 98 0 3 27 29 0 z\"\n    },\n    \"restQuarter\": {\n      \"x_min\": -0.3784452492533808,\n      \"x_max\": 263,\n      \"y_min\": -415,\n      \"y_max\": 415,\n      \"ha\": 830,\n      \"o\": \"m 151 -596 b 164 -563 163 -589 161 -575 b 160 -546 164 -557 161 -552 b 124 -396 148 -495 135 -446 b 122 -380 122 -390 122 -384 b 199 -255 122 -331 158 -272 b 228 -256 209 -249 217 -253 b 324 -346 274 -271 298 -310 b 353 -369 331 -356 341 -369 b 360 -367 356 -369 357 -369 b 379 -336 373 -361 379 -348 l 377 -325 b 344 -232 372 -292 366 -258 b 249 -58 301 -180 278 -117 b 242 -36 245 -49 242 -42 b 258 -7 242 -26 248 -17 b 328 78 284 20 311 45 b 354 158 344 104 354 131 b 337 216 354 177 350 196 b 213 435 294 288 249 359 b 115 575 189 487 158 536 b 78 598 105 585 92 598 b 59 592 72 598 66 596 b 39 562 45 583 39 572 b 53 527 39 550 45 539 b 168 344 98 469 125 402 b 187 307 181 328 187 317 b 153 269 187 294 176 284 b 62 213 122 252 91 235 b 40 180 48 203 40 192 b 46 158 40 173 43 166 b 99 65 60 125 79 95 b 183 -79 131 20 160 -29 b 156 -86 173 -88 164 -85 b 0 -261 58 -99 -7 -173 b 96 -557 10 -366 49 -464 b 124 -585 102 -569 109 -580 b 145 -598 132 -588 138 -598 b 151 -596 147 -598 150 -598 z\"\n    },\n    \"rest8th\": {\n      \"x_min\": 0,\n      \"x_max\": 289,\n      \"y_min\": -260,\n      \"y_max\": 261,\n      \"ha\": 521,\n      \"o\": \"m 164 -374 b 212 -340 190 -373 203 -357 b 276 -190 238 -292 258 -242 b 410 285 333 -36 359 128 b 416 314 413 294 416 304 l 416 321 b 393 354 415 341 410 354 b 382 353 389 354 386 354 b 292 311 347 347 315 333 b 174 225 256 276 216 251 b 157 219 168 222 163 219 b 140 228 151 219 145 222 b 131 246 134 233 131 240 b 135 262 131 252 132 256 b 147 298 141 272 147 285 b 127 367 147 323 154 354 b 94 376 114 373 102 376 b 48 336 75 376 63 363 b 3 181 20 288 12 235 b 0 150 1 170 0 160 b 109 24 0 84 35 24 b 171 36 127 24 148 27 b 289 101 213 52 248 75 b 164 -374 256 -62 193 -213 z\"\n    },\n    \"rest16th\": {\n      \"x_min\": 0,\n      \"x_max\": 333,\n      \"y_min\": -328.283950617284,\n      \"y_max\": 244,\n      \"ha\": 572.2839506172841,\n      \"o\": \"m 209 -471 b 246 -458 222 -477 236 -468 b 307 -338 279 -425 300 -384 b 324 -226 312 -301 317 -262 b 428 161 350 -94 386 35 b 480 318 445 215 480 259 b 467 347 480 331 477 341 b 445 351 461 350 454 351 b 408 337 432 351 419 347 b 402 333 405 336 403 334 b 223 215 344 294 294 245 b 236 259 229 233 235 246 b 238 276 238 265 238 271 b 212 338 238 302 226 334 b 193 341 206 340 199 341 b 86 289 156 341 104 317 b 59 180 66 255 59 217 b 156 27 59 76 92 27 b 236 46 179 27 204 35 b 338 101 271 59 298 82 b 289 -49 312 49 302 0 b 196 -122 276 -99 235 -107 b 176 -114 187 -127 176 -127 l 176 -111 b 157 -53 177 -88 164 -72 b 69 -9 141 -7 101 -16 b 17 -48 43 -3 29 -27 b 0 -127 4 -73 0 -99 b 6 -186 0 -147 1 -167 b 82 -294 17 -262 37 -294 b 160 -276 102 -294 128 -289 b 219 -242 181 -268 203 -259 b 236 -230 223 -236 229 -230 b 243 -232 239 -230 240 -230 b 235 -275 248 -246 239 -261 b 202 -456 220 -334 202 -395 b 209 -471 202 -462 203 -468 z\"\n    },\n    \"rest32nd\": {\n      \"x_min\": 0,\n      \"x_max\": 347,\n      \"y_min\": -497.5023916875033,\n      \"y_max\": 483,\n      \"ha\": 980.5023916875033,\n      \"o\": \"m 177 -716 b 217 -690 194 -720 209 -704 b 233 -655 225 -680 230 -668 b 292 -390 253 -567 275 -480 b 361 -48 312 -275 336 -161 b 452 400 393 102 422 252 b 497 629 467 477 482 553 b 500 647 498 635 500 641 b 480 691 500 665 492 684 b 464 696 475 694 469 696 b 418 674 448 696 431 685 l 361 626 b 333 611 353 618 343 612 b 308 629 325 611 317 616 b 239 667 292 651 265 661 b 204 670 228 668 216 670 b 86 559 141 670 95 628 b 85 537 86 552 85 544 b 107 416 85 495 95 455 b 161 372 114 389 134 372 b 174 373 166 372 170 372 b 226 383 192 374 209 377 b 387 478 285 402 330 444 b 364 386 379 444 364 415 b 276 271 364 323 320 298 b 265 266 272 268 268 266 b 252 276 261 266 256 269 b 143 333 229 311 186 333 b 107 327 130 333 118 330 b 43 243 62 314 46 291 b 58 145 43 210 52 179 b 150 63 68 92 99 63 b 315 132 213 63 259 98 b 266 -58 297 63 281 4 b 207 -101 259 -91 230 -96 b 186 -66 186 -107 199 -75 b 180 -50 181 -63 183 -55 b 101 -3 160 -23 135 -3 b 9 -66 59 -3 20 -32 b 0 -118 3 -84 0 -101 b 10 -196 0 -144 6 -170 b 104 -287 20 -256 52 -287 b 137 -282 114 -287 125 -287 b 184 -269 151 -281 171 -269 b 196 -275 190 -269 193 -271 b 199 -287 197 -278 199 -282 b 184 -343 199 -304 189 -325 b 181 -348 184 -346 183 -347 b 134 -595 158 -429 131 -508 b 156 -677 134 -624 150 -648 b 177 -716 158 -693 160 -713 z\"\n    },\n    \"rest64th\": {\n      \"x_min\": 0,\n      \"x_max\": 428,\n      \"y_min\": -720,\n      \"y_max\": 473.6797408388932,\n      \"ha\": 1193.6797408388932,\n      \"o\": \"m 200 -1037 b 229 -1012 215 -1037 222 -1025 b 238 -984 233 -1004 236 -994 b 282 -780 248 -914 265 -848 b 386 -369 317 -644 354 -507 b 491 104 422 -212 451 -53 b 600 541 528 249 550 399 b 616 629 611 570 616 599 b 600 680 616 648 615 671 b 550 665 586 687 566 677 b 480 618 527 649 501 635 b 464 611 474 613 468 611 b 448 622 458 611 454 615 b 366 662 425 651 397 662 b 331 658 354 662 343 661 b 242 572 285 647 253 619 b 236 528 239 557 236 543 b 266 400 236 484 251 442 b 325 373 274 377 301 373 b 436 409 366 373 403 383 l 494 452 b 474 360 485 416 474 389 b 383 248 474 297 435 269 b 320 328 377 288 351 310 b 276 341 305 337 291 341 b 186 269 235 341 194 311 b 181 230 183 256 181 243 b 187 153 181 204 186 179 b 279 63 192 86 233 63 b 304 65 288 63 295 63 b 416 115 344 72 379 92 b 387 -14 406 69 397 27 b 320 -95 380 -52 369 -86 b 318 -79 320 -89 320 -84 b 223 0 305 -29 271 0 b 122 -81 171 0 135 -30 b 118 -127 120 -96 118 -112 b 118 -196 118 -150 118 -173 b 137 -242 118 -215 125 -229 b 209 -275 157 -266 181 -275 b 249 -269 222 -275 235 -274 b 318 -248 272 -264 294 -255 b 281 -390 315 -301 292 -344 b 276 -400 279 -393 279 -397 b 259 -420 272 -408 266 -416 b 246 -429 255 -425 251 -429 b 233 -415 242 -429 238 -426 b 176 -359 225 -389 200 -372 b 121 -346 158 -348 140 -346 b 14 -408 73 -346 27 -370 b 0 -498 4 -438 0 -468 b 6 -564 0 -520 3 -543 b 91 -635 12 -611 45 -635 b 131 -629 104 -635 117 -634 b 223 -590 163 -622 190 -603 b 166 -824 203 -671 189 -747 b 148 -912 157 -852 148 -881 b 156 -955 148 -926 150 -940 b 177 -1008 161 -972 170 -991 b 200 -1037 181 -1020 183 -1037 z\"\n    },\n    \"rest128th\": {\n      \"x_min\": 0.6717818579024267,\n      \"x_max\": 491,\n      \"y_min\": -711,\n      \"y_max\": 719,\n      \"ha\": 1430,\n      \"o\": \"m 233 -1015 b 271 -956 256 -1002 266 -981 l 314 -723 b 393 -350 337 -598 366 -474 b 543 312 442 -128 492 91 b 687 841 583 490 635 665 b 707 958 698 880 707 919 b 706 986 707 968 707 976 b 688 1025 704 999 704 1024 b 670 1027 683 1025 677 1027 b 629 1007 655 1027 639 1022 b 559 945 613 981 586 968 b 541 1004 553 968 559 991 b 456 1035 516 1024 488 1035 b 419 1030 444 1035 431 1034 b 344 953 379 1018 353 995 b 340 900 341 936 340 917 b 341 847 340 881 341 864 b 380 779 340 815 354 793 b 464 763 406 765 435 762 b 592 814 510 763 549 786 b 546 660 575 757 556 710 b 480 585 537 619 517 598 b 478 599 480 590 478 595 b 386 678 472 641 428 678 b 294 612 343 678 304 651 b 279 477 282 567 278 521 b 363 395 281 428 317 395 b 380 396 369 395 374 395 b 488 436 416 403 449 419 b 384 233 469 357 468 275 b 359 291 373 252 377 276 b 282 318 337 310 310 318 b 181 264 243 318 203 298 b 154 107 153 216 154 161 b 242 6 154 42 187 6 b 278 10 253 6 265 7 b 408 88 330 22 366 55 b 387 -1 400 56 393 27 b 301 -112 379 -55 354 -94 b 289 -65 297 -95 302 -79 b 219 -32 269 -42 245 -32 b 183 -37 207 -32 196 -35 b 112 -109 144 -46 121 -71 b 105 -219 104 -145 108 -183 b 186 -315 101 -276 134 -315 b 230 -307 199 -315 215 -312 b 324 -256 264 -295 292 -275 b 180 -491 323 -383 266 -471 b 183 -459 180 -480 180 -469 b 184 -442 184 -454 184 -448 b 184 -436 184 -441 184 -438 b 135 -369 184 -403 170 -383 b 102 -363 125 -364 114 -363 b 29 -399 73 -363 45 -376 b 1 -556 -4 -448 6 -503 b 109 -670 -4 -625 43 -670 b 140 -667 118 -670 130 -668 b 253 -616 180 -658 213 -638 b 238 -688 248 -644 242 -665 b 192 -959 220 -779 192 -867 b 193 -992 192 -971 192 -981 b 210 -1024 194 -1014 199 -1024 b 233 -1015 216 -1024 223 -1021 z\"\n    },\n    \"dynamicPiano\": {\n      \"x_min\": -49,\n      \"x_max\": 326.5019318364244,\n      \"y_min\": -142,\n      \"y_max\": 515,\n      \"ha\": 657,\n      \"o\": \"m -56 -204 b -42 -202 -52 -204 -46 -203 b -19 -194 -35 -202 -26 -197 b 147 -138 35 -170 91 -151 b 249 -58 194 -127 223 -95 b 262 -29 255 -50 262 -39 b 258 -17 262 -24 261 -20 b 232 -7 252 -10 242 -7 b 210 -12 225 -7 217 -9 b 125 -40 184 -23 157 -30 b 183 140 153 19 171 79 b 251 167 207 144 230 153 b 469 518 383 262 480 382 b 357 687 472 626 420 687 b 315 678 344 687 330 684 b 204 600 279 664 240 634 b 210 704 206 635 209 670 b 215 721 212 710 215 716 b 206 733 215 727 212 730 b 180 742 197 736 189 742 b 164 734 176 742 170 740 b 1 575 108 684 36 645 b -7 557 -1 569 -7 563 b -6 553 -7 556 -7 554 b 7 547 -3 547 3 547 l 17 547 b 82 575 43 547 59 567 l 82 452 b 56 46 82 317 81 180 b 17 -66 49 7 46 -36 b -62 -173 -13 -99 -37 -135 b -71 -192 -66 -179 -71 -184 b -68 -199 -71 -193 -69 -196 b -56 -204 -65 -203 -60 -204 z m 196 258 b 197 266 197 261 197 264 b 200 510 200 347 199 429 b 233 543 210 521 222 533 b 281 560 249 554 266 560 b 340 503 310 560 333 540 b 344 461 343 488 344 474 b 321 323 344 413 333 369 b 268 272 315 300 295 281 b 196 258 245 265 220 261 z\"\n    },\n    \"dynamicMezzo\": {\n      \"x_min\": -18,\n      \"x_max\": 559,\n      \"y_min\": -50,\n      \"y_max\": 365,\n      \"ha\": 415,\n      \"o\": \"m 43 -71 b 160 19 86 -71 143 -26 b 230 264 189 99 200 184 b 282 363 243 297 259 327 b 287 320 285 347 287 333 b 284 279 287 305 285 292 l 249 -12 b 275 -43 248 -29 245 -43 b 395 45 321 -43 389 3 b 462 271 406 124 436 197 b 523 387 475 310 490 348 l 523 346 b 504 130 521 274 513 202 b 501 81 501 114 501 98 b 510 3 501 55 504 29 b 580 -72 521 -48 543 -72 b 625 -63 593 -72 608 -69 b 789 50 690 -43 744 -3 b 805 72 795 56 805 63 b 798 85 805 76 802 81 b 778 94 792 91 785 94 b 755 85 770 94 763 91 l 693 40 b 675 33 685 36 680 33 b 658 52 668 33 662 39 b 645 144 651 82 645 112 b 658 448 641 246 660 346 b 606 507 658 485 638 507 b 583 504 599 507 592 505 b 495 446 547 497 521 471 b 420 373 471 423 448 399 b 413 458 418 406 418 432 b 361 507 408 490 386 507 b 320 491 347 507 333 501 b 160 307 256 444 207 382 l 160 337 b 174 488 160 387 174 438 b 156 521 174 501 173 513 b 137 526 148 524 143 526 b 109 513 127 526 118 520 b -16 399 66 477 23 439 b -26 383 -20 395 -26 389 b -26 379 -26 382 -26 380 b -14 370 -24 372 -20 370 b -6 372 -12 370 -9 372 b 19 376 4 374 12 376 b 36 359 32 376 36 370 b 30 330 36 350 35 341 l 30 323 b 9 -35 23 203 17 85 b 43 -71 6 -65 19 -71 z\"\n    },\n    \"dynamicForte\": {\n      \"x_min\": -144,\n      \"x_max\": 311.30112136775,\n      \"y_min\": -115.38762959156972,\n      \"y_max\": 504,\n      \"ha\": 619.3876295915697,\n      \"o\": \"m -101 -166 b 173 76 7 -153 150 -30 b 206 344 192 164 202 253 b 268 338 226 343 246 341 b 384 395 317 333 353 361 b 397 419 393 405 397 412 b 367 442 397 429 387 436 b 350 444 361 444 356 444 b 206 455 302 449 255 454 l 206 474 b 202 540 204 495 202 518 b 209 593 202 557 203 576 b 236 624 215 613 225 624 b 265 612 245 624 253 619 b 308 552 287 596 302 577 b 336 533 312 534 323 533 b 448 611 366 533 444 583 b 399 696 452 648 423 671 b 382 706 395 700 387 703 b 308 726 357 720 333 726 b 207 684 272 726 239 711 b 60 455 135 622 60 560 l 10 455 b -23 448 -1 455 -13 454 b -102 372 -55 426 -76 397 b -109 357 -108 367 -109 361 b -95 347 -109 353 -105 348 b -63 346 -84 346 -73 346 b 0 344 -43 344 -22 344 b 63 344 22 344 43 344 b 53 186 63 291 59 239 b 23 0 46 124 42 60 b -35 -60 10 -42 -6 -60 b -73 -52 -45 -60 -58 -58 b -91 -48 -79 -49 -85 -48 b -109 -53 -96 -48 -102 -49 b -199 -124 -143 -72 -168 -99 b -207 -137 -203 -128 -207 -132 b -194 -148 -207 -141 -203 -145 b -101 -166 -164 -160 -132 -168 z\"\n    },\n    \"dynamicRinforzando\": {\n      \"x_min\": -75,\n      \"x_max\": 322.0960720195126,\n      \"y_min\": -90,\n      \"y_max\": 325,\n      \"ha\": 415,\n      \"o\": \"m 23 -130 b 40 -125 27 -130 33 -128 b 128 -9 81 -114 125 -53 b 145 200 132 62 141 130 b 148 238 147 212 148 225 b 308 321 184 291 245 321 b 363 314 325 321 344 318 b 377 310 369 312 373 310 b 384 311 380 310 382 310 b 464 415 410 317 464 389 b 446 433 465 429 455 429 b 390 445 428 441 409 445 b 305 429 361 445 334 438 b 167 346 252 413 202 393 b 153 325 163 338 158 333 b 148 438 154 363 151 399 b 121 468 147 456 134 468 b 101 458 115 468 108 465 b -63 310 46 409 -16 367 b -108 240 -78 289 -98 271 b 32 330 -50 256 -13 297 b 37 304 37 320 37 312 l 37 292 b 10 -101 27 161 20 30 b 23 -130 9 -120 12 -130 z\"\n    },\n    \"dynamicSforzando\": {\n      \"x_min\": 0,\n      \"x_max\": 296,\n      \"y_min\": 0,\n      \"y_max\": 379,\n      \"ha\": 379,\n      \"o\": \"m 151 0 b 174 1 160 0 166 0 b 392 158 272 14 346 71 b 405 207 400 174 405 190 b 359 287 405 236 389 265 b 261 325 328 308 294 315 b 168 413 216 340 181 366 b 166 426 167 418 166 423 b 176 438 166 432 167 436 b 199 441 183 441 190 441 b 310 393 238 441 295 422 b 334 370 317 376 325 370 b 363 386 343 370 353 379 b 422 445 386 402 408 420 b 426 458 425 449 426 454 b 422 469 426 462 425 465 b 274 546 395 518 333 546 b 161 503 232 546 190 531 b 86 405 132 472 108 439 b 71 347 75 387 71 367 b 112 256 71 312 85 279 b 209 215 141 232 176 226 b 284 168 238 206 266 197 b 300 131 291 157 300 144 b 298 120 300 127 298 122 b 278 107 294 109 285 108 b 262 108 271 107 266 108 l 259 108 b 114 157 200 107 156 125 b 96 181 104 163 96 170 l 96 184 b 102 202 96 190 102 196 b 96 209 102 204 101 207 b 63 194 82 215 72 204 b 7 109 42 168 26 138 b 0 86 3 101 0 94 b 13 60 0 78 4 68 b 151 0 53 23 101 0 z\"\n    },\n    \"dynamicZ\": {\n      \"x_min\": -42.73880183193087,\n      \"x_max\": 331,\n      \"y_min\": 0,\n      \"y_max\": 328,\n      \"ha\": 328,\n      \"o\": \"m -45 0 b -6 16 -32 0 -17 10 b 3 20 -3 16 0 19 b 144 60 49 48 96 60 b 284 22 190 60 238 46 b 348 4 305 10 327 4 b 461 75 393 4 435 30 b 468 91 464 81 467 86 b 456 104 468 95 465 99 b 287 173 402 131 348 167 b 239 176 271 174 255 176 b 168 174 217 176 194 174 b 367 340 236 236 298 294 b 459 423 402 363 432 392 b 477 454 467 431 475 442 b 474 462 477 456 475 459 b 454 472 469 469 462 472 b 432 468 446 472 439 469 b 356 448 406 461 380 455 b 210 422 307 433 258 422 b 109 442 177 422 144 428 b 94 445 104 444 99 445 b 69 433 85 445 76 442 b 27 390 56 419 39 406 b -9 343 16 373 -17 357 b 63 311 3 320 36 314 l 78 311 b 132 307 95 308 114 307 b 240 314 168 307 203 311 l 193 271 b -37 50 117 196 19 145 b -59 7 -46 36 -69 20 b -45 0 -55 3 -50 0 z\"\n    },\n    \"ornamentTrill\": {\n      \"x_min\": 1,\n      \"x_max\": 551,\n      \"y_min\": -18,\n      \"y_max\": 539,\n      \"ha\": 557,\n      \"o\": \"m 269 -17 b 343 135 325 19 346 66 b 343 158 343 147 344 147 b 323 192 341 171 337 187 b 291 176 311 194 300 184 b 264 148 282 167 274 158 b 229 131 261 145 238 131 b 212 170 209 131 213 154 b 194 438 203 259 199 348 l 272 442 b 284 452 276 441 279 441 b 305 462 287 461 295 462 b 312 462 307 462 310 462 b 346 477 325 462 340 464 b 366 560 357 503 366 531 b 321 612 366 598 356 618 b 190 602 278 605 235 605 l 190 638 b 187 693 190 652 190 667 b 161 776 184 717 193 776 b 137 747 150 776 137 766 b 130 654 135 716 131 685 l 130 596 l 52 588 b 4 539 23 585 7 570 b 1 477 3 530 1 500 b 3 448 1 461 3 448 b 3 461 3 448 3 452 b 53 432 0 438 19 432 b 134 435 75 432 102 433 b 151 117 138 328 147 223 b 170 13 153 82 157 46 b 209 -26 179 -10 193 -26 b 222 -22 213 -26 217 -24 b 269 -17 233 -16 253 -27 z m 549 66 b 577 99 563 66 572 84 b 580 131 580 109 580 121 l 580 302 b 600 347 580 318 582 337 b 701 392 632 364 665 384 b 793 518 785 409 793 435 b 759 588 793 559 785 576 b 711 560 749 592 733 570 b 588 500 671 541 631 521 b 583 533 586 514 586 524 b 560 576 577 549 577 572 b 517 550 541 582 528 564 b 416 423 482 508 452 462 b 382 353 392 397 384 370 b 387 305 380 341 386 318 b 392 275 389 295 392 285 b 409 243 393 262 393 243 b 431 262 419 243 425 255 b 521 373 459 298 488 333 b 523 354 521 366 523 360 b 520 337 523 346 521 340 b 508 295 513 323 508 310 b 530 102 508 279 524 122 b 549 66 533 88 530 66 z\"\n    },\n    \"ornamentTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 574,\n      \"y_min\": 0,\n      \"y_max\": 312,\n      \"ha\": 312,\n      \"o\": \"m 651 0 b 816 132 727 0 796 46 b 827 223 822 163 827 193 b 808 340 827 262 821 301 b 665 449 785 408 729 449 b 636 446 655 449 647 448 b 589 384 600 441 586 422 l 602 300 b 611 285 603 291 605 285 b 621 288 613 285 616 287 b 655 295 632 294 644 295 b 711 284 674 295 693 289 b 773 209 740 275 773 232 b 697 156 773 184 734 160 b 664 154 685 154 675 154 b 579 168 635 154 608 158 b 455 242 533 186 495 213 b 261 400 387 291 331 354 b 160 432 225 422 190 432 b 20 328 98 432 49 392 b 0 229 6 295 0 262 b 30 71 0 176 14 122 b 144 3 43 29 96 3 b 168 6 153 3 160 4 b 248 122 233 20 248 39 b 246 147 248 124 248 135 b 226 177 243 164 239 177 b 206 170 220 177 215 174 b 144 154 186 158 166 154 b 79 170 122 154 101 160 b 53 202 62 179 53 189 b 60 228 53 209 55 217 b 161 281 81 261 120 281 b 183 279 168 281 176 281 b 325 190 243 269 284 229 b 572 16 402 124 475 53 b 651 0 598 6 625 0 z\"\n    },\n    \"ornamentTurnSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 574,\n      \"y_min\": -106,\n      \"y_max\": 405,\n      \"ha\": 511,\n      \"o\": \"m 441 -153 b 456 -60 455 -118 456 -89 b 455 81 455 -14 455 33 b 572 14 491 55 530 30 b 651 -1 598 4 625 -1 b 816 131 727 -1 796 45 b 827 222 822 161 827 192 b 808 338 827 261 821 300 b 665 448 785 406 729 448 b 636 445 655 448 647 446 b 589 383 600 439 586 420 l 602 298 b 611 284 603 289 605 284 b 621 287 613 284 616 285 b 655 294 632 292 644 294 b 711 282 674 294 693 288 b 773 207 740 274 773 230 b 697 154 773 183 734 158 b 664 153 685 153 675 153 b 579 167 635 153 608 157 b 455 240 533 183 495 212 b 454 242 455 240 455 242 l 454 337 b 452 488 454 386 452 439 b 433 570 452 517 451 546 b 425 583 431 575 431 583 l 422 583 b 403 566 415 582 408 573 b 402 546 400 560 402 553 l 397 287 b 261 399 353 325 310 366 b 160 431 225 420 190 431 b 20 327 98 431 48 390 b 0 228 6 294 0 261 b 30 69 0 174 14 121 b 144 1 43 27 96 1 b 168 4 153 1 160 3 b 248 121 233 19 248 37 b 246 145 248 122 248 134 b 226 176 243 163 239 176 b 206 168 220 176 215 173 b 144 153 186 157 166 153 b 79 168 122 153 101 158 b 53 200 62 177 53 187 b 60 226 53 207 55 216 b 161 279 79 259 120 279 b 183 278 168 279 176 279 b 325 189 243 266 282 226 b 395 130 348 168 372 148 b 393 71 393 109 393 89 b 441 -153 390 -6 402 -78 z\"\n    },\n    \"ornamentMordent\": {\n      \"x_min\": 0,\n      \"x_max\": 700,\n      \"y_min\": 0,\n      \"y_max\": 497,\n      \"ha\": 497,\n      \"o\": \"m 513 0 b 528 39 526 14 527 27 b 531 72 531 50 531 60 b 528 138 531 94 528 117 l 528 347 b 552 359 537 354 544 359 b 579 338 560 359 569 353 b 674 217 609 297 639 255 b 719 190 690 200 704 190 b 759 215 732 190 744 197 b 940 395 815 279 877 337 b 1001 490 968 422 986 455 b 1008 513 1004 495 1008 505 b 1002 524 1008 517 1007 521 b 968 516 994 530 978 524 b 960 508 965 513 963 510 b 798 356 900 464 848 410 b 778 341 791 347 783 341 b 757 354 772 341 765 346 b 661 475 720 392 690 432 b 611 517 644 504 629 517 b 563 498 598 517 583 511 b 527 471 550 490 539 481 l 527 570 b 492 716 526 619 523 671 b 472 677 480 704 472 694 b 465 399 474 585 468 491 b 439 366 456 387 448 376 b 384 320 415 336 399 320 b 330 367 369 320 354 336 b 325 376 328 369 327 373 b 226 490 291 413 265 456 b 189 505 213 500 202 505 b 157 491 177 505 167 500 b 0 229 75 420 0 346 b 1 202 0 220 0 212 b 22 215 12 203 16 209 b 124 327 55 252 89 289 b 147 343 132 337 140 343 b 171 323 156 343 164 336 b 266 197 196 276 232 236 b 337 157 291 170 314 157 b 410 207 361 157 386 174 b 461 274 428 229 444 252 b 462 166 461 238 461 202 b 513 0 465 108 487 55 z\"\n    },\n    \"ornamentShortTrill\": {\n      \"x_min\": 0,\n      \"x_max\": 747,\n      \"y_min\": 0,\n      \"y_max\": 243,\n      \"ha\": 243,\n      \"o\": \"m 379 0 b 428 14 395 0 410 4 b 474 56 445 26 461 39 b 552 157 500 89 526 122 b 566 168 556 163 560 168 b 575 157 569 168 572 166 b 664 36 592 107 628 72 b 733 1 685 13 710 1 b 802 35 757 1 780 13 b 1007 249 871 105 940 177 b 1067 324 1028 272 1054 295 b 1076 340 1068 330 1076 334 b 1073 346 1076 341 1076 343 b 1057 350 1068 348 1063 350 b 1047 347 1053 350 1050 350 b 1001 310 1031 336 1015 324 l 857 157 b 844 143 852 153 848 143 b 835 150 841 143 838 144 b 757 242 815 186 780 209 b 685 298 739 268 713 284 b 641 310 670 305 655 310 b 590 288 625 310 608 304 b 497 179 554 256 527 215 b 480 164 490 170 485 164 b 462 179 474 164 469 168 b 372 295 436 220 405 258 b 278 344 346 324 312 344 b 199 310 252 344 226 334 b 92 196 161 274 128 233 b 0 24 46 148 23 89 b 42 48 22 27 32 37 b 156 168 84 85 114 132 b 196 192 174 184 186 192 b 228 158 206 192 215 181 b 312 36 252 114 282 75 b 379 0 331 12 354 0 z\"\n    },\n    \"ornamentTremblement\": {\n      \"x_min\": 0,\n      \"x_max\": 982.17691453624,\n      \"y_min\": 0,\n      \"y_max\": 224,\n      \"ha\": 224,\n      \"o\": \"m 0 0 b 63 36 30 12 48 23 b 157 124 94 66 125 94 b 177 135 164 131 170 135 b 196 122 183 135 189 131 b 268 40 217 94 245 68 b 323 6 288 16 304 6 b 369 20 336 6 350 10 b 412 53 384 29 399 40 b 501 145 442 84 472 114 b 523 158 508 154 516 158 b 543 145 528 158 536 154 b 641 45 576 112 608 78 b 698 17 658 27 677 17 b 729 23 708 17 719 20 b 804 65 756 32 780 46 b 904 154 837 95 871 124 b 920 163 910 160 916 163 b 936 153 924 163 930 160 b 1024 60 965 121 996 92 b 1112 13 1053 29 1080 13 b 1184 39 1135 13 1158 22 b 1359 194 1248 84 1305 138 b 1413 301 1388 223 1403 261 b 1404 323 1417 315 1413 323 b 1391 320 1400 323 1395 321 b 1344 294 1375 314 1358 307 b 1224 186 1305 258 1269 216 b 1194 173 1212 179 1202 173 b 1165 193 1184 173 1175 179 b 1096 271 1145 222 1122 248 b 1001 318 1061 302 1031 318 b 903 268 969 318 937 301 b 806 186 871 239 841 210 b 782 174 796 179 789 174 b 756 193 773 174 765 180 b 652 291 729 232 693 266 b 596 308 634 302 615 308 b 530 278 573 308 552 298 l 415 168 b 393 157 408 161 400 157 b 373 171 387 157 380 161 b 305 245 353 197 330 222 b 248 276 285 266 266 278 b 189 245 229 276 210 266 b 81 144 156 209 120 174 b 0 0 33 109 26 56 z\"\n    },\n    \"ornamentPrecompAppoggTrill\": {\n      \"x_min\": -0.11067192132025548,\n      \"x_max\": 1066,\n      \"y_min\": -50,\n      \"y_max\": 533.1706452421108,\n      \"ha\": 583.1706452421108,\n      \"o\": \"m 187 -46 b 213 -14 197 -37 204 -26 b 285 151 251 36 266 94 b 304 189 294 177 297 189 b 337 168 311 189 320 181 b 458 33 386 131 415 76 b 495 12 472 19 484 12 b 531 40 508 12 518 22 b 580 168 557 79 569 124 b 622 235 592 213 603 235 b 683 194 636 235 655 222 b 838 26 737 140 791 86 b 919 -33 860 -1 881 -39 b 984 53 960 -27 971 19 b 1022 156 998 86 1008 122 b 1054 190 1032 179 1041 190 b 1089 167 1063 190 1074 183 b 1208 32 1129 122 1171 78 b 1244 10 1221 17 1231 10 b 1273 22 1253 10 1263 14 b 1496 206 1352 78 1427 137 b 1535 310 1526 236 1535 272 b 1531 359 1535 325 1534 343 b 1496 343 1515 360 1506 351 l 1309 192 b 1269 167 1289 176 1279 167 b 1234 199 1260 167 1251 177 b 1122 324 1200 243 1168 289 b 1074 344 1106 337 1089 344 b 1014 301 1051 344 1030 328 b 952 144 985 252 971 197 b 933 121 946 128 940 121 b 910 137 927 121 920 125 b 850 210 888 161 870 186 b 687 369 799 266 750 325 b 631 390 665 383 647 390 b 567 327 602 390 580 369 b 527 199 554 284 543 242 b 508 168 520 179 514 168 b 482 192 503 168 495 177 b 353 328 444 240 405 292 b 312 343 338 338 324 343 b 266 297 292 343 276 327 b 204 125 248 239 232 180 b 143 79 193 102 173 79 b 92 122 117 79 105 102 b 81 154 86 131 84 143 b 48 423 59 242 50 333 b 45 544 46 464 45 504 b 53 730 45 606 48 668 b 40 768 55 744 52 766 b 13 730 19 770 14 747 b 0 514 7 658 -1 586 b 26 122 3 383 6 252 b 75 -36 35 66 40 10 b 134 -72 92 -59 112 -72 b 187 -46 151 -72 170 -63 z\"\n    },\n    \"ornamentPrecompSlideTrillDAnglebert\": {\n      \"x_min\": 0,\n      \"x_max\": 1088,\n      \"y_min\": -380,\n      \"y_max\": 252,\n      \"ha\": 632,\n      \"o\": \"m 560 -539 b 439 -481 527 -497 484 -485 b 354 -461 409 -478 380 -477 b 131 -154 236 -389 161 -285 b 124 -98 127 -135 124 -117 b 196 55 124 -40 148 10 b 308 99 230 86 268 99 b 399 81 337 99 367 92 b 514 22 441 66 477 43 b 619 -30 567 -9 590 -30 b 719 17 642 -30 670 -16 b 861 131 769 52 818 88 b 899 150 874 144 887 150 b 936 117 913 150 926 138 b 965 43 948 94 956 68 b 1007 -1 973 24 978 -1 b 1048 30 1025 -1 1037 16 b 1070 65 1057 40 1064 52 b 1110 148 1084 92 1096 121 b 1145 190 1120 164 1120 190 b 1191 153 1169 192 1179 168 b 1256 29 1218 115 1231 68 b 1292 1 1267 10 1277 1 b 1320 10 1300 1 1309 4 b 1369 48 1339 19 1355 33 b 1515 196 1418 96 1464 148 b 1567 343 1558 238 1567 287 b 1555 363 1565 357 1562 363 b 1539 356 1551 363 1547 360 b 1433 268 1502 330 1466 301 b 1335 171 1401 236 1374 199 b 1310 163 1325 166 1318 163 b 1286 183 1302 163 1293 168 b 1218 311 1264 226 1247 272 b 1164 351 1200 337 1182 351 b 1110 308 1146 351 1128 337 b 1031 176 1084 265 1058 219 b 1015 161 1025 166 1021 161 b 999 179 1009 161 1005 167 b 955 279 985 213 973 248 b 913 307 943 300 930 307 b 887 302 904 307 896 305 b 852 281 874 298 863 291 b 693 167 804 236 747 204 b 612 140 667 150 639 140 b 549 157 592 140 570 145 b 403 220 503 181 452 202 b 271 248 360 236 315 248 b 179 229 239 248 209 242 b 0 -29 65 180 0 85 b 9 -104 0 -53 3 -78 b 397 -526 56 -317 183 -464 b 505 -547 432 -536 468 -547 b 560 -539 524 -547 541 -544 z\"\n    },\n    \"ornamentPrecompSlideTrillBach\": {\n      \"x_min\": 0,\n      \"x_max\": 1185,\n      \"y_min\": -380,\n      \"y_max\": 465,\n      \"ha\": 845,\n      \"o\": \"m 624 -544 b 642 -528 638 -543 642 -537 b 639 -514 642 -524 642 -520 b 590 -444 629 -487 609 -467 b 523 -413 573 -422 553 -410 b 498 -415 514 -415 507 -415 b 399 -389 464 -415 431 -405 b 89 -157 281 -330 176 -255 b 72 -117 78 -144 72 -131 b 73 -101 72 -111 72 -107 b 187 186 91 3 147 91 b 246 230 200 216 222 230 b 300 209 262 230 281 223 b 456 48 359 163 403 101 b 540 -10 494 10 518 -10 b 625 59 566 -10 589 13 b 690 148 648 88 668 118 b 711 167 697 160 704 167 b 733 153 719 167 724 163 b 844 14 769 105 808 60 b 903 -42 873 -23 886 -42 b 973 -1 919 -42 937 -27 b 1008 33 986 7 996 20 b 1048 81 1021 48 1035 65 b 1050 37 1048 66 1050 52 b 1047 -24 1050 17 1048 -3 b 1038 -275 1038 -108 1040 -192 l 1037 -289 b 1045 -302 1037 -295 1038 -301 b 1068 -284 1056 -304 1064 -292 b 1084 -242 1076 -271 1081 -256 b 1099 -109 1096 -199 1099 -154 b 1106 158 1099 -19 1106 71 b 1128 187 1113 167 1120 177 b 1168 223 1143 212 1155 223 b 1210 193 1179 223 1191 213 b 1220 183 1214 190 1215 186 b 1329 36 1261 138 1292 84 b 1374 7 1345 16 1358 7 b 1411 20 1384 7 1395 12 b 1479 84 1437 37 1459 59 b 1610 235 1521 135 1564 186 b 1706 403 1655 282 1695 334 b 1614 346 1663 400 1637 373 b 1464 170 1564 287 1515 228 b 1440 150 1453 156 1447 150 b 1414 173 1433 150 1426 158 b 1283 336 1371 228 1333 288 b 1220 366 1261 356 1240 366 b 1148 318 1194 366 1169 350 b 1103 255 1133 297 1119 275 b 1097 301 1102 271 1100 285 b 1099 334 1099 312 1099 324 b 1092 428 1099 367 1094 397 b 1071 647 1087 501 1079 575 b 1058 670 1071 657 1071 670 b 1035 648 1047 670 1038 661 b 1018 516 1024 605 1015 560 b 1041 203 1025 412 1037 307 b 1043 180 1041 196 1043 187 b 992 127 1027 161 1009 143 b 965 111 981 117 972 111 b 936 132 955 111 946 120 b 829 268 900 179 867 225 b 760 317 801 301 780 317 b 691 258 739 317 719 297 b 605 147 664 219 641 177 b 589 138 599 141 593 138 b 572 148 583 138 579 141 b 415 317 520 206 467 261 b 327 372 390 343 366 366 b 300 373 317 373 308 373 b 154 295 239 373 190 348 b 55 138 120 243 85 192 b 0 -53 22 79 0 13 b 160 -317 0 -156 49 -252 b 209 -354 177 -327 192 -343 b 510 -531 305 -419 397 -495 b 593 -547 537 -540 564 -547 b 624 -544 603 -547 613 -546 z\"\n    },\n    \"ornamentPrecompTrillSuffixDandrieu\": {\n      \"x_min\": 0,\n      \"x_max\": 1003,\n      \"y_min\": -20,\n      \"y_max\": 521,\n      \"ha\": 541,\n      \"o\": \"m 791 -16 b 844 33 812 -3 829 14 b 981 271 900 107 937 190 b 994 288 984 278 985 288 b 1009 269 1004 288 1007 278 b 1077 112 1034 217 1051 163 b 1158 43 1103 62 1129 43 b 1231 69 1179 43 1204 55 b 1348 189 1280 98 1315 143 b 1444 451 1407 271 1444 357 b 1431 547 1444 482 1440 514 b 1188 750 1401 665 1299 750 b 1158 747 1178 750 1168 749 b 1079 684 1119 742 1089 727 b 1063 632 1076 665 1071 648 b 1056 609 1058 622 1056 615 b 1071 599 1056 602 1060 599 b 1086 600 1076 599 1080 600 b 1130 605 1102 603 1116 605 b 1244 569 1171 605 1210 595 b 1349 346 1322 511 1349 433 b 1348 312 1349 334 1349 324 b 1289 197 1345 266 1325 228 b 1238 174 1270 181 1253 174 b 1188 215 1220 174 1202 187 b 1145 308 1172 245 1159 276 b 1096 413 1129 343 1120 382 b 1053 438 1084 431 1068 438 b 1011 413 1038 438 1022 431 b 955 324 989 384 971 354 b 850 127 920 258 886 192 b 838 112 847 121 842 112 b 824 128 828 109 825 121 b 802 193 815 150 809 171 b 730 400 779 264 766 337 b 688 431 719 420 703 431 b 647 403 674 431 660 422 b 606 338 632 383 619 361 b 513 167 575 282 546 223 b 480 122 503 150 498 122 b 452 171 459 122 459 153 b 420 255 442 199 432 228 b 337 408 399 308 380 364 b 276 436 317 428 297 436 b 215 397 253 436 230 423 b 23 72 148 289 81 184 b 0 29 17 59 0 40 b 7 17 0 23 1 20 b 59 58 26 7 46 39 b 190 276 111 127 143 206 b 216 301 202 292 207 301 b 245 279 223 301 232 294 b 311 166 278 248 292 206 b 367 16 331 117 346 65 b 402 -19 377 -7 387 -19 b 438 -4 412 -19 423 -13 b 518 88 474 17 495 55 b 628 284 562 150 592 216 b 657 223 648 266 651 243 b 717 13 677 154 696 84 b 755 -29 726 -16 737 -29 b 791 -16 765 -29 776 -24 z\"\n    },\n    \"ornamentPrecompDoubleCadenceUpperPrefix\": {\n      \"x_min\": 0,\n      \"x_max\": 1246,\n      \"y_min\": -30,\n      \"y_max\": 296.0302860502196,\n      \"ha\": 326.0302860502196,\n      \"o\": \"m 360 -43 b 559 59 445 -43 503 7 b 698 236 615 111 652 179 b 714 248 704 243 710 248 b 727 235 719 248 721 243 l 848 42 b 883 12 860 22 870 12 b 917 32 891 12 903 19 b 946 62 927 42 939 50 b 1037 192 972 108 1009 147 b 1057 210 1044 204 1051 210 b 1076 190 1063 210 1068 203 l 1176 12 b 1215 -19 1188 -9 1201 -19 b 1250 -6 1225 -19 1237 -14 b 1284 27 1264 3 1274 16 b 1380 190 1323 78 1351 135 b 1395 210 1384 197 1385 210 b 1413 190 1405 210 1410 197 b 1508 40 1436 134 1467 85 b 1564 3 1529 14 1547 3 b 1617 32 1580 3 1597 12 b 1767 238 1678 92 1719 167 b 1794 310 1781 259 1791 282 b 1752 294 1776 317 1764 304 b 1656 164 1711 258 1689 206 b 1629 144 1646 151 1637 144 b 1603 161 1620 144 1613 150 b 1502 315 1562 207 1525 258 b 1452 357 1490 344 1470 357 b 1397 320 1431 357 1411 344 b 1316 170 1368 271 1345 219 b 1280 127 1306 154 1303 127 b 1244 171 1256 127 1254 154 b 1145 337 1210 226 1179 282 b 1110 363 1135 354 1122 363 b 1070 338 1097 363 1084 354 b 1050 311 1063 330 1057 320 b 959 181 1017 271 992 223 b 939 167 950 173 945 167 b 920 184 933 167 927 173 b 818 343 887 238 852 291 b 759 395 795 377 778 395 b 701 344 742 395 724 377 b 698 338 700 341 700 340 b 544 154 652 272 605 207 b 412 98 501 117 458 98 b 304 130 377 98 341 108 b 95 373 204 187 144 275 b 58 426 85 393 82 428 b 19 366 26 426 26 389 b 0 307 13 346 0 327 b 4 287 0 300 1 294 b 174 36 49 194 91 102 b 360 -43 230 -9 289 -43 z\"\n    },\n    \"ornamentPrecompDoubleCadenceUpperPrefixTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 1226,\n      \"y_min\": -237,\n      \"y_max\": 436,\n      \"ha\": 673,\n      \"o\": \"m 1279 -341 b 1293 -252 1293 -307 1295 -278 b 1277 36 1287 -156 1282 -59 l 1273 118 b 1318 176 1289 137 1303 157 b 1349 203 1332 193 1342 203 b 1378 168 1359 203 1367 192 b 1456 35 1401 122 1428 78 b 1511 -12 1476 3 1493 -12 b 1568 23 1526 -12 1544 0 b 1597 53 1578 32 1588 42 b 1705 186 1629 101 1669 143 b 1761 284 1728 216 1751 246 b 1765 300 1763 288 1765 295 b 1763 307 1765 302 1765 305 b 1737 302 1754 311 1744 308 b 1718 287 1729 298 1725 292 b 1598 145 1673 245 1637 194 b 1578 130 1590 135 1584 130 b 1557 147 1571 130 1565 135 b 1447 321 1516 202 1488 265 b 1403 351 1433 341 1417 351 b 1358 323 1388 351 1372 341 b 1269 209 1329 285 1299 248 b 1254 521 1264 314 1259 418 b 1228 616 1253 554 1247 588 b 1218 628 1224 621 1223 628 l 1215 628 b 1201 613 1210 626 1202 619 b 1200 600 1200 609 1200 605 l 1200 586 b 1211 348 1204 507 1207 428 b 1217 166 1214 288 1215 226 b 1202 181 1212 168 1208 174 b 1094 334 1168 233 1130 284 b 1048 366 1079 356 1064 366 b 1004 331 1034 366 1018 354 b 904 154 969 275 930 220 b 873 202 887 171 880 187 b 778 356 845 256 819 311 b 737 379 763 372 750 379 b 698 353 724 379 711 370 l 621 232 b 415 114 570 154 495 114 b 302 138 377 114 340 121 b 73 400 187 192 117 284 b 55 420 69 415 62 420 b 42 410 50 420 45 416 b 0 292 23 373 0 334 b 4 262 0 282 1 272 b 168 39 32 168 92 99 b 359 -26 225 -6 292 -26 b 585 76 446 -26 530 10 b 668 202 616 115 641 160 b 693 228 680 219 687 228 b 720 203 700 228 707 219 b 801 63 752 160 775 111 b 844 7 812 42 818 7 b 910 66 877 6 894 39 b 923 94 916 75 919 85 b 995 219 945 137 968 179 b 1025 184 1009 210 1017 197 b 1119 56 1054 141 1087 98 b 1166 20 1138 32 1152 20 b 1215 50 1181 20 1195 30 b 1221 56 1217 52 1218 55 b 1228 -163 1223 -17 1225 -89 b 1279 -341 1231 -223 1251 -278 z\"\n    },\n    \"ornamentPrecompTrillLowerSuffix\": {\n      \"x_min\": 0,\n      \"x_max\": 833,\n      \"y_min\": -309,\n      \"y_max\": 319,\n      \"ha\": 628,\n      \"o\": \"m 778 -444 b 801 -445 785 -444 793 -445 b 1037 -338 894 -445 969 -397 b 1200 37 1149 -240 1200 -109 b 1084 406 1200 171 1172 300 b 1024 444 1064 431 1043 444 b 960 390 999 444 978 426 b 841 163 923 314 886 236 b 812 128 832 150 827 128 b 786 167 796 130 793 153 b 660 418 744 251 716 341 b 599 459 639 445 619 459 b 541 410 577 459 557 444 b 439 197 507 340 474 269 b 422 179 435 190 435 179 b 338 393 392 251 379 328 b 275 439 320 423 298 439 b 212 396 253 439 230 425 b 71 219 170 333 128 268 b 0 45 17 173 16 112 b 68 98 32 62 50 78 b 194 264 112 150 153 209 b 230 292 209 282 219 292 b 264 261 240 292 251 282 b 274 242 268 255 269 248 b 346 46 304 179 325 112 b 376 10 351 32 354 10 b 412 35 392 10 403 22 b 452 107 429 56 441 82 b 541 291 481 168 511 230 b 556 307 547 302 552 307 b 573 295 562 307 567 302 b 624 217 595 272 611 246 b 721 1 657 145 685 72 b 755 -27 732 -19 742 -27 b 786 -16 765 -27 775 -24 b 857 73 819 7 840 39 b 952 256 887 134 920 194 b 978 289 963 279 969 289 b 1009 262 985 289 994 281 b 1030 235 1017 253 1024 245 b 1110 -4 1071 161 1099 81 b 1116 -68 1113 -26 1116 -48 b 1009 -243 1116 -140 1090 -200 b 848 -291 956 -272 901 -291 b 730 -261 809 -291 770 -282 b 696 -248 714 -252 703 -248 b 671 -284 684 -248 678 -258 l 662 -312 b 657 -357 658 -330 657 -344 b 744 -439 657 -403 683 -425 z\"\n    },\n    \"stringsDownBow\": {\n      \"x_min\": 0,\n      \"x_max\": 306,\n      \"y_min\": -0.09607201951262866,\n      \"y_max\": 366,\n      \"ha\": 366.09607201951263,\n      \"o\": \"m 405 0 b 425 17 413 -1 420 9 b 439 66 435 32 439 48 b 441 268 439 137 441 202 b 436 412 441 314 439 361 l 435 413 b 423 469 435 436 431 456 b 344 508 406 501 373 501 b 204 527 298 520 251 527 b 60 498 156 527 108 518 b 7 438 32 485 10 468 l 7 426 b 4 337 7 396 7 367 b 0 140 0 272 0 206 b 1 42 0 107 0 73 b 13 3 1 27 -3 4 b 40 39 29 3 35 24 b 42 53 42 43 40 49 b 49 141 48 84 49 112 b 48 215 49 167 48 192 b 49 252 48 228 48 240 l 49 312 b 130 343 72 331 99 340 b 206 347 156 346 180 347 b 372 314 262 347 318 338 l 390 307 l 390 245 b 390 138 392 212 390 176 b 397 23 390 101 392 62 b 405 0 399 14 393 1 z\"\n    },\n    \"stringsUpBow\": {\n      \"x_min\": 0,\n      \"x_max\": 219.2842808242076,\n      \"y_min\": 0,\n      \"y_max\": 489,\n      \"ha\": 489,\n      \"o\": \"m 150 0 l 151 0 b 184 42 170 12 180 26 b 297 554 223 212 261 382 b 315 690 305 598 318 645 b 304 704 315 697 311 704 b 276 670 288 704 282 697 b 157 131 236 490 196 311 l 157 144 b 73 526 134 276 104 396 b 30 677 60 576 52 638 b 13 694 26 684 22 694 b 0 674 9 694 0 691 l 0 671 b 10 603 3 649 6 626 b 105 174 42 461 72 317 b 150 0 117 117 128 58 z\"\n    },\n    \"stringsHarmonic\": {\n      \"x_min\": 0,\n      \"x_max\": 191,\n      \"y_min\": 0,\n      \"y_max\": 202,\n      \"ha\": 202,\n      \"o\": \"m 143 0 b 275 122 217 0 275 53 b 127 291 275 206 202 291 b 0 154 63 291 0 222 b 143 0 0 76 71 0 z m 122 68 b 43 105 89 66 59 75 b 39 124 40 111 39 117 b 79 199 39 148 56 180 b 145 226 101 216 122 226 b 199 210 163 226 180 220 b 235 150 223 196 235 173 b 203 92 235 128 225 107 b 122 68 181 76 150 68 z\"\n    },\n    \"pluckedSnapPizzicatoAbove\": {\n      \"x_min\": 0,\n      \"x_max\": 201,\n      \"y_min\": 0,\n      \"y_max\": 325,\n      \"ha\": 325,\n      \"o\": \"m 171 0 b 289 99 240 0 289 45 b 258 183 289 130 274 156 b 174 269 236 217 203 240 l 174 408 b 174 429 174 415 176 422 b 131 468 168 451 153 468 b 117 451 120 468 117 461 b 118 429 117 444 118 435 b 115 307 117 389 115 347 b 0 166 59 295 0 223 b 171 0 0 85 89 0 z m 134 55 b 52 131 84 55 52 85 b 115 233 52 179 81 209 b 114 192 114 220 114 206 b 174 120 114 137 114 137 l 174 228 b 233 148 200 207 223 183 b 236 130 235 143 236 135 b 197 72 236 105 223 85 b 134 55 177 60 157 55 z\"\n    },\n    \"pluckedSnapPizzicatoBelow\": {\n      \"x_min\": 0,\n      \"x_max\": 211,\n      \"y_min\": 0,\n      \"y_max\": 307,\n      \"ha\": 307,\n      \"o\": \"m 145 7 b 163 0 153 3 158 0 b 173 23 170 0 173 7 l 173 140 l 170 140 l 170 163 l 171 163 b 206 170 179 164 193 166 b 304 287 264 186 304 233 b 281 354 304 308 297 333 b 118 442 240 412 186 439 b 0 324 69 442 0 370 b 115 176 0 266 55 202 l 115 56 b 145 7 114 33 125 19 z m 115 220 b 62 256 92 223 73 230 b 53 292 56 269 53 281 b 78 344 53 311 60 328 b 168 384 105 372 135 384 b 213 376 183 384 199 382 b 253 321 239 366 253 346 b 246 291 253 311 251 301 b 170 226 230 256 203 236 l 170 258 b 148 305 171 278 163 292 b 128 315 143 310 135 315 l 124 315 b 115 301 117 314 115 308 z\"\n    },\n    \"pluckedLeftHandPizzicato\": {\n      \"x_min\": 0,\n      \"x_max\": 271,\n      \"y_min\": 0,\n      \"y_max\": 284,\n      \"ha\": 284,\n      \"o\": \"m 213 0 b 223 14 222 0 223 7 b 222 35 223 22 222 29 l 222 176 b 373 170 272 174 323 170 b 390 180 382 170 390 171 l 390 184 b 347 232 386 207 382 232 b 219 238 307 233 266 235 l 219 364 b 171 409 219 395 193 409 b 156 393 160 409 156 402 b 158 370 156 384 158 376 l 158 240 b 16 239 115 240 66 239 b 0 226 7 239 0 238 l 0 223 b 50 179 1 203 29 179 b 158 177 86 179 122 179 l 158 63 b 161 29 158 52 158 40 b 213 0 166 -1 194 1 z\"\n    },\n    \"keyboardPedalPed\": {\n      \"x_min\": 0,\n      \"x_max\": 944,\n      \"y_min\": -13,\n      \"y_max\": 550,\n      \"ha\": 563,\n      \"o\": \"m 22 0 b 109 78 53 0 105 46 l 144 333 b 163 376 147 347 140 372 b 364 465 238 390 301 426 b 454 599 416 497 454 540 b 452 618 454 605 454 612 b 320 770 442 694 396 747 b 248 779 295 778 272 779 b 193 778 229 779 212 779 b 160 780 181 778 167 775 b 137 792 153 789 144 791 b 109 789 128 792 118 789 b 7 719 59 789 48 737 b 23 708 16 714 20 708 b 36 710 29 710 33 710 b 53 684 52 710 53 698 l 53 674 b 43 386 53 577 53 482 b 20 164 36 312 30 238 b 1 30 14 120 7 75 b 0 19 0 26 0 22 b 22 0 0 9 4 0 z m 393 -17 b 634 145 494 16 579 52 b 638 160 636 151 638 156 b 625 168 638 166 634 168 b 621 167 624 168 622 168 b 524 118 582 164 544 160 b 495 79 517 104 505 92 b 435 33 471 49 452 33 b 380 96 416 33 397 55 b 369 145 373 114 369 131 b 442 225 369 186 395 213 b 468 232 451 228 459 229 b 654 344 539 255 606 285 b 677 395 667 360 677 376 b 672 415 677 402 675 408 b 612 459 661 442 639 455 b 589 461 602 461 592 461 b 348 328 500 461 409 408 b 269 120 302 268 269 199 b 379 -19 269 45 318 -19 b 393 -17 383 -19 389 -19 z m 395 240 b 494 383 418 300 452 344 l 521 405 b 544 419 528 409 536 418 b 554 415 547 419 550 418 b 570 383 564 406 570 396 l 570 379 b 552 331 570 360 562 344 b 395 240 511 285 462 253 z m 171 425 b 156 442 160 425 156 429 b 157 475 157 452 157 464 b 164 602 161 517 164 560 b 161 698 164 635 163 667 b 184 729 161 720 167 729 l 193 729 b 348 563 278 719 348 641 b 346 539 348 554 347 547 b 171 425 328 459 229 422 z m 827 89 b 792 111 815 89 804 96 b 766 204 775 131 766 158 b 845 360 772 256 799 314 b 871 372 854 369 863 372 b 897 366 880 372 888 369 b 978 279 942 353 963 320 b 976 259 981 272 981 265 b 858 104 942 203 909 147 b 827 89 847 94 837 89 z m 979 6 b 1008 13 986 6 995 9 b 1081 101 1047 29 1079 46 b 1116 449 1087 217 1104 333 b 1143 654 1123 518 1133 586 b 1148 685 1145 664 1148 675 b 1140 704 1148 693 1146 700 b 1107 716 1130 713 1119 716 b 1056 706 1092 716 1073 710 b 1037 671 1035 703 1038 685 b 1004 439 1025 595 1014 517 b 986 419 1001 428 999 419 b 979 419 985 419 982 420 b 935 426 965 423 949 425 b 795 376 884 426 838 405 b 664 153 714 323 664 249 b 665 130 664 145 665 138 b 753 29 671 65 704 29 b 815 40 773 29 792 33 b 975 147 873 65 923 101 b 965 45 971 108 968 76 b 979 6 963 17 966 6 z m 1282 12 b 1336 35 1303 14 1320 23 b 1359 71 1351 45 1359 58 b 1338 102 1359 82 1352 95 b 1254 130 1312 118 1284 130 b 1187 88 1223 130 1202 109 b 1178 65 1182 81 1178 72 b 1195 37 1178 55 1182 45 b 1282 12 1223 23 1253 19 z\"\n    },\n    \"keyboardPedalUp\": {\n      \"x_min\": 0,\n      \"x_max\": 436.6015132318337,\n      \"y_min\": 0,\n      \"y_max\": 461,\n      \"ha\": 461,\n      \"o\": \"m 330 0 b 334 1 331 0 333 0 b 340 12 338 4 340 7 l 338 26 b 340 264 338 105 338 184 b 526 95 400 206 461 148 b 559 71 536 88 547 71 b 564 72 560 71 563 71 b 580 121 580 79 580 102 l 580 127 b 543 203 585 158 573 184 b 472 259 518 219 495 238 l 445 285 b 590 292 494 288 541 291 b 622 318 609 294 618 302 b 628 359 625 331 626 346 b 586 402 632 393 621 405 b 464 395 546 399 504 396 l 559 491 b 567 524 567 500 567 510 b 564 543 567 527 567 536 b 539 596 559 563 560 590 b 494 564 521 600 508 577 b 340 413 442 514 390 464 l 340 560 b 287 664 340 600 321 632 b 271 518 274 612 272 566 b 268 445 269 494 269 469 b 117 569 219 488 168 530 b 96 579 109 575 102 579 b 85 560 89 579 85 573 b 124 446 85 518 82 477 b 209 380 153 426 181 403 b 45 374 154 377 99 376 b 0 324 9 374 0 359 b 63 266 0 265 1 265 b 144 272 89 269 117 272 l 196 272 b 108 193 167 246 138 219 b 60 135 76 164 60 151 b 99 73 60 121 73 105 b 104 68 101 72 102 71 b 114 58 107 60 111 58 b 130 66 120 58 124 62 b 259 186 173 107 217 145 b 256 117 259 163 256 140 b 311 13 256 72 271 37 b 330 0 317 10 323 0 z\"\n    },\n    \"pictChokeCymbal\": {\n      \"x_min\": 1,\n      \"x_max\": 147,\n      \"y_min\": 0,\n      \"y_max\": 242,\n      \"ha\": 242,\n      \"o\": \"m 79 4 b 207 158 153 32 192 88 b 212 200 210 173 212 187 b 143 336 212 253 187 298 b 98 348 131 344 115 348 b 4 295 60 348 16 327 b 1 276 1 289 1 282 b 9 249 1 266 3 258 b 121 183 35 206 72 183 b 156 186 132 183 144 183 b 26 53 134 115 91 73 b 7 39 13 49 7 45 b 19 20 7 33 12 27 b 59 0 30 9 43 0 b 79 4 65 0 72 1 z\"\n    },\n    \"wiggleArpeggiatoUp\": {\n      \"x_min\": -22,\n      \"x_max\": 300,\n      \"y_min\": 0,\n      \"y_max\": 176,\n      \"ha\": 176,\n      \"o\": \"m 173 4 b 196 0 180 1 189 0 b 246 26 215 0 230 9 b 301 117 271 53 285 85 b 312 131 305 125 307 131 b 327 124 315 131 321 128 b 373 86 341 112 353 101 b 412 69 389 75 402 69 b 432 94 425 69 432 79 b 373 181 432 117 413 154 b 235 252 323 216 285 245 b 220 253 229 253 225 253 b 168 215 196 253 181 240 b 111 112 151 180 140 141 b 94 102 105 105 99 102 b 78 111 89 102 84 105 b 0 181 55 135 35 160 b -32 153 -20 194 -32 168 b 0 86 -32 124 -32 109 b 94 36 22 71 73 46 b 173 4 134 16 131 17 z\"\n    },\n    \"arrowheadBlackUp\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"arrowheadBlackDown\": {\n      \"x_min\": 186,\n      \"x_max\": 820,\n      \"y_min\": -1000,\n      \"y_max\": 1000,\n      \"ha\": 2000,\n      \"o\": \"m 1181 1440 l 268 1440 l 268 -1440 l 1181 -1440 z m 959 -524 l 959 -850 l 481 -850 l 481 -524 z m 864 -619 l 576 -619 l 576 -755 l 864 -755 z m 959 -26 l 959 -351 l 481 -351 l 481 -26 l 576 -26 l 576 -256 l 864 -256 l 864 -121 l 769 -121 l 769 -187 l 671 -187 l 671 -26 z m 959 325 l 959 37 l 481 37 l 481 135 l 864 135 l 864 325 z m 959 498 l 959 403 l 769 403 l 769 202 l 481 202 l 481 297 l 671 297 l 671 403 l 481 403 l 481 498 z m 671 778 l 576 778 l 576 674 l 671 674 z m 769 876 l 769 674 l 959 674 l 959 576 l 481 576 l 481 876 z m 959 1247 l 959 1152 l 769 1152 l 769 1045 l 959 1045 l 959 950 l 481 950 l 481 1045 l 671 1045 l 671 1152 l 484 1152 l 484 1247 z m 959 -916 l 959 -1011 l 867 -1011 l 665 -1146 l 959 -1146 l 959 -1241 l 481 -1241 l 481 -1146 l 683 -1011 l 481 -1011 l 481 -916 z\"\n    },\n    \"arpeggiatoUp\": {\n      \"x_min\": 0,\n      \"x_max\": 262,\n      \"y_min\": 0,\n      \"y_max\": 1459,\n      \"ha\": 1459,\n      \"o\": \"m 190 0 b 160 63 187 29 170 45 b 145 108 150 81 145 95 b 183 163 145 128 157 145 b 300 246 222 190 262 216 b 347 318 333 272 347 295 b 301 393 347 341 331 364 b 258 413 289 403 272 408 b 145 449 220 425 183 436 b 117 464 135 452 120 452 b 140 491 115 477 128 484 b 294 593 192 526 243 557 b 330 647 318 611 330 626 b 314 693 330 660 324 675 b 262 736 302 714 285 729 b 170 763 230 744 200 753 b 122 783 153 768 125 768 b 160 831 120 804 143 818 b 288 922 202 861 246 890 b 333 999 318 945 333 972 b 266 1083 333 1032 310 1064 b 189 1115 240 1094 215 1103 b 122 1178 145 1133 122 1153 b 168 1250 122 1200 138 1223 l 180 1257 b 269 1333 210 1283 240 1306 b 305 1405 294 1356 305 1381 b 284 1469 305 1426 298 1447 b 228 1525 269 1492 251 1511 b 183 1600 197 1545 183 1571 b 190 1640 183 1613 184 1626 b 197 1670 193 1650 194 1660 b 272 1735 213 1719 230 1735 b 295 1734 279 1735 287 1735 b 323 1732 305 1732 314 1732 b 350 1731 333 1732 341 1732 b 377 1742 369 1729 377 1732 b 370 1761 377 1747 374 1754 l 301 1898 b 217 2066 274 1954 248 2012 b 186 2101 204 2089 196 2101 b 154 2069 177 2101 167 2091 b 12 1824 105 1987 59 1907 b 0 1787 4 1810 0 1797 b 59 1744 0 1761 20 1745 b 160 1738 92 1744 125 1740 b 145 1692 156 1721 151 1706 b 135 1633 138 1672 135 1652 b 184 1518 135 1591 151 1552 b 229 1475 199 1503 213 1488 b 259 1431 249 1456 259 1444 b 229 1388 259 1420 249 1407 b 151 1325 203 1365 177 1345 b 105 1279 134 1310 118 1296 b 73 1202 84 1251 73 1227 b 108 1123 73 1176 85 1152 b 255 1031 148 1077 199 1051 b 282 1014 274 1025 282 1021 b 262 991 282 1008 275 1001 b 151 914 226 963 189 939 b 79 851 125 896 99 877 b 63 809 69 837 63 824 b 79 769 63 796 68 783 b 202 697 111 729 154 710 b 266 670 225 690 266 688 b 210 622 266 648 232 635 b 82 534 167 593 120 570 b 55 491 63 518 55 505 b 79 448 55 478 63 465 b 255 361 127 395 192 380 b 288 343 269 359 288 357 b 266 312 288 331 275 320 b 144 223 229 278 184 253 b 85 134 104 193 85 166 b 118 53 85 111 96 85 b 190 0 135 29 160 14 z\"\n    },\n    \"arpeggiatoDown\": {\n      \"x_min\": 0,\n      \"x_max\": 218,\n      \"y_min\": 0,\n      \"y_max\": 1440,\n      \"ha\": 1440,\n      \"o\": \"m 161 16 b 310 261 210 98 259 180 b 314 275 312 266 314 271 b 302 295 314 282 310 289 b 252 311 287 308 269 311 b 217 310 240 311 229 310 b 190 333 202 310 194 315 b 151 412 186 363 171 389 b 102 501 120 452 102 477 b 150 588 102 524 118 547 b 161 603 154 592 158 598 b 181 661 176 622 181 641 b 173 704 181 675 179 690 b 86 795 156 746 121 770 b 53 829 63 811 53 819 b 78 868 53 840 62 851 b 102 888 85 876 94 883 b 180 956 128 912 156 933 b 216 1028 204 979 216 1002 b 203 1081 216 1044 212 1061 b 115 1171 186 1123 148 1145 b 75 1221 88 1191 75 1207 b 114 1272 75 1237 88 1251 b 173 1308 132 1284 154 1296 b 226 1339 190 1318 209 1328 b 265 1405 253 1359 265 1380 b 258 1447 265 1418 264 1431 b 154 1541 242 1499 199 1521 b 109 1581 124 1555 109 1567 b 141 1627 109 1594 121 1608 b 204 1680 163 1646 184 1662 b 233 1742 223 1699 233 1719 b 226 1777 233 1752 230 1764 b 135 1862 210 1822 173 1840 b 104 1895 114 1875 104 1884 b 118 1930 104 1904 109 1914 b 192 2006 135 1961 161 1986 b 206 2029 203 2013 206 2022 b 192 2064 206 2040 197 2052 b 180 2074 187 2071 184 2074 b 156 2061 171 2074 163 2065 b 84 1983 125 2040 102 2013 b 65 1921 71 1961 65 1941 b 88 1853 65 1899 72 1876 b 171 1784 108 1820 138 1801 b 190 1764 184 1777 190 1770 b 174 1741 190 1757 184 1750 b 107 1683 153 1722 128 1704 b 68 1610 81 1659 68 1636 b 88 1548 68 1591 75 1571 b 177 1470 109 1512 141 1489 b 223 1431 209 1453 223 1443 b 179 1390 223 1420 209 1408 b 128 1361 163 1380 145 1371 b 71 1322 108 1348 88 1338 b 32 1253 45 1300 32 1277 b 48 1198 32 1236 37 1218 b 147 1090 71 1152 108 1120 b 174 1057 166 1076 174 1067 b 153 1022 174 1047 167 1037 b 109 982 140 1008 124 995 b 37 919 85 962 59 942 b 9 860 17 899 9 880 b 26 806 9 844 14 827 b 120 717 50 769 84 740 b 138 691 132 708 138 700 b 130 668 138 684 135 677 b 92 618 118 651 105 635 b 59 531 71 589 59 560 b 84 455 59 507 68 481 b 132 386 98 431 115 408 b 148 341 144 372 148 357 b 144 317 148 333 147 324 b 121 305 140 307 131 305 l 98 305 b 82 304 94 304 88 304 l 32 304 b 0 292 10 304 0 302 b 12 266 0 287 4 279 b 60 164 32 233 46 199 b 127 20 84 117 105 68 b 144 0 132 9 137 0 b 161 16 150 0 154 4 z\"\n    },\n    \"repeat1Bar\": {\n      \"x_min\": 0,\n      \"x_max\": 599.1057280164835,\n      \"y_min\": -250,\n      \"y_max\": 175,\n      \"ha\": 425,\n      \"o\": \"m 76 -334 b 181 -285 111 -315 148 -302 b 831 52 396 -168 613 -58 b 863 114 855 63 864 82 b 828 202 855 140 855 176 b 808 213 821 209 815 213 b 793 209 804 213 799 212 l 422 19 b 26 -179 291 -48 164 -124 b 0 -213 10 -186 0 -196 b 3 -232 0 -219 0 -225 b 52 -325 14 -265 37 -294 b 66 -337 55 -331 59 -337 b 76 -334 69 -337 72 -336 z m 216 98 b 255 75 236 84 246 75 b 291 104 265 75 274 85 b 323 147 304 117 327 125 b 289 215 323 168 314 184 b 238 252 269 239 253 252 b 187 222 222 252 207 242 b 173 206 183 216 177 212 b 157 170 163 194 157 183 b 174 138 157 160 161 150 b 216 98 189 127 200 109 z m 769 -360 b 829 -264 779 -360 829 -284 b 769 -176 822 -232 799 -200 b 742 -163 760 -167 750 -163 b 716 -184 733 -163 723 -168 b 683 -228 708 -202 693 -213 b 672 -253 675 -236 672 -245 b 683 -281 672 -262 675 -271 b 752 -353 703 -308 732 -327 b 769 -360 756 -357 763 -360 z\"\n    },\n    \"repeat2Bars\": {\n      \"x_min\": 0.008571918423331715,\n      \"x_max\": 775,\n      \"y_min\": -246.92374029115243,\n      \"y_max\": 362.82068246705313,\n      \"ha\": 609.7444227582056,\n      \"o\": \"m 909 412 b 873 351 906 384 893 367 b 436 50 729 249 585 147 b 91 -179 321 -26 206 -102 b 62 -174 76 -189 68 -183 b 12 -96 48 -147 24 -125 b 36 -16 -7 -53 -6 -43 b 220 104 96 24 158 65 b 819 507 425 232 624 369 b 881 495 852 530 861 528 b 909 412 899 469 900 439 z m 1116 228 b 1067 158 1115 192 1092 174 b 910 59 1015 125 963 92 b 478 -240 762 -33 622 -140 b 311 -350 423 -279 366 -314 b 285 -344 298 -360 289 -356 b 239 -258 272 -314 251 -288 b 261 -196 228 -228 235 -210 b 517 -29 348 -144 436 -91 b 1030 321 681 98 861 202 b 1093 307 1060 343 1076 340 b 1116 228 1107 281 1109 252 z m 1070 -105 b 1020 -210 1057 -143 1038 -176 b 998 -210 1014 -219 1004 -215 b 924 -153 973 -192 949 -171 b 913 -88 899 -135 897 -112 b 949 -22 926 -66 939 -45 b 998 -7 960 6 976 9 b 1070 -105 1032 -32 1058 -63 z m 333 338 b 302 240 330 307 317 274 b 276 235 297 225 287 228 b 233 269 262 246 248 258 b 203 376 186 307 183 318 b 225 441 212 397 217 419 b 246 454 228 452 232 458 b 333 338 284 441 333 380 z\"\n    },\n    \"repeat4Bars\": {\n      \"x_min\": 0,\n      \"x_max\": 1374,\n      \"y_min\": -304,\n      \"y_max\": 304,\n      \"ha\": 608,\n      \"o\": \"m 815 -367 b 829 -359 819 -367 824 -364 b 851 -343 835 -353 844 -347 b 1375 6 1027 -228 1205 -117 l 1610 170 b 1644 235 1632 184 1643 203 b 1626 300 1639 253 1634 276 b 1590 337 1614 325 1604 337 b 1551 320 1580 337 1567 330 b 873 -135 1329 161 1103 10 b 749 -222 829 -161 785 -184 b 737 -245 742 -230 737 -238 b 742 -261 737 -249 739 -255 b 802 -357 755 -297 782 -325 b 815 -367 805 -363 809 -367 z m 291 148 b 325 223 302 148 308 170 b 333 256 328 235 330 246 b 264 363 330 305 298 336 b 242 373 255 369 248 373 b 220 347 232 373 225 364 b 202 288 216 327 213 305 b 190 252 193 275 190 262 b 222 200 190 232 202 215 b 291 148 264 170 279 148 z m 78 -266 b 92 -258 82 -266 88 -264 b 114 -240 98 -251 107 -246 b 638 107 289 -125 467 -14 b 873 271 716 161 793 216 b 907 337 894 285 906 305 b 887 400 901 354 897 379 b 852 438 877 426 867 438 b 814 420 842 438 829 432 b 135 -33 592 262 366 111 b 12 -121 92 -60 48 -84 b 0 -144 4 -128 0 -135 b 4 -160 0 -148 1 -154 b 63 -255 17 -196 45 -223 b 78 -266 68 -262 72 -266 z m 396 -360 b 408 -356 400 -360 403 -359 b 609 -223 471 -307 543 -269 b 896 -19 706 -156 795 -81 b 1164 154 985 37 1074 96 b 1214 223 1189 170 1211 187 b 1176 321 1204 253 1205 292 b 1159 330 1169 327 1165 330 b 1145 324 1155 330 1151 328 b 1048 258 1113 302 1081 278 b 357 -202 809 117 598 -65 b 333 -238 341 -212 333 -223 b 338 -262 333 -245 334 -253 b 384 -350 350 -294 372 -318 b 396 -360 386 -354 390 -360 z m 1162 -438 b 1174 -433 1166 -438 1169 -436 b 1374 -300 1237 -384 1309 -346 b 1660 -96 1470 -233 1561 -158 b 1930 76 1751 -39 1840 19 b 1979 147 1954 92 1977 109 b 1943 243 1968 177 1971 216 b 1924 253 1935 251 1930 253 b 1911 248 1920 253 1915 252 b 1814 181 1878 225 1848 202 b 1123 -279 1575 40 1364 -141 b 1099 -315 1106 -289 1099 -300 b 1103 -338 1099 -321 1100 -330 b 1149 -426 1115 -370 1138 -396 b 1162 -438 1151 -432 1156 -438 z m 1875 -295 b 1882 -291 1878 -295 1879 -294 b 1934 -189 1904 -258 1921 -223 b 1872 -96 1925 -147 1901 -120 b 1840 -78 1858 -84 1848 -78 b 1812 -109 1830 -78 1823 -88 l 1777 -173 b 1770 -199 1773 -181 1770 -190 b 1786 -230 1770 -210 1774 -220 b 1862 -289 1809 -253 1837 -269 b 1875 -295 1865 -292 1871 -295 z\"\n    },\n    \"repeatBarSlash\": {\n      \"x_min\": 0,\n      \"x_max\": 630,\n      \"y_min\": -225.19160170741765,\n      \"y_max\": 265.1261822123701,\n      \"ha\": 490.31778391978776,\n      \"o\": \"m 78 -324 b 92 -314 82 -325 88 -321 b 114 -298 96 -307 107 -302 b 638 49 289 -183 467 -72 b 873 215 716 104 792 161 b 907 279 894 229 906 248 b 887 344 901 298 897 321 b 852 382 877 369 867 380 b 814 363 842 383 829 376 b 135 -91 603 192 364 55 b 12 -177 92 -118 45 -137 b 0 -202 4 -186 0 -192 b 4 -217 0 -206 1 -212 b 63 -312 17 -253 42 -284 b 78 -324 68 -318 72 -323 z\"\n    },\n    \"csymDiminished\": {\n      \"x_min\": 0,\n      \"x_max\": 506,\n      \"y_min\": -0.011036179317259481,\n      \"y_max\": 500,\n      \"ha\": 500.0110361793173,\n      \"o\": \"m 397 0 b 729 265 576 -1 729 95 b 711 367 729 297 723 331 b 472 670 668 498 586 595 b 315 720 423 701 372 720 b 253 713 295 720 275 719 b 32 514 144 687 75 615 b 0 374 12 468 0 420 b 27 251 0 333 9 292 b 140 117 52 196 92 153 b 397 0 223 52 317 4 z m 340 95 b 132 314 233 84 122 216 b 324 589 145 438 200 539 b 415 611 360 603 389 611 b 544 505 469 611 505 576 b 590 392 564 471 583 432 b 596 343 593 374 596 359 b 340 95 596 210 485 96 z\"\n    },\n    \"csymHalfDiminished\": {\n      \"x_min\": -32,\n      \"x_max\": 496,\n      \"y_min\": -33,\n      \"y_max\": 492,\n      \"ha\": 525,\n      \"o\": \"m -29 -48 b 0 -36 -19 -48 -9 -40 b 17 -20 7 -32 12 -24 b 134 94 56 19 95 56 b 372 0 207 43 282 0 b 455 13 397 0 426 4 b 677 258 556 45 671 141 b 678 289 677 268 678 278 b 593 539 678 380 654 467 b 592 541 593 540 592 540 l 684 632 b 713 678 700 647 711 665 b 714 691 714 684 714 688 b 707 704 714 698 711 701 b 691 708 701 707 696 708 b 660 691 680 708 670 701 l 552 585 b 478 634 530 606 507 624 b 361 684 438 648 397 661 b 301 703 341 697 320 703 b 226 677 275 703 251 693 b 27 449 140 618 72 543 b 0 324 9 410 -4 370 b 88 128 -1 243 30 177 b -30 -7 43 86 0 46 b -46 -33 -35 -16 -46 -24 b -42 -42 -46 -36 -45 -39 b -29 -48 -37 -46 -33 -48 z m 281 105 b 179 137 240 105 206 117 b 210 168 189 147 200 157 l 537 487 b 547 455 541 477 544 467 b 556 370 552 426 556 397 b 429 154 556 274 503 207 b 281 105 384 122 336 105 z m 141 179 b 121 251 128 200 121 225 b 128 297 121 265 124 281 b 351 575 163 420 248 505 b 377 582 359 579 369 580 b 501 536 422 586 468 567 b 141 179 382 416 261 298 z\"\n    },\n    \"csymAugmented\": {\n      \"x_min\": 0,\n      \"x_max\": 530,\n      \"y_min\": 0,\n      \"y_max\": 539,\n      \"ha\": 539,\n      \"o\": \"m 380 0 b 393 14 384 4 390 9 b 397 46 397 24 397 36 l 397 333 b 736 327 511 331 624 330 b 763 343 755 327 763 333 b 755 361 763 348 760 354 b 635 431 726 402 688 431 l 390 431 l 390 485 b 386 606 392 526 386 566 b 392 664 386 625 387 645 b 395 690 393 672 395 681 b 376 753 395 711 389 734 b 357 776 372 762 369 776 b 350 775 354 776 353 776 b 327 740 337 769 327 759 b 327 621 328 700 327 661 b 330 438 328 559 328 498 l 29 438 b 4 431 20 438 7 442 b 0 413 3 425 0 419 b 7 399 0 408 1 403 b 131 338 45 369 85 340 b 331 334 199 336 265 334 b 333 163 333 276 333 220 b 366 13 333 109 348 63 b 380 0 367 7 374 4 z\"\n    },\n    \"csymMajorSeventh\": {\n      \"x_min\": 0,\n      \"x_max\": 593.1050509327923,\n      \"y_min\": 0,\n      \"y_max\": 569,\n      \"ha\": 569,\n      \"o\": \"m 109 0 l 124 1 l 497 27 b 819 50 605 35 711 43 b 854 98 847 52 855 63 b 812 200 845 128 835 166 b 564 585 730 328 648 456 b 435 786 521 652 480 720 b 397 819 419 809 408 819 b 369 792 387 819 379 811 b 7 173 248 585 128 379 b 0 150 3 166 0 158 b 7 128 0 143 3 135 b 89 10 30 86 65 50 b 109 0 95 1 102 0 z m 163 147 b 153 153 158 147 156 148 b 164 179 147 163 158 170 b 426 644 251 334 338 488 b 442 660 432 655 436 660 b 458 645 446 660 452 655 b 727 220 547 503 636 361 b 736 202 732 213 736 206 b 714 190 736 196 730 192 b 179 148 537 177 359 163 b 163 147 174 150 168 147 z\"\n    },\n    \"csymMinor\": {\n      \"x_min\": 0,\n      \"x_max\": 481.6448458467591,\n      \"y_min\": 193,\n      \"y_max\": 265.20435472429375,\n      \"ha\": 72.20435472429375,\n      \"o\": \"m 168 278 b 197 279 177 278 187 278 b 431 292 275 287 353 288 l 431 291 b 661 302 508 295 585 300 b 693 311 672 304 688 300 b 674 346 697 324 685 338 b 564 382 641 366 606 384 l 27 360 b 0 347 17 360 1 366 b 19 314 0 333 3 321 b 168 278 66 291 115 278 z\"\n    },\n    \"csymParensLeftTall\": {\n      \"x_min\": 0,\n      \"x_max\": 185,\n      \"y_min\": 0,\n      \"y_max\": 1034,\n      \"ha\": 1034,\n      \"o\": \"m 212 0 l 215 0 b 226 17 223 1 223 10 b 229 37 229 24 229 32 b 220 81 229 52 225 66 b 167 203 206 124 181 160 b 86 616 124 338 89 474 b 82 765 85 665 82 716 b 91 886 82 805 84 845 b 245 1319 120 1038 171 1184 b 266 1397 259 1346 266 1371 b 259 1443 266 1411 264 1427 b 226 1489 253 1463 248 1489 b 193 1454 212 1489 203 1467 b 114 1292 158 1404 140 1346 b 0 806 40 1138 0 978 b 3 721 0 779 0 750 b 1 677 1 707 1 693 b 36 418 1 593 16 504 b 144 96 62 307 95 199 b 196 12 158 66 179 39 b 212 0 200 7 204 0 z\"\n    },\n    \"csymParensRightTall\": {\n      \"x_min\": -40,\n      \"x_max\": 188.5411603861406,\n      \"y_min\": 0.20204102886728756,\n      \"y_max\": 1058,\n      \"ha\": 1057.7979589711326,\n      \"o\": \"m 30 1 b 63 14 42 -3 55 6 b 122 99 86 40 108 68 b 189 258 145 153 166 204 b 271 667 239 379 268 503 b 246 852 275 708 261 780 b 10 1495 197 1077 128 1295 b -14 1524 4 1505 1 1524 b -16 1522 -14 1524 -16 1524 b -46 1489 -33 1521 -43 1503 b -58 1417 -53 1464 -58 1440 b -36 1335 -58 1390 -52 1364 b 68 1138 0 1270 35 1204 b 163 883 108 1056 137 969 b 206 668 184 814 200 742 b 207 631 207 655 207 642 b 166 426 207 560 192 492 b 46 143 130 330 111 228 b 19 29 19 109 17 69 b 30 1 20 19 24 3 z\"\n    },\n    \"csymBracketLeftTall\": {\n      \"x_min\": 0,\n      \"x_max\": 328,\n      \"y_min\": 2,\n      \"y_max\": 807,\n      \"ha\": 805,\n      \"o\": \"m 68 3 b 76 4 71 3 73 3 b 186 13 112 12 150 13 b 240 13 204 13 222 13 b 287 13 256 13 271 13 b 379 17 317 13 348 13 b 472 121 435 24 472 69 b 467 156 472 132 469 144 b 446 174 462 168 456 174 b 439 174 444 174 442 174 b 327 166 402 167 364 166 b 265 167 307 166 285 167 l 209 167 b 187 475 199 269 189 372 b 166 985 186 645 187 815 l 377 1002 b 415 1001 389 1002 402 1001 b 456 1027 432 1001 448 1005 b 472 1096 467 1048 472 1073 b 464 1146 472 1113 469 1130 b 439 1162 459 1161 452 1162 b 40 1129 305 1151 173 1139 b 1 1093 17 1128 1 1120 b 0 1009 0 1064 0 1037 b 13 975 0 991 3 981 b 30 670 23 873 30 772 b 29 608 30 649 29 628 b 29 563 29 593 29 579 b 56 88 29 405 49 246 b 53 22 55 66 55 43 b 68 3 53 12 56 3 z\"\n    },\n    \"csymBracketRightTall\": {\n      \"x_min\": 0.8519422934604696,\n      \"x_max\": 306,\n      \"y_min\": -0.17180889215212544,\n      \"y_max\": 829.1037519824849,\n      \"ha\": 829.2755608746371,\n      \"o\": \"m 105 0 l 117 0 b 372 29 203 -3 287 20 l 373 29 b 406 32 383 30 395 30 b 436 60 428 33 432 43 b 441 109 439 76 441 92 b 433 200 441 140 436 170 b 409 696 422 366 409 530 b 416 887 409 763 416 831 b 415 920 416 899 415 910 l 415 1106 b 412 1135 415 1116 415 1126 l 412 1145 b 373 1189 413 1171 408 1192 b 321 1189 356 1189 338 1189 b 215 1189 285 1189 251 1189 l 215 1194 l 56 1194 b 6 1153 27 1195 10 1187 b 1 1064 3 1123 4 1093 b 22 1043 0 1050 6 1043 b 84 1044 42 1044 63 1044 b 264 1038 144 1044 203 1040 b 265 958 264 1011 265 985 b 262 845 265 920 264 883 b 259 710 259 801 259 755 b 279 243 259 554 271 399 b 285 170 281 219 284 194 b 95 151 222 161 158 156 b 29 81 27 147 27 147 l 29 73 b 105 0 33 0 33 0 z\"\n    },\n    \"csymParensLeftVeryTall\": {\n      \"x_min\": 0,\n      \"x_max\": 116,\n      \"y_min\": 0,\n      \"y_max\": 934.1531437146923,\n      \"ha\": 934.1531437146923,\n      \"o\": \"m 128 0 b 147 17 137 0 144 9 b 167 102 160 45 167 73 b 158 154 167 120 164 137 b 117 307 141 204 130 256 b 63 698 84 435 71 567 b 62 788 62 729 62 757 b 69 916 62 829 63 873 b 109 1172 81 1001 94 1087 b 132 1320 118 1221 137 1269 b 124 1345 131 1329 134 1342 b 96 1332 114 1346 102 1341 b 71 1269 82 1313 75 1292 b 39 1104 59 1214 48 1159 b 0 742 19 988 0 871 b 10 559 3 688 6 624 b 58 226 16 446 33 336 b 112 20 73 157 94 89 b 128 0 115 13 118 0 z\"\n    },\n    \"csymParensRightVeryTall\": {\n      \"x_min\": -20,\n      \"x_max\": 111.4332498248095,\n      \"y_min\": -0.07657185734616112,\n      \"y_max\": 1009,\n      \"ha\": 1009.0765718573462,\n      \"o\": \"m -3 0 b 20 22 9 -1 14 12 b 36 56 26 33 32 45 b 99 274 58 128 84 199 b 160 788 135 439 163 605 b 122 1181 164 912 145 1047 b 50 1431 108 1267 86 1351 b 36 1453 48 1439 46 1453 b 35 1453 36 1453 35 1453 l 30 1453 b 7 1423 17 1449 7 1440 b 27 1287 9 1377 10 1331 b 96 963 71 1184 85 1074 b 105 818 102 914 105 867 b 91 624 105 753 99 688 b -4 213 72 484 48 344 b -29 101 -19 174 -29 138 b -16 27 -29 76 -24 52 b -3 0 -13 17 -14 3 z\"\n    },\n    \"csymDiagonalArrangementSlash\": {\n      \"x_min\": -0.19862981551275186,\n      \"x_max\": 990,\n      \"y_min\": -26.946823529189132,\n      \"y_max\": 1027.5514326488437,\n      \"ha\": 1054.4982561780328,\n      \"o\": \"m 14 -37 b 58 -9 35 -45 46 -22 b 392 333 170 105 279 217 b 765 711 516 458 639 585 b 1372 1329 968 916 1168 1125 b 1424 1439 1403 1359 1417 1397 b 1426 1457 1424 1444 1426 1450 b 1416 1477 1426 1466 1423 1475 b 1374 1462 1400 1485 1385 1473 b 1181 1269 1309 1397 1246 1331 b 736 831 1031 1122 884 979 b 356 452 609 704 485 576 b 32 132 246 347 143 236 b 0 50 7 109 1 84 b 6 9 -1 37 3 23 b 14 -37 10 -9 0 -32 z\"\n    },\n    \"brassScoop\": {\n      \"x_min\": -0.4444444444444445,\n      \"x_max\": 312,\n      \"y_min\": -390,\n      \"y_max\": 28,\n      \"ha\": 418,\n      \"leftSideBearing\": -1,\n      \"advanceWidth\": 312,\n      \"o\": \"m 0 -562 b 393 -256 171 -504 307 -412 b 449 -39 431 -189 449 -115 b 448 -1 449 -26 449 -14 b 433 40 446 14 448 40 b 408 -3 410 40 412 14 b 396 -66 403 -23 402 -46 b 45 -397 346 -243 209 -337 b 0 -451 13 -409 1 -423 b 0 -562 -1 -485 0 -520 z\"\n    },\n    \"brassDoitMedium\": {\n      \"x_min\": -0.32815253965710617,\n      \"x_max\": 476.2125117760856,\n      \"y_min\": -50,\n      \"y_max\": 333.1535583875376,\n      \"ha\": 383.1535583875376,\n      \"leftSideBearing\": -1,\n      \"advanceWidth\": 476,\n      \"o\": \"m 16 -72 b 27 -71 19 -72 23 -72 b 215 -33 89 -56 153 -48 b 521 114 327 -7 435 35 b 685 432 615 199 691 295 b 670 480 684 449 688 475 b 642 441 654 482 648 456 b 403 183 599 321 513 240 b 79 89 301 130 192 105 b 0 -1 -12 76 0 76 b 0 -50 0 -17 1 -33 b 16 -72 0 -65 3 -72 z\"\n    },\n    \"brassFallLipShort\": {\n      \"x_min\": 0,\n      \"x_max\": 298,\n      \"y_min\": -344,\n      \"y_max\": 65,\n      \"ha\": 409,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 298,\n      \"o\": \"m 396 -495 b 420 -461 412 -487 418 -474 b 429 -382 428 -435 429 -409 b 426 -330 429 -364 428 -347 b 285 -6 410 -209 356 -104 b 98 94 239 59 173 94 b 39 86 79 94 58 92 b 0 49 20 81 0 73 l 0 -52 b 10 -69 0 -62 1 -69 b 20 -68 13 -69 16 -69 b 88 -56 45 -59 66 -56 b 261 -160 156 -56 213 -95 b 396 -495 333 -259 382 -369 z\"\n    },\n    \"brassLiftMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 807,\n      \"y_min\": 0,\n      \"y_max\": 838,\n      \"ha\": 838,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 807,\n      \"o\": \"m 50 0 b 55 1 52 0 53 0 b 58 23 65 7 59 16 b 55 58 56 36 55 48 b 130 117 55 99 75 112 b 220 213 202 121 220 141 b 315 308 220 289 238 308 l 336 308 b 408 380 393 310 406 321 b 461 452 409 438 416 452 b 485 451 468 452 477 451 b 569 510 531 448 556 464 b 573 543 572 520 572 531 b 657 619 580 605 595 618 b 698 621 670 619 684 619 b 788 700 749 625 778 649 b 798 778 792 726 793 752 b 873 857 806 841 809 845 b 985 950 927 867 973 887 b 1084 1047 1002 1035 1004 1034 b 1162 1128 1133 1056 1162 1087 b 1146 1182 1162 1145 1158 1164 b 1125 1207 1140 1191 1136 1207 l 1122 1207 b 1110 1191 1113 1205 1110 1198 b 1112 1174 1110 1185 1112 1178 b 1048 1110 1109 1126 1096 1113 b 1028 1109 1043 1110 1035 1109 b 939 1022 969 1102 948 1081 b 845 922 929 949 917 936 b 746 812 773 909 753 886 b 744 780 744 802 744 791 b 635 681 737 700 717 683 b 524 583 553 680 536 665 b 439 510 514 520 503 510 b 357 431 377 510 360 492 l 357 406 b 314 364 356 379 343 364 b 238 361 288 364 264 364 b 173 300 202 357 180 334 b 167 245 168 281 167 262 b 105 174 166 192 157 180 b 75 171 95 173 85 171 b 6 112 30 166 14 153 b 0 73 1 98 0 85 b 37 10 0 45 13 26 b 50 0 42 7 46 0 z\"\n    },\n    \"brassFallRoughMedium\": {\n      \"x_min\": 0,\n      \"x_max\": 791,\n      \"y_min\": 0,\n      \"y_max\": 819,\n      \"ha\": 819,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 791,\n      \"o\": \"m 1117 0 b 1139 101 1129 26 1139 71 b 1138 121 1139 109 1139 115 b 1084 193 1125 171 1110 193 b 1044 183 1073 193 1060 189 b 1022 177 1035 179 1028 177 b 1007 209 1012 177 1008 186 b 876 324 1004 292 959 330 b 799 317 850 321 825 320 b 759 354 772 314 755 320 b 760 373 760 360 760 366 b 759 392 760 379 760 384 b 681 477 753 451 730 477 b 654 474 672 477 664 475 b 606 467 638 471 622 468 b 586 465 599 465 592 465 b 564 481 570 465 564 469 b 569 505 564 487 566 495 b 575 553 572 521 575 537 b 572 585 575 564 573 575 b 481 665 560 657 539 668 b 412 665 458 664 435 665 b 382 690 392 667 382 672 b 383 700 382 693 383 696 b 386 773 387 724 387 749 b 297 858 382 828 351 857 b 229 861 274 858 251 858 b 190 897 207 863 193 871 b 163 1012 186 936 180 976 b 79 1084 145 1050 124 1084 b 66 1083 75 1084 71 1083 b 43 1096 49 1081 43 1087 b 48 1112 43 1100 45 1106 b 53 1130 52 1119 53 1125 b 39 1169 53 1145 45 1158 b 26 1179 36 1175 30 1179 b 16 1171 22 1179 17 1176 b 0 1103 10 1149 0 1126 b 9 1067 0 1092 1 1079 b 91 1021 26 1031 52 1018 b 145 978 122 1024 141 1011 b 156 913 147 956 151 935 b 291 795 170 831 210 795 b 346 768 337 795 346 796 b 344 743 346 760 344 753 b 343 716 344 733 343 724 b 455 600 343 651 390 602 b 505 605 471 599 490 605 b 528 598 514 605 523 603 b 536 579 534 592 536 586 b 524 523 536 562 526 541 b 523 505 524 517 523 511 b 621 405 523 442 560 405 b 639 406 626 405 634 406 b 677 413 652 408 664 410 b 701 416 687 415 696 416 b 721 392 716 416 721 410 b 720 373 721 386 720 380 b 831 255 714 301 759 252 b 897 261 854 255 876 261 b 926 262 909 261 919 262 b 969 197 963 262 965 252 b 971 184 969 193 971 189 b 1031 115 979 137 998 115 b 1071 122 1043 115 1056 118 b 1096 130 1079 125 1086 127 b 1087 59 1094 107 1087 82 b 1117 0 1087 37 1094 17 z\"\n    },\n    \"brassBend\": {\n      \"x_min\": 0,\n      \"x_max\": 381,\n      \"y_min\": 0,\n      \"y_max\": 367,\n      \"ha\": 367,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 381,\n      \"o\": \"m 298 0 b 472 50 359 0 418 14 b 537 135 501 71 530 92 b 543 216 543 163 543 190 l 543 266 b 544 308 543 281 543 295 b 549 433 546 354 549 395 b 543 507 549 459 547 482 b 533 528 541 516 544 528 b 511 508 524 528 514 520 b 508 478 510 498 508 488 b 504 318 507 425 504 372 b 505 264 504 300 505 282 b 446 181 505 220 484 199 b 294 150 396 160 344 150 b 92 194 226 150 158 167 b 45 269 62 207 45 230 b 46 359 46 300 46 328 b 37 497 46 405 45 451 b 27 523 36 507 37 523 b 4 498 14 524 6 513 b 3 481 3 492 3 487 b 0 409 1 456 0 433 b 4 228 0 348 4 288 b 3 177 4 210 4 194 b 68 53 1 125 20 84 b 200 10 108 27 154 17 b 298 0 233 4 266 0 z\"\n    },\n    \"brassMuteClosed\": {\n      \"x_min\": 0,\n      \"x_max\": 274,\n      \"y_min\": 0,\n      \"y_max\": 260,\n      \"ha\": 260,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 274,\n      \"o\": \"m 203 0 b 209 1 206 0 207 0 b 216 13 215 4 216 9 l 215 27 l 215 153 b 216 161 216 156 216 158 b 372 164 268 163 318 164 b 395 184 383 164 395 166 l 395 189 b 357 229 392 209 386 229 b 219 228 311 229 265 228 l 223 310 b 209 357 225 328 219 344 b 189 374 203 364 197 374 b 184 373 187 374 186 373 b 177 359 179 372 177 366 l 177 348 l 173 222 l 39 222 b 0 206 12 222 0 219 b 10 174 0 199 3 189 b 46 157 19 157 30 157 b 108 160 68 158 88 160 b 171 161 130 161 150 161 l 167 58 b 184 16 167 40 171 26 b 203 0 192 12 196 0 z\"\n    },\n    \"brassMuteOpen\": {\n      \"x_min\": 1,\n      \"x_max\": 313.01193341111656,\n      \"y_min\": 0,\n      \"y_max\": 309,\n      \"ha\": 309,\n      \"leftSideBearing\": 1,\n      \"advanceWidth\": 312,\n      \"o\": \"m 230 0 l 265 0 b 451 189 363 7 452 88 l 451 215 b 348 383 441 285 405 343 b 209 445 288 426 248 445 b 84 379 168 445 132 420 b 69 364 79 373 73 369 b 1 213 30 323 1 275 b 230 0 1 88 94 0 z m 210 62 b 128 73 181 62 154 66 b 40 171 71 91 42 125 b 52 226 40 187 45 206 b 197 374 79 295 130 344 b 228 382 207 380 217 382 b 300 361 252 382 276 370 b 374 308 328 350 353 331 b 410 223 397 284 410 253 b 393 163 410 202 405 181 b 210 62 354 91 288 63 z\"\n    },\n    \"brassFlip\": {\n      \"x_min\": 0,\n      \"x_max\": 402,\n      \"y_min\": 0,\n      \"y_max\": 361,\n      \"ha\": 361,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 402,\n      \"o\": \"m 579 0 b 511 153 579 68 557 117 b 52 504 359 271 206 387 b 29 520 45 510 39 520 b 20 517 26 520 23 518 b 0 477 3 510 0 494 l 0 125 b 17 20 1 92 1 56 b 40 84 37 40 40 60 b 42 287 40 151 42 219 l 42 363 z\"\n    },\n    \"brassJazzTurn\": {\n      \"x_min\": 0,\n      \"x_max\": 646,\n      \"y_min\": 0,\n      \"y_max\": 212,\n      \"ha\": 212,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 646,\n      \"o\": \"m 310 0 b 367 33 327 0 344 10 b 389 55 374 40 382 49 b 490 145 423 85 456 114 b 507 154 495 151 501 154 b 524 144 513 154 517 151 b 598 72 547 120 575 98 b 700 24 625 42 662 24 b 765 43 721 24 744 30 b 893 147 812 72 855 105 b 930 212 910 166 923 186 b 912 215 923 213 917 215 b 871 199 896 215 883 209 b 812 153 852 183 832 167 b 789 144 805 148 796 144 b 773 156 782 144 776 147 b 691 251 757 199 720 222 b 603 301 658 282 631 301 b 527 258 580 301 556 288 b 420 156 494 222 455 190 b 399 143 412 147 405 143 b 377 157 392 143 386 147 b 259 282 340 200 300 242 b 219 305 245 298 232 305 b 177 279 204 305 192 297 b 55 127 137 228 95 177 b 0 52 36 104 20 79 b 14 50 6 50 10 50 b 53 66 32 50 45 58 b 115 131 75 88 98 108 b 135 148 124 143 130 148 b 157 132 141 148 148 143 b 252 33 186 96 219 65 b 310 0 275 12 292 0 z\"\n    },\n    \"brassSmear\": {\n      \"x_min\": 0,\n      \"x_max\": 334,\n      \"y_min\": 0,\n      \"y_max\": 151,\n      \"ha\": 151,\n      \"leftSideBearing\": 0,\n      \"advanceWidth\": 334,\n      \"o\": \"m 321 0 b 475 125 390 0 436 43 b 481 143 478 131 481 137 b 475 154 481 147 480 151 b 449 148 468 158 458 154 b 395 132 432 137 413 132 b 343 140 377 132 360 137 b 229 194 301 148 266 173 b 168 217 206 209 186 217 b 109 192 148 217 130 209 b 0 26 59 148 32 89 b 59 63 32 29 45 48 b 98 84 72 78 84 84 b 130 73 108 84 118 81 b 213 26 157 58 183 37 b 321 0 255 9 289 0 z\"\n    }\n  },\n  \"fontFamily\": \"Petaluma\",\n  \"resolution\": 1000,\n  \"generatedOn\": \"2020-04-29T14:49:42.602Z\"\n};\n","export const PetalumaMetrics = {\n  name: 'Petaluma',\n  smufl: true,\n\n  stave: {\n    padding: 15,\n  },\n\n  clef: {\n    default: {\n      point: 32,\n      width: 26,\n    },\n    small: {\n      point: 26,\n      width: 20,\n    },\n\n    annotations: {\n      '8va': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 18,\n          treble: {\n            line: -1.4,\n            shiftX: 12,\n          },\n        },\n        small: {\n          point: 16,\n          treble: {\n            line: -0.2,\n            shiftX: 8,\n          },\n        }\n      },\n      '8vb': {\n        smuflCode: 'timeSig8',\n        default: {\n          point: 18,\n          treble: {\n            line: 6,\n            shiftX: 10,\n          },\n          bass: {\n            line: 3.5,\n            shiftX: 1,\n          }\n        },\n        small: {\n          point: 16,\n          treble: {\n            line: 5.3,\n            shiftX: 6,\n          },\n          bass: {\n            line: 3.1,\n            shiftX: 0.5,\n          }\n        }\n      }\n    },\n\n    // These may no longer be necessary\n    lineCount: {\n      '8': { point: 55, shiftY: 14 },\n      '7': { point: 47, shiftY: 8 },\n      '6': { point: 32, shiftY: 1 },\n      '5': { point: 30, shiftY: -6 },\n      '4': { point: 23, shiftY: -12 },\n    }\n  },\n\n  pedalMarking: {\n    up: {\n      point: 40\n    },\n    down: {\n      point: 34\n    }\n  },\n\n  // These are for numeric digits, such as in time signatures\n  digits: {\n    // used by timesig\n    shiftLine: -1,\n    point: 22,\n\n    // used by tuplets\n    tupletPoint: 16,\n    shiftY: -2,\n  },\n\n  articulation: {\n    articStaccatissimoAbove: {\n      padding: 2,\n    },\n    articStaccatissimoBelow: {\n      padding: 2,\n    }\n  },\n\n  tremolo: {\n    default: {\n      point: 25,\n      spacing: 5,\n      offsetYStemUp: -5,\n      offsetYStemDown: 5,\n      offsetXStemUp: 11,\n      offsetXStemDown: 1,\n    },\n    grace: {\n      point: 18,\n      spacing: 4,\n      offsetYStemUp: -5,\n      offsetYStemDown: 5,\n      offsetXStemUp: 7,\n      offsetXStemDown: 1,\n    }\n  },\n\n  noteHead: {\n    displaced: {\n      shiftX: -2,\n    },\n  },\n\n  stem: {\n    // These are stem (Y) offsets to the note heads. To shift the\n    // noteheads (x-position) themselves, see glyphs.notehead.custom.\n    noteHead: {\n      noteheadTriangleUpHalf: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpBlack: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadTriangleUpWhole: {\n        offsetYBaseStemUp: 5,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXHalf: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXBlack: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadXWhole: {\n        offsetYBaseStemUp: -4,\n        offsetYBaseStemDown: 4,\n      },\n      noteheadBlack: {\n        offsetYBaseStemDown: 2,\n        offsetYBaseStemUp: -2,\n      },\n      noteheadSquareWhite: {\n        offsetYBaseStemDown: -5,\n        offsetYBaseStemUp: 5,\n      }\n    }\n  },\n\n  // Values under here are used by the Glyph class to reposition and rescale\n  // glyphs based on their category. This should be the first stop for\n  // custom font glyph repositioning.\n  //\n  // The glyph loader first looks up a specific set of settings based on the\n  // glyph code, and if not found, uses the defaults from the category. See\n  // glyphs.textNote for an example of this.\n  //\n  // Details in Glyph.lookupFontMetrics.\n  glyphs: {\n    coda: {\n      point: 20,\n      shiftX: -7,\n      shiftY: 8,\n    },\n    segno: {\n      shiftX: -7,\n    },\n    flag: {\n      shiftX: -0.75,\n      tabStem: {\n        shiftX: -1.75,\n      },\n      staveTempo: {\n        shiftX: -1,\n      }\n    },\n    clef: {\n      gClef: {\n        default: { scale: 1.1, shiftY: 1 },\n        small: { shiftY: 1.5 }\n      },\n      fClef: {\n        default: { shiftY: -0.5 }\n      }\n    },\n    ornament: {\n      ornamentTurn: {\n        scale: 1.2,\n      },\n      ornamentTurnSlash: {\n        scale: 1.2,\n      },\n    },\n    stroke: {\n      arrowheadBlackDown: {\n        straight: {\n          shiftX: -4.5,\n        },\n        wiggly: {\n          shiftX: -1,\n          shiftY: 1,\n        }\n      },\n      arrowheadBlackUp: {\n        straight: {\n          shiftX: -0.85,\n        },\n        wiggly: {\n          shiftX: -1,\n          shiftY: 1,\n        }\n      }\n    },\n    textNote: {\n      point: 34,\n      breathMarkTick: {\n        point: 36,\n        shiftY: 9,\n      },\n      breathMarkComma: {\n        point: 36,\n      },\n      segno: {\n        point: 30,\n        shiftX: -7,\n        shiftY: 8,\n      },\n      coda: {\n        point: 20,\n        shiftX: -7,\n        shiftY: 8,\n      },\n      ornamentTrill: {\n        shiftX: -10,\n        shiftY: 8,\n      },\n      ornamentMordent: {\n        shiftX: -8,\n      },\n      ornamentShortTrill: {\n        shiftX: -8,\n      }\n    },\n    noteHead: {\n      standard: {\n        noteheadBlackStemUp: {\n          shiftX: 1.5,\n          point: 34,\n        },\n        noteheadBlackStemDown: {\n          point: 34,\n        },\n        noteheadHalfStemUp: {\n          shiftX: 1,\n          point: 34,\n        },\n        noteheadHalfStemDown: {\n          point: 34,\n        },\n        noteheadWholeStemUp: {\n          shiftX: 1,\n          point: 34,\n        },\n        noteheadWholeStemDown: {\n          point: 34,\n        },\n        restQuarterStemUp: {\n          point: 35,\n        },\n        restQuarterStemDown: {\n          point: 35,\n        },\n      },\n      custom: {\n        'noteheadCircleXStemUp': {\n          shiftX: -1,\n        },\n        'noteheadCircleXStemDown': {\n          shiftX: 0.25,\n        },\n        'noteheadDiamondHalfStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadDiamondBlackStemUp': {\n          shiftX: 1.5,\n        },\n        'noteheadDiamondWholeStemUp': {\n          shiftX: 1,\n        },\n        'noteheadXBlackStemUp': {\n          shiftX: 1,\n        },\n        'noteheadXHalfStemUp': {\n          shiftX: -3,\n        },\n        'noteheadXHalfStemDown': {\n          shiftX: 1,\n        },\n        'noteheadXWholeStemUp': {\n          shiftX: -7,\n        },\n        'noteheadXWholeStemDown': {\n          shiftX: 1,\n        },\n        'noteheadSquareWhiteStemDown': {\n          shiftX: 0.25,\n        },\n        'noteheadSquareWhiteStemUp': {\n          shiftX: -0.75,\n        },\n        'noteheadSquareBlackStemUp': {\n          shiftX: -0.75,\n        },\n        'noteheadTriangleUpWholeStemUp': {\n          shiftX: -0.75,\n        }\n      },\n    },\n    chordSymbol: {\n      global: {\n        superscriptOffset: -400,\n        subscriptOffset: 300,\n        kerningOffset: -150,\n        lowerKerningText:  ['D', 'F', 'P', 'T', 'V', 'Y'],\n        upperKerningText:  ['L'],\n        spacing: 20,\n        superSubRatio: 0.73\n      },\n      csymDiminished: {\n        scale: 0.8,\n        leftSideBearing: -95,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymHalfDiminished: {\n        scale: 0.8,\n        leftSideBearing: -32,\n        advanceWidth: 506,\n        yOffset: 0\n      },\n      csymAugmented: {\n        scale: 1,\n        leftSideBearing: -25,\n        advanceWidth: 530,\n        yOffset: 0\n      },\n      csymParensLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 155,\n        yOffset: 150\n      },\n      csymParensRightTall: {\n        scale: 0.8,\n        leftSideBearing: 40,\n        advanceWidth: 189,\n        yOffset: 150\n      },\n      csymBracketLeftTall: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 328,\n        yOffset: 0\n      },\n      csymBracketRightTall: {\n        scale: 0.8,\n        leftSideBearing: 1,\n        advanceWidth: 600,\n        yOffset: 0\n      },\n      csymParensLeftVeryTall: {\n        scale: 0.95,\n        leftSideBearing: 0,\n        advanceWidth: 200,\n        yOffset: 250\n      },\n      csymParensRightVeryTall: {\n        scale: 0.9,\n        leftSideBearing: -100,\n        advanceWidth: 111,\n        yOffset: 250\n      },\n      csymDiagonalArrangementSlash: {\n        scale: 0.6,\n        leftSideBearing: -1,\n        advanceWidth: 990,\n        yOffset: 0\n      },\n      csymMinor: {\n        scale: 0.8,\n        leftSideBearing: 0,\n        advanceWidth: 482,\n        yOffset: 0\n      },\n      csymMajorSeventh: {\n        scale: 1,\n        leftSideBearing: 0,\n        yOffset: 0,\n        advanceWidth: 600\n      },\n      accidentalSharp: {\n        scale: 0.7,\n        leftSideBearing: 0,\n        advanceWidth: 425,\n        yOffset: -422\n      },\n      accidentalFlat: {\n        scale: 0.8,\n        leftSideBearing: -10,\n        advanceWidth: 228,\n        yOffset: -284\n      }\n    },\n    jazzOrnaments: {\n      brassScoop: {\n        scale: 1.0,\n        xOffset: -12,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 10\n      },\n      brassDoitMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallLipShort: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 0,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassLiftMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 5,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassFallRoughMedium: {\n        scale: 1.0,\n        xOffset: 16,\n        yOffset: 26,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassBend: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -8,\n        stemUpYOffset: 28,\n        reportedWidth: 5\n      },\n      brassMuteClosed: {\n        scale: 1.0,\n        xOffset: 3,\n        yOffset: -8,\n        stemUpYOffset: 26,\n        reportedWidth: 5\n      },\n      brassMuteOpen: {\n        scale: 1.0,\n        xOffset: 4,\n        yOffset: -8,\n        stemUpYOffset: 27,\n        reportedWidth: 5\n      },\n      brassFlip: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassJazzTurn: {\n        scale: 1.0,\n        xOffset: 6,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n      brassSmear: {\n        scale: 1.0,\n        xOffset: 10,\n        yOffset: -4,\n        stemUpYOffset: 0,\n        reportedWidth: 5\n      },\n    }\n  }\n};\n","export const RobotoSlabMetrics = {\r\n  name: 'RobotoSlab',\r\n  smufl: false,\r\n  spacing:50,\r\n  \"glyphs\": {\r\n    \" \": {\r\n      \"x_min\": 0,\r\n      \"x_max\": 509,\r\n      \"y_min\": 0,\r\n      \"y_max\": 2000,\r\n      \"ha\": 2000,\r\n      \"leftSideBearing\": 0,\r\n      \"advanceWidth\": 509\r\n    },\r\n    \"0\": {\r\n      \"x_min\": 121,\r\n      \"x_max\": 1048,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 121,\r\n      \"advanceWidth\": 1168\r\n    },\r\n    \"1\": {\r\n      \"x_min\": 117,\r\n      \"x_max\": 767,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 117,\r\n      \"advanceWidth\": 844\r\n    },\r\n    \"2\": {\r\n      \"x_min\": 75.8474576645637,\r\n      \"x_max\": 1040,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1477,\r\n      \"leftSideBearing\": 75,\r\n      \"advanceWidth\": 1131\r\n    },\r\n    \"3\": {\r\n      \"x_min\": 74.85365853658536,\r\n      \"x_max\": 994,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 74,\r\n      \"advanceWidth\": 1106\r\n    },\r\n    \"4\": {\r\n      \"x_min\": 63,\r\n      \"x_max\": 1114,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 63,\r\n      \"advanceWidth\": 1187\r\n    },\r\n    \"5\": {\r\n      \"x_min\": 96.8448275474953,\r\n      \"x_max\": 982,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1477,\r\n      \"leftSideBearing\": 96,\r\n      \"advanceWidth\": 1081\r\n    },\r\n    \"6\": {\r\n      \"x_min\": 121,\r\n      \"x_max\": 1067,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 121,\r\n      \"advanceWidth\": 1144\r\n    },\r\n    \"7\": {\r\n      \"x_min\": 76,\r\n      \"x_max\": 1060,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": -30,\r\n      \"advanceWidth\": 1128\r\n    },\r\n    \"8\": {\r\n      \"x_min\": 92,\r\n      \"x_max\": 1039,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 92,\r\n      \"advanceWidth\": 1131\r\n    },\r\n    \"9\": {\r\n      \"x_min\": 84,\r\n      \"x_max\": 1026,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 84,\r\n      \"advanceWidth\": 1154\r\n    },\r\n    \"!\": {\r\n      \"x_min\": 143,\r\n      \"x_max\": 340,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 143,\r\n      \"advanceWidth\": 483\r\n    },\r\n    \"\\\"\": {\r\n      \"x_min\": 166,\r\n      \"x_max\": 634,\r\n      \"y_min\": 1055,\r\n      \"y_max\": 1560,\r\n      \"ha\": 505,\r\n      \"leftSideBearing\": 166,\r\n      \"advanceWidth\": 770\r\n    },\r\n    \"#\": {\r\n      \"x_min\": 63,\r\n      \"x_max\": 1179,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 63,\r\n      \"advanceWidth\": 1246\r\n    },\r\n    \"$\": {\r\n      \"x_min\": 81.92156915727656,\r\n      \"x_max\": 1012,\r\n      \"y_min\": -208,\r\n      \"y_max\": 1693,\r\n      \"ha\": 1901,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1110\r\n    },\r\n    \"%\": {\r\n      \"x_min\": 77,\r\n      \"x_max\": 1384,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 77,\r\n      \"advanceWidth\": 1460\r\n    },\r\n    \"&\": {\r\n      \"x_min\": 74,\r\n      \"x_max\": 1242,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 74,\r\n      \"advanceWidth\": 1289\r\n    },\r\n    \"'\": {\r\n      \"x_min\": 166,\r\n      \"x_max\": 324,\r\n      \"y_min\": 1055,\r\n      \"y_max\": 1560,\r\n      \"ha\": 505,\r\n      \"leftSideBearing\": 166,\r\n      \"advanceWidth\": 460\r\n    },\r\n    \"(\": {\r\n      \"x_min\": 114,\r\n      \"x_max\": 650,\r\n      \"y_min\": -463,\r\n      \"y_max\": 1636,\r\n      \"ha\": 2099,\r\n      \"leftSideBearing\": 114,\r\n      \"advanceWidth\": 662\r\n    },\r\n    \")\": {\r\n      \"x_min\": 11,\r\n      \"x_max\": 547,\r\n      \"y_min\": -463,\r\n      \"y_max\": 1636,\r\n      \"ha\": 2099,\r\n      \"leftSideBearing\": 11,\r\n      \"advanceWidth\": 654\r\n    },\r\n    \"*\": {\r\n      \"x_min\": 66,\r\n      \"x_max\": 893,\r\n      \"y_min\": 607,\r\n      \"y_max\": 1456,\r\n      \"ha\": 849,\r\n      \"leftSideBearing\": 66,\r\n      \"advanceWidth\": 958\r\n    },\r\n    \"+\": {\r\n      \"x_min\": 73,\r\n      \"x_max\": 1071,\r\n      \"y_min\": 146,\r\n      \"y_max\": 1206,\r\n      \"ha\": 1060,\r\n      \"leftSideBearing\": 73,\r\n      \"advanceWidth\": 1145\r\n    },\r\n    \",\": {\r\n      \"x_min\": 23,\r\n      \"x_max\": 315,\r\n      \"y_min\": -311,\r\n      \"y_max\": 221,\r\n      \"ha\": 532,\r\n      \"leftSideBearing\": 23,\r\n      \"advanceWidth\": 404\r\n    },\r\n    \"-\": {\r\n      \"x_min\": 154,\r\n      \"x_max\": 643,\r\n      \"y_min\": 538,\r\n      \"y_max\": 692,\r\n      \"ha\": 154,\r\n      \"leftSideBearing\": 154,\r\n      \"advanceWidth\": 797\r\n    },\r\n    \".\": {\r\n      \"x_min\": 145,\r\n      \"x_max\": 342,\r\n      \"y_min\": 0,\r\n      \"y_max\": 202,\r\n      \"ha\": 202,\r\n      \"leftSideBearing\": 145,\r\n      \"advanceWidth\": 493\r\n    },\r\n    \"/\": {\r\n      \"x_min\": 0,\r\n      \"x_max\": 774,\r\n      \"y_min\": -125,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1581,\r\n      \"leftSideBearing\": 0,\r\n      \"advanceWidth\": 824\r\n    },\r\n    \":\": {\r\n      \"x_min\": 145,\r\n      \"x_max\": 342,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1082,\r\n      \"ha\": 1082,\r\n      \"leftSideBearing\": 145,\r\n      \"advanceWidth\": 419\r\n    },\r\n    \";\": {\r\n      \"x_min\": 53,\r\n      \"x_max\": 345,\r\n      \"y_min\": -311,\r\n      \"y_max\": 1082,\r\n      \"ha\": 1393,\r\n      \"leftSideBearing\": 53,\r\n      \"advanceWidth\": 424\r\n    },\r\n    \"<\": {\r\n      \"x_min\": 76,\r\n      \"x_max\": 892,\r\n      \"y_min\": 107,\r\n      \"y_max\": 1013,\r\n      \"ha\": 906,\r\n      \"leftSideBearing\": 76,\r\n      \"advanceWidth\": 1017\r\n    },\r\n    \"=\": {\r\n      \"x_min\": 147,\r\n      \"x_max\": 981,\r\n      \"y_min\": 407,\r\n      \"y_max\": 987,\r\n      \"ha\": 580,\r\n      \"leftSideBearing\": 147,\r\n      \"advanceWidth\": 1127\r\n    },\r\n    \">\": {\r\n      \"x_min\": 125,\r\n      \"x_max\": 980,\r\n      \"y_min\": 87,\r\n      \"y_max\": 993,\r\n      \"ha\": 906,\r\n      \"leftSideBearing\": 125,\r\n      \"advanceWidth\": 1060\r\n    },\r\n    \"?\": {\r\n      \"x_min\": 65.92660602419838,\r\n      \"x_max\": 890,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1477,\r\n      \"leftSideBearing\": 65,\r\n      \"advanceWidth\": 953\r\n    },\r\n    \"@\": {\r\n      \"x_min\": 84.3592218305664,\r\n      \"x_max\": 1705.2346925277395,\r\n      \"y_min\": -453,\r\n      \"y_max\": 1431,\r\n      \"ha\": 1884,\r\n      \"leftSideBearing\": 84,\r\n      \"advanceWidth\": 1821\r\n    },\r\n    \"A\": {\r\n      \"x_min\": 70,\r\n      \"x_max\": 1463,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 70,\r\n      \"advanceWidth\": 1533\r\n    },\r\n    \"B\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1253,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1322\r\n    },\r\n    \"C\": {\r\n      \"x_min\": 80,\r\n      \"x_max\": 1174,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 80,\r\n      \"advanceWidth\": 1290\r\n    },\r\n    \"D\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1291,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1356\r\n    },\r\n    \"E\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1190,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1306\r\n    },\r\n    \"F\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1176,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1256\r\n    },\r\n    \"G\": {\r\n      \"x_min\": 80,\r\n      \"x_max\": 1226,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 80,\r\n      \"advanceWidth\": 1346\r\n    },\r\n    \"H\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1497,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1578\r\n    },\r\n    \"I\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 604,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 685\r\n    },\r\n    \"J\": {\r\n      \"x_min\": 60,\r\n      \"x_max\": 1100,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1477,\r\n      \"leftSideBearing\": 60,\r\n      \"advanceWidth\": 1169\r\n    },\r\n    \"K\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1427,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1501\r\n    },\r\n    \"L\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1130,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1210\r\n    },\r\n    \"M\": {\r\n      \"x_min\": 94,\r\n      \"x_max\": 1888,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 94,\r\n      \"advanceWidth\": 1982\r\n    },\r\n    \"N\": {\r\n      \"x_min\": 83,\r\n      \"x_max\": 1509,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 83,\r\n      \"advanceWidth\": 1592\r\n    },\r\n    \"O\": {\r\n      \"x_min\": 70,\r\n      \"x_max\": 1281,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 70,\r\n      \"advanceWidth\": 1351\r\n    },\r\n    \"P\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1242,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1297\r\n    },\r\n    \"Q\": {\r\n      \"x_min\": 70,\r\n      \"x_max\": 1348,\r\n      \"y_min\": -245,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1722,\r\n      \"leftSideBearing\": 70,\r\n      \"advanceWidth\": 1376\r\n    },\r\n    \"R\": {\r\n      \"x_min\": 81,\r\n      \"x_max\": 1285,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1455,\r\n      \"ha\": 1455,\r\n      \"leftSideBearing\": 81,\r\n      \"advanceWidth\": 1385\r\n    },\r\n    \"S\": {\r\n      \"x_min\": 115,\r\n      \"x_max\": 1116,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1477,\r\n      \"ha\": 1498,\r\n      \"leftSideBearing\": 115,\r\n      \"advanceWidth\": 1206\r\n    },\r\n    \"T\": {\r\n      \"x_min\": 96,\r\n      \"x_max\": 1306,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 96,\r\n      \"advanceWidth\": 1406\r\n    },\r\n    \"U\": {\r\n      \"x_min\": 70,\r\n      \"x_max\": 1452,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1477,\r\n      \"leftSideBearing\": 70,\r\n      \"advanceWidth\": 1522\r\n    },\r\n    \"V\": {\r\n      \"x_min\": 65,\r\n      \"x_max\": 1443,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 65,\r\n      \"advanceWidth\": 1508\r\n    },\r\n    \"W\": {\r\n      \"x_min\": 72,\r\n      \"x_max\": 2057,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 72,\r\n      \"advanceWidth\": 2129\r\n    },\r\n    \"X\": {\r\n      \"x_min\": 80,\r\n      \"x_max\": 1449,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 80,\r\n      \"advanceWidth\": 1529\r\n    },\r\n    \"Y\": {\r\n      \"x_min\": 65,\r\n      \"x_max\": 1396,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 65,\r\n      \"advanceWidth\": 1461\r\n    },\r\n    \"Z\": {\r\n      \"x_min\": 90,\r\n      \"x_max\": 1107,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1456,\r\n      \"leftSideBearing\": 90,\r\n      \"advanceWidth\": 1197\r\n    },\r\n    \"[\": {\r\n      \"x_min\": 157,\r\n      \"x_max\": 541,\r\n      \"y_min\": -312,\r\n      \"y_max\": 1664,\r\n      \"ha\": 1976,\r\n      \"leftSideBearing\": 157,\r\n      \"advanceWidth\": 573\r\n    },\r\n    \"\\\\\": {\r\n      \"x_min\": 36,\r\n      \"x_max\": 830,\r\n      \"y_min\": -125,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1581,\r\n      \"leftSideBearing\": 36,\r\n      \"advanceWidth\": 841\r\n    },\r\n    \"]\": {\r\n      \"x_min\": 23,\r\n      \"x_max\": 408,\r\n      \"y_min\": -312,\r\n      \"y_max\": 1664,\r\n      \"ha\": 1976,\r\n      \"leftSideBearing\": 23,\r\n      \"advanceWidth\": 552\r\n    },\r\n    \"^\": {\r\n      \"x_min\": 71,\r\n      \"x_max\": 802,\r\n      \"y_min\": 729,\r\n      \"y_max\": 1456,\r\n      \"ha\": 727,\r\n      \"leftSideBearing\": 71,\r\n      \"advanceWidth\": 864\r\n    },\r\n    \"_\": {\r\n      \"x_min\": 119,\r\n      \"x_max\": 1041,\r\n      \"y_min\": -154,\r\n      \"y_max\": 0,\r\n      \"ha\": 154,\r\n      \"leftSideBearing\": 119,\r\n      \"advanceWidth\": 1168\r\n    },\r\n    \"`\": {\r\n      \"x_min\": 40,\r\n      \"x_max\": 456,\r\n      \"y_min\": 1288,\r\n      \"y_max\": 1560,\r\n      \"ha\": 272,\r\n      \"leftSideBearing\": 40,\r\n      \"advanceWidth\": 496\r\n    },\r\n    \"a\": {\r\n      \"x_min\": 79,\r\n      \"x_max\": 1053,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1123,\r\n      \"leftSideBearing\": 79,\r\n      \"advanceWidth\": 1132\r\n    },\r\n    \"b\": {\r\n      \"x_min\": -16,\r\n      \"x_max\": 1071,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1560,\r\n      \"ha\": 1581,\r\n      \"leftSideBearing\": -16,\r\n      \"advanceWidth\": 1145\r\n    },\r\n    \"c\": {\r\n      \"x_min\": 78,\r\n      \"x_max\": 988,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1123,\r\n      \"leftSideBearing\": 78,\r\n      \"advanceWidth\": 1067\r\n    },\r\n    \"d\": {\r\n      \"x_min\": 78,\r\n      \"x_max\": 1156,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1560,\r\n      \"ha\": 1581,\r\n      \"leftSideBearing\": 78,\r\n      \"advanceWidth\": 1218\r\n    },\r\n    \"e\": {\r\n      \"x_min\": 74,\r\n      \"x_max\": 980,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1123,\r\n      \"leftSideBearing\": 74,\r\n      \"advanceWidth\": 1059\r\n    },\r\n    \"f\": {\r\n      \"x_min\": 64,\r\n      \"x_max\": 731,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1581,\r\n      \"ha\": 1581,\r\n      \"leftSideBearing\": 64,\r\n      \"advanceWidth\": 725\r\n    },\r\n    \"g\": {\r\n      \"x_min\": 78,\r\n      \"x_max\": 1133,\r\n      \"y_min\": -437,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1539,\r\n      \"leftSideBearing\": 78,\r\n      \"advanceWidth\": 1157\r\n    },\r\n    \"h\": {\r\n      \"x_min\": 49,\r\n      \"x_max\": 1255,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1560,\r\n      \"ha\": 1560,\r\n      \"leftSideBearing\": 49,\r\n      \"advanceWidth\": 1315\r\n    },\r\n    \"i\": {\r\n      \"x_min\": 67,\r\n      \"x_max\": 590,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1560,\r\n      \"ha\": 1560,\r\n      \"leftSideBearing\": 67,\r\n      \"advanceWidth\": 652\r\n    },\r\n    \"j\": {\r\n      \"x_min\": -56,\r\n      \"x_max\": 381,\r\n      \"y_min\": -437,\r\n      \"y_max\": 1560,\r\n      \"ha\": 1997,\r\n      \"leftSideBearing\": -56,\r\n      \"advanceWidth\": 525\r\n    },\r\n    \"k\": {\r\n      \"x_min\": 64,\r\n      \"x_max\": 1248,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1560,\r\n      \"ha\": 1560,\r\n      \"leftSideBearing\": 64,\r\n      \"advanceWidth\": 1287\r\n    },\r\n    \"l\": {\r\n      \"x_min\": 64,\r\n      \"x_max\": 587,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1560,\r\n      \"ha\": 1560,\r\n      \"leftSideBearing\": 64,\r\n      \"advanceWidth\": 653\r\n    },\r\n    \"m\": {\r\n      \"x_min\": 74,\r\n      \"x_max\": 1905,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1102,\r\n      \"leftSideBearing\": 74,\r\n      \"advanceWidth\": 1977\r\n    },\r\n    \"n\": {\r\n      \"x_min\": 74,\r\n      \"x_max\": 1278,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1102,\r\n      \"leftSideBearing\": 74,\r\n      \"advanceWidth\": 1343\r\n    },\r\n    \"o\": {\r\n      \"x_min\": 78,\r\n      \"x_max\": 1046,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1123,\r\n      \"leftSideBearing\": 78,\r\n      \"advanceWidth\": 1124\r\n    },\r\n    \"p\": {\r\n      \"x_min\": 34,\r\n      \"x_max\": 1119,\r\n      \"y_min\": -416,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1518,\r\n      \"leftSideBearing\": 34,\r\n      \"advanceWidth\": 1197\r\n    },\r\n    \"q\": {\r\n      \"x_min\": 78,\r\n      \"x_max\": 1135,\r\n      \"y_min\": -416,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1518,\r\n      \"leftSideBearing\": 78,\r\n      \"advanceWidth\": 1139\r\n    },\r\n    \"r\": {\r\n      \"x_min\": 72,\r\n      \"x_max\": 808,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1102,\r\n      \"leftSideBearing\": 72,\r\n      \"advanceWidth\": 854\r\n    },\r\n    \"s\": {\r\n      \"x_min\": 104,\r\n      \"x_max\": 933,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1102,\r\n      \"ha\": 1123,\r\n      \"leftSideBearing\": 104,\r\n      \"advanceWidth\": 1022\r\n    },\r\n    \"t\": {\r\n      \"x_min\": 24,\r\n      \"x_max\": 678,\r\n      \"y_min\": -17,\r\n      \"y_max\": 1343,\r\n      \"ha\": 1360,\r\n      \"leftSideBearing\": 24,\r\n      \"advanceWidth\": 730\r\n    },\r\n    \"u\": {\r\n      \"x_min\": 52,\r\n      \"x_max\": 1181,\r\n      \"y_min\": -21,\r\n      \"y_max\": 1082,\r\n      \"ha\": 1103,\r\n      \"leftSideBearing\": 52,\r\n      \"advanceWidth\": 1245\r\n    },\r\n    \"v\": {\r\n      \"x_min\": 26,\r\n      \"x_max\": 1176,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1082,\r\n      \"ha\": 1082,\r\n      \"leftSideBearing\": 26,\r\n      \"advanceWidth\": 1206\r\n    },\r\n    \"w\": {\r\n      \"x_min\": 52,\r\n      \"x_max\": 1777,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1082,\r\n      \"ha\": 1082,\r\n      \"leftSideBearing\": 52,\r\n      \"advanceWidth\": 1823\r\n    },\r\n    \"x\": {\r\n      \"x_min\": 42,\r\n      \"x_max\": 1163,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1082,\r\n      \"ha\": 1082,\r\n      \"leftSideBearing\": 42,\r\n      \"advanceWidth\": 1203\r\n    },\r\n    \"y\": {\r\n      \"x_min\": 24,\r\n      \"x_max\": 1172,\r\n      \"y_min\": -437,\r\n      \"y_max\": 1082,\r\n      \"ha\": 1519,\r\n      \"leftSideBearing\": 24,\r\n      \"advanceWidth\": 1192\r\n    },\r\n    \"z\": {\r\n      \"x_min\": 88,\r\n      \"x_max\": 960,\r\n      \"y_min\": 0,\r\n      \"y_max\": 1082,\r\n      \"ha\": 1082,\r\n      \"leftSideBearing\": 88,\r\n      \"advanceWidth\": 1032\r\n    },\r\n    \"{\": {\r\n      \"x_min\": 63,\r\n      \"x_max\": 671,\r\n      \"y_min\": -364,\r\n      \"y_max\": 1597,\r\n      \"ha\": 1961,\r\n      \"leftSideBearing\": 63,\r\n      \"advanceWidth\": 701\r\n    },\r\n    \"|\": {\r\n      \"x_min\": 150,\r\n      \"x_max\": 307,\r\n      \"y_min\": -270,\r\n      \"y_max\": 1456,\r\n      \"ha\": 1726,\r\n      \"leftSideBearing\": 150,\r\n      \"advanceWidth\": 451\r\n    },\r\n    \"}\": {\r\n      \"x_min\": 27,\r\n      \"x_max\": 635,\r\n      \"y_min\": -364,\r\n      \"y_max\": 1597,\r\n      \"ha\": 1961,\r\n      \"leftSideBearing\": 27,\r\n      \"advanceWidth\": 701\r\n    },\r\n    \"~\": {\r\n      \"x_min\": 121,\r\n      \"x_max\": 1257,\r\n      \"y_min\": 401,\r\n      \"y_max\": 803,\r\n      \"ha\": 402,\r\n      \"leftSideBearing\": 121,\r\n      \"advanceWidth\": 1386\r\n    }\r\n  },\r\n  \"fontFamily\": \"Roboto Slab\",\r\n  \"resolution\": 2048,\r\n  \"generatedOn\": \"2020-06-15T19:12:58.120Z\"\r\n};\r\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n      );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach((voice, voiceIndex) => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType({ tickID: integerTicks });\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const metrics = tick.getMetrics();\n      tick.setX(x + metrics.totalLeftPx);\n\n      return x + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n    options = {\n      stavePadding: Vex.Flow.DEFAULT_FONT_STACK[0].lookupMetric('stave.padding'),\n      ...options,\n    };\n\n    const x = xPos + options.stavePadding;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n      ctx.setFillStyle('green');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.setFillStyle('red');\n    ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n    // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor(options) {\n    this.options = {\n      softmaxFactor: null,\n      maxIterations: 2,\n      ...options\n    };\n\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n    this.iterationsCompleted = 0;\n    this.lossHistory = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap } = contexts;\n\n    // Reset loss history for evaluator.\n    this.lossHistory = [];\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.totalLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.totalLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return this.evaluate();\n\n\n    // Start justification. Subtract the right extra pixels of the final context because the formatter\n    // justifies based on the context's X position, which is the left-most part of the note head.\n    const firstContext = contextMap[contextList[0]];\n    const lastContext = contextMap[contextList[contextList.length - 1]];\n\n    // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n    // the softmax of the ticks.\n    function calculateIdealDistances(adjustedJustifyWidth) {\n      return contextList.map((tick, i) => {\n        const context = contextMap[tick];\n        const voices = context.getTickablesByVoice();\n        let backTickable = null;\n        if (i > 0) {\n          const prevContext = contextMap[contextList[i - 1]];\n          // Go through each tickable and search backwards for another tickable\n          // in the same voice. If found, use that duration (ticks) to calculate\n          // the expected distance.\n          for (let j = i - 1; j >= 0; j--) {\n            const backTick = contextMap[contextList[j]];\n            const backVoices = backTick.getTickablesByVoice();\n\n            // Look for matching voices between tick contexts.\n            const matchingVoices = [];\n            Object.keys(voices).forEach(v => {\n              if (backVoices[v]) {\n                matchingVoices.push(v);\n              }\n            });\n\n            if (matchingVoices.length > 0) {\n              // Found matching voices, get largest duration\n              let maxTicks = 0;\n              let maxNegativeShiftPx = Infinity;\n              let expectedDistance = 0;\n\n              // eslint-disable-next-line\n              matchingVoices.forEach(v => {\n                const ticks = backVoices[v].getTicks().value();\n                if (ticks > maxTicks) {\n                  backTickable = backVoices[v];\n                  maxTicks = ticks;\n                }\n\n                // Calculate the limits of the shift based on modifiers, etc.\n                const thisTickable = voices[v];\n                const insideLeftEdge = thisTickable.getX() - (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n\n                const backMetrics = backVoices[v].getMetrics();\n                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n\n                // Don't allow shifting if notes in the same voice can collide\n                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n              });\n\n              // Don't shift further left than the notehead of the last context\n              maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - prevContext.getX());\n\n              // Calculate the expected distance of the current context from the last matching tickable. The\n              // distance is scaled down by the softmax for the voice.\n              expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n\n              return {\n                expectedDistance,\n                maxNegativeShiftPx,\n                fromTickable: backTickable,\n              };\n            }\n          }\n        }\n\n        return { errorPx: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n      });\n    }\n\n    function shiftToIdealDistances(idealDistances) {\n      // Distribute ticks to the contexts based on the calculated distance error.\n      const centerX = adjustedJustifyWidth / 2;\n      let spaceAccum = 0;\n      let negativeSpaceAccum = 0;\n\n      contextList.forEach((tick, index) => {\n        const context = contextMap[tick];\n        if (index > 0) {\n          const x = context.getX();\n          const ideal = idealDistances[index];\n          const errorPx = (ideal.fromTickable.getX() + ideal.expectedDistance) - (x + spaceAccum);\n\n          let negativeShiftPx = 0;\n          if (errorPx > 0) {\n            spaceAccum += errorPx;\n          } else if (errorPx < 0) {\n            negativeShiftPx = Math.min(ideal.maxNegativeShiftPx + negativeSpaceAccum, Math.abs(errorPx));\n          }\n\n          context.setX(x + spaceAccum - negativeShiftPx);\n          negativeSpaceAccum += negativeShiftPx;\n        }\n\n        // Move center aligned tickables to middle\n        context.getCenterAlignedTickables().forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n      });\n\n      return lastContext.getX() - firstContext.getX();\n    }\n\n    const adjustedJustifyWidth = justifyWidth -\n      lastContext.getMetrics().notePx -\n      lastContext.getMetrics().totalRightPx -\n      firstContext.getMetrics().totalLeftPx;\n    let targetWidth = adjustedJustifyWidth;\n    let actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n\n    let iterations = this.options.maxIterations;\n    while (actualWidth > (adjustedJustifyWidth + lastContext.getMetrics().notePx) && iterations > 0) {\n      // If we couldn't fit all the notes into the jusification width, it's because the softmax-scaled\n      // widths between different durations differ across stave (e.g., 1 quarter note is not the same pixel-width\n      // as 4 16th-notes). Run another pass, now that we know how much to justify.\n      targetWidth -= (actualWidth - targetWidth);\n      actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n      iterations--;\n    }\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return null;\n\n    this.justifyWidth = justifyWidth;\n    return this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n      const currMetrics = context.getMetrics();\n\n      // Calculate X position of right edge of previous note\n      const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n      // Calculate X position of left edge of current note\n      const insideLeftEdge = context.getX() - (currMetrics.totalLeftPx);\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.notePx + metrics.totalRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() - rightMetrics.totalLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n\n        metrics.space.mean = durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - metrics.space.mean;\n\n        totalDeviation += Math.pow(metrics.space.deviation, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this.totalCost;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  //\n  // Alpha is the \"learning rate\" for the formatter. It determines how much of a shift\n  // the formatter should make based on its cost function.\n  tune(options) {\n    options = {\n      alpha: 0.5,\n      ...options,\n    };\n\n    const sum = (arr) => arr.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.totalShift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      shift *= options.alpha;\n      this.totalShift += shift;\n    });\n\n    this.iterationsCompleted++;\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n      ...options,\n    };\n\n    this.voices = voices;\n    if (this.options.softmaxFactor) {\n      this.voices.forEach(v => v.setSoftmaxFactor(this.options.softmaxFactor));\n    }\n\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    options = {\n      padding: 10,\n      ...options\n    };\n\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - options.padding;\n    L('Formatting voices to width: ', justifyWidth);\n    return this.format(voices, justifyWidth, { context: stave.getContext(), ...options });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    if (typeof copy === 'number') {\n      return this.set(copy || 0, 1);\n    }\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\n\n/**\n * @constructor\n */\nexport class FretHandFinger extends Modifier {\n  static get CATEGORY() { return 'frethandfinger'; }\n\n  // Arrange fingerings inside a ModifierContext.\n  static format(nums, state) {\n    const { left_shift, right_shift } = state;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shiftLeft = 0;\n    let shiftRight = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote();\n      const pos = num.getPosition();\n      const props = note.getKeyProps()[num.getIndex()];\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          if (left_shift === 0) {\n            shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n          }\n          if (right_shift === 0) {\n            shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n          }\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({\n        note,\n        num,\n        pos,\n        line: props.line,\n        shiftL: shiftLeft,\n        shiftR: shiftRight,\n      });\n    }\n\n    // Sort fingernumbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let numShiftL = 0;\n    let numShiftR = 0;\n    let xWidthL = 0;\n    let xWidthR = 0;\n    let lastLine = null;\n    let lastNote = null;\n\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n\n      // Reset the position of the string number every line.\n      if (line !== lastLine || note !== lastNote) {\n        numShiftL = left_shift + shiftL;\n        numShiftR = right_shift + shiftR;\n      }\n\n      const numWidth = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift + numShiftL);\n        num_shift = left_shift + numWidth; // spacing\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(numShiftR);\n        num_shift = shiftRight + numWidth; // spacing\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n      }\n      lastLine = line;\n      lastNote = note;\n    }\n\n    state.left_shift += xWidthL;\n    state.right_shift += xWidthR;\n\n    return true;\n  }\n\n  constructor(number) {\n    super();\n    this.setAttribute('type', 'FretHandFinger');\n\n    this.note = null;\n    this.index = null;\n    this.finger = number;\n    this.width = 7;\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0;       // Horizontal offset from default\n    this.y_offset = 0;       // Vertical offset from default\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n  getCategory() { return FretHandFinger.CATEGORY; }\n  setFretHandFinger(number) { this.finger = number; return this; }\n  setOffsetX(x) { this.x_offset = x; return this; }\n  setOffsetY(y) { this.y_offset = y; return this; }\n\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n        dot_x -= 4;\n        dot_y -= 12;\n        break;\n      case Modifier.Position.BELOW:\n        dot_x -= 2;\n        dot_y += 10;\n        break;\n      case Modifier.Position.LEFT:\n        dot_x -= this.width;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += 1;\n        break;\n      default:\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\n    }\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    ctx.fillText('' + this.finger, dot_x, dot_y);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof (parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof (parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.drawWithStyle();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n  function doOutline(command, ...args) {\n    outlineFns[command](...args);\n  }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        doOutline(command, nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        doOutline(command, nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        doOutline(command, nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      case 'z':\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /*\n    Static methods used to implement loading and rendering glyphs.\n\n    Below categoryPath can be any metric path under 'glyphs', so stem.up would respolve\n    to glyphs.stem.up.shifX, glyphs.stem.up.shiftY, etc.\n  */\n  static lookupFontMetric({ font, category, code, key, defaultValue }) {\n    let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, null);\n    if (value === null) {\n      value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n    }\n    return value;\n  }\n\n  static lookupGlyph(fontStack, code) {\n    if (!fontStack) {\n      throw Vex.RERR('BAD_FONTSTACK', 'Font stack is misconfigured');\n    }\n\n    let glyph;\n    let font;\n    for (let i = 0; i < fontStack.length; i++) {\n      font = fontStack[i];\n      glyph = font.getGlyphs()[code];\n      if (glyph) break;\n    }\n\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    return { glyph, font };\n  }\n\n\n  static loadMetrics(fontStack, code, category = null) {\n    const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n\n    const x_shift = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'shiftX', defaultValue: 0\n    }) : 0;\n    const y_shift = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'shiftY', defaultValue: 0\n    }) : 0;\n    const scale = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'scale', defaultValue: 1\n    }) : 1;\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    const CACHE = true;\n    if (glyph.o) {\n      if (CACHE) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        x_shift,\n        y_shift,\n        scale,\n        ha,\n        outline,\n        font,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in font.getGlyphs()\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, options) {\n    const params = {\n      fontStack: Flow.DEFAULT_FONT_STACK,\n      category: null,\n      ...options\n    };\n    const metrics = Glyph.loadMetrics(params.fontStack, val, params.category);\n    point = params.category ? Glyph.lookupFontMetric({\n      font: metrics.font,\n      category: params.category,\n      code: val,\n      key: 'point',\n      defaultValue: point\n    }) : point;\n    const scale = point * 72.0 / (metrics.font.getResolution() * 100.0);\n\n    Glyph.renderOutline(ctx, metrics.outline, scale * metrics.scale, x_pos + metrics.x_shift, y_pos + metrics.y_shift, options);\n    return metrics;\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos, options) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n      // z: ctx.fill.bind(ctx), // ignored\n    }, options);\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n      z: bboxComp.noOp.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      fontStack: this.getFontStack(),\n      category: null,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  getCode() {\n    return this.code;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.options, ...options };\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.metrics = Glyph.loadMetrics(this.options.fontStack, this.code, this.options.category);\n    // Override point from metrics file\n    this.point = this.options.category ? Glyph.lookupFontMetric({\n      category: this.options.category,\n      font: this.metrics.font,\n      code: this.code,\n      key: 'point',\n      defaultValue: this.point,\n    }) : this.point;\n\n    this.scale = this.point * 72 / (this.metrics.font.getResolution() * 100);\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale * this.metrics.scale,\n      this.metrics.x_shift,\n      this.metrics.y_shift,\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale * this.metrics.scale,\n      x_max: this.metrics.x_max * this.scale * this.metrics.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale * this.metrics.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(ctx, outline, scale,\n      x + this.originShift.x + this.metrics.x_shift,\n      y + this.originShift.y + this.metrics.y_shift);\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale * this.metrics.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(this.context, outline, scale,\n      x + this.x_shift + this.metrics.x_shift, this.stave.getYForGlyphs() + this.y_shift + this.metrics.y_shift);\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Note } from './note';\n\nexport class GlyphNote extends Note {\n  constructor(glyph, noteStruct, options) {\n    super(noteStruct);\n    this.options = {\n      ignoreTicks: false,\n      line: 2,\n      ...options\n    };\n    this.setAttribute('type', 'GlyphNote');\n\n    // Note properties\n    this.ignore_ticks = this.options.ignoreTicks;\n    if (glyph) {\n      this.setGlyph(glyph);\n    }\n  }\n\n  setGlyph(glyph) {\n    this.glyph = glyph;\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getBoundingBox() {\n    return this.glyph.getBoundingBox();\n  }\n\n  /*\n  addToModifierContext() {\n    return this;\n  }\n  */\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    // Context is set when setStave is called on Note\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(this.stave.getYForLine(this.options.line) - this.stave.getYForGlyphs());\n\n    const x = this.isCenterAligned() ? this.getAbsoluteX() - (this.getWidth() / 2) : this.getAbsoluteX();\n    this.glyph.renderToStave(x);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Flow } from './tables';\nimport { NoteHead } from './notehead';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    const glyph = this.getGlyph();\n    if (glyph) {\n      let ret = super.getStemExtension();\n      if (glyph.stem) {\n        const staveNoteScale = this.getStaveNoteScale();\n        ret = ((Stem.HEIGHT + ret) * staveNoteScale) - Stem.HEIGHT;\n      }\n      return ret;\n    }\n\n    return 0;\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n      let noteheadScale = this.render_options.glyph_font_scale;\n      if (Flow.DEFAULT_FONT_STACK[0].name === 'Petaluma') {\n        noteheadScale = noteheadScale * 0.2;\n      }\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: noteheadScale,\n        x_shift: noteProps.shift_right,\n        stem_up_x_offset: noteProps.stem_up_x_offset,\n        stem_down_x_offset: noteProps.stem_down_x_offset,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  // FIXME: move this to more basic class.\n  getStaveNoteScale() {\n    return this.render_options.glyph_font_scale / Flow.DEFAULT_NOTATION_FONT_SCALE;\n  }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n    const stem = this.stem;\n    if (this.slash && stem) {\n      const staveNoteScale = this.getStaveNoteScale();\n\n      // some magic numbers are based on the staveNoteScale 0.66.\n      const offsetScale = staveNoteScale / 0.66;\n      let slashBBox = undefined;\n      const beam = this.beam;\n      if (beam) {\n        // FIXME: should render slash after beam?\n        if (!beam.postFormatted) {\n          beam.postFormat();\n        }\n\n        slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale,\n          8 * offsetScale,\n          {\n            stem: 6 * offsetScale,\n            beam: 5 * offsetScale,\n          });\n      } else {\n        const stem_direction = this.getStemDirection();\n        const noteHeadBounds = this.getNoteHeadBounds();\n        const noteStemHeight = stem.getHeight();\n        let x = this.getAbsoluteX();\n        let y = stem_direction === Flow.Stem.DOWN ?\n          noteHeadBounds.y_top - noteStemHeight :\n          noteHeadBounds.y_bottom - noteStemHeight;\n\n        const defaultStemExtention = stem_direction === Flow.Stem.DOWN ?\n          this.glyph.stem_down_extension :\n          this.glyph.stem_up_extension;\n\n        let defaultOffsetY = Flow.STEM_HEIGHT;\n        defaultOffsetY -= (defaultOffsetY / 2.8);\n        defaultOffsetY += defaultStemExtention;\n        y += ((defaultOffsetY * staveNoteScale) * stem_direction);\n\n        const offsets = stem_direction === Flow.Stem.UP ? {\n          x1: 1,\n          y1: 0,\n          x2: 13,\n          y2: -9,\n        } : {\n          x1: -4,\n          y1: 1,\n          x2: 13,\n          y2: 9,\n        };\n\n        x += (offsets.x1 * offsetScale);\n        y += (offsets.y1 * offsetScale);\n        slashBBox = {\n          x1: x,\n          y1: y,\n          x2: x + (offsets.x2 * offsetScale),\n          y2: y + (offsets.y2 * offsetScale),\n        };\n      }\n\n      // FIXME: avoide staff lines, leadger lines or others.\n\n      const ctx = this.context;\n      ctx.save();\n      ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n      ctx.beginPath();\n      ctx.moveTo(slashBBox.x1, slashBBox.y1);\n      ctx.lineTo(slashBBox.x2, slashBBox.y2);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n    const beam = this.beam;\n    const beam_slope = beam.slope;\n    const isBeamEndNote = (beam.notes[beam.notes.length - 1] === this);\n    const scaleX = isBeamEndNote ? -1 : 1;\n    const beam_angle = Math.atan(beam_slope * scaleX);\n\n    // slash line intersecting point on beam.\n    const iPointOnBeam = {\n      dx: Math.cos(beam_angle) * slashBeamOffset,\n      dy: Math.sin(beam_angle) * slashBeamOffset,\n    };\n\n    slashStemOffset *= this.getStemDirection();\n    const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n    const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n    const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n    const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n    const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n\n    const stemX = this.getStemX();\n    const stem0X = beam.notes[0].getStemX();\n    const stemY = this.beam.getBeamYToDraw() + ((stemX - stem0X) * beam_slope);\n\n    const ret = {\n      x1: stemX - protrusion_stem_dx,\n      y1: (stemY + slashStemOffset - protrusion_stem_dy),\n      x2: stemX + (iPointOnBeam.dx * scaleX) + protrusion_beam_dx,\n      y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n    };\n    return ret;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ? group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.beams = [];\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes(grace_notes) {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beams.push(beam);\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    this.beams.forEach(beam => {\n      beam.setContext(this.context).draw();\n    });\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { StaveTempo } from './stavetempo';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { ChordSymbol } from './chordsymbol';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Dot } from './dot';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\nimport { StaveText } from './stavetext';\nimport { GlyphNote } from './glyphnote';\nimport { RepeatNote } from './repeatnote';\nimport { TextFont } from './textFont';\nimport { PetalumaScriptMetrics } from './fonts/petalumaScript_metrics';\nimport { RobotoSlabMetrics } from './fonts/robotoSlab_metrics';\n\n\nimport { Font, Fonts, DefaultFontStack } from './smufl';\n\nVex.Flow = Flow;\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.StaveTempo = StaveTempo;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.MultiMeasureRest = MultiMeasureRest;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.ChordSymbol = ChordSymbol;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.KeySigNote = KeySigNote;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Dot = Dot;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\nVex.Flow.StaveText = StaveText;\nVex.Flow.GlyphNote = GlyphNote;\nVex.Flow.RepeatNote = RepeatNote;\n\nVex.Flow.Font = Font;\nVex.Flow.Fonts = Fonts;\nVex.Flow.TextFont = TextFont;\nVex.Flow.DefaultFontStack = DefaultFontStack;\nVex.Flow.PetalumaScriptMetrics = PetalumaScriptMetrics;\nVex.Flow.RobotoSlabMetrics = RobotoSlabMetrics;\n\nexport default Vex;\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\nexport class JazzTechnique extends Modifier {\n  static get CATEGORY() { return 'jazztechnique'; }\n  // regardless of actual width, this is what we reports.  These symbols\n  // tend to overlap the next notes\n  static get Type() {\n    return {\n      SCOOP: 1,\n      DOIT: 2,\n      FALL_SHORT: 3,\n      LIFT: 4,\n      FALL_LONG: 5,\n      BEND: 6,\n      MUTE_CLOSED: 7,\n      MUTE_OPEN: 8,\n      FLIP: 9,\n      TURN: 10,\n      SMEAR: 11\n    };\n  }\n\n  // ### staffPosition\n  // means the jazz ornament is typically placed just above the staff, or above\n  // the note if the note has top ledger lines.\n  static get staffPosition() {\n    return ['flip', 'turn', 'smear'];\n  }\n\n  // ### LeftPosition\n  // means the jazz ornament is placed before the note\n  static get leftPosition() {\n    return ['scoop'];\n  }\n\n  // ### rightPosition\n  // means the jazz ornament is typically placed just to the right of the note.\n  static get rightPosition() {\n    return [\n      'doit', 'fall', 'fallLong', 'doitLong', 'turn', 'smear', 'flip'\n    ];\n  }\n\n  // ### articulationPosition\n  // ornaments that are typically just above or below the note\n  static get articulationPosition() {\n    return ['bend', 'plungerClosed', 'plungerOpen'];\n  }\n\n  static get TypeToCode() {\n    return {\n      1: 'brassScoop',\n      2: 'brassDoitMedium',\n      3: 'brassFallLipShort',\n      4: 'brassLiftMedium',\n      5: 'brassFallRoughMedium',\n      6: 'brassBend',\n      7: 'brassMuteClosed',\n      8: 'brassMuteOpen',\n      9: 'brassFlip',\n      10: 'brassJazzTurn',\n      11: 'brassSmear'\n    };\n  }\n\n  static get jazzOrnamentCodes() {\n    return {\n      'scoop': { code: 'brassScoop' },\n      'doit': { code: 'brassDoitMedium' },\n      'fall': { code: 'brassFallLipShort' },\n      'doitLong': { code: 'brassLiftMedium' },\n      'fallLong': { code: 'brassFallRoughMedium' },\n      'bend': { code: 'brassBend' },\n      'plungerClosed': { code: 'brassMuteClosed' },\n      'plungerOpen': { code: 'brassMuteOpen' },\n      'flip': { code: 'brassFlip' },\n      'turn': { code: 'brassJazzTurn' },\n      'smear': { code: 'brassSmear' }\n    };\n  }\n\n  static get glyphMetrics() {\n    return Vex.Flow.DEFAULT_FONT_STACK[0].metrics.glyphs.jazzOrnaments;\n  }\n\n\n  // Arrange strokes inside `ModifierContext`\n  static format(techniques, state) {\n    let left_shift = state.left_shift;\n    let right_shift = state.right_shift;\n\n    if (!techniques || techniques.length === 0) return this;\n\n    techniques.forEach((technique) => {\n      const width = technique.metrics.reportedWidth;\n      if (JazzTechnique.rightPosition.indexOf(technique.type) >= 0) {\n        technique.xOffset += (right_shift + 2);\n      }\n      if (JazzTechnique.leftPosition.indexOf(technique.type) >= 0) {\n        technique.xOffset -= (left_shift + 2);\n      }\n      if (technique.xOffset < 0) {\n        left_shift += width;\n      } else if (technique.xOffset > 0) {\n        right_shift += width;\n      }\n    });\n\n    state.left_shift = left_shift;\n    state.right_shift = right_shift;\n    return true;\n  }\n\n  get metrics() {\n    return JazzTechnique.glyphMetrics[this.ornament.code];\n  }\n\n  constructor(type, options) {\n    super();\n    this.setAttribute('type', 'JazzTechnique');\n\n    this.note = null;\n    this.options = Vex.Merge({}, options);\n\n    // backwards compatibilty for smoosic\n    if (typeof(type) === 'number') {\n      type = JazzTechnique.TypeToCode[type];\n      type = Object.keys(JazzTechnique.jazzOrnamentCodes).find((zz) =>\n        JazzTechnique.jazzOrnamentCodes[zz].code === type);\n    }\n\n    // multi voice - end note of stroke, set in draw()\n    this.type = type;\n    this.ornament = JazzTechnique.jazzOrnamentCodes[type];\n    const metrics = this.metrics;\n    this.position = Modifier.Position.LEFT;\n    this.xOffset = metrics.xOffset;\n    this.yOffset = metrics.yOffset;\n    this.scale = metrics.scale;\n\n    // Allow user to pass in adjustments\n    if (this.options.xAdjust) {\n      this.xOffset += this.options.xAdjust;\n    }\n    if (this.options.yAdjust) {\n      this.yOffset += this.options.yAdjust;\n    }\n    if (this.options.scaleAdjust) {\n      this.scale *= this.options.scaleAdjust;\n    }\n\n    this.render_options = {\n      font_scale: 38,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'serif',\n      size: 10,\n      weight: 'bold italic',\n    };\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale * this.scale, { category: `jazztechnique.${this.ornament.code}` });\n\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n\n  getCategory() { return JazzTechnique.CATEGORY; }\n  getPosition() { return this.position; }\n  addEndNote(note) { this.note_end = note; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // Allow the application to move/locate the glyph\n    this.context.save();\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    this.context.openGroup(classString, this.getAttribute('id'));\n\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n    }\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let y = start.y;\n    const x = start.x;\n    const metrics = this.metrics;\n\n    if (this.note.hasStem()) {\n      if (this.note.getStemDirection() === 1) {\n        y += metrics.stemUpYOffset;\n      }\n    }\n    if (this.note.getLineNumber() < 5 && JazzTechnique.staffPosition.indexOf(this.type) >= 0) {\n      y = this.note.getStave().getBoundingBox().y + 40;\n    }\n\n    this.glyph.render(\n      this.context,\n      x + this.xOffset,\n      y + this.yOffset\n    );\n\n    this.context.closeGroup();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return undefined;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n\n    return {\n      accList: cancelled,\n      type: cancel_accList[0].type\n    };\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type, accList = this.accList) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < accList.length; ++i) {\n        accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    const accList = this.accList;\n    const firstAccidentalType = accList.length > 0 ? accList[0].type : null;\n    let cancelAccList;\n    if (this.cancelKeySpec) {\n      cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      const clef = ((this.position === StaveModifier.Position.END) ?\n        this.stave.endClef : this.stave.clef) || this.stave.clef;\n      if (cancelAccList) {\n        this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n      }\n      this.convertAccLines(clef, firstAccidentalType, accList);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\n\nimport { Note } from './note';\nimport { KeySignature } from './keysignature';\n\nexport class KeySigNote extends Note {\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'KeySigNote');\n\n    this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    this.keySignature.setStave(this.stave);\n    this.keySignature.format();\n    this.setWidth(this.keySignature.width);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n    this.keySignature.x = this.getAbsoluteX();\n    this.keySignature.setContext(this.context);\n    this.keySignature.draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Called when position changes\n  reset() {\n    // do nothing\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    this.reset();\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n\n  // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n  alignSubNotesWithNote(subNotes, note) {\n    // Shift over the tick contexts of each note\n    const tickContext = note.getTickContext();\n    const metrics = tickContext.getMetrics();\n    const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx\n      + this.getSpacingFromNextModifier();\n\n    subNotes.forEach((subNote) => {\n      const subTickContext = subNote.getTickContext();\n      subNote.setStave(note.stave);\n      subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { ChordSymbol } from './chordsymbol';\nimport { JazzTechnique } from './jazztechnique';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      Stroke,\n      GraceNoteGroup,\n      NoteSubGroup,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      ChordSymbol,\n      JazzTechnique,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getLeftShift() { return this.state.left_shift; }\n  getRightShift() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifier } from './stavemodifier';\nimport { TimeSignature } from './timesignature';\n\nlet semibrave_rest;\nfunction get_semibrave_rest() {\n  if (!semibrave_rest) {\n    const notehead = new NoteHead({ duration: 'w', note_type: 'r' });\n    semibrave_rest = {\n      glyph_font_scale: notehead.render_options.glyph_font_scale,\n      glyph_code: notehead.glyph_code,\n      width: notehead.getWidth(),\n    };\n  }\n  return semibrave_rest;\n}\n\nexport class MultiMeasureRest extends Element {\n  // Parameters:\n  // * `number_of_measures` - Number of measures.\n  // * `options` - The options object.\n  //   * `show_number` - Show number of measures string or not.\n  //   * `number_line` -  Staff line to render the number of measures string.\n  //   * `number_glyph_point` - Size of the number of measures string glyphs.\n  //   * `padding_left` - Left padding from stave x.\n  //   * `padding_right` - Right padding from stave end x.\n  //   * `line` - Staff line to render rest line or rest symbols.\n  //   * `spacing_between_lines_px` - Spacing between staff lines to\n  // resolve serif height or {2-bar and 4-bar}rest symbol height.\n  //   * `line_thickness` - Rest line thickness.\n  //   * `serif_thickness` - Rest serif line thickness.\n  //   * `use_symbols` - Use rest symbols or not.\n  //   * `symbol_spacing` - Spacing between each rest symbol glyphs.\n  //   * `semibrave_rest_glyph_scale` - Size of the semibrave(1-bar) rest symbol.\n  constructor(number_of_measures, options) {\n    super();\n    this.setAttribute('type', 'MultiMeasureRest');\n\n    const point = this.musicFont.lookupMetric('digits.point');\n    const fontLineShift = this.musicFont.lookupMetric('digits.shiftLine', 0);\n\n    this.render_options = {\n      show_number: true,\n      number_line: -0.5,\n      number_glyph_point: point, // same as TimeSignature.\n\n      padding_left: undefined,\n      padding_right: undefined,\n\n      line: 2,\n\n      spacing_between_lines_px: 10, // same as Stave.\n\n      line_thickness: undefined,\n      serif_thickness: 2,\n\n      use_symbols: false,\n      symbol_spacing: undefined,\n\n      /* same as NoteHead. */\n      semibrave_rest_glyph_scale: Flow.DEFAULT_NOTATION_FONT_SCALE,\n    };\n    Vex.Merge(this.render_options, options);\n\n    this.render_options.number_line += fontLineShift;\n\n    this.number_of_measures = number_of_measures;\n    this.xs = {\n      left: NaN,\n      right: NaN,\n    };\n  }\n\n  getXs() {\n    return this.xs;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n    return this;\n  }\n\n  getStave() {\n    return this.stave;\n  }\n\n  drawLine(ctx, left, right, sbl) {\n    const y = this.stave.getYForLine(this.render_options.line);\n    const padding = (right - left) * 0.1;\n\n    left += padding;\n    right -= padding;\n\n    const serif = {\n      thickness: this.render_options.serif_thickness,\n      height: sbl,\n    };\n    let lineThicknessHalf = sbl * 0.25;\n    if (!isNaN(this.render_options.line_thickness)) {\n      lineThicknessHalf = this.render_options.line_thickness * 0.5;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(left, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - sbl);\n    ctx.lineTo(right, y - sbl);\n    ctx.lineTo(right, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + sbl);\n    ctx.lineTo(left, y + sbl);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  drawSymbols(ctx, left, right, sbl) {\n    const n4 = Math.floor(this.number_of_measures / 4);\n    const n = this.number_of_measures % 4;\n    const n2 = Math.floor(n / 2);\n    const n1 = n % 2;\n\n    const semibrave_rest = get_semibrave_rest();\n    const semibrave_rest_width = semibrave_rest.width *\n      (this.render_options.semibrave_rest_glyph_scale / semibrave_rest.glyph_font_scale);\n    const glyphs = {\n      2: {\n        width: semibrave_rest_width * 0.5,\n        height: sbl,\n      },\n      1: {\n        width: semibrave_rest_width,\n      },\n    };\n\n    let spacing = semibrave_rest_width * 1.35;\n    if (!isNaN(this.render_options.symbol_spacing)) {\n      spacing = this.render_options.symbol_spacing;\n    }\n\n    const width = (n4 * glyphs[2].width) + (n2 * glyphs[2].width)\n      + (n1 * glyphs[1].width) + ((n4 + n2 + n1 - 1) * spacing);\n    let x = left + ((right - left) * 0.5) - (width * 0.5);\n    const yTop = this.stave.getYForLine(this.render_options.line - 1);\n    const yMiddle = this.stave.getYForLine(this.render_options.line);\n    const yBottom = this.stave.getYForLine(this.render_options.line + 1);\n\n    ctx.save();\n    ctx.setStrokeStyle('none');\n    ctx.setLineWidth(0);\n\n    for (let i = 0; i < n4; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n2; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n1; ++i) {\n      Glyph.renderGlyph(ctx, x, yTop, this.render_options.semibrave_rest_glyph_scale,\n        semibrave_rest.glyph_code);\n      x += glyphs[1].width + spacing;\n    }\n\n    ctx.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const stave = this.stave;\n    const sbl = this.render_options.spacing_between_lines_px;\n\n    let left = stave.getNoteStartX();\n    let right = stave.getNoteEndX();\n\n    // FIXME: getNoteStartX() returns x+5(barline width) and\n    // getNoteEndX() returns x + width(no barline width) by default. how to fix?\n    const begModifiers = stave.getModifiers(StaveModifier.Position.BEGIN);\n    if (begModifiers.length === 1 && begModifiers[0].getCategory() === 'barlines') {\n      left -= begModifiers[0].getWidth();\n    }\n\n    if (!isNaN(this.render_options.padding_left)) {\n      left = stave.getX() + this.render_options.padding_left;\n    }\n\n    if (!isNaN(this.render_options.padding_right)) {\n      right = stave.getX() + stave.getWidth() - this.render_options.padding_right;\n    }\n\n    this.xs.left = left;\n    this.xs.right = right;\n\n    if (this.render_options.use_symbols) {\n      this.drawSymbols(ctx, left, right, sbl);\n    } else {\n      this.drawLine(ctx, left, right, sbl);\n    }\n\n    if (this.render_options.show_number) {\n      const timeSpec = '/' + this.number_of_measures;\n      const timeSig = new TimeSignature(null, undefined, false);\n      timeSig.point = this.render_options.number_glyph_point;\n      timeSig.setTimeSig(timeSpec);\n      timeSig.setStave(stave);\n      timeSig.x = left + ((right - left) * 0.5) - (timeSig.timeSig.glyph.getMetrics().width * 0.5);\n      timeSig.bottomLine = this.render_options.number_line;\n      timeSig.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid interval name: ${intervalString}`);\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n    const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.notePx;\n    const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.notePx\n      + metrics.rightDisplacedHeadPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  static parseDuration(durationString) {\n    if (typeof (durationString) !== 'string') { return null; }\n\n    const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n    const result = regexp.exec(durationString);\n    if (!result) { return null; }\n\n    const duration = result[1];\n    const dots = result[2].length;\n    const type = result[3] || 'n';\n\n    return { duration, dots, type };\n  }\n\n  static parseNoteStruct(noteStruct) {\n    const durationString = noteStruct.duration;\n    const customTypes = [];\n\n    // Preserve backwards-compatibility\n    const durationProps = Note.parseDuration(durationString);\n    if (!durationProps) { return null; }\n\n    // If specified type is invalid, return null\n    let type = noteStruct.type;\n    if (type && !Flow.getGlyphProps.validTypes[type]) { return null; }\n\n\n    // If no type specified, check duration or custom types\n    if (!type) {\n      type = durationProps.type || 'n';\n\n      // If we have keys, try and check if we've got a custom glyph\n      if (noteStruct.keys !== undefined) {\n        noteStruct.keys.forEach((k, i) => {\n          const result = k.split('/');\n          // We have a custom glyph specified after the note eg. /X2\n          customTypes[i] = (result && result.length === 3) ? result[2] : type;\n        });\n      }\n    }\n\n    // Calculate the tick duration of the note\n    let ticks = Flow.durationToTicks(durationProps.duration);\n    if (ticks == null) { return null; }\n\n    // Are there any dots?\n    const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n    if (typeof (dots) !== 'number') { return null; }\n\n    // Add ticks as necessary depending on the numbr of dots\n    let currentTicks = ticks;\n    for (let i = 0; i < dots; i++) {\n      if (currentTicks <= 1) return null;\n\n      currentTicks = currentTicks / 2;\n      ticks += currentTicks;\n    }\n\n    return {\n      duration: durationProps.duration,\n      type,\n      customTypes,\n      dots,\n      ticks,\n    };\n  }\n\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `noteStruct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(noteStruct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!noteStruct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `noteStruct` and get note properties.\n    const initStruct = Note.parseNoteStruct(noteStruct);\n    if (!initStruct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initStruct.duration;\n    this.dots = initStruct.dots;\n    this.noteType = initStruct.type;\n    this.customTypes = initStruct.customTypes;\n\n    if (noteStruct.duration_override) {\n      // Custom duration\n      this.setDuration(noteStruct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initStruct.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.getGlyphProps(this.duration, this.noteType);\n    this.customGlyphs = this.customTypes.map(t => Flow.getGlyphProps(this.duration, t));\n\n    if (this.positions && (typeof (this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.leftDisplacedHeadPx = 0;       // Extra room on left for displaced note head\n    this.rightDisplacedHeadPx = 0;      // Extra room on right for displaced note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n    // we need to hold on to these for ties and beams.\n\n    if (noteStruct.align_center) {\n      this.setCenterAlignment(noteStruct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getLeftDisplacedHeadPx() { return this.leftDisplacedHeadPx; }\n  getRightDisplacedHeadPx() { return this.rightDisplacedHeadPx; }\n  setLeftDisplacedHeadPx(x) { this.leftDisplacedHeadPx = x; return this; }\n  setRightDisplacedHeadPx(x) { this.rightDisplacedHeadPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    // TODO: FIXME (multiple potential values for this.glyph)\n    if (this.glyph) {\n      if (this.glyph.getMetrics) {\n        return this.glyph.getMetrics().width;\n      } else if (this.glyph.getWidth) {\n        return this.glyph.getWidth(this.render_options.glyph_font_scale);\n      }\n    }\n\n    return 0;\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `notePx`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `leftDisplacedHeadPx`: Extra space on left of note.\n  // `rightDisplacedHeadPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    const modLeftPx = this.modifierContext ? this.modifierContext.state.left_shift : 0;\n    const modRightPx = this.modifierContext ? this.modifierContext.state.right_shift : 0;\n    const width = this.getWidth();\n    const glyphWidth = this.getGlyphWidth();\n    const notePx = width\n      - modLeftPx           // subtract left modifiers\n      - modRightPx          // subtract right modifiers\n      - this.leftDisplacedHeadPx   // subtract left displaced head\n      - this.rightDisplacedHeadPx;  // subtract right displaced head\n\n    return {\n      // ----------\n      // NOTE: If you change this, remember to update MockTickable in the tests/ directory.\n      // --------------\n      width,\n      glyphWidth,\n      notePx,\n\n      // Modifier spacing.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n      rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n    };\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.musicFont.lookupMetric('stave.padding');\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n\n  setPreFormatted(value) {\n    this.preFormatted = value;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.getGlyphProps(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift || 0;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n      this.stem_up_x_offset = head_options.stem_up_x_offset || 0;\n      this.stem_down_x_offset = head_options.stem_down_x_offset || 0;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n    const fontShift = this.musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n    const displacedFontShift = this.musicFont.lookupMetric('noteHead.displaced.shiftX', 0) * this.stem_direction;\n\n    return x + fontShift + (this.displaced\n      ? ((this.width - displacementStemAdjustment) * this.stem_direction) + displacedFontShift\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    let head_x = this.getAbsoluteX();\n    if (this.custom_glyph) {\n      // head_x += this.x_shift;\n      head_x += this.stem_direction === Stem.UP ? this.stem_up_x_offset : this.stem_down_x_offset;\n    }\n\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    if (this.style) {\n      this.applyStyle(ctx);\n    }\n\n    const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n        font: this.musicFont,\n        category: this.custom_glyph ? `noteHead.custom.${categorySuffix}` : `noteHead.standard.${categorySuffix}`\n      });\n    }\n\n    if (this.style) {\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).drawWithStyle());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;  // width is used by ornaments, which are always centered on the note head\n    let right_shift = state.right_shift;  // jazz ornaments calculate r/l shift separately\n    let left_shift = state.left_shift;\n    let yOffset = 0;\n\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n        ornament.x_shift += (right_shift + 2);\n      }\n      if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n        ornament.x_shift -= (left_shift + 2);\n      }\n      if (ornament.reportedWidth && ornament.x_shift < 0) {\n        left_shift += ornament.reportedWidth;\n      } else if (ornament.reportedWidth && ornament.x_shift > 0) {\n        right_shift += ornament.reportedWidth;\n      } else {\n        width = Math.max(ornament.getWidth(), width);\n      }\n      // articulations above/below the line can be stacked.\n      if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n        // Unfortunately we don't know the stem direction.  So we base it\n        // on the line number, but also allow it to be overridden.\n        if (ornament.note.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n          state.top_text_line += increment;\n          ornament.y_shift += yOffset;\n          yOffset -= ornament.glyph.bbox.h;\n        } else {\n          state.text_line += increment;\n          ornament.y_shift += yOffset;\n          yOffset += ornament.glyph.bbox.h;\n        }\n      } else {\n        if (ornament.getPosition() === Modifier.Position.ABOVE) {\n          ornament.setTextLine(state.top_text_line);\n          state.top_text_line += increment;\n        } else {\n          ornament.setTextLine(state.text_line);\n          state.text_line += increment;\n        }\n      }\n    }\n\n    // Note: 'legit' ornaments don't consider other modifiers when calculating their\n    // X position, but jazz ornaments sometimes need to.\n    state.left_shift = left_shift + (width / 2);\n    state.right_shift = right_shift + (width / 2);\n    return true;\n  }\n\n  // ### ornamentNoteTransition\n  // means the jazz ornament represents an effect from one note to another,\n  // these are generally on the top of the staff.\n  static get ornamentNoteTransition() {\n    return ['flip', 'jazzTurn', 'smear'];\n  }\n\n  // ### ornamentAttack\n  // Indicates something that happens in the attach, placed before the note and\n  // any accidentals\n  static get ornamentAttack() {\n    return ['scoop'];\n  }\n\n  // ### ornamentAlignWithNoteHead\n  // The ornament is aligned based on the note head, but without regard to whether the\n  // stem goes up or down.\n  static get ornamentAlignWithNoteHead() {\n    return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n  }\n\n  // ### ornamentRelease\n  // An ornament that happens on the release of the note, generally placed after the\n  // note and overlapping the next beat/measure..\n  static get ornamentRelease() {\n    return [\n      'doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'\n    ];\n  }\n\n  // ### ornamentArticulation\n  // goes above/below the note based on space availablity\n  static get ornamentArticulation() {\n    return ['bend', 'plungerClosed', 'plungerOpen'];\n  }\n\n  // ### getMetrics\n  // legacy ornaments have hard-coded metrics.  If additional ornament types are\n  // added, get their metrics here.\n  getMetrics() {\n    return this.getFontStack()[0].metrics.glyphs.jazzOrnaments[this.ornament.code];\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n\n    // new ornaments have their origin at the origin, and have more specific\n    // metrics.  Legacy ornaments do some\n    // x scaling, and have hard-coded metrics\n    const metrics = this.getMetrics();\n\n    // some jazz ornaments are above or below depending on stem direction.\n    this.adjustForStemDirection = false;\n\n    // some jazz ornaments like falls are supposed to overlap with future bars\n    // and so we report a different width than they actually take up.\n    this.reportedWidth = (metrics && metrics.reportedWidth) ?\n      metrics.reportedWidth : 0;\n\n    this.stemUpYOffset = (metrics && metrics.stemUpYOffset) ?\n      metrics.stemUpYOffset : 0;\n\n    this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.x_shift = metrics ? metrics.xOffset : 0;\n    this.y_shift = metrics ? metrics.yOffset : 0;\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, { category: `ornament.${this.ornament.code}` });\n\n    // Is this a jazz ornament that goes between this note and the next note.\n    if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n      this.delayed = true;\n    }\n\n    // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n    // happen if I don't set it.\n    if (!metrics) {\n      this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n    }\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    const classString = Object.keys(this.getAttribute('classes')).join(' ');\n    this.context.openGroup(classString, this.getAttribute('id'));\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n\n    // If the ornament is aligned with the note head, don't consider the stave y\n    // but use the 'natural' modifier y\n    let glyphY = this.ornamentAlignWithNoteHead ? start.y :\n      Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      let delayXShift = 0;\n      const startX = glyphX - (stave.getX() - 10);\n      if (this.delayXShift !== undefined) {\n        delayXShift = this.delayXShift;\n      } else {\n        delayXShift += this.glyph.getMetrics().width / 2;\n        const nextContext = TickContext.getNextContext(this.note.getTickContext());\n        if (nextContext) {\n          delayXShift += (nextContext.getX() - startX) * 0.5;\n        } else {\n          delayXShift += (stave.x + stave.width - startX) * 0.5;\n        }\n        this.delayXShift = delayXShift;\n      }\n      glyphX += delayXShift;\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    if (this.stemUpYOffset && this.note.hasStem() && this.note.getStemDirection() === 1) {\n      glyphY += this.stemUpYOffset;\n    }\n    if (this.note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n      glyphY = this.note.getStave().getBoundingBox().y + 40;\n    }\n\n    this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n\n    if (this.accidentalUpper) {\n      glyphY -= (this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding);\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n    this.context.closeGroup();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'keyboardPedalPed',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'keyboardPedalUp',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  static get StylesString() {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      const point = this.musicFont.lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, point);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      const point = this.musicFont.lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) {\n      renderer.resize(width, height);\n    }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n      [width, height] = CanvasContext.SanitizeCanvasDims(width, height);\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { GlyphNote } from './glyphnote';\nimport { Glyph } from './glyph';\n\nexport class RepeatNote extends GlyphNote {\n  constructor(type, noteStruct, options) {\n    // Smufl Codes\n    const CODES = {\n      '1': 'repeat1Bar',\n      '2': 'repeat2Bars',\n      '4': 'repeat4Bars',\n      'slash': 'repeatBarSlash',\n    };\n\n    noteStruct = {\n      duration: 'q',\n      align_center: type !== 'slash',\n      ...noteStruct,\n    };\n\n    super(null, { duration: 'q', align_center: type !== 'slash', ...noteStruct }, options);\n    this.setAttribute('type', 'RepeatNote');\n\n    const glyphCode = CODES[type] || 'repeat1Bar';\n    const glyph = new Glyph(glyphCode, this.musicFont.lookupMetric('repeatNote.point', 40), { category: 'repeatNote' });\n    this.setGlyph(glyph);\n  }\n}\n","import { Vex } from './vex';\nimport { BravuraFont } from './fonts/bravura_glyphs';\nimport { BravuraMetrics } from './fonts/bravura_metrics';\nimport { GonvilleFont  } from './fonts/gonville_glyphs';\nimport { GonvilleMetrics } from './fonts/gonville_metrics';\nimport { PetalumaFont  } from './fonts/petaluma_glyphs';\nimport { PetalumaMetrics } from './fonts/petaluma_metrics';\nimport { CustomFont  } from './fonts/custom_glyphs';\nimport { CustomMetrics  } from './fonts/custom_metrics';\n\nclass Font {\n  constructor(name, metrics, fontData) {\n    this.name = name;\n    this.metrics = metrics;\n    this.fontData = fontData;\n    this.codePoints = {};\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  getResolution() {\n    return this.fontData.resolution;\n  }\n\n  getMetrics() {\n    return this.metrics;\n  }\n\n  lookupMetric(key, defaultValue = undefined) {\n    const parts = key.split('.');\n    let val = this.metrics;\n    // console.log('lookupMetric:', key);\n    for (let i = 0; i < parts.length; i++) {\n      if (val[parts[i]] === undefined) {\n        if (defaultValue !== undefined) {\n          return defaultValue;\n        } else {\n          throw new Vex.RERR('INVALID_KEY', `Invalid music font metric key: ${key}`);\n        }\n      }\n      val = val[parts[i]];\n    }\n\n    // console.log('found:', key, val);\n    return val;\n  }\n\n  getFontData() {\n    return this.fontData;\n  }\n\n  getGlyphs() {\n    return this.fontData.glyphs;\n  }\n\n  getCodePoints() {\n    return this.codePoints;\n  }\n\n  setCodePoints(codePoints) {\n    this.codePoints = codePoints;\n    return this;\n  }\n}\n\nconst Fonts = {\n  Bravura: new Font('Bravura', BravuraMetrics, BravuraFont),\n  Gonville: new Font('Gonville', GonvilleMetrics, GonvilleFont),\n  Petaluma: new Font('Petaluma', PetalumaMetrics, PetalumaFont),\n  Custom: new Font('Custom', CustomMetrics, CustomFont),\n};\n\nconst DefaultFontStack = [Fonts.Bravura, Fonts.Gonville, Fonts.Custom];\n\nexport { Fonts, DefaultFontStack, Font };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.endClef = undefined;\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n      this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    const begBarline = this.modifiers[0];\n    begBarline.setX(this.start_x - begBarline.getWidth());\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getStyle() {\n    return {\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: Flow.STAVE_LINE_THICKNESS, ...this.style || {}\n    };\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n      (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  // This method adds a stave modifier to the stave. Note that the first two\n  // modifiers (BarLines) are automatically added upon construction.\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    if (position === StaveModifier.Position.END) {\n      this.endClef = clefSpec;\n    } else {\n      this.clef = clefSpec;\n    }\n\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec)\n      .setPosition(position), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    } else if (position === StaveModifier.Position.END) {\n      this.endClef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined && category === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      (position === undefined || position === modifier.getPosition()) &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n      begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    const widths = {\n      left: 0,\n      right: 0,\n      paddingRight: 0,\n      paddingLeft: 0,\n    };\n\n    let lastBarlineIdx = 0;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      lastBarlineIdx = (modifier.getCategory() === 'barlines') ? i : lastBarlineIdx;\n\n      widths.right = 0;\n      widths.left = 0;\n      widths.paddingRight = 0;\n      widths.paddingLeft = 0;\n      const layoutMetrics = modifier.getLayoutMetrics();\n\n      if (layoutMetrics) {\n        if (i !== 0) {\n          widths.right = layoutMetrics.xMax || 0;\n          widths.paddingRight = layoutMetrics.paddingRight || 0;\n        }\n        widths.left = (-layoutMetrics.xMin) || 0;\n        widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n\n        if (i === endModifiers.length - 1) {\n          widths.paddingLeft = 0;\n        }\n      } else {\n        widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n        if (i !== 0) {\n          widths.right = modifier.getWidth();\n        }\n        if (i === 0) {\n          widths.left = modifier.getWidth();\n        }\n      }\n      x -= widths.paddingRight;\n      x -= widths.right;\n\n      modifier.setX(x);\n\n      x -= widths.left;\n      x -= widths.paddingLeft;\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.applyStyle();\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.restoreStyle();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].applyStyle(this.context);\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n        this.modifiers[i].restoreStyle(this.context);\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof (line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    // eslint-disable-next-line\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  static get typeString() {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.layoutMetricsMap = {};\n    this.layoutMetricsMap[TYPE.SINGLE] = {\n      xMin: 0,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.DOUBLE] = {\n      xMin: -3,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.END] = {\n      xMin: -5,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_END] = {\n      xMin: -10,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n      xMin: -2,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n      xMin: -10,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.NONE] = {\n      xMin: 0,\n      xMax: 0,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    stave.checkContext();\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        topY -= this.thickness;\n        attachment_height += 0.5;\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 6;\n        botY += 6;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n        Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        attachment_height -= this.thickness;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n    this.layoutMetrics = null;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs() + customShift);\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n  setLayoutMetrics(layoutMetrics) {\n    this.layoutMetrics = layoutMetrics;\n    return this;\n  }\n  getLayoutMetrics() {\n    return this.layoutMetrics;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n        noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n          // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n        // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n      (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNoteBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNoteBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n\n    // Pull note rendering properties\n    this.glyph = Flow.getGlyphProps(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset() {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this.note_heads.map(noteHead => noteHead.getStyle());\n    this.buildNoteHeads();\n    this.note_heads.forEach((noteHead, index) => noteHead.setStyle(noteHeadStyles[index]));\n\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcNoteDisplacements();\n  }\n\n  setBeam(beam) {\n    this.beam = beam;\n    this.calcNoteDisplacements();\n    return this;\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    this.setStem(new Stem({ hide: !!this.isRest(), }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        stem_up_x_offset: noteProps.stem_up_x_offset,\n        stem_down_x_offset: noteProps.stem_down_x_offset,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getRightShift();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index, options) {\n    options = options || {};\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // FIXME: Left modifier padding, move to font file\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // FIXME: Right modifier padding, move to font file\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() &&\n        (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    super.setStyle(style);\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  setStemStyle(style) {\n    const stem = this.getStem();\n    stem.setStyle(style);\n  }\n  getStemStyle() { return this.stem.getStyle(); }\n\n  setLedgerLineStyle(style) { this.ledgerLineStyle = style; }\n  getLedgerLineStyle() { return this.ledgerLineStyle; }\n\n  setFlagStyle(style) { this.flagStyle = style; }\n  getFlagStyle() { return this.flagStyle; }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcNoteDisplacements() {\n    this.setLeftDisplacedHeadPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setRightDisplacedHeadPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n      // TODO: Add flag width as a separate metric\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|false} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|false} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {noteHeadBounds}\n   */\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n    let nonDisplacedX = null;\n    let displacedX = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine = false;\n    let lowestDisplacedLine = false;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop) {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      if (displacedX === null && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === null && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = (highestDisplacedLine === false) ?\n          line : Math.max(line, highestDisplacedLine);\n        lowestDisplacedLine = (lowestDisplacedLine === false) ?\n          line : Math.min(line, lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      stave, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    const width = glyph.getWidth() + (stroke_px * 2);\n    const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - (Stem.WIDTH / 2);\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    const min_x = Math.min(displaced_x, non_displaced_x);\n\n    const drawLedgerLine = (y, normal, displaced) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = non_displaced_x - stroke_px;\n      else x = displaced_x - stroke_px;\n      const ledgerWidth = (normal && displaced) ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = { ...stave.getStyle() || {}, ...this.getLedgerLineStyle() || {} };\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = (non_displaced_x !== null) && (line <= highest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line <= highest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = (non_displaced_x !== null) && (line >= lowest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line >= lowest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      notehead.applyStyle(ctx, noteheadStyle);\n      modifier.setContext(ctx);\n      modifier.drawWithStyle();\n      notehead.restoreStyle(ctx, noteheadStyle);\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n        // Down stems have flags on the left\n        ? y_top - noteStemHeight + 2\n        // Up stems have flags on the eft.\n        : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.applyStyle(ctx, this.getFlagStyle() || false);\n      this.flag.render(ctx, flagX, flagY);\n      this.restoreStyle(ctx, this.getFlagStyle() || false);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  drawStem(stemStruct) {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    let snClass = 'stavenote';\n    if (this.attrs.classes && this.attrs.classes.length) {\n      snClass += ' ' + this.attrs.classes;\n    }\n    this.setAttribute('el', this.context.openGroup(snClass, this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'coda', { category: 'coda' });\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'segno', { category: 'segno' });\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n      // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n      // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', { category: 'coda' });\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n    //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.getGlyphProps(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale,\n            code.code_flag_upstem, { category: 'flag.staveTempo' });\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n    this.setOptions(options);\n  }\n\n  setOptions(options) {\n    // Changing where the stem meets the head\n    this.stem_up_y_offset = options.stem_up_y_offset || 0;\n    this.stem_down_y_offset = options.stem_down_y_offset || 0;\n    this.stem_up_y_base_offset = options.stem_up_y_base_offset || 0;\n    this.stem_down_y_base_offset = options.stem_down_y_base_offset || 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    const y_offset = (this.stem_direction === Stem.UP) ? this.stem_up_y_offset : this.stem_down_y_offset; // eslint-disable-line max-len\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT - y_offset + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    let y_base_offset = 0;\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n      y_base_offset = this.stem_down_y_base_offset;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n      y_base_offset = this.stem_up_y_base_offset;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    this.restoreStyle(ctx);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag(category = 'flag') {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n    }\n  }\n\n  // Get the custom glyph associated with the outer note head on the base of the stem.\n  getBaseCustomNoteHeadGlyph() {\n    if (this.getStemDirection() === Stem.DOWN) {\n      return this.customGlyphs[this.customGlyphs.length - 1];\n    } else {\n      return this.customGlyphs[0];\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n\n      // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n      // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n      const glyph = this.getBaseCustomNoteHeadGlyph() || this.getGlyph();\n\n      // Get the font-specific customizations for the note heads.\n      const offsets = this.musicFont.lookupMetric(`stem.noteHead.${glyph.code_head}`,\n        { offsetYBaseStemUp: 0, offsetYTopStemUp: 0, offsetYBaseStemDown: 0, offsetYTopStemDown: 0, });\n\n      // Configure the stem to use these offsets.\n      this.stem.setOptions({\n        stem_up_y_offset: offsets.offsetYTopStemUp, // glyph.stem_up_y_offset,\n        stem_down_y_offset: offsets.offsetYTopStemDown, // glyph.stem_down_y_offset,\n        stem_up_y_base_offset: offsets.offsetYBaseStemUp, // glyph.stem_up_y_base_offset,\n        stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n      });\n    }\n\n    // Reset and reformat everything.\n    this.reset();\n    if (this.flag) { this.buildFlag(); }\n    this.beam = null;\n    if (this.preFormatted) { this.preFormat(); }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.getGlyphProps(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Renderer } from './renderer';\nimport { StaveNote } from './stavenote';\n\nexport class StringNumber extends Modifier {\n  static get CATEGORY() { return 'stringnumber'; }\n\n  // ## Static Methods\n  // Arrange string numbers inside a `ModifierContext`\n  static format(nums, state) {\n    const left_shift = state.left_shift;\n    const right_shift = state.right_shift;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return this;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shift_left = 0;\n    let shift_right = 0;\n\n    let i;\n    let num;\n    let note;\n    let pos;\n    for (i = 0; i < nums.length; ++i) {\n      num = nums[i];\n      note = num.getNote();\n\n      for (i = 0; i < nums.length; ++i) {\n        num = nums[i];\n        note = num.getNote();\n        pos = num.getPosition();\n        const props = note.getKeyProps()[num.getIndex()];\n\n        if (note !== prev_note) {\n          for (let n = 0; n < note.keys.length; ++n) {\n            if (left_shift === 0) {\n              shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n            }\n            if (right_shift === 0) {\n              shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n            }\n          }\n          prev_note = note;\n        }\n\n        nums_list.push({\n          pos,\n          note,\n          num,\n          line: props.line,\n          shiftL: shift_left,\n          shiftR: shift_right,\n        });\n      }\n    }\n\n    // Sort string numbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\n    let num_shiftL = 0; // eslint-disable-line\n    let num_shiftR = 0;\n    let x_widthL = 0;\n    let x_widthR = 0;\n    let last_line = null;\n    let last_note = null;\n    for (i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      note = nums_list[i].note;\n      pos = nums_list[i].pos;\n      num = nums_list[i].num;\n      const line = nums_list[i].line;\n      const shiftL = nums_list[i].shiftL;\n      const shiftR = nums_list[i].shiftR;\n\n      // Reset the position of the string number every line.\n      if (line !== last_line || note !== last_note) {\n        num_shiftL = left_shift + shiftL;\n        num_shiftR = right_shift + shiftR;\n      }\n\n      const num_width = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift);\n        num_shift = shift_left + num_width; // spacing\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift += num_width; // spacing\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  }\n\n  constructor(number) {\n    super();\n    this.setAttribute('type', 'StringNumber');\n\n    this.note = null;\n    this.last_note = null;\n    this.index = null;\n    this.string_number = number;\n    this.setWidth(20); // ???\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.dashed = true; // true - draw dashed extension  false - no extension\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\n    this.radius = 8;\n    this.font = {\n      family: 'sans-serif',\n      size: 10,\n      weight: 'bold',\n    };\n  }\n  getCategory() { return StringNumber.CATEGORY; }\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  setLineEndType(leg) {\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n      this.leg = leg;\n    }\n    return this;\n  }\n\n  setStringNumber(number) { this.string_number = number; return this; }\n  setOffsetX(x) { this.x_offset = x; return this; }\n  setOffsetY(y) { this.y_offset = y; return this; }\n  setLastNote(note) { this.last_note = note; return this; }\n  setDashed(dashed) { this.dashed = dashed; return this; }\n\n  draw() {\n    const ctx = this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n    this.setRendered();\n\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = (start.x + this.x_shift + this.x_offset);\n    let dot_y = start.y + this.y_shift + this.y_offset;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n      case Modifier.Position.BELOW: {\n        const stem_ext = this.note.getStemExtents();\n        let top = stem_ext.topY;\n        let bottom = stem_ext.baseY + 2;\n\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\n          top = stem_ext.baseY;\n          bottom = stem_ext.topY - 2;\n        }\n\n        if (this.position === Modifier.Position.ABOVE) {\n          dot_y = this.note.hasStem()\n            ? top - (line_space * 1.75)\n            : start.y - (line_space * 1.75);\n        } else {\n          dot_y = this.note.hasStem()\n            ? bottom + (line_space * 1.5)\n            : start.y + (line_space * 1.75);\n        }\n\n        dot_y += this.y_shift + this.y_offset;\n\n        break;\n      } case Modifier.Position.LEFT:\n        dot_x -= (this.radius / 2) + 5;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += (this.radius / 2) + 6;\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidPosition', `The position ${this.position} is invalid`\n        );\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n    ctx.lineWidth = 1.5;\n    ctx.stroke();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\n    if (this.last_note != null) {\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\n      ctx.strokeStyle = '#000000';\n      ctx.lineCap = 'round';\n      ctx.lineWidth = 0.6;\n      if (this.dashed) {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n      } else {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n      }\n\n      let len;\n      let pattern;\n      switch (this.leg) {\n        case Renderer.LineEndType.UP:\n          len = -10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        case Renderer.LineEndType.DOWN:\n          len = 10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        default:\n          break;\n      }\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\nexport class Stroke extends Modifier {\n  static get CATEGORY() { return 'strokes'; }\n  static get Type() {\n    return {\n      BRUSH_DOWN: 1,\n      BRUSH_UP: 2,\n      ROLL_DOWN: 3, // Arpeggiated chord\n      ROLL_UP: 4,   // Arpeggiated chord\n      RASQUEDO_DOWN: 5,\n      RASQUEDO_UP: 6,\n      ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n    };\n  }\n\n  // Arrange strokes inside `ModifierContext`\n  static format(strokes, state) {\n    const left_shift = state.left_shift;\n    const stroke_spacing = 0;\n\n    if (!strokes || strokes.length === 0) return this;\n\n    const strokeList = strokes.map((stroke) => {\n      const note = stroke.getNote();\n      if (note instanceof StaveNote) {\n        const { line } = note.getKeyProps()[stroke.getIndex()];\n        const shift = note.getLeftDisplacedHeadPx();\n        return { line, shift, stroke };\n      } else {\n        const { str: string } = note.getPositions()[stroke.getIndex()];\n        return { line: string, shift: 0, stroke };\n      }\n    });\n\n    const strokeShift = left_shift;\n\n    // There can only be one stroke .. if more than one, they overlay each other\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n      stroke.setXShift(strokeShift + shift);\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n    }, 0);\n\n    state.left_shift += xShift;\n    return true;\n  }\n\n  constructor(type, options) {\n    super();\n    this.setAttribute('type', 'Stroke');\n\n    this.note = null;\n    this.options = Vex.Merge({}, options);\n\n    // multi voice - span stroke across all voices if true\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\n\n    // multi voice - end note of stroke, set in draw()\n    this.note_end = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      font_scale: 38,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'serif',\n      size: 10,\n      weight: 'bold italic',\n    };\n\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n\n  getCategory() { return Stroke.CATEGORY; }\n  getPosition() { return this.position; }\n  addEndNote(note) { this.note_end = note; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n    }\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let ys = this.note.getYs();\n    let topY = start.y;\n    let botY = start.y;\n    const x = start.x - 5;\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\n    for (let i = 0; i < notes.length; i++) {\n      ys = notes[i].getYs();\n      for (let n = 0; n < ys.length; n++) {\n        if (this.note === notes[i] || this.all_voices) {\n          topY = Vex.Min(topY, ys[n]);\n          botY = Vex.Max(botY, ys[n]);\n        }\n      }\n    }\n\n    let arrow;\n    let arrow_shift_x;\n    let arrow_y;\n    let text_shift_x;\n    let text_y;\n\n    switch (this.type) {\n      case Stroke.Type.BRUSH_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        arrow_y = topY - (line_space / 2) + 10;\n        botY += (line_space / 2);\n        break;\n      case Stroke.Type.BRUSH_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = 0.5;\n        arrow_y = botY + (line_space / 2);\n        topY -= (line_space / 2);\n        break;\n      case Stroke.Type.ROLL_DOWN:\n      case Stroke.Type.RASQUEDO_DOWN:\n        arrow = 'arrowheadBlackUp';\n        arrow_shift_x = -3;\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\n        if (this.note instanceof StaveNote) {\n          topY += 1.5 * line_space;\n          if ((botY - topY) % 2 !== 0) {\n            botY += 0.5 * line_space;\n          } else {\n            botY += line_space;\n          }\n          arrow_y = topY - line_space;\n          text_y = botY + line_space + 2;\n        } else {\n          topY += 1.5 * line_space;\n          botY += line_space;\n          arrow_y = topY - 0.75 * line_space;\n          text_y = botY + 0.25 * line_space;\n        }\n        break;\n      case Stroke.Type.ROLL_UP:\n      case Stroke.Type.RASQUEDO_UP:\n        arrow = 'arrowheadBlackDown';\n        arrow_shift_x = -4;\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\n        if (this.note instanceof StaveNote) {\n          arrow_y = line_space / 2;\n          topY += 0.5 * line_space;\n          if ((botY - topY) % 2 === 0) {\n            botY += line_space / 2;\n          }\n          arrow_y = botY + 0.5 * line_space;\n          text_y = topY - 1.25 * line_space;\n        } else {\n          topY += 0.25 * line_space;\n          botY += 0.5 * line_space;\n          arrow_y = botY + 0.25 * line_space;\n          text_y = topY - line_space;\n        }\n        break;\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n        topY += 0.5 * line_space;\n        botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n        break;\n      default:\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\n    }\n\n    let strokeLine = 'straight';\n    // Draw the stroke\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n    } else {\n      strokeLine = 'wiggly';\n      if (this.note instanceof StaveNote) {\n        for (let i = topY; i <= botY; i += line_space) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'vexWiggleArpeggioUp'\n          );\n        }\n      } else {\n        let i;\n        for (i = topY; i <= botY; i += 10) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'vexWiggleArpeggioUp'\n          );\n        }\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n          text_y = i + 0.25 * line_space;\n        }\n      }\n    }\n\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n      return; // skip drawing arrow heads or text\n    }\n\n    // Draw the arrow head\n    Glyph.renderGlyph(\n      this.context,\n      x + this.x_shift + arrow_shift_x,\n      arrow_y,\n      this.render_options.font_scale,\n      arrow,\n      { category: `stroke.${arrow}.${strokeLine}` }\n    );\n\n    // Draw the rasquedo \"R\"\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      this.context.fillText('R', x + text_shift_x, text_y);\n      this.context.restore();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nconst attrNamesToIgnoreMap = {\n  path: {\n    x: true,\n    y: true,\n    width: true,\n    height: true,\n  },\n  rect: {\n  },\n  text: {\n    width: true,\n    height: true,\n  },\n};\n\n{\n  const fontAttrNamesToIgnore = {\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  };\n\n  Vex.Merge(attrNamesToIgnoreMap.rect, fontAttrNamesToIgnore);\n  Vex.Merge(attrNamesToIgnoreMap.path, fontAttrNamesToIgnore);\n}\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    // Point to it:\n    this.svg = svg;\n    this.groups = [this.svg]; // Create the group stack\n    this.parent = this.svg;\n\n    this.path = '';\n    this.pen = { x: NaN, y: NaN };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof (navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n      // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n      // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n      // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n\n    this.svg.style.width = width;\n    this.svg.style.height = height;\n\n    const attributes = {\n      width,\n      height,\n    };\n\n    this.applyAttributes(this.svg, attributes);\n    this.scale(this.state.scale.x, this.state.scale.y);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    const attrNamesToIgnore = attrNamesToIgnoreMap[element.nodeName];\n    Object\n      .keys(attributes)\n      .forEach(propertyName => {\n        if (attrNamesToIgnore && attrNamesToIgnore[propertyName]) {\n          return;\n        }\n        element.setAttributeNS(null, propertyName, attributes[propertyName]);\n      });\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = NaN;\n    this.pen.y = NaN;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2;\n    if (!isNaN(this.pen.x) && !isNaN(this.pen.y)) {\n      this.peth += 'M' + this.pen.x + ' ' + this.pen.y;\n    }\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof (txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    if (!text || text.length <= 0) {\n      return;\n    }\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n        scale: this.state.scale,\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n      lineWidth: this.lineWidth,\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n    this.state.scale = state.state.scale;\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n\n    this.lineWidth = state.lineWidth;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      noJustification: false,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      noPadding: false,\n      ...options,\n      details: {\n        alpha: 0.5,          // formatter tuner learning/shifting rate\n        ...options.details,\n      },\n    };\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      ...params,\n      options: {\n        left_bar: false,\n        ...params.options,\n      },\n    };\n\n    if (!params.stave) {\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options: params.options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter({ ...this.options.details });\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.noPadding ?\n      this.options.width - this.options.x :\n      this.options.width - (startX - this.options.x) - this.musicFont.lookupMetric('stave.padding');\n\n    formatter.format(allVoices, this.options.noJustification ? 0 : justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune({ alpha: this.options.details.alpha });\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { DefaultFontStack } from './smufl';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n\n  DEFAULT_FONT_STACK: DefaultFontStack,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof (value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  const code = value.code;\n  const shift_right = value.shift_right;\n  let extraProps = {};\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    extraProps = Flow.keyProperties.customNoteHeads[glyph_name] || {};\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n    ...extraProps,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'noteheadXBlack',\n    shift_right: 5.5,\n  },\n};\n\n\nFlow.integerToNote = integer => {\n  if (typeof (integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('accidentalDoubleSharp', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'accidentalDoubleSharp';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'augmentationDot', between_lines: true }, // Staccato\n  'av': {\n    aboveCode: 'articStaccatissimoAbove',\n    belowCode: 'articStaccatissimoBelow',\n    between_lines: true\n  }, // Staccatissimo\n  'a>': {\n    aboveCode: 'articAccentAbove',\n    belowCode: 'articAccentBelow',\n    between_lines: true\n  }, // Accent\n  'a-': {\n    aboveCode: 'articTenutoAbove',\n    belowCode: 'articTenutoBelow',\n    between_lines: true\n  }, // Tenuto\n  'a^': {\n    aboveCode: 'articMarcatoAbove',\n    belowCode: 'articMarcatoBelow',\n    between_lines: false\n  }, // Marcato\n  'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false }, // Left hand pizzicato\n  'ao': {\n    aboveCode: 'pluckedSnapPizzicatoAbove',\n    belowCode: 'pluckedSnapPizzicatoBelow',\n    between_lines: false\n  }, // Snap pizzicato\n  'ah': { code: 'stringsHarmonic', between_lines: false }, // Natural harmonic or open note\n  'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false }, // Fermata\n  'a@a': { code: 'fermataAbove', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'fermataBelow', between_lines: false }, // Fermata below staff\n  'a|': { code: 'stringsUpBow', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'stringsDownBow', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n  '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n  'b': { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n  'bb': { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n  'n': { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n  '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n  '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n  'db': { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n  'd': { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n  '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n  '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n  '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n  'bs': { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n  'o': { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n  'k': { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n  'bbs': { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'vexAccidentalMicrotonal2', parenRightPaddingAdjustment: -1 },\n  'ashs': { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n  'afhf': { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n};\n\nFlow.accidentalColumnsTable = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n  },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'ornamentShortTrill' },\n  'mordent_inverted': { code: 'ornamentMordent' },\n  'turn': { code: 'ornamentTurn' },\n  'turn_inverted': { code: 'ornamentTurnSlash' },\n  'tr': { code: 'ornamentTrill' },\n  'upprall': { code: 'ornamentPrecompSlideTrillDAnglebert' },\n  'downprall': { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n  'prallup': { code: 'ornamentPrecompTrillSuffixDandrieu' },\n  'pralldown': { code: 'ornamentPrecompTrillLowerSuffix' },\n  'upmordent': { code: 'ornamentPrecompSlideTrillBach' },\n  'downmordent': { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n  'lineprall': { code: 'ornamentPrecompAppoggTrill' },\n  'prallprall': { code: 'ornamentTremblement' },\n  'scoop': { code: 'brassScoop' },\n  'doit': { code: 'brassDoitMedium' },\n  'fall': { code: 'brassFallLipShort' },\n  'doitLong': { code: 'brassLiftMedium' },\n  'fallLong': { code: 'brassFallRoughMedium' },\n  'bend': { code: 'brassBend' },\n  'plungerClosed': { code: 'brassMuteClosed' },\n  'plungerOpen': { code: 'brassMuteOpen' },\n  'flip': { code: 'brassFlip' },\n  'jazzTurn': { code: 'brassJazzTurn' },\n  'smear': { code: 'brassSmear' }\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n  // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\n// Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\nFlow.getGlyphProps = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n  type = type || 'n'; // default type is a regular note\n\n  // Lookup duration for default glyph head code\n  const code = Flow.getGlyphProps.duration_codes[duration];\n  if (code === undefined) { return null; }\n\n  // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n  let glyphTypeProperties = code.type[type];\n\n  // If this isn't a standard type, then lookup the custom note head map.\n  if (glyphTypeProperties === undefined) {\n    // Try and get it from the custom list of note heads\n    const customGlyphTypeProperties = Flow.keyProperties.customNoteHeads[type.toUpperCase()];\n\n    // If not, then return with nothing\n    if (customGlyphTypeProperties === undefined) { return null; }\n\n    // Otherwise set it as the code_head value\n    glyphTypeProperties = {\n      code_head: customGlyphTypeProperties.code,\n      ...customGlyphTypeProperties,\n    };\n  }\n\n  // Merge duration props for 'duration' with the note head properties.\n  return { ...code.common, ...glyphTypeProperties };\n};\n\nFlow.getGlyphProps.validTypes = {\n  'n': { name: 'note' },\n  'r': { name: 'rest' },\n  'h': { name: 'harmonic' },\n  'm': { name: 'muted' },\n  's': { name: 'slash' },\n};\n\n// Custom note heads\nFlow.keyProperties.customNoteHeads = {\n  /* Diamond */\n  'D0': { code: 'noteheadDiamondWhole', },\n  'D1': { code: 'noteheadDiamondHalf' },\n  'D2': { code: 'noteheadDiamondBlack' },\n  'D3': { code: 'noteheadDiamondBlack' },\n\n  /* Triangle */\n  'T0': { code: 'noteheadTriangleUpWhole' },\n  'T1': { code: 'noteheadTriangleUpHalf' },\n  'T2': { code: 'noteheadTriangleUpBlack' },\n  'T3': { code: 'noteheadTriangleUpBlack' },\n\n  /* Cross */\n  'X0': { code: 'noteheadXWhole', },\n  'X1': { code: 'noteheadXHalf' },\n  'X2': { code: 'noteheadXBlack' },\n  'X3': { code: 'noteheadCircleX' },\n\n  /* Square */\n  'S1': { code: 'noteheadSquareWhite' },\n  'S2': { code: 'noteheadSquareBlack' },\n\n  /* Rectangle */\n  'R1': { code: 'vexNoteHeadRectWhite' }, // no smufl code\n  'R2': { code: 'vexNoteHeadRectBlack' }, // no smufl code\n};\n\nFlow.getGlyphProps.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'noteheadDoubleWhole',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'unpitchedPercussionClef1',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vexNoteHeadMutedBreve',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'restDoubleWhole',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'noteheadWhole',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'noteheadDiamondWhole',\n      },\n      'm': { // Whole note muted\n        code_head: 'noteheadXWhole',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'restWhole',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadHalf', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'noteheadHalf',\n      },\n      'h': { // Half note harmonic\n        code_head: 'noteheadDiamondHalf',\n      },\n      'm': { // Half note muted\n        code_head: 'noteheadXHalf',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'restHalf',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'noteheadBlack',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'noteheadDiamondBlack',\n      },\n      'm': { // Quarter muted\n        code_head: 'noteheadXBlack',\n      },\n      'r': { // Quarter rest\n        code_head: 'restQuarter',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'flag8thUp',\n      code_flag_downstem: 'flag8thDown',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'noteheadBlack',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'noteheadDiamondBlack',\n      },\n      'm': { // Eighth note muted\n        code_head: 'noteheadXBlack',\n      },\n      'r': { // Eighth rest\n        code_head: 'rest8th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'flag16thUp',\n      code_flag_downstem: 'flag16thDown',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'noteheadBlack',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'noteheadDiamondBlack',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'noteheadXBlack',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'rest16th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'flag32ndUp',\n      code_flag_downstem: 'flag32ndDown',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'noteheadBlack',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'noteheadDiamondBlack',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'noteheadXBlack',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'rest32nd',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'flag64thUp',\n      code_flag_downstem: 'flag64thDown',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'noteheadBlack',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'noteheadDiamondBlack',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'noteheadXBlack',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'rest64th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'noteheadBlack', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'flag128thUp',\n      code_flag_downstem: 'flag128thDown',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'noteheadBlack',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'noteheadDiamondBlack',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'noteheadXBlack',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'rest128th',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.getGlyphProps(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset() {\n    if (this.stave) this.setStave(this.stave);\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // FIXME: modifier padding, move to font file\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // FIXME: modifier padding, move to font file\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.drawWithStyle();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file handles a registry of text font metric information, so all\n// VEX modules can take advantage of font metrics in a uniform way.\n//\n\nimport { Vex } from './vex';\nimport { PetalumaScriptMetrics } from './fonts/petalumaScript_metrics';\nimport { RobotoSlabMetrics } from './fonts/robotoSlab_metrics';\n\n// To enable logging for this class. Set `Vex.Flow.TextFont.DEBUG` to `true`.\nfunction L(...args) { if (TextFont.DEBUG) Vex.L('Vex.Flow.TextFont', args); }\n\nexport class TextFont  {\n  static get CATEGORY() { return 'textFont'; }\n\n  static get DEBUG() {\n    return TextFont.debug;\n  }\n  static set DEBUG(val) {\n    TextFont.debug = val;\n  }\n\n  static get fontRegistry() {\n    if (!TextFont.registryInstance) {\n      TextFont.registryInstance = [];\n      TextFont.registryInstance.push({\n        name: 'PetalumaScript',\n        resolution: PetalumaScriptMetrics.resolution,\n        glyphs: PetalumaScriptMetrics.glyphs,\n        fontFamily: PetalumaScriptMetrics.fontFamily,\n        serifs: false,\n        monospaced: false,\n        italic: false,\n        bold: false,\n        maxSizeGlyph: 'H',\n        superscriptOffset: 0.66,\n        subscriptOffset: 0.66,\n        description: 'Default sans-serif text font to pair with Petaluma engraving font',\n      });\n      TextFont.registryInstance.push({\n        name: 'RobotoSlab',\n        resolution: RobotoSlabMetrics.resolution,\n        glyphs: RobotoSlabMetrics.glyphs,\n        fontFamily: RobotoSlabMetrics.fontFamily,\n        serifs: true,\n        monospaced: false,\n        italic: false,\n        bold: false,\n        maxSizeGlyph: 'H',\n        superscriptOffset: 0.66,\n        subscriptOffset: 0.66,\n        description: 'Default serif text font to pair with Bravura/Gonville engraving font',\n      });\n    }\n    return TextFont.registryInstance;\n  }\n  static get availableFonts() {\n    return Object.keys(TextFont.fontRegistry);\n  }\n\n  static getFontDataByName(fontName)  {\n    return TextFont.fontRegistry[fontName];\n  }\n\n  static getFontsInFamily(fontFamily) {\n    return TextFont.fontRegistry.filter((fd) => fd.fontFamily === fontFamily);\n  }\n\n  static registerFont(fontData, overwrite) {\n    // Get via external reference to make sure initial object is created\n    const reg = TextFont.fontRegistry;\n    const exists = reg.find((td) => fontData.name === td.name);\n    if (exists && overwrite) {\n      TextFont.registryInstance = TextFont.fontRegistry.filter((fd) => fd.name !== exists.name);\n    }\n    if (!exists) {\n      L('registering font ' + fontData.name);\n      TextFont.registryInstance.push(fontData);\n    }\n  }\n\n  // ## Prototype Methods\n  //\n  // create a font instance.  Params should include name and size, if this is a\n  // pre-registered font.\n  constructor(params) {\n    this.setAttribute('type', 'TextFont');\n    if (!params.name) {\n      Vex.RERR('BadArgument', 'Font constructor must specify a name');\n    }\n    const fontData = TextFont.getFontDataByName(params.name);\n    if (!fontData) {\n      if (params.glyphs && params.resolution) {\n        TextFont.registerFont(params);\n      } else {\n        Vex.RERR('BadArgument', 'Unknown font, must have glyph metrics and resolution');\n      }\n    } else {\n      Vex.Merge(this, fontData);\n    }\n    Vex.Merge(this, params);\n\n    if (!this.size) {\n      this.size = 14;\n    }\n    if (!this.maxSizeGlyph) {\n      this.maxSizeGlyph = 'H';\n    }\n  }\n\n  getMetricForCharacter(c) {\n    if (this.glyphs[c]) {\n      return this.glyphs[c];\n    }\n    return this.glyphs[this.maxSizeGlyph];\n  }\n\n  get maxHeight() {\n    const glyph = this.getMetricForCharacter(this.maxSizeGlyph);\n    return  (glyph.ha / this.resolution) *  this.pointsToPixels;\n  }\n\n  getWidthForCharacter(c) {\n    const metric = this.getMetricForCharacter(c);\n    if (!metric) {\n      return 0.65 * this.pointsToPixels;\n    }\n    return (metric.advanceWidth / this.resolution) * this.pointsToPixels;\n  }\n\n  // ### pointsToPixels\n  // The font size is specified in points, convert to 'pixels' in the svg space\n  get pointsToPixels() {\n    return (this.size / 72) / (1 / 96);\n  }\n\n  get superscriptOffset() {\n    return this.superscriptOffset * this.pointsToPixels;\n  }\n  get subscriptOffset() {\n    return this.subscriptOffset * this.pointsToPixels;\n  }\n\n  setFontSize(size) {\n    this.size = size;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  // FIXME: Modifier.Position is singular while this is plural, make consistent\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n    start,\n    stop,\n    text = '',\n    superscript = '',\n    position = TextBracket.Positions.TOP,\n  }) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) {\n    // We use Object.assign to support partial updates to the font object\n    this.font = { ...this.font, ...font };\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y = this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y = this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'dynamicForte',\n        width: 12,\n      },\n      'p': {\n        code: 'dynamicPiano',\n        width: 14,\n      },\n      'm': {\n        code: 'dynamicMezzo',\n        width: 17,\n      },\n      's': {\n        code: 'dynamicSforzando',\n        width: 10,\n      },\n      'z': {\n        code: 'dynamicZ',\n        width: 12,\n      },\n      'r': {\n        code: 'dynamicRinforzando',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'segno',\n      },\n      'tr': {\n        code: 'ornamentTrill',\n      },\n      'mordent': {\n        code: 'ornamentMordent',\n      },\n      'mordent_upper': {\n        code: 'ornamentShortTrill',\n      },\n      'mordent_lower': {\n        code: 'ornamentMordent',\n      },\n      'f': {\n        code: 'dynamicForte',\n      },\n      'p': {\n        code: 'dynamicPiano',\n      },\n      'm': {\n        code: 'dynamicMezzo',\n      },\n      's': {\n        code: 'dynamicSforzando',\n      },\n      'z': {\n        code: 'dynamicZ',\n      },\n      'coda': {\n        code: 'coda',\n      },\n      'pedal_open': {\n        code: 'keyboardPedalPed',\n      },\n      'pedal_close': {\n        code: 'keyboardPedalUp',\n      },\n      'caesura_straight': {\n        code: 'caesura',\n      },\n      'caesura_curved': {\n        code: 'caesuraCurved',\n      },\n      'breath': {\n        code: 'breathMarkComma',\n      },\n      'tick': {\n        code: 'breathMarkTick',\n      },\n      'turn': {\n        code: 'ornamentTurn',\n      },\n      'turn_inverted': {\n        code: 'ornamentTurnSlash',\n      },\n    };\n  }\n\n  constructor(options) {\n    super(options);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = options.text;\n    this.superscript = options.superscript;\n    this.subscript = options.subscript;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n      ...options.font\n    };\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (options.glyph) {\n      const struct = TextNote.GLYPHS[options.glyph];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + options.glyph);\n\n      this.glyph = new Glyph(struct.code, 40, { category: 'textNote' });\n      this.setWidth(this.glyph.getMetrics().width);\n    }\n\n    this.line = options.line || 0;\n    this.smooth = options.smooth || false;\n    this.ignore_ticks = options.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.leftDisplacedHeadPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.leftDisplacedHeadPx = this.width;\n    }\n\n    // We reposition to the center of the note head\n    this.rightDisplacedHeadPx = this.tickContext.getMetrics().glyphPx / 2;\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n\n    // Reposition to center of note head\n    let x = this.getAbsoluteX() + (this.tickContext.getMetrics().glyphPx / 2);\n\n    // Align based on tick-context width.\n    const width = this.getWidth();\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= width;\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(this.context, x, y);\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      const height = ctx.measureText(this.text).height;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1); // Fractional value of ticks\n    this.intrinsicTicks = 0; // Floating point value of ticks\n    this.tickMultiplier = new Fraction(1, 1);\n\n    // Formatter metrics\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor(options) {\n    super();\n    this.tickID = options && options.tickID;\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n\n    this.maxTicks = new Fraction(0, 1);\n    this.maxTickable = null; // Biggest tickable\n    this.minTicks = null; // this can remian null if all tickables have ignore_ticks\n    this.minTickable = null;\n\n    this.padding = 1;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.xBase = 0;        // base x position without xOffset\n    this.xOffset = 0;      // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.tickablesByVoice = {};   // Tickables indeced by voice number\n\n    // Formatting metrics\n    this.notePx = 0;       // width of widest note in this context\n    this.glyphPx = 0;       // width of glyph (note head)\n    this.leftDisplacedHeadPx = 0;  // Extra left pixels for displaced notes\n    this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n    this.modLeftPx = 0; // Left modifier pixels\n    this.modRightPx = 0; // Right modifier pixels\n    this.totalLeftPx = 0;  // Total left pixels\n    this.totalRightPx = 0; // Total right pixels\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getTickID() { return this.tickID; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; this.xBase = x; this.xOffset = 0; return this; }\n  getXBase() { return this.xBase; } // use of xBase and xOffset is optional, avoids offset creep\n  setXBase(xBase) { this.xBase = xBase; this.x = xBase + this.xOffset; }\n  getXOffset() { return this.xOffset; }\n  setXOffset(xOffset) { this.xOffset = xOffset; this.x = this.xBase + xOffset; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getMaxTickable() { return this.maxTickable; }\n  getMinTickable() { return this.minTickable; }\n  getTickables() { return this.tickables; }\n  getTickablesForVoice(voiceIndex) { return this.tickablesByVoice[voiceIndex]; }\n  getTickablesByVoice() { return this.tickablesByVoice; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx } = this;\n    return {\n      width, // Width of largest tickable in context\n      glyphPx, // Width of largest glyph (note head)\n      notePx, // Width of notehead + stem\n      leftDisplacedHeadPx, // Left modifiers\n      rightDisplacedHeadPx, // Right modifiers\n      modLeftPx,\n      modRightPx,\n      totalLeftPx,\n      totalRightPx\n    };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  addTickable(tickable, voiceIndex) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n        this.maxTickable = tickable;\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n        this.minTickable = tickable;\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n        this.minTickable = tickable;\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.tickablesByVoice[voiceIndex] = tickable;\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max displaced head pixels from all tickables in the context\n      this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n      this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.notePx);\n\n      // Maintain the widest note head\n      this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth);\n\n      // Total modifier shift\n      this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n      this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n\n      // Total shift\n      this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n      this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'timeSigCommon',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'timeSigCutCommon',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15, validate_args = true) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n    this.validate_args = validate_args;\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = this.musicFont.lookupMetric('digits.point');\n    const fontLineShift = this.musicFont.lookupMetric('digits.shiftLine', 0);\n    this.topLine = 2 + fontLineShift;\n    this.bottomLine = 4 + fontLineShift;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    if (this.validate_args) {\n      assertIsValidFraction(timeSpec);\n    }\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('timeSig0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('timeSig' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('timeSig' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine)\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine)\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Stem } from './stem';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'tremolo1';\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const stemDirection = this.note.getStemDirection();\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    const isGraceNote =  this.note.getCategory() === 'gracenotes';\n    const scale = isGraceNote ? GraceNote.SCALE : 1;\n    const category = `tremolo.${isGraceNote ? 'grace' : 'default'}`;\n\n    this.y_spacing = this.musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n    const height = this.num * this.y_spacing;\n    let y = this.note.stem.getExtents().baseY - height;\n\n    if (stemDirection < 0) {\n      y += this.musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n    } else {\n      y += this.musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n    }\n\n    this.font = {\n      family: 'Arial',\n      size: 16 * scale,\n      weight: '',\n    };\n\n    this.render_options = {\n      font_scale: this.musicFont.lookupMetric(`${category}.point`),\n      stroke_px: 3,\n      stroke_spacing: 10 * scale,\n    };\n\n    x += this.musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code, { category });\n      y += this.y_spacing;\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = this.musicFont.lookupMetric('digits.tupletPoint');\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.numerator_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    const shiftY = this.musicFont.lookupMetric('digits.shiftY', 0);\n\n    let x_offset = 0;\n    this.numerator_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2 + shiftY);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2 + shiftY);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\n/* eslint max-classes-per-file: \"off\" */\n\nconst Vex = () => { };\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time, options) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    this.options = {\n      softmaxFactor: 100,\n      ...options,\n    };\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // We use softmax to layout the tickables proportional to the exponent of\n  // their duration. The softmax factor is used to determine the 'linearness' of\n  // the layout.\n  //\n  // The softmax of all the tickables in this voice should sum to 1.\n  setSoftmaxFactor(factor) {\n    this.options.softmaxFactor = factor;\n    return this;\n  }\n\n  // Calculate the sum of the exponents of all the ticks in this voice to use as the denominator\n  // of softmax.\n  reCalculateExpTicksUsed() {\n    const totalTicks = this.ticksUsed.value();\n    const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n    this.expTicksUsed = this.tickables.map(exp).reduce((a, b) => a + b);\n    return this.expTicksUsed;\n  }\n\n  // Get the softmax-scaled value of a tick duration. 'tickValue' is a number.\n  softmax(tickValue) {\n    if (!this.expTicksUsed) {\n      this.reCalculateExpTicksUsed();\n    }\n\n    const totalTicks = this.ticksUsed.value();\n    const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n    return exp(tickValue) / this.expTicksUsed;\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.ticksUsed.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.drawWithStyle();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n"],"sourceRoot":""}